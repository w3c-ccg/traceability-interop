{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cd1f4595-da0d-4f62-869a-dac7cff96749",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4a8bcff2-3f74-4b0d-8bb6-babba0f60525",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54538733-7928-431c-b104-a7c3f6ee0bd8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2e3f1140-258c-4965-adeb-93b29cc3bc0a"
                }
              }
            ]
          },
          {
            "id": "8944bcad-c812-4d8e-bd07-f8723e871175",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07e3a5ef-ffeb-4daf-8ac1-bf55c64cf314",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "337c3113-f8fd-4152-beda-dcbb96af036f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7dcec7f7-a3ce-4204-a7a5-10d3894973df",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b6e5a6c8-3548-421f-bfca-c9752daee27c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c9231c8-3854-48b4-9226-13eeb9bdbfde",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23708917-4e45-40d1-9759-bcc784ba6e77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "31119777-2b12-4e4c-885d-25ef75c3d86d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cdaf4034-979f-45db-847e-080d75c682d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "101a53d3-bea7-4e23-b20d-a5a6207bbaeb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d386867a-1a11-491b-a4ed-ae817fc20e07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80a1ccb8-59c6-4f61-94d6-3ed6c3de7aed"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f4fcd69-49df-4432-82bf-af3949902828",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8f428f4d-1ba6-421d-b910-bb01dbbcc90b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3ff31e1-d47a-4f8e-993e-f0506c558eb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97ac83a9-6a51-4279-a86f-7c0ec68b56ff"
            }
          }
        ]
      },
      {
        "id": "31a1eb87-4160-45c7-ac2b-5d99311ed9e1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2db05a6b-2854-45c3-8d2c-d2f46e48dd87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30443403-3d32-4879-aec8-470ce29fb182",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c64a8a0b-6192-46e9-8ad3-10fe3a7365c5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3905d6ac-45da-4cc1-9060-ae6fcc22f1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f47a88c7-89e5-458e-a011-230f7a29bd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4b3e23-391f-463f-b498-0b978f425b1f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c378dce-fae5-4c75-abbb-ffdb40e48348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e32f2881-cb92-4c4d-8fb6-5488473146be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0c3826-209f-4deb-b19f-4c0695fcb917",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ec8fa4-a698-4812-9a0d-f134e0900071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65b0c9c8-0ec5-4b5c-ac64-ef362cb0f7b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "07565606-bd7b-404b-aae8-73f2040f57c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05eb1073-68a9-49f0-bc64-8475b8494e28",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3636b4-da9b-4a36-ad13-7b1389b041a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13e272eb-531c-4b16-8179-18f2b4092811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c452b6-5e49-4711-9da3-b92675149882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9600cd39-9da5-4804-87a0-487e7528a3aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5b55e499-2159-4dde-8cb8-b606668d174f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02b668ec-ffe3-419d-bb82-51546436d1a9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab9666a7-202e-4b00-9966-0d3a501a85b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "025d24f2-cda2-42fb-a7ff-5f3aba2a223d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cacfc91e-fb8d-4951-805d-7a03e64dc0ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2c0b6d37-bbce-4e7f-bed3-dfc68f169488"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc552d4e-64e5-43f8-8a4b-2c2c53c18fd5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c217eb97-d764-41ef-aa75-a910cb02a03b"
            }
          }
        ]
      },
      {
        "id": "f65a9e50-6ea3-4a16-b6fc-0a4430148f7d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1f40bea7-012b-406c-9855-05d092a2e5f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d27576c-6058-44d3-890c-6fb2db4bcb77",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b073b45f-c12e-40fd-a1cb-83297db0b775",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd9adc7-9905-415d-aaaf-c7c1c63c04e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a882a1-4c1c-490f-a586-fe3a89d3a84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca752b6-8bd6-4490-93c4-b01bb9c69a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb505c2d-bd50-49cb-a4aa-db2e976548e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0372e9-21f4-4a7a-a5f9-d2cb7b743f18",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ea840e-d19d-49ef-9858-94d3ff74ff00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578da1ab-1c00-4858-baf9-1a524b271443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e57f04c-fae8-4bc4-b05b-d58fd0680e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "401eea12-4522-4cd6-bf83-b0a14387962f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1806ee-9b05-4578-9a80-61944721e2a2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0db999-cad9-4e8c-845f-e35b4512e9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f3772d-d752-41e7-9ef2-a837bed50828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf7242d-4cab-45be-89d0-6cfc8113218d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf8cc14d-59e9-431b-a510-1d0eaf4712d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b5bea7-46f1-42e7-a60c-7557ad99216c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6e88b1-20ba-4af7-b6cc-cedc991bc091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dbfc222-2a20-463e-bfa8-621a5dbae4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bedda95-6bb9-4952-994c-26740838e41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae19609f-a1c5-401c-9253-4bb78b430357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e045385-d3e6-4ddc-9977-cb19b037cdb6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043a7cdd-5306-4248-b383-65148a8457f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45139bac-e60e-4829-9c3f-bb9a6bbaefc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3ccf7f-801b-4788-b83e-97e8fad4c8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bf8f0ad-1433-4c76-81da-f0c90a60fb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7b4151-2cc8-45c5-a8ca-d323120ae65c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2d942b-dc8e-44cb-8bfb-0cce27e65753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7615340a-4793-40b8-893c-f42d51b5ce41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa3fb26-d0de-4554-b135-d8e405cb0337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad030e99-f56b-4aca-98ed-58acf4cfc741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebc2cd9-8faf-43ec-b2e8-0f114c68fa1d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2476547e-bf05-40ba-a1fe-23509b4cccec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23111e7-bf5f-4be0-a92b-67ac4732de77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e36ae19-ae28-4410-8df5-85161f62de40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b1fedd6-74c7-4763-8cd6-f36378262c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f250d97-0549-4cca-b429-d336b190e906",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d49c1c-43af-4e5a-9d5b-e762d2b592a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e825cf-c494-47d5-9066-5cccc00870a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ee8145-e9f5-48b3-aa27-0d65d29e95bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6df63674-97b4-4395-94c8-e681e6dd739a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a848c8-65c1-4f4d-b6cf-cf090aacbe15",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c9c9cd-222f-4a07-bdac-f7945e19c111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03a19a7-0f19-4c1c-aa58-cd45d7636a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c9b10c-43b4-40b8-801d-7c82452eff58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e18a55ca-072e-4799-86ba-acf0330960fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ad6c01-a6e1-47bf-a6c5-bfcb02fecef8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f12ce52-d00b-439c-aeb8-ff594052ca1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25520f0a-387a-4f96-912f-eeb41749a976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a61d1fb-65c6-4d21-b6aa-a6aa17f2be9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56d7ce54-9cd8-417f-a8c7-be5cd590c655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938adb47-1c81-4cbb-8c5b-778aa29136f3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3e69e9-93e0-4468-b92a-c8c2a9d431bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb22c920-8c6a-4585-b31c-6936fa17f324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10890a3-7acc-48ee-8ba6-ed0551bc1be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6944016c-1d51-4664-b3d5-2f0fb909359d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e54e278-6ed5-4785-84d7-b8aa6a734b1b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd93323-7e5b-49b4-b9b7-fdc05e0ec29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0602e4d5-d465-4ca4-ae35-af8af91b3ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7e8fee-c25b-4be4-ae02-dc5316bd5937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "243271bd-5adf-4415-b3da-8a469a887039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fb8e43-fa0d-4821-8828-bd2b91b834bc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51ad782-d17f-47ea-adf3-73d08057e5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecc1ba7-e69e-4ad3-9489-210e8e8dd459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3f3801-bbd2-4c86-9aeb-1d1ffb359d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61b17753-1968-477f-a11d-c4d81f104fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3d7378-da17-4af0-8933-e779eecaf855",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048c5dd9-6f7d-48cd-9151-dd5cefb2ab40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cbac57-2f62-4388-8149-a8930f629091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f114caea-5621-4029-aebc-d908819e98cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48a35f01-4a6f-466c-b253-3e4afdd2355c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1038d977-0598-4c00-9db2-3a8968044d12",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a825b8-eb1d-45b8-a783-3c89c883d7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c73d627-69a5-44e8-a6b8-8d13793f7e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc23bd9a-57ba-4093-b00f-419ccac3b432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8335debf-4319-45f7-b8fb-784a19975e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80de494e-8c43-4956-a719-3249a9baff45",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940e1355-a3b8-4de6-9525-b08d7828f8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a167e2-2be1-44d4-bc75-da3d67f0c9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc662ba-9366-4ec3-b63d-24bc2e756de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6ae5420-344a-44b0-95df-a8a05e61382b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36698594-3dd0-423d-916f-3d7561b2806f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4294655-2186-4bcd-804a-acf5e4988a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236f4fa9-05b6-4941-9b73-b61b6892a9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3dd72d-1902-4602-ab93-27bc06ad95ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0665190-76fd-4c90-91e6-55ec8e198032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad5002b-d0fd-476d-8a40-112328061429",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9fba66-fb05-475d-882b-545a15e60146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fb4b65-9682-4354-aa79-4b952ceb0422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01cd9cf-cd29-4e0f-9e9b-9f7c05288618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bad082a-2568-4260-b0aa-1b3a6b615119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1acbf04-83fa-4a62-94e0-c70a5ef99953",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd19ec0e-08c3-48eb-9e52-d2141154d996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee802a53-0188-4e7e-9917-33730c914650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccb0d93-8bd9-4ca6-b83e-4d2cdb2fc9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ace478d-16cd-4985-8f99-2a0b5afb5efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585351ce-4324-4655-b1b3-2c762b2422cc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d45d34-893a-437a-a05b-079ca300f8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdfe0f3-7aae-49ac-8713-8194ad99cc40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911f943f-0780-4f6b-8e8f-8182d3029f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65e65549-424d-47ea-a0db-8ce5d94928e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7a2159-5273-471f-bf29-b7f678f169a5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e8c763-8a21-477f-a23a-0884cd450c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea7899c-7071-4eb2-a10a-f0a4e405ba30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c4f720-80ec-4c76-9fae-74e4a3151608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec096c80-e42b-40fe-ae46-f916c1c80547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e639a9-c97c-4668-8293-02a40ab6a012",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5195a545-a3b2-4ddf-9ce4-1306a1f78029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2609b4b-563a-44a3-b4bf-04d872ebe2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396d0279-ee76-4956-92f0-0e0cbe44cb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca42ec9a-ac4c-4f90-899e-1a1b6e7ea652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72311a82-2bb4-4399-8d87-ed35ef6db637",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb2ca5e-489a-477c-b245-079a4738c5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438a6a03-5c5b-4344-be09-a99d34175ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e3af75-1542-44ed-a623-94c35ff844b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a57a2ce0-3f67-4153-a8b7-5ecb26125512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4712f31-5fa3-47fd-b9df-5c8b3e840fd9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f093b821-6be1-44a0-a266-fdde8514cd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17da987f-17b1-4a12-aba8-e4e3978218ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedcd09c-8e20-4169-b165-c312da9fa780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ead4ca5-6a66-4a81-a3b5-a4ebc7c9e11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2073311e-1df7-43d2-bb3e-d23aa92cf05d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460b715e-a555-4857-af1c-22931b7f6aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b071a8b-3334-434a-a0be-3abb1977c474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84b69ce-9839-49d8-8d04-1ba1dcf54eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfc0203-4fbf-4422-b7ba-708f36a398b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c9671f-883a-4605-bb93-363eafe72e19",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7979d3e6-3ff3-4a61-aff7-5a3621a5af79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2357da28-0a7b-486d-ba2d-969ec6486931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161e3bf3-1a6b-4809-b4dc-bbea871fcd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3769c81-6142-403b-a031-c16826615947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39687b9-1848-48cb-8f22-7730ac013ab4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601223dc-3f26-4f63-9f62-6bd4f2a3cd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ae41ec-2e6e-429a-8b18-d2a4e1450017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e17dfd-cc57-47ed-8731-a0ccd0d57e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e96ffd74-75bb-4973-83de-df4be729ac9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc35772b-b0d8-4696-bea0-7c3480fee684",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c053c17-25c9-4f27-bd11-2cb11ab8335c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e9b113-ef23-416a-88e3-cc25a8ec6f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e032808d-08f0-442c-a105-1f78a044659e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2335d968-8e88-4a72-9f85-8c8118695022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4e3e43-05c3-41a9-8b42-df70bf599574",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f9e54a-62de-4d41-810c-f347bba9fc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df984ec-8549-4fad-962a-06cc9d16aaae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a57f26-1831-4632-a3c9-dfc973803dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf660982-2cb3-448e-9991-d4415c9449ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cfa659-5fb2-4192-9fdc-c4dfbb7fd195",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffecf78b-98ae-4e20-98b7-e057a5122762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c89de6-37a7-41bc-8e9d-10bbfac833a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35d8f91-9668-4f8b-a00e-7e6e8d9c0a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1dcee7f-edd1-482a-9900-af9c9d1c6a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21dcf1bd-5d54-447a-8cec-022eaa5ff73a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e8515e-92a6-4744-b151-00e711fb82fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b937a349-697c-4297-a104-4c4aa4dd5539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bac0d0f-2017-44b5-94ef-903c8fa7f2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dab7dcc-b5bd-46d5-b8e7-c2d10ee3a591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee809067-9451-4538-8726-fe90f639973b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8726070-5cc2-45e8-b9f0-d85d914541e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991288a0-8f27-4c8d-b0bb-6e99f86671e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff75392-28dc-4197-855a-5b3cd2f7036d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b13f7326-ec61-4d1e-a0d5-04dec3c10c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb5a95d-8134-4f50-95a4-5fad8bd11a82",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6f7a8e-3890-4922-b6ba-cec82a149a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee509f5c-bff7-4c64-8181-9d37873ac842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552d37c9-f43d-487c-b517-85c03c7fce2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e06b5d58-74b8-4055-a575-c7665e230b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9434c719-a283-41d7-8bc3-89d78f409e7f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fa1b6f-ed8a-487a-9ed3-34fbb3597d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5806b951-edeb-48a3-b116-7beb47533c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c1802e-3222-4564-9006-3a8d69c1802a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3ae73f-0d62-4ac6-8a24-470048c6d2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95687d5-0ef1-45a2-b8ed-b882a5e2cb12",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f72b37e-686d-4685-9af1-5ace53f136a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8a06a6-ca1b-4f50-900f-6dbd4dcdf910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0128a598-4867-4d9a-ba2a-7e7bb55d7ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1a180d-1829-4fff-9203-7a81da48ebaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e415f9-9b10-4a06-8190-95f30f4f7a05",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85733b9a-1502-4ee7-9fa5-03a0337e0e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47d28c53-0d1d-4ed3-8873-7067afb421de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcede7f1-c544-4d96-95ac-83854e9d96d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab57d50-3eab-4773-9934-a3046a5cd791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3b904a-c553-4235-bc78-a98c1cba4407",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e7e666-4366-4ce1-b620-c878fe078506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7ac4fb-9b02-475f-a9d2-8c5d87766742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f58b5d-168c-43b6-b4a8-9dee593be772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2d5271-1692-43b9-9e71-1cfaba0890fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540cbb3d-a44d-4786-ac5c-a9d57e384108",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57b01c3-e3f4-46c2-ae17-025bca5e4427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd47543-d683-4b19-a68d-459aa9a4f4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b153f193-06a4-46f2-91de-e146d6c7a63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0572a25a-2e66-407c-b808-1297ca675da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f73557b-acd2-4fe4-ace1-4afe98be50e9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887251d2-3e95-4bb4-a30c-424eedf416ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db90f515-8336-4944-b9c3-b27e72c74377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a51fae2-6814-41e1-9823-f1588bb39bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "06716257-e3cd-4533-9530-61836de9f815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ecbc94-b607-4fb4-846e-67e4ff2bc289",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfe388c-d146-416d-8f6d-2c8c44ce23ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfea02a7-fd77-4568-8616-ab3ecaa3dd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a85ea5-cf5e-48ac-8fad-edd5ae369cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "81c1948f-00cd-4497-9ae6-5435214a2087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844be9ba-d1fc-499a-a729-5f6d7405a0c6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5d9331-dc76-4223-a394-2d685c765bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7bb5cd-0908-4baf-a3b3-e68630994658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eef975c-198d-4292-b9df-cf763c16f99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a04e27e-64f6-4e92-96e4-4fcdf558c514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbe5f70-2458-42af-a8c1-4bd0a626171b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab39825c-fa9e-4bb7-b844-b2dedcc59fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6e80a8-601d-406e-a5a0-d2288a6ba0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eddc8a6-02ac-425e-b1db-eefdf1031a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3ca21e-5bb1-409c-8caa-803ae08c3a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75ba498-782b-48e3-b7bf-9aa3b0f68870",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5634c0-fde1-4f8e-a4d9-84c14169476a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835d0d56-2692-40a7-8c2b-f5209956ca7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d756ec7-f30c-459e-ab7d-05a1b358140e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b87bd43-c4b1-4178-a35f-676f407e794d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9a3eae-6eba-4a86-8487-b09b3428704e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958cd9e9-2212-4d65-b14b-a5daf4c85c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190bc389-6641-44c9-9a64-3fa88f808a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9971307a-e790-476f-a728-b10a797838bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "48b2c1fb-a68f-4eb9-a369-5e765ba7e60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506af60a-444b-4e82-9fab-afee9459cbc2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e697ca-f844-4454-aa4b-9f41f372d602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea15800-ecf0-4c3c-ab52-5b088660f9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2d5bf3-ed17-4a4f-8109-3271ba3296b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4f2c3f-155b-4fbb-b083-46bc66c5ff6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83914772-7554-464a-86d3-784bddae38ab",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38e95ea-3697-4c90-a459-816a852a6880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818f5805-910b-4b4b-bc66-1b40208f439f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5769b8-c8d3-4dc9-8bfe-16fcaa128b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7606473-50d8-4965-9a3d-184057b2e084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab4a711-8505-4103-b0c0-3431ce2fc6eb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2ec209-1e5a-4100-8a8e-7465def0224e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8255f015-34ad-4b86-a1b8-ee7e4ddb2e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e918b7df-3d06-45ca-8a84-bcfe23cbdf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4674afba-1d7c-450b-83a3-1eca1ae19351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3b3680-7979-4ddc-b0cc-e1c6a99ac3e4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb85e78-cc44-4943-a11b-142e03f136ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65a896a-fa81-4971-a33f-1fb56d2e6813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d848b7f2-5473-44a4-bf10-ec3f37d17e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04eac4fb-566f-45f8-9ca7-64330f445950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ddc720-9d0a-4453-bfd2-4dc2027f0d82",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffbd322-9516-462a-b0ba-d9eb752f34c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb98c1ee-f9a2-48b7-989a-3a26cb9f0bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc776180-cf64-43ce-9c32-2a79c3e41a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "772348a1-2026-4c84-8dfd-c99315792182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557d9171-b849-459e-9544-b214f3a8c3d5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a5d777-206e-48c1-86cf-1216f80f2f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888b3d5f-0481-4546-ad51-d0157647919b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd768cfa-8dc5-41bd-9298-1164b04684a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec6a395-cba0-464c-8a8c-80c9cc4109d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eff365d-bad9-4937-93c6-fff07e0a8802",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34279f04-4057-40a0-bd25-2207d232b88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a20b490-daad-4c40-ad9b-bb2fe6ae62e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7fe205-1120-416c-919c-d09411b80fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7d4e90-7e04-4ad5-b2ad-6142aead74af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729c4484-a554-411c-bebb-22078241e4f8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de77ec95-f446-45fd-824b-f6e50459dc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e754ab1-af0a-4926-a178-f92179391f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8f2430-c066-4693-81ea-8bfd678acfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7e1f75-6191-4260-a01a-72a64188aa43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b210e70e-fbea-416e-862e-2b6be1d77812",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331d92be-40e4-4821-818a-53417fe740e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cabecd4-1db7-4ae1-b3fb-46d4bfb32334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a629f0a0-0779-42e4-ae4f-345a0e8a4d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "960549ea-1735-4179-9268-bcb9c42ecf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3b51dd-9a3b-46c1-b3f5-0d926b2099c5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22119a7-38b4-4ecc-ac82-51199d7aa0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a62d77c-6eb9-4358-bc02-a6bdb4d5da37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ae87fd-750e-489d-8efe-8ce255f7dfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac030d2-831c-4d5f-b38c-c4becad5197a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8b773e-f0ae-4de6-8abf-b793ac9ca2c9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e22981-b55d-480d-98f3-4b36ec8b0c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5319e94d-98e7-43c7-b31d-9cae16a7ea20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980e7c5e-4af3-4a70-a257-9573a6affe1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5c857b-480e-41e0-b783-fedd3cd2d87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7377ce6d-e92d-4f4a-a57d-95dba101c1d0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7aa42c-dbaa-4cbb-84e7-68958861580a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2d72cb-574d-4782-8afa-b3cff4db21ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d69d13-d40b-4ae3-9665-569e1f8c9ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "453c9316-6e99-4e45-87fd-af711657f3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2252538c-653b-439b-bc65-e86db6732e4d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5532176-dea0-497e-b1e5-364d5cd15a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c88c06-e9f6-44b9-b960-a033ad37fc71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abc5150-ab88-4734-876c-57dde5bb0489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "72a9f268-8fec-4157-a063-713d5f97cc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524ab1c2-eac0-4abb-9aa8-e88d8fae80fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df814272-4735-4142-8bd5-e638669dc9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0107de73-8a71-4077-9533-fcbe7bc2d049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a94d3b1-9f71-4fd1-b5c2-55d2d4d081ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "28038922-ddd0-4446-a8c7-8b1c2d33e415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a981908d-76e0-4ce6-ae92-6db735441d77",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a95220-6d3e-4f60-94ea-117db271ddee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86369dd-8bd2-4857-a999-1db35683d5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefa0d0a-34f6-467a-b3d3-3f2503ae8918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f227dad8-aaaf-4693-93c7-a48bb2960578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053e2223-4333-4ea0-980b-dc3d94e03cae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4ff361-34fa-4065-b7ee-962665cbe97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5878d72e-5864-47ad-a399-6159c4def57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d23f169-8068-4f86-8fc8-a74db6ac016b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7dcdcef-ca52-4181-a37b-7fee8d23988a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463c2570-9156-4959-9b41-3db6038789dd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1263e9b4-f44b-465f-8c40-123dd2ff9630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f47d88c-4a0f-4eae-8657-93cfe422c328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aab19f8-a21b-4142-8079-c3db09e40e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6355c42c-ba4d-4d41-b524-aa8ec9094a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5756f532-bd96-40c0-9822-9f1d80a758c5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad67167-256f-4f5f-af66-8c5865080d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01330b71-e9c9-4144-a77b-8973c36d0bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5cc7ef-834c-4740-b642-cf023baca4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cff2e0e9-d5ed-403f-b55e-518e33b04dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0640d4a9-a8c4-4565-ab21-f43c2bfd1b19",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7ac7a9-a0ab-4f0f-b2b3-41caa097a08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749ee495-4929-45d7-a489-097d022faa14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5799a39f-2bd9-435f-9ad6-0318d4bad88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "03eaf3fe-7e2f-4b77-88a9-4aaa7470e18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2eb9c7e-98b5-4f29-a2cc-fef8e8543a5b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1466911-f6d7-437d-ae2e-59fa1c5b6fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a86d1c-e418-46f7-bda9-e199b94c050d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e64645-d715-450c-918a-7bd816ec89a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "113fbfa7-3d18-4f6a-ad73-a213ed8fc898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c68a63d-8122-40d3-bbed-80382727fc55",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db497cf9-8029-4e76-849d-472677bd5cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d87b61d-4136-49eb-b5dd-510e8b22f024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fcaa51-61b1-4977-816e-e6c9a3db49c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56b3edbb-98b7-4006-a4d1-1edbf4fc51da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495944a4-60c7-4fb8-b911-ad70eff62f83",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2d2229-22f3-440c-9caa-65a7a9fb9843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84212dec-308c-4320-a36b-62dcdc117310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889173c5-cf55-44f9-b0ad-af4d19232b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c761ce-94dc-47da-986d-97406b39f371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c7ff3d-b215-4155-977f-b8f3dc756b9c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875a2f82-3fe7-4db6-9f8f-d29ea03d6843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550d7e14-4ab2-4a09-8145-896570742b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b47dce-580a-4fa7-8033-69d7ad775a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b77da9-6def-45b5-a6b7-706548ac447e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4aa86e8-697f-4900-992f-049d00a5e6d5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d64c87-2304-4e17-bb07-fb7f991a3dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b385c3-f8d4-4bb5-851d-bf808d9d9863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64514ae9-b5fb-4825-be2c-b6b0094fddf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad33d61-916c-44b6-acba-4a7d7a4feb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0b2560-9c3d-4f59-97ce-8c9834c795e8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535d5372-5783-4860-9035-4eaa3ec17584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e20a14-f9e8-4b4f-a841-dfcfb3741c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d3cb40-12eb-4643-8e39-8af3ccb42184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b997f4da-2017-418c-82d0-0a9f3373b7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8cbeda-10a0-47fc-b906-fc6bd3abcb73",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96251536-4d36-4234-a8b2-7cbe6df887f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c3caf5-e8f3-4d3f-9118-ebf8026c9383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0731d248-21c7-4667-8189-187a0c68bca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f646a7d7-9aad-4a67-a782-ba0acbddb9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59295941-e55d-4e6b-8a33-315fe2843596",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24111737-ce79-489f-88b1-1cbfa1845a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba164f1-0d75-4e06-96d6-4ac56a1df93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efa9b86-1b10-45ee-8468-5cda65629e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4514172b-4144-42e3-b9a0-c1f441565a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5bcb8d-4f70-4032-83d8-e234f7b1dd58",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074a983d-e9d4-4008-91d2-d844ced18e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b6ea6d-00bd-4ccb-976b-2749f7d05327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bdd3c8-9625-4188-be1c-54c5adf26cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f916c996-800f-4a8d-b9af-7f8845e29e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac6f6ba-b7c1-488e-8d13-ce7b03bea9ea",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55952c86-a83f-41db-b823-9f88fd035804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df38455-f7b5-4105-973e-2a8483d95898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d5e0e4-0e5c-48dc-a4d7-1000e59646ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5964287-94e1-447e-89cd-5d23627d93e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eea94e7-ae94-4408-a333-0c22538afca7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1fd11b-7d32-43ba-8ff2-fa26477a5fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc5ba4a-0d76-4b60-9726-fabfc4dbf088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4495703-9ae9-42a8-97cd-455c6f591129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28c48aa3-0700-4754-a055-4884c7f456d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d512119-b2c1-46eb-9195-bbabae4278a3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd06edc-5939-4656-9905-a02a89d65a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b734b6c-3468-4f09-a86b-8d87e919c634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940e98d3-0965-4caa-a832-f817416e9e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80ef8539-7588-449a-8d7a-e0b3c743498c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ef8eb6-d391-4010-a09e-16879698f62d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620fec0b-c843-4c26-a83d-816cc78dc795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f06cd50-dfdb-460f-86c1-c7f72ea9e7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078953e7-abee-4f2a-81a8-460600159382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16933077-019a-4393-b3f2-58abe4872e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe247aa9-54ef-4922-9518-4ca4b7f7bc1b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235fb972-c6f2-400a-97e0-2ce9fca12938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755c4a62-34ac-4c84-b55d-edcdb1fe466d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c28a1d4-f6da-4201-b356-b0ca5f21e4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4400cdd1-2e65-4a76-8155-2df68bb59805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4bf02c-7c7f-476c-bda5-ffcba1095320",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee747e63-2248-436b-96af-2802e6f4015d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f17460-a289-4d63-a477-249f0af271e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fc7e73-8c8b-4da9-9e7c-7940fb29c30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42ca0f05-92c1-4361-b55f-8adafa5b9a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94ad554-e885-4a5d-b658-94d3378a5e23",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d241c2-f2d8-47b9-b0a8-04d6262d207e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed939eb-37b9-4b17-9b40-e89b7e2b65de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1a5aec-40a7-4c46-b9db-a4605b5281e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f5f1bd-612f-44c4-94f3-c75ddfb1a8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d573bbda-5663-400b-a6a2-5c5d1ea7bddd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff2f09c-8b1e-466d-9c25-840bb8f6f19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3773ab9e-bd19-4a1a-8851-7ed51ecf6369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbae39a-37ae-4504-ab75-abf44aaf5e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c70cfc54-0e46-48c0-9c59-dd41a5d5cdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d570aea-3af3-401b-8795-b1d38587a9c1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0477edf3-f6bc-45f1-ba41-1ca8146c9ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c8a621-5313-490c-ab4b-fe800ee10565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c213d36b-80cc-4f91-a44f-a85baef21bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f75a9659-9a33-48e1-aaec-117a5a169758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f94478b-3628-41a0-995b-6860b4ab2124",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba12b5b1-fd2c-4778-bb18-7c0b82b8bb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ab65b9-4f7f-41dc-b39f-d608e090d054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a481e22-22da-4a61-9b7e-87a04b47e912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83a827ca-ff50-452b-a5fc-73d5a40c580a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ffbadd-6127-40b9-a22d-f4f665a91d79",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96328241-1b8f-4809-ba75-a1bf8269b8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203d904d-53a9-4700-aa67-04ce1aa95f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bbc3a3-2ec2-43c8-be53-365ab5a0077b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0af55d77-b375-408e-a4ab-95808630790d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd202000-7b21-4788-92b4-a372b1dea1af",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a1e06c-32ab-447f-86cf-ce807fa229b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cdb8bcb-dc4e-4610-a239-c1920f7f1b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632b6945-6271-4fd0-9d71-6ebb9a0de357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b93d608c-b937-47aa-9779-b9d849327666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f52ae73-2aca-4ec7-8b5e-a0b794a60c1f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e42484d-1b47-4c7e-85b5-2f8f94cca402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309d9f5e-2229-4a30-9ac4-34ba2da5e53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64f8a63-f135-43e3-85b1-5a746b2fcfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "960f70b2-caba-4135-92ea-adaee982d8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80ff416-bd81-405b-885e-f64614d4f486",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d412341-4916-42dc-98fb-5576e48b14d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e90de52-bc47-4991-9a98-b6ae3ffbff6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d58677-e05d-45e6-b703-58d06a1440be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "735a895b-612b-436d-b0d1-caa791eb5d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4c3b42-7902-4cf1-ac0a-c9c3d276dbe3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814e2bf0-e88c-4101-a389-96eb2d42e48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172270ac-52e0-4cbe-881d-b2566ae50c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cbe95a-b5c6-4e45-b615-944167c7d7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ba6e3f-9581-454c-b518-a3fc966ba293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b2ee3b-bac8-421d-b742-8ddc83ba94aa",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4a2b57-7901-484f-9eee-9c00cc79b8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a2a0a4-6c1c-4318-8119-e54003f4cd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82d9256-b030-4baf-a475-1a99ea43ea33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7266cf0c-d192-4e36-8d9d-f6dad55cb50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ebc551-a083-47ff-801f-983d677d587b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05605b4e-2873-4f17-afe3-79f929ad8e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282a7813-85e0-4fd6-8f86-8913b235c980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701055b8-6a35-4a83-9aab-530ce1a7fbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "21b4ec88-82af-4f3b-aebd-2588966135a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147f3856-7320-49fb-b715-304f07ffb0b7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40da4cf-b573-4cb5-8a70-7d0930c675f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af3fc49-3a63-40ae-8fde-656e70de5463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd794ea3-2758-4b0a-8c15-acb4ebe8a357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee35483-29ba-4120-b1d0-5ab8253922a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6eedcc4-0f77-487d-bf46-cc2efe4a6ebd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8eac46-5e74-4c21-a214-160cdb739b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f261f2f4-c281-4ec4-b258-3be8bfc8edea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39df95c-f70a-4140-9863-ee06b96d8970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2650d7-7c64-4692-b80c-8a1d2087a280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f4ce4f-d9b8-4b5d-bc75-647044ee3104",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf952da-5b7d-4401-9be7-6d204b5502f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7b94c4f4-cffe-420a-b65c-b29b5fba4ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c242494-82f1-4bb7-8dae-601dcbb15638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4726fa5b-9a4d-4ae6-9254-83128aeed6fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ccee3ad-c728-4dcb-90a1-51830d8dc4c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b20d272-4deb-4d40-8ade-77014478953b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ceb361-d079-455c-ba2f-e92055cda3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "396ebfdc-4f62-43bf-9716-3c1edde15b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496f10eb-35b1-4bc8-8ecf-29eb1f5c5cdd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6026bdbb-4c9e-4a18-b52f-61e7c47827d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74e6bfa9-333c-4037-b744-98dbec3bf550",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d7e80b8-b0fc-4122-a597-0e7f983dcb10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c887687-673a-4922-9fdd-2b3d93c1bf06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13a97c29-56eb-430e-a15c-c971fcc778aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bdec65ad-a751-4953-8709-f5b6987ac8e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aac48319-e17d-407f-88bf-77793a8bdace"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da387881-41d6-428b-a646-21ada04c8902",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2c0b462-3717-49ed-89f6-f5ee9510cead"
                }
              }
            ]
          },
          {
            "id": "a074020a-db45-445f-a115-c2a62f4f29d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7397354d-5cfa-44ef-b15c-bd2f8d3799f8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "94e39327-3507-423e-9cbc-b716912c75d9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5d86bb-aeae-4325-a589-92251001cb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0eb6dbc5-9a41-41d4-912d-c0977ffd5de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f06f016-083d-4b31-9ba0-134718ba3713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c0eab5-45b7-4aa9-90b2-91ab315c7155"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "062d7aa0-ea53-400f-8940-c6ecc82e77d3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00dab8bf-1141-4bd6-b9c2-187eae7576b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95dd93a6-c65a-4cf9-8a44-172b3ad0e091"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a380c08e-a8a2-464c-8834-fdf0ac786855",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e17866f5-af9b-4898-8c53-b08b023ea4b9"
                    }
                  }
                ]
              },
              {
                "id": "0537fa1d-c600-4d25-956e-9f2c43fc473c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc7a2b2a-3a89-49de-9d95-f9e8bf464c50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6067553d-97cd-4d99-8de8-c17f77c9ad5e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e28f735c-2ae4-4044-99e7-0c1d47f13820",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01d6074a-e4f6-4cc7-84b4-c4a0c32802e6"
                    }
                  }
                ]
              },
              {
                "id": "0b9e6f06-ee41-492b-bad1-746da7755f33",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2d93e0f-cf2f-4bdf-9b71-ec8620a83265",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "454c643d-e487-4c79-b344-446479cb7176"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6e6c578-9690-44d8-a13d-75e1304e0669",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c2e1c2be-590e-4fa9-9667-14b5e423f810"
                    }
                  }
                ]
              },
              {
                "id": "9b3de8b1-9ac1-471c-ab9e-284c64549b58",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f683fbbd-3e98-4dac-86cd-225e6afad231",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7fbc2194-a901-4757-9ead-2e4bd3f87f95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a961bca-3afb-45af-84a2-e6c8c97b20df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "efe16838-12cc-4e44-82ff-67d1b2d6bc73"
                    }
                  }
                ]
              },
              {
                "id": "e3054ea9-9e74-4e90-b106-f84692ed1466",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed9a09bd-5ef3-400a-96b0-6966ccad2269",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "219c78f2-3a5d-4997-88da-f299a550ae46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fee5b97-04e9-4a3c-beb4-5e9d9e4aeee2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7a894abd-9ea9-423a-bf7b-bfe619afa7a2"
                    }
                  }
                ]
              },
              {
                "id": "2eec0763-92c5-458e-a19e-fb358fd9b492",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f95aae40-a945-424e-bf02-d69f0c527b54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e551c49-0409-4c76-bb49-da5d8226d47b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93ecfed8-82b7-42b9-94b7-fd3604ba2b33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e79bdb86-5c41-41be-984d-beb7864543e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b31c0a38-97c9-4375-9f2f-36419d4910f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71927b71-d689-449c-aee9-d74a85b26a09"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7910a840-91bb-4130-bf5a-baa602ab5b85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "827c44c6-2aec-4f3d-a1f7-555eabba102d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cae6e6b4-2264-4964-bd92-36ca80d29871",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4f9cafc2-47d1-41b3-8927-a63bbbf7b0de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "241e659f-ed62-449a-8642-57fcad1ed71d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b7784d4-d9fd-4b97-9ef5-450f00681752"
            }
          }
        ]
      },
      {
        "id": "f3b19823-eba1-44a4-81b7-1d3f4de02d91",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9b52c635-c8fc-4d89-b2a5-5417909f3631",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8addf28a-2621-4c08-8375-25fee2365c4a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5442c1c2-5d9a-4526-9fe8-86320af125c0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdefb3c4-4dee-4736-bd06-f64dc165690d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbe01fc-f532-447e-bfe9-c03fb4d2b392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda8000f-97b8-448e-bd49-4057e8a9bde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a392b6c1-df84-4ab3-8aba-6e01b31d27d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513b15fb-a8be-4aa6-8135-398cd9864f79",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd5f428-34fc-4b99-80b1-e959380ac548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee4718f-bdc5-4079-99ea-c744931edc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580eafb3-3f2a-48e0-b9f1-1a3e1a0b8dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab65e6c-fe6c-4d7a-8894-682950974558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1531a330-0fc5-4611-8686-6de273dab179",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0877d63f-66aa-4507-b498-86ee8b87b4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e50bd9-6d1e-4d08-b1d6-245c9e24dc07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860f2be8-0574-4bf3-a6fb-5de0a094ef1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b97e69a-f654-4969-9872-2e56d88cd5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79b84fb-0df9-4e73-8af1-eb68d96e9ca6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae80028-5035-40e6-b58f-7f072567b00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58d5439-e4a8-4baa-856a-c09ea04987ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc892d1-ad0d-4881-9ed4-44fa8e57c104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d43fe1-efc3-475a-b6aa-27383ddf761c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34360513-7c62-4423-9a32-794d9f3de085",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494ba4bf-7650-4939-8f2c-90e5ad1ecc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a003a66e-51db-43ff-b619-b42fbb37d5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ed94c4-9e51-4e19-ab4d-7cae154cc60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc478147-dee3-408c-91d3-98a3e3cb4054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0671452-300b-4d9e-9c24-e69ae55a1684",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cf43c2-f463-4ad0-a992-d7b7130ce965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852bbe93-5654-4570-84c6-f77d352ecd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f01cc4-f030-4bfe-aa17-1cc5b82f40d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7537bc28-bf84-4c20-be09-a7d7f5d591c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e139c0aa-f6ff-491f-8a4a-8bef09d54d12",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc72f9de-8c80-4434-be93-fcd364c98e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e02646-ed9d-4f13-af20-db8f53202141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82965142-5e27-43d2-9967-1204c4a95e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "60457f6a-0f50-46bd-86a7-f35e806a6c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6617cd-bf6c-4981-bf4e-c9610d31e58c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7441c2e-c4ed-475b-81c7-041aeb76fb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6366bada-297e-45dc-93f9-c345bc22279b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc8eccb-ca1c-4b53-8649-5750711a8b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c70f73c0-298d-426c-838c-32d53424f50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb346a1-4de7-4755-97ac-825edd37f81d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c660653-acf9-4b8a-bbe8-d49b80418c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35097d8f-40d1-4f1f-8416-5f4df3cbce04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4582f7-4c89-499c-9f62-332598dc8e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "802738db-6c1d-42ee-9cbb-42dbef93dc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4894766-59f6-4867-843b-7ede77a02464",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04e3d12-5bbf-4d4b-9ec3-77ed969221e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86096083-2ac8-4aca-8bf8-af586b8678a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7e828e-05e1-40dd-9891-66f3c6383f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d96d5b-1a23-44d3-addf-30686fe92a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f336733-a5e4-4ce3-8b8f-469c75502bc3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a9d3e2-a0ac-4edc-9714-26dedf3eab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e60c4bc-2497-494e-83cb-d2b9d77bf565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d02ba32-b695-4f53-a64b-dd54ce7991be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4627ce18-c33f-40aa-94e7-271a32ba4464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfa21db-54d6-4dbe-a57e-4b0ddfba2188",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcdea3a-d4a3-4978-8c56-13ec10624932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace657b8-d21b-44ec-9df6-437797932bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb97aac-a626-4f90-81f5-09b43baed6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5122b3c8-e464-4c28-8044-a309c0cabc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8d6782-d345-4b84-8fdf-d3abdaa1e83d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09eea2b4-2eec-416e-8eb5-06e6af521fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a51c7fb-1bfc-482d-98c0-5f41b5e6aefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440d14a6-f97c-4e97-823d-43c05331d135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "962299fe-d6ca-4c70-9a2e-a30bc58a65da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035b497f-96d3-4f33-ada8-745f5f985c54",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0959ff-f802-4198-aab2-eca627799db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4e5468-c87f-4a42-92fc-c82f18265513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfe1a65-f1b4-457a-80b1-6118eefb8ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "beb72ec8-01f1-489a-944d-f88c70719373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110055f9-5e67-4d16-8254-354baf2e2c41",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae2b273-fa7d-41ec-b130-f4f7a0c71fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c253b0-1c53-459f-8421-3d6ad57f23c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10766124-d150-4bee-9ae9-3e71280178a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "60802df8-68d5-4457-a7d4-c4b59b82c7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363bc39d-1da1-47f1-9539-d709ad5558ef",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380fe483-1270-4531-9cf1-16bb4ab9a398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c61911f-3b1f-42c3-959e-20d937f6009e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cc824f-335f-4a47-95e7-bd308600c5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a921259-fb2d-44e1-a636-50f66350693f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9a603b-4379-43b9-9082-e2ab6ae2720a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cb96a9-651d-46ea-a972-856c9bcd1e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9342860a-6125-4f32-86ca-84ab1ec5b879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e8c142-36d0-484f-962b-bfedfd326516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5f93f8-0676-431f-b759-49249721a805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fee86a-aa84-4c7d-afe4-ebf1b36e10b3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c93cc57-ed78-4691-9cb0-6e5e494720cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d1c91a-94f4-4ad7-be52-1f0470f73781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13911b87-d816-4ad7-ae48-bf2b0499fdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07ae5eef-bfaf-49b3-b8c5-a61e5cde566f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6ae90e-ae7a-47a8-bcfc-d981129d5bc1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2569d3-ee64-4695-a6f5-2bb0aac3214f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76709e37-7be0-4ba2-99e0-e08e89e2ca01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be69c01a-a62a-4126-a343-37f925910ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3143c17b-9d51-452e-8fd1-ebbe4029402f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39bdedd-cad2-4016-b6d3-120e9c4b2030",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d77df65-5461-4294-9438-93da9d0ee74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77e317f-d74a-43b3-a4c2-86c0ee0aab5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd53dc13-b0ea-4dce-b196-dc80bc55c681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca205d26-6861-4d71-a03b-d0379ed64787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905af4ca-c1df-4cb9-913e-7e86b90f3f6b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c726ab-bea9-4bb2-a9eb-1b4613138cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4bad6c-fbe7-48c6-a04e-1621f0875cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f75b37f-4bf4-43ff-a507-3b747d597e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05b4cf10-8828-4c5f-85de-976479bfbf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0749740-ca94-4516-b287-a06cf5e83d4b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a4c018-5daa-40aa-9569-50d28384f9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd31e94-0cca-404d-a4d6-647fe3be0672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff173649-1d70-4e26-93e2-288ceb2b183d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "891f13e1-1e5e-4bf2-ae83-abcb18a5bb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770e6614-ea0d-419e-ba9d-6a90e5f83ac6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d895e8be-9a10-4637-8285-9a2bc65d8789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f913bd-5d72-42a0-b0ca-a0674950f25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060daa76-b155-43e0-9860-a6d1260d19ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9ba308-f6b8-40f0-85da-b88a29890aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d477c93a-c6db-4887-8899-1cb86dc87a75",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0f564c-2829-4e31-9a25-698f444b3297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516f7f80-52af-40ef-93c9-046ea1120c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fec163-d308-4365-b418-f66df0f5063a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f77f9a66-fc27-4ac3-bb66-3b90b3ad1262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390e3601-15c7-45d4-b93c-44e42771a377",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25086288-071c-4f88-a78d-596952811214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b0de87-5604-4890-a37f-e380b74ccd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac768d9-4684-437b-ab2e-53ac364215e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46a539e2-1b86-47df-b0e0-0f94959b2497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fae7b18-13a5-48ae-ada0-ca42bf093e3a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9a229d-565f-4196-8a63-016b4496c653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6c2f7a-6dbd-47e3-af4c-8d1ab4bd16ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b56b4c-3270-4251-b68b-cf7d1164ae8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "273802c4-dc24-4608-a993-969c849aa575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201227c1-2960-42cf-a0f3-c60a29c42439",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7f55db-4b73-4f41-9ef1-ede1d659bb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05f73da-5af5-47cb-bae1-e4b42aa09978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358b6ba1-83d3-4774-a89b-8915892be37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d9f4bc-69f4-4338-8dc2-9a9ed2d796cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b4a605-cab8-4c03-8c04-45c61ffaee6c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434e8eb9-62a3-4d40-b5c0-f16aabc8302d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f273a8b-fab8-4b5e-b67c-84737ee14d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94d1eb8-c65a-424a-9dbf-598eba917038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7684d83f-0fcf-44fb-a84d-3483b5a7a139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06e1581-831e-4be3-8682-8cb14860fb2e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decab7b6-2a4f-407e-80ec-50fec8f8eff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238a49cd-862a-42f7-b1b6-37e9947ced3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8ba0b5-3ad8-4b04-83d7-b5f7f0359d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4e5bb2-29ac-4751-90e8-ee7d9ce9b0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3276708e-2e36-45a1-8c8f-a479e91fe48c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46318fb5-b06e-4f80-825e-424fc3967a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd61df6-3500-45f7-b49b-576ae97ffe8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c743f15-b854-4b96-a6c5-4b48660f39c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac54204-b2ff-490a-a67e-9581d5c58d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d4f745-fd97-45ce-be62-926f474d6171",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340ab25b-1791-408d-b6ab-14cf6318d118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6165d65-c076-4add-a7aa-072f7a326fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4bf4ce-bc00-4df0-9cb6-5d593b17e7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a20f7c5-05c0-4875-8971-31451f56bb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f5b1e0-5311-47b0-9939-50d9f32f4eb4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afed358-cee7-4e37-8111-9beef48f3d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a32ccee-becb-4ecb-b883-e740722e771d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b092e0d-4fa2-4417-91d2-d0c4f9f4c0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec98e00-214c-413e-b2e2-df68b61fd152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee14523d-ba06-42ae-bbb3-98b6834e76c4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da943cdf-2205-4425-bae6-eacd84780756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166a752e-2d33-4dd6-b9f0-13066c708e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e695ac-0711-4374-b531-d0b8ed6eab51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86c0f36b-8b1f-4255-9b7d-3a79fc994ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57702977-fdb9-4944-869a-7eea9079df8c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c9e960-a632-49b7-bda5-b5809b3036ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6411c8-5c4b-49f7-81af-f1a8e4a84a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd973398-371a-4dc2-bde7-5cf9660d7953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "454482fd-4153-4d42-8d33-db2c240a12ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cd8582-10de-462b-af25-214cb722d4a7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f068072-0677-499d-a54d-5c8a00b12f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae84de2d-1f18-4c1b-9d1d-4d95ea14b6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6fa675-83ad-4c19-a00e-7e4c9f36036f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb2f348-29d6-402f-b874-ed76290b2138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07eec6e-5258-4e0e-bdfc-1be576856a5a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3705f5b-f5db-4173-abbf-9dfc636a2aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db1d661-3045-4391-b9b0-fb4a46756b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81da24be-cc6d-4841-833a-4bcfea0c8964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b42687d0-1d70-4f17-abab-8498235e462f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efd1a7a-517a-4f32-8476-2d97c0bddf90",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78f8906-31e1-40a9-99a1-e4d6454c1c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fe01c6-9394-4830-9459-5a3d2bca6458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeef4043-9fe2-455a-9611-09f0491e5a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8db45a4-968b-4aba-a2e2-d7c22bbbe72a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb8e4ecd-4d34-4735-8da1-3424dccb802c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0380a89-8803-48f4-af04-5e96e8e1cb87",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a848aa-cab4-4980-817b-b23cb46c9376",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a2143293-2213-497f-9f52-41c3826c899a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd9054f-f674-477e-a672-68e21cdae329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d411e9b-bc6b-4af7-ba3a-280353f13cbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2494723e-a7a5-4b08-a6b4-41e763135b74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c3fc43e-e3f3-4a32-9957-e48f57cd4121"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ebdf590-b5da-4ac8-80c3-d6e660a1a9e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5a70f0f-dfe5-4df5-9204-efec5fe9cc25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "836730a8-5846-46e4-835b-5f4285cae3d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f833ad3a-ac38-4833-9bbb-ba1ca994e8a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95cecb6c-ae29-449a-a2c3-bb7a742a35f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df85a6e5-ff8e-43ee-8e5e-d483cd4edb31"
            }
          }
        ]
      },
      {
        "id": "6e8086f4-1466-435b-957c-bff316ba722b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0f291b1d-dcf2-4050-8292-6360ab5ea491",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d610298-2b98-40fc-be13-c612602f9e09",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17fd8a2a-82bc-4eba-9807-45354591e974",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97362ec8-34a4-48a2-9306-ddc33505679b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2aeb3b-020d-4faf-8647-61c3bd662cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2e3610-cb33-48e4-8d00-4aee886714dc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f6be56-bee9-4427-a553-fa04929b2172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a274a28d-3a16-467c-9caf-ccc38a4e6b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce4435a-e24a-4a52-ba8b-b8c6c9548c16",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5104ace8-8229-47cf-8abf-8aa54c83fad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae2ba1c-111b-4b75-830e-aad924cb4d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c604c865-17d5-4196-827e-9538cb2fc45d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061d3fac-5680-4cb1-86f8-c5f0e59f7e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6d7929-6c7c-47ba-83d0-9abf150d9c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ebe60a-af7e-4aa8-a343-c2645440a5a3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6aafba-3130-46bd-8d7c-554adf256909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768ddab1-0d4a-43b0-a8bd-56a89c25c9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c0744c-b47f-4e50-aab7-52d236ab29f2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c979687-3692-4ef7-b456-1cabe297d26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715c1fdb-3082-4053-acb7-0adc09a425ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7138a84-5d4d-4924-b67a-7601b98f2e2d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1da28f4-776e-4840-afe5-40ec8f43d4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5350db-9cc3-4134-b7bd-95133a9f44bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dbf4f2-57a1-46e0-9026-d2eb6bfaa4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaef7e4d-f755-4bf1-9f7f-0dddd04cdccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052a1286-da82-486f-b80b-e830fcba6a22",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e659f94-3910-40b1-9744-bfa0a31f6ee9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "835476c5-9480-4945-bab2-9ab0092fd010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25c7442-939b-4d89-ac53-2ad9e7367627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06adf96-e2b7-44fe-91b2-5d6d9a972aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e805e0-7bd5-4648-be07-7cb4bcd77f6e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cc991b-0543-4e9b-b58e-64ca9a38867d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c6995b-6b6e-466e-b51e-b4cf2f23578a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb06469-c93e-4ac1-8cf7-2a0b6d0fa10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9222b50-2b96-4505-be34-3d282b19d027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fe1658-c621-48fb-aa2a-c1efe4fba0f8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f48f4e4-ef00-4a30-bfe9-ff2b49ae86d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca188e58-02cc-4214-8cac-572d0c545e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f3833e-bb0c-48a5-8ed2-61f18ac5879a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0a826f-04a5-494a-8c7c-e44267183412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd74c032-c934-4d5f-9f2b-9485e2b77e6c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e67388-02a3-4d21-8025-f534384ede59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d567056e-9af0-449c-b517-d3bf883ab922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74269402-bf1a-4497-b78b-3a07a37b38f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f773f6-4164-42c4-b1b1-b6e7aee2bb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8541bd0-e5db-4d94-90bc-5be9bdfea3b6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9b1fe4-d728-4913-8b1e-91cd875978cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d7a0aa-2f00-4462-a593-5272a8e842f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f77bebf-07e0-4725-86ea-a5d4fe600267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1dac44-cc76-4924-ba53-66685a6b55f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a0b447-eddc-4bfc-9b5f-1cfa9e52a89b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae192fbc-a681-4dd9-8ee2-da593de24081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5c26dad-495e-4e84-b40e-555c24f50c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3c7d90-f64d-4df9-b792-af36a8f4ead3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acef8ab9-a2ab-4966-a235-d43d5b8f3078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb666492-abb8-4135-ad6c-85bff8f846d5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0512516d-dd4d-4e9e-921f-d85185ff06e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "162b10a4-cd21-4591-9457-2c2a23802c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99deeffd-6855-43a4-934b-df623796f113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7700a90e-b4af-421c-8b49-d17f979405f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54594439-67f1-46ec-92bd-6a49cdd64ecb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d99330-fef5-4e53-8c55-3dd557e159cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50aebfb0-a86e-4187-ac58-5859f40b4f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090af7c8-ae61-4982-aa16-14fd71f10be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b18b34-8de8-4a68-8c57-84fba208bb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7f3763-1eaa-494c-830d-c670b34aca4d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30eba064-f078-4959-8139-ab458629bb2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f831a27-85b9-4564-ac8f-042b857cbd69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "914582b9-4abf-4a31-88e9-96f8e1a60615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2bc4b75-295c-4341-bfda-e00ac4db3c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7467eee2-5d7c-42e1-9cd5-3bf6ea3e13ce",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6591309a-6bfb-4548-9fa4-afaf8b8b4da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4374d35e-8331-4f00-9f1a-b08b5c3828cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc6ef17-25ba-4c95-93df-efc88108efc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3176f944-d72f-4381-a9d7-c6f66dd361ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df478e6-0b95-4ad5-b725-c023d8800f23",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea4090e-7c25-453b-8407-5798ae800a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6af9993-b811-418e-aa73-9cd2e2ecd94e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff99705-c034-4cf9-83ce-97820773855f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2655ba-8e81-4c27-8a91-6b52bbff197b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a3bbcb-581c-4e06-a379-0756d22eefc2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2a579a-b7b7-40b5-84e2-e9ad2a42c5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba53090-18da-4d66-bd71-413892ec6234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb61db7-b2c7-4ffb-ad71-055d6018db4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b135cc36-4cc3-4d4a-bb4d-47f569f2e5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4937be-2a54-4cee-b7e1-0b4f3cc7085a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa53050c-26af-4c26-859a-77eb3e5e2bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de845ff7-e49a-4354-90b3-67f7865e4ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a6cdab-b9da-4c89-947e-b4f2dda895d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcce9d5c-3f37-4526-b7fe-87434de90402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c928f9a3-7612-46ed-b884-8501ff979c28",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13adfc83-8798-4dc8-a67a-acc91157c524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72ece77-a5c8-4785-96d5-f34178ca5beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da168d31-8e35-435a-8a4a-c036f82fdc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d15e2c1-5b8b-49e2-bd1b-8c3ff680e7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48415be-4c03-4113-b7a8-31fa466659ab",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62644265-5669-4573-8b8f-d34ee15846df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a19c68-688d-43c0-9673-8ac1970680d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68639784-542b-4812-b862-0439cac4781c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43cee084-f454-4fb1-a1ca-7b52e54f9769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e0d5d8-1660-43b7-ade5-c5b26147da0b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd7230c-1de4-4505-8f4a-16957deb0556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a2454c-55bf-4474-b8d3-e738fde12cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb61efd-51f9-47e7-85e0-c700cece2555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7b3d7c-2ce5-4673-b0dc-d1690f3fe3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9453cca-20ab-405d-aba4-57a7ced0830c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c55b6bc-41e5-4323-a56c-4a280d031d92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b492ebb-5c00-4002-9a18-ce99f4e5bdca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49ba863-c9af-4c50-9e8c-6ebd38ffb7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d049eeb-d12b-4e75-9baa-955a8c526dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22c359d-a639-4850-973e-712eafdf80d0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f90e0b2-85f9-4ad6-a5b7-293502965734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81531873-1185-471f-9224-f5d0a04833b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbeec573-af29-4de1-bdad-569d371c03ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb5e262-589e-4e4c-8aab-f1d319ddd26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db79ba0-1f93-4f56-abf3-088b2837d266",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64629432-19e1-40dd-8eed-5ad0a0afff01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37a4d1a-05f7-487f-9b58-d412e44dd0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d671557f-c8fd-45e6-bb14-a4df6d213eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7143178-52e4-4f7d-a598-fcdcc66ce72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be827dd-17d6-4cf7-ae61-087cfa328e11",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa282d5a-b840-46a8-86c3-4b59d0c82e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb8ec5e6-9ed6-4680-b718-940bc031759d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a46032-edbb-421f-8fc9-a9e448e1bf2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186c171b-08d8-4765-837d-957853112f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980584ef-3a27-4361-96c5-f8e6612671b6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c081a460-04c4-4824-a5fa-e4b30a56016c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab165de-c6e6-4a33-b708-13a852227ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bf3b70-55ab-4899-bca5-6e29026c9c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc33a9e-4acb-4379-8cb5-4f36707b7461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a59366e-c3ba-4c35-a0d3-017470f4a0ae",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d913759-0fe5-4c2d-a5b6-ea164948d6f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c652f38-6a09-40c6-a9d4-48c3e3f8ade6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e025166-a05c-46bd-a72c-1cda1641b980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81132b5-19a3-471a-a1bd-6cdb1b096dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3f8500-4935-44b6-bce9-f3219fe9e8ef",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce363a37-e288-4eb9-8f93-da756396d77b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfc66943-63cf-4ab6-b776-77b456bbb53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baea0345-652c-4cc0-927f-d6b13baba6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecd9b98-970a-46e0-82e0-d9ed7bcd692c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45142da-0b40-4fb7-b2d5-8c197e85ada9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de55aaa4-1f9c-4360-9bf8-ce9455caa972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6240dfbb-b363-4c6f-8144-ed23a68a7e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91f471f-50a4-480a-8dcc-c9cc735526ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf66f261-f012-4f0f-8954-f2ad267677c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a909da-87bb-4965-b709-7a4d30a23b0d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f436dc6-4b49-4436-85e0-e4fbd88caf5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab09bb65-7663-4abe-9c23-42b7a0862ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acf6e76-5912-42dc-b035-1587f0b5cb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899d04f6-025c-4d25-8c13-9ba5a30eb4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e57fc4-59c4-4f84-be47-62f783efff49",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ddd4ef-1cbd-4a69-8de9-d72e7153a3af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdc0df47-92f8-421f-b70f-adfc86edd27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45fabdc-ab14-4c34-a068-5840ca980504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe6ca85-b5f9-4245-8bb2-8b080e5a95ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22e2976-1bb1-4d2a-a11e-a774e1864d38",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329a759d-1374-4db6-af57-6bb0ab444f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95287faa-6d7b-4bb2-b03e-a2e95b32faeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a658b59c-a0eb-4aaf-a5e1-e097788ec113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30aac84-b0e2-45e3-95e7-d943ec0437b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c674dfeb-1a0c-497c-b9b9-6e6b2043c64f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc1a458-cf77-4fde-884a-205a50a131c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4eb7d80-e4d2-4fa1-b760-b9cdb802fe36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffd0e29-4b64-40af-bca0-6aacfe1e52d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c718ec-99e4-45ac-8647-5e5800a7f7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea560f1-8f51-43dd-93e5-79770bad2f02",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8068d54-54f1-4a4e-a689-898f52e370c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a7b40d-e7d4-4b16-8ce2-9f7b741e3095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a51b70-505c-46d2-bf50-0297e3036aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820dc4ef-f69d-4fd3-98d8-fc6c7a60b6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab751c0-6c51-4e31-af9e-3478d6c11442",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b3c223-adf2-4159-9502-d6ed199898f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a015972-679e-4665-9a43-657f47088e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ac2992-4550-44a3-b7f5-d89181e5c3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5593306e-cb18-4693-ba69-2b1e7236e3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f684999c-dec5-4f07-9bf4-d58509b5320d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d392895-1a5a-4c5a-8560-3134bc58e764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc4bcd2-d932-4456-81a7-6a079563a681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfeb4dc-8ab6-4bd2-9794-93c3c54cc0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b82a23b-85ce-4482-8953-8feea706140a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af6f1dc-b5cc-442c-a9c6-e3c809ac8b8a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a47aeb-a9c3-46a5-b108-1ab88ae12854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcd003d-b54b-4eda-be02-f31985ed426a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd7cf73-a4c1-49a6-891b-a78ec68efb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb3d2c3-033d-44f4-8180-fc934767bed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478d45d8-d8fc-4f6d-be69-a62db827036e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349c64b5-e6e2-4afa-a0c2-08662789d0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aac63c0-3d27-4710-ab40-bc6ec454b15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604df059-f9d6-48c0-a28c-aca7e1860d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0f0d1c-9fae-4dcf-b65f-94838e46a9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a28aac-0b74-4baa-b5d6-69ad71dac3ac",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f815327d-982b-4dba-b85a-392c40d8c8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418203e4-029d-4d49-b0bc-0c578018c6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec312d9-f42a-43ce-984d-1a497e54a1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f924d1d-1bf7-4640-b911-cd3deff996b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61058e13-a36e-49f3-bb4f-e36308ea6905",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb16417-4eea-4f82-9875-da62698bd455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa8d735-951d-4dde-8a2f-9c71ff8bd736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce428a0-945a-450c-8d44-8c63f169f875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90cf2e1-00a6-410d-b80e-b180e4bffa4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfc81a1-90c7-4e51-8319-3fb53befe6c1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a9abfe-0074-458a-a60c-8a145a1d9428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a5ae1a-34b6-4a9f-8df0-000211ac42d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed21496e-913e-4de9-b9a5-cb9285ac26da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502e75a6-9e73-4386-8621-65e104f5e579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a8bc3e-a9d6-4b4f-b6a3-6a1973425808",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2626678-8d8b-4453-8bbe-75c496485d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600a118a-eefe-48e5-9223-ec82976f1b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "539523df-84b8-4d48-83f1-ae04a2cfc5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa1e950-5f29-4ce9-96ac-220279987ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac79f8b-6a00-4ecb-9397-b175b2b57b3f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b172607-0652-4f29-a17e-4bd1c2dc7f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9d8081-0c51-4a80-9464-33e41ebdde7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7142efe-b79b-4128-adbb-2f636c41d025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9263302-71f7-47ef-9c37-4cde39e605aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d9d219-b26a-48a8-b59a-fef22c011af5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90819c64-b46d-4644-9540-585c5f2b9d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065339ce-d421-4ce9-bedc-f88289ace1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4a44fb-c5db-458f-9ba2-9efe214ef2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f265cd-8dce-4683-b79d-19a480cc6807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d30c330-c83d-41de-a01d-a0570269895b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d25ec14-ea47-43fd-b88c-2cdd6e1e3eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f69e70-bc84-45c7-abf9-dc5127261a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1422d2bd-ab09-42bc-a331-2918b147d1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233e5360-1d10-4c23-8e94-85f77670d2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261a20e1-1d99-4d74-9c07-0b2be4997cf3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61816db4-f1fe-4a2d-b25c-d39751196b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52f6c9b-d8e1-408b-a524-ab63719a7c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0012c875-7de2-4b14-ba0c-f25c87b92d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d710c1-3067-4746-876e-5ef4c67202c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd0324c-b2f6-4b37-b6f5-7c9ffc0a6094",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f9f929-2de2-444a-8b76-7ef338be8311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c9a4b45-ae89-40f8-81c2-5011229ebac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a86836f-00a0-440b-a4c0-bf1a306280c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42215c01-08bc-4f6e-afac-aadeb56f633a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b92f7d-d6a9-4d76-b4d7-1712369e367a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec19161-6c95-4832-bb48-365503557fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e73f07-757f-4bf8-9f32-6e06d06e6b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb21a20-a9ed-43b4-b33b-b74f4830debe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b5c120-3d20-4179-9af9-2e6bf6eaa00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c3fe2a-0017-489c-99ac-0ab5d5b103e0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4411f5ff-3467-4008-a71d-599fdd3aadc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8cd916-dde2-40ae-84b9-afd96f757576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd403a5a-7cbb-44a1-941c-ae7f8272c97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7582a880-1705-46b7-98c0-9051223c2b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824c418e-1de9-47db-bad3-c0ae6611638a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48e6e4d-5755-4535-bae5-51ea88b3b961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86960df-bd1d-4841-9ce5-f4ec841e3460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28765933-aaf7-4df5-abd7-8a820506b2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e491615c-b5df-4f14-8e66-4498ee081b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5050a64-0025-461f-a942-68adcfd6c3b7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd92dc13-8a34-4bc5-9219-e3ab7082f8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f60673c-fc02-47a7-9b7d-c501262e447f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523b509a-6c5c-4eaf-a11e-999bb921c215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625f0f86-cc03-4e9d-962e-a37cf1d938f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4deec3-c100-4816-a71f-b2410fba652b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebf342c-cbd0-4425-838f-569ad4583e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4b05cc-0e25-40cd-aecb-476518b19595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c988a777-60d6-467c-8a3c-0d2db2e4976c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3baefb5c-130d-4d0b-8f13-fa2f46a878a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e718ccfa-049f-4bc6-9aec-9dcc18299cc3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df08a1ea-631c-4e09-abeb-8aaa6128b5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb03f1e3-957b-429a-a6f6-8c54465f2eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b540d7-357e-4de9-8f11-568dbe04581d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af6f561-5f1e-4bce-9094-db7ebf2dff0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e314cd0b-8f03-4831-b119-8067631db33a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b99729-64f3-4bd7-8ada-39a3f84c876c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13281336-de9a-48d4-8d58-2c6c187a7d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bc4b67-6620-48bd-8649-39969671936e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de41212b-8d23-4afb-8b1b-f49e34564b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b16e4a-06c0-4900-a197-1482884103e9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab826ee7-37ab-4f20-8cc7-2ac4c2cf5eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4a842a-c3a6-469c-9600-42e9f11318d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd74c6a6-ddaa-4a42-bf50-9aed9d8770d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449b2d7f-1658-4f76-9b64-521e70b4cd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6963d13b-488c-4dfc-98e4-c856f6c68d8f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6a3889-53c5-4152-843c-94f2bb562e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafa73f8-57d2-4a69-9bc8-946ed4f1891f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228bcd6e-821f-4d70-ac43-217ba300d75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b3f0d6-620a-4d52-8086-13641adec429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5581919-952e-4ba3-a657-7156b107ba5f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a6dd2f-40a9-402e-a4c9-bcc73f90c95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc38a179-0c9c-439d-8049-5cbca00fae38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6456aa0-66ad-4cf1-bdf6-bbc601488767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ac457d-38f8-4e93-93c1-f05122df063b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7977545e-7051-489b-872c-16b100479b70",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ef951f-4f81-4a0d-a4fc-898becaa58c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64525b2-79df-4a4f-82b7-ddec1e1b4799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0adbd1a-7b25-4dfc-998d-0fb54f6cbcaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0168cb2f-5d5e-43f7-bf0b-76d2408a1944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e2b344-b040-46ed-8773-d61ce03a220a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c72e79f-c91c-496b-a04a-7c9eb049aa67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5b4441-3893-4bf9-8d8e-11c4d50f0264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee62f74-6bfa-4e4a-84e8-e2ee04bc66be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c4d04d-92e4-47f5-a5a8-89845fac6f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a391c39-fc2d-488e-9016-ad29fa0ebf38",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c0645a-e64f-4152-9c76-4981a6780490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229544a7-3460-4281-9bd6-9373e05d0214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9673911b-6407-4cb5-9ce1-a5e164a00f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c782f79-263b-4321-802b-2adfde018847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f493df3-79b7-4f6c-9571-80275e7c2f83",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88dac71-7410-4f4c-b5f8-148b2d58a888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9660539f-46c5-4307-ade6-71a82cc95cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fbc8ce-6b8b-4759-99e3-5ac7a8e15a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6fccdf7-054a-41fe-8de7-a17105da4e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dd98bf-54d7-4a3a-bbf2-48a88b105ffe",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccbb91a-668b-4e30-8805-42471b56245c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "860b977f-8296-4397-8292-9305d25ef8a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e915cf7f-755a-4e5f-be32-41917f4762be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c2dc4f-8556-4fe3-a5ee-f1fd3bfe83dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd44f92-b7b4-4e02-8853-4e158d1fb072",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ef1778-d5f3-49a2-93f5-c69d91888ae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "936b7d49-aeeb-4d03-a0f8-d327e35a3840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2ac0b7-0773-4804-b4a4-dedfc6c5a7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c183b384-a370-4e98-a754-f0fd0fc2d79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b97fad-8fdc-4c30-8706-9c31084e5e22",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602ecef6-c075-4c37-a676-50a5ecf02672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92d16b5b-f2e1-4b30-962d-168029a8c7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2a464f-c618-4700-8a17-b4febf7b2c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c7b3de-22b3-4e07-8cb4-3d7d15a21b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8e8356-43ce-4360-b316-7e6df02c5637",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b14649-570d-45b9-8268-a92fe95f1b2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3a2916-50ee-4f53-85c6-ec63d39d893b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abecad19-c28f-43ad-b71a-d7f0b810c1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b63ac0c-626e-453b-aafe-321b986dca93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfec547e-ad8b-4d61-b7fd-2f164918f700",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad810407-1dea-48b5-9221-0b912d5770c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75943133-dbb1-446f-b4ad-70ebfd352b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96bd235-bc41-46f7-91a6-a87ff5028dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51cc10d-6933-417d-a3ab-3bf25ee66737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143e34c0-39c3-4596-9cac-fb2777db282b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacc061e-4853-4ef7-bbd2-9588bfdf599d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "694687fe-ca40-4267-af7d-09654c6eb2ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1653d9b-831b-447b-881b-7693ae9a209f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434b2659-3f12-4941-89fc-04d2a0708a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd35b30-f670-4414-af76-7e9e56707510",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bd72d6-db83-4a86-b42a-869cd64020b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f1f5f1f-fdaf-4044-98a8-4b27eb91d183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b743253-47f3-4d19-ba1e-e777704df813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fc145c-36d7-47cd-a052-abe7e18422d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257fe3d6-6ea7-469b-a08d-277810902105",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feac6e7c-440f-4467-ac98-2cb0bf6a0d68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bb10013-9487-4e17-995e-4f45f917643e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8e8ec2-063e-4702-8154-63402792ec6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e9cbd6-bb99-4040-b29a-caf7ad77732c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b47aa0d-be63-469d-8e36-97a844e2857e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e860705-1143-4dac-a70f-19494b1bf684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01f18583-e84c-44db-931a-aaab7ea8793d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d47c6cf-ff81-4fb6-8c57-5e31457d532d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d5f410-e475-4f9f-ba27-780807003f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3d3154-e839-42f3-a605-5676c3e26c60",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7435849e-23c7-4527-b4ff-b6d605a5c0eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6089e36f-d56f-42c3-83b0-15d9c93a54a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e26217-42d5-4838-8995-838913e076d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4418425d-3818-4e90-87dd-b2090d8eda4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c366cf-bc6a-49a6-8bed-e4ca3fc34a81",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c0a70f-b008-4735-98f0-862019eae353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4830c64d-757a-4a5a-9d81-ae1227948b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c907a65-13d1-4052-ae55-65016d075f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be9b19e-5348-4567-811c-d5c3a9f14c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f337c5e-e0a0-44ae-b5d4-3897f347201a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958ec588-8bf9-495a-b136-46efde0916b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69457070-2b37-450f-9018-ed5b05b91241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a11bc0a-fe7e-4adb-8c0e-d996bc66b553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ddb609-fecd-4a86-9817-07cb56f055b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22eb6edd-61ee-4a57-a568-2a33e1f1cae1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca06619-e241-48e0-b638-ce0f289b285f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d33f750d-8a39-4f3e-ad6e-4d32c4365ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f026f4-e07a-4504-a03f-746931c4976e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f92013-5782-4660-b6b7-0524df9ef91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f840e9d-b06b-401b-b747-31008f51e595",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d412828-d856-4647-bf76-f44be7b64b7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a95b06-42da-412b-98b3-225d3c53dfba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b618cb0-cdb4-42d3-82d6-b567e8607b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c993d5-c9a1-45d1-a85c-015994991c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba080a7-7b2c-4958-9093-32c696376c65",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71208d2-28af-4a52-97dd-8f195da36e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1344467-a11e-453b-988d-ce11680cc6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761383ea-cac8-4464-a318-e232a0e426b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c635ad1-7c1b-4ff6-85e9-d2e466de5a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21648583-34f9-4983-8631-db9c2e721ff1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35459fbe-2815-4a64-9a25-e9f1b0cad09e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a99abf9-e32a-476c-8223-3c89019bed86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ca4c20-4115-458e-9efe-df47c5ec142c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121a7b56-9c99-4442-88ef-17fa02d955d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c0d13c-6a5e-4903-ac30-a928e75d4d95",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5089c41-85a6-4aaa-87ad-647c6a80cc9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fd6bd1c-b5e3-43e0-a522-ad79ac76e7cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab004e3-ec04-45cc-8402-20ff91d7a534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a11a0db-ed0f-4ae8-aa38-21bdf2a4fff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a207cb-a6c7-4815-9da0-c8be8372f01a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3928ca90-bade-4232-bbe8-392257098b25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5272e5ec-5374-4aae-b3b1-ccef6d9d2e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97992ee0-64f1-48ac-ac71-b39c4e7c52a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab8572c-91f7-4650-8030-3b46c9fd2db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6938c27-abf8-46f0-896e-a2377431328e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0f08fc-8969-45e0-b921-de94487d0b54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c96c5059-a0d8-4aaa-80a9-98d3cfda19f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c83510-41a5-4ed8-aeb4-48c6df6c4592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417e9576-16a9-426e-96b9-c3475871bb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd59c96c-17e3-41b2-ae39-5146f21fb86f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1a19d2-4e80-49f7-bb73-7e3505291411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6d07c4-97a6-4ab6-bd02-95dd65b68bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcc22c6-45a8-4ebe-b198-bf93f8fda0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb04acbd-4f8e-4127-8ded-a97c79808c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1bbb6e-3973-4d41-aba6-27903c566ab3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc2fcdb-d9fb-4f15-8be5-a0b4e7338679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6853ec3-1c6a-4348-bfc1-22b595e7914b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcd2bf4-752a-4853-a9c5-3a064db7cfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45dd3079-caef-46c9-8e68-bdc0e3ea41ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae2735c-cc1b-4e8d-93ac-1a6919ab6b8a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cb35ae-b96e-4a92-9d7d-d10f08257ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fcf029d-e117-4bd7-8f8c-11e2598b93a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d63bcb-4458-4125-ba4e-a85c348d3a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96090ff-c223-4805-8f8e-558efda4a9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaeae5e-a647-4cb7-b136-0ff884c4298a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404276f4-d304-4f0f-8ddc-1fb3416d14d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb6ef00f-04e2-42d4-94c8-068cbba9d0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abcc4d3-5160-40f8-afcd-8da9c116bb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e7cdd8-f4bd-476e-a8f0-c210b4e7392b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44014313-8912-4d79-b60f-e5db54425e7b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b9ce29-036a-4cf9-9dcb-63815068cd1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff044a3-7b09-4c4e-883f-32b532d62055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cccb2e-6f9e-46e0-bfd2-46a18ca4e6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4e215a-d2a8-4e83-953c-aa4cfefdd7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995c5370-efc4-4fb1-8883-162c1b6ed82f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83cf123-dec8-4b90-8b29-8e5bd7a5047d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee71e66e-76dc-43ea-9586-faa2782fff71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27afd3f0-d3e1-4168-8dd1-511394ecd5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1349283f-564b-4de9-95eb-c940b6ae73ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb84be6-639b-4872-89ab-49bf37e5f6c1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf8254b-c6e4-4d5e-be9f-2c2f4276cafa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8f203f2-da1d-459e-bced-d7e28d54725d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317526f0-80a5-4cd9-a8e2-912360397e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb69b3de-13ff-49cd-ac89-217659818df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88868a30-38bd-4520-b4e2-320667f884a3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db42edfc-2e73-4cf8-8041-d211a7de9a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c13dd51-2831-47fe-b7da-9f6226e01b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2517dcc5-335c-4498-83e4-8ae6191540e5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c05f1e-2c3a-456b-a9e2-efead9459301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0285066e-d301-445b-b37b-09625d1f88df",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef4ebc9-4e0e-4dac-bde6-7a177847b466",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "692f9801-f3ab-4864-85b1-6f21c45f1160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc58aba7-1c9c-4c65-a8b8-5e3ea842ef08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980391a4-cfc4-4d17-951c-5f8a7357f3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22aca4e-b899-41fd-a0bc-3d703e421622",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0ee450-23fd-4ee5-b189-fef27d06318c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a4217cc-21ce-4ea9-85d6-46bb947d127a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0b2052-ca19-4c52-8a2d-6662ee8c920f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77709c3b-e626-4852-bce2-864c4d99d593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d11ab9-208e-4670-82c0-2ce98cbc954f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec5b3ce-bf5d-406d-9460-88dfe4f06f62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0cc1757-df88-482e-a6be-b84eecf39bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347c8372-50c5-41d1-8329-718b5ea80146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eaf11b3-6f05-4491-9dae-9eb3c1682748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f56f2e-4872-4265-be1d-d3e53fbacfad",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269d8c3d-bbf6-4b85-adc4-8bcd809f3114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef06e947-c531-426e-946e-6c0264771933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b615f96-8a2a-41e0-bc4a-26669d5c695b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711cb934-cf2a-4d4b-8b75-7279801ec262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d20803-f791-4cad-a5d8-5091a015b685",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0003417a-c0a0-4f93-b82d-1ceb203dfaf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "319b609e-d025-427f-b53a-5be5c548da23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15b4337-2850-4d07-9155-8a12ccd4080b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fcf33cb-dba4-44aa-b479-e237465a16f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65c53bf-64e4-44df-95ea-5b4f0dd1b4ff",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bc2bec-2717-4898-8731-d8c91df7c95e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d3b1370-6d2a-492e-a715-3de3a0e8161b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79d5cc9-563b-4179-b04b-1e29fc09d947",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be727ae3-bf94-4475-a310-2d374300dcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7ceb2f-b56c-4f6e-9bff-ae8e8c92e7a9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc90ffd-ee21-4909-be45-710ca77c3098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43f55f6b-523b-42d4-bead-ec8b0015bfe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a5672a-9bea-4873-84b3-edbec31f8e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a594d2e-166a-4a44-a121-f08738b12222"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8afcdcbe-4de8-463e-87f8-3d15dd788da5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "483fb04a-2413-4cce-b294-b84856611832"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b9e3277-69f2-4ad4-991b-8aacd2230a8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c912052-63fa-499b-b039-b272d8badbd5"
                    }
                  }
                ]
              },
              {
                "id": "e864bf37-aebd-4c7c-a248-1109c0a11abe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c263ee78-35d3-4972-a777-41be24adc75d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3372d1b9-304d-41f0-b911-d4b035612359",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "86ac8a36-ce1e-4942-a518-6b940c7395a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33719655-4e2c-4d60-9e33-705a9137d2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d2ea9bd-d607-4cc2-82d2-fd07eadb9ef6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afd84cb8-5eb4-4669-9bd3-c2a838815313",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbfa09e6-5b9b-4607-8a4f-f12a49b85b17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30653311-71ec-4a53-916d-1e03ea11f384",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34cbf833-b082-49e0-a01e-7f2ac59a191c"
                    }
                  }
                ]
              },
              {
                "id": "8c71ae24-c92d-42c6-b50e-69db0d228f07",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "30df7ff9-9342-448a-8022-cc109ff6fd57",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da725545-21ae-40b8-9098-2c0c4b19a100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "798dd1ea-a492-4d56-9544-6d4cee3715ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfb5469-4966-45a6-8f82-94f00d66d2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a1d3fa-6fec-4e15-94aa-95b4646d7b34"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "27547c5e-f541-4580-b722-9d90fedc9882",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d970da94-1667-4576-b10d-96ace8afdc27",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e117e08c-829b-4c1d-b6c3-789096490606",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "204ea1cd-7269-412e-b08d-332fe73cfd66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96483c91-9f37-42b5-b7e5-cfe345cfb6fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "943c51b7-9b40-4de3-a4d9-c4f1e70d2640"
                    }
                  }
                ]
              },
              {
                "id": "6553825b-340d-4b47-accc-d1d2a1d9a3ec",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "093c5316-9ba5-43a2-9076-4998e86b2574",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "154da21c-2285-4bd9-b227-0cb32c0ec802"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91a8b2cc-0e16-4129-99d1-b994a241ffb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "606779b0-025d-44fd-828f-8a7a4a80315b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03cf9125-0fc9-481b-bce7-2cbed77a92bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2ad2ebe9-a12c-4452-ae18-96d9a70de40f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8daab60-dfd9-464b-94d5-6d053dc9af55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f022f27-7a03-4eb4-bc2f-122169c36dc1"
            }
          }
        ]
      },
      {
        "id": "456aab6d-4102-4df7-8503-7eb7ca017893",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4daa5021-4204-4d26-b76c-a34ecf485e77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24376f02-57ba-445c-b8b9-358732a8f8d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e59a4e9d-1127-41cc-8896-1fd8b18e750e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95db831f-1f47-4b39-87f5-bb33cd14539c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1c1ed707-aea1-495d-a3a9-1ee41b4300bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade1a6d0-99d4-43c3-8d24-3f74bea709a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73d88e19-c01c-4c98-9da0-c00aa804f42e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5df88118-98dc-499b-8002-b61b22301fd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc95f472-658b-4f53-9279-77d886cfc1ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e86b091-b2ff-4178-b3d9-39bf77f166cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8afaa6b2-31ec-4717-a9a5-a8b15bcec0d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbe4f5b2-e1f2-4264-83a5-652f995dde17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "82a8068a-4a47-49bb-aecd-5dabc797dab2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b22bdc93-df9e-4eb5-be36-57f093730630",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "334daec9-bf40-4ac5-8334-d7adcf311207"
            }
          }
        ]
      },
      {
        "id": "96286245-c726-4804-baff-581d97fe4269",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d4f935c3-48c6-48c9-9ab2-1ee49b9eda71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78e2c318-d6b7-4bc8-afe9-ecd72a3d4ab0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68ad9fb7-1a45-4908-af36-6980ecbe51f4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc63c51-d50e-44d1-b0c6-0e7d55dd423a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "206f84a1-4103-4be1-b368-2ec8d3bb0028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b69dc37-6dbe-44f2-87f1-67b90f0caa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60afcfb2-cd15-4f6b-b06e-634620500f19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b0a9add-6b3e-459b-bfdf-fb44614ea56b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5448143-e148-49bd-aeb3-751f3a4e7f8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79de6687-d422-4643-a1d5-46ebf8cbdb8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "838dc082-b7f5-41da-b5a7-fed085378df9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e934b0be-4ba4-47e9-863b-9e070e253dfc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b24c907-d3ea-4600-af0d-9ca8fce0c790"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d92e5e77-28a3-409e-9fce-0ccb871464ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fcfb3e3-b5af-4776-9cf8-242ff5f790ca"
            }
          }
        ]
      },
      {
        "id": "9c1c0ebb-1913-4d60-89dd-a42eb3485003",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "66873614-5ad5-4761-a012-e41ccf5a8cf1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0550505-0ba5-4175-a673-2f18aecedf7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6afebde1-a06e-429a-a978-f4268ce78716",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095f32c3-d1cd-4956-b6b5-3e486935fa45",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a0bd06f-126a-4bc3-8262-d40efc54201e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e7d69d-28fa-4ef2-bbfe-7d252d3888bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c019fe7-6643-48cb-ad34-ef396f61408e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "803e644a-9ca0-4d41-8b9e-1ab1edf73349",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11335fe6-dfcc-4cbf-a32a-d7270ed5a8a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eadac22-f96a-4f4b-ab7b-b3afdae9d92e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9027c16-2e04-41af-b015-5c2e04abd33e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5308106a-6a97-4745-aadf-1063bbd85d2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce7a7ff6-1f0b-4f0e-9d5a-f3edb8901ae8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5dd10d06-ff5c-4b0b-a280-59f8a0ca4047",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4def6aaf-f45a-4d6b-9a6b-2d30b74aefe4"
            }
          }
        ]
      },
      {
        "id": "4062032b-7420-42c7-a1e9-f77bbc639474",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f10c9d3-3761-4788-9cc6-dc3fdede7369",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e92e0e09-1210-4135-9621-c754b2e775b8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1286d822-88bb-4ba2-9e54-20457ac4f4d5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b32250f-4c77-4b46-8fd5-e71d1629d761",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05566e5c-6930-4a36-8148-ca7344768cc2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 701.1825396825396,
      "responseMin": 6,
      "responseMax": 25252,
      "responseSd": 3783.047619588749,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727138726971,
      "completed": 1727138912157
    },
    "executions": [
      {
        "id": "4a8bcff2-3f74-4b0d-8bb6-babba0f60525",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c409dcc4-10b5-4249-86df-c531362c2b67",
          "httpRequestId": "85e8839e-d27b-4f77-94e9-a5f785244dc3"
        },
        "item": {
          "id": "4a8bcff2-3f74-4b0d-8bb6-babba0f60525",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fb802c2f-7381-4d44-b2f1-5d07191cfde3",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "8944bcad-c812-4d8e-bd07-f8723e871175",
        "cursor": {
          "ref": "18a616b0-306a-48e1-b8dc-41d84757d6f6",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "53627481-3d2e-4b28-a47d-64d784481aaa"
        },
        "item": {
          "id": "8944bcad-c812-4d8e-bd07-f8723e871175",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "37f096b6-9daf-47da-a1cd-bec21fc82164",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "9c9231c8-3854-48b4-9226-13eeb9bdbfde",
        "cursor": {
          "ref": "4327e494-a83e-4b1c-a407-114574c6462a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "78e0f30e-c8ec-44b2-b413-29d4e7b2e897"
        },
        "item": {
          "id": "9c9231c8-3854-48b4-9226-13eeb9bdbfde",
          "name": "did_json"
        },
        "response": {
          "id": "c7f28c30-6053-4bd8-a435-8dbee4dee853",
          "status": "OK",
          "code": 200,
          "responseTime": 390,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64a8a0b-6192-46e9-8ad3-10fe3a7365c5",
        "cursor": {
          "ref": "d1efb649-8e1c-4541-be5e-e29a7f2a6bda",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "827c6254-54f7-4766-8c52-4e20025c8c49"
        },
        "item": {
          "id": "c64a8a0b-6192-46e9-8ad3-10fe3a7365c5",
          "name": "did:invalid"
        },
        "response": {
          "id": "7c624b4e-c5a3-405e-a57f-31a7659f772a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2320,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64a8a0b-6192-46e9-8ad3-10fe3a7365c5",
        "cursor": {
          "ref": "d1efb649-8e1c-4541-be5e-e29a7f2a6bda",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "827c6254-54f7-4766-8c52-4e20025c8c49"
        },
        "item": {
          "id": "c64a8a0b-6192-46e9-8ad3-10fe3a7365c5",
          "name": "did:invalid"
        },
        "response": {
          "id": "7c624b4e-c5a3-405e-a57f-31a7659f772a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2320,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4b3e23-391f-463f-b498-0b978f425b1f",
        "cursor": {
          "ref": "3de589d0-e5c4-4fca-b63e-1bfb25167b4c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2cd87c71-4b31-443d-9b78-41678c7a99c9"
        },
        "item": {
          "id": "ee4b3e23-391f-463f-b498-0b978f425b1f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "53aefa3c-e228-464f-aa89-6a55a34de031",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2637,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0c3826-209f-4deb-b19f-4c0695fcb917",
        "cursor": {
          "ref": "3210d5d1-df6c-47ae-a4a0-c2cad671e152",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "30e9ece7-8790-4051-9f17-1ffb67034408"
        },
        "item": {
          "id": "9d0c3826-209f-4deb-b19f-4c0695fcb917",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7864d353-3ee8-447d-8a5d-71738771d7a9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2389,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eb1073-68a9-49f0-bc64-8475b8494e28",
        "cursor": {
          "ref": "2178f1cf-b10d-4cd4-989f-0c5c572061b6",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "95e6e298-f9af-43e1-8d72-fcf2c4326d49"
        },
        "item": {
          "id": "05eb1073-68a9-49f0-bc64-8475b8494e28",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a6d2ff96-d50a-4abb-9138-ca5fd03d7b23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b668ec-ffe3-419d-bb82-51546436d1a9",
        "cursor": {
          "ref": "bd69f736-4d82-45b8-91d2-cb1d07cdea98",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "636a08fe-185c-4b0f-aca5-237e9490748c"
        },
        "item": {
          "id": "02b668ec-ffe3-419d-bb82-51546436d1a9",
          "name": "identifiers"
        },
        "response": {
          "id": "2f40465d-597d-41d4-bd7d-0359d3b0acdb",
          "status": "OK",
          "code": 200,
          "responseTime": 2544,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b073b45f-c12e-40fd-a1cb-83297db0b775",
        "cursor": {
          "ref": "86faeb69-1d09-435c-a0b0-236a7bd2955d",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cf137301-e980-49a0-a7f9-83092425615c"
        },
        "item": {
          "id": "b073b45f-c12e-40fd-a1cb-83297db0b775",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "43a391b2-f8eb-445c-9c89-9288fdb538a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0372e9-21f4-4a7a-a5f9-d2cb7b743f18",
        "cursor": {
          "ref": "72974886-4d86-48ee-95ec-3e4794ae5954",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d1ee2146-aa09-46db-bb5b-5bb0f9c85511"
        },
        "item": {
          "id": "5a0372e9-21f4-4a7a-a5f9-d2cb7b743f18",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a68d500b-4e89-49e6-8dc1-e99090918c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1806ee-9b05-4578-9a80-61944721e2a2",
        "cursor": {
          "ref": "6b1547e3-d8b4-4f46-b414-dfa03175dc3c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e941b06c-fe5b-4367-b5a5-e090ac64252e"
        },
        "item": {
          "id": "ec1806ee-9b05-4578-9a80-61944721e2a2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bdcd8603-2eef-4234-bd49-28fa550e6c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b5bea7-46f1-42e7-a60c-7557ad99216c",
        "cursor": {
          "ref": "81cb3aa3-5426-4766-b63d-495a9d4b5bf2",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "37f7faa8-b710-4662-a3e8-e944f703c537"
        },
        "item": {
          "id": "03b5bea7-46f1-42e7-a60c-7557ad99216c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "44c309f4-4180-459d-861c-a3a8dde1b680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e045385-d3e6-4ddc-9977-cb19b037cdb6",
        "cursor": {
          "ref": "d29ea607-8c48-42cc-bf1c-e2f9fcbaf8f4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e6f16927-6303-4365-824a-8ddd5c73d554"
        },
        "item": {
          "id": "6e045385-d3e6-4ddc-9977-cb19b037cdb6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9bb0a816-386a-418c-b821-859c33fe260f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7b4151-2cc8-45c5-a8ca-d323120ae65c",
        "cursor": {
          "ref": "53fb42c7-4495-4392-894d-79a632aa113c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ad361029-9409-45f9-9d29-84ca51a5d9da"
        },
        "item": {
          "id": "bc7b4151-2cc8-45c5-a8ca-d323120ae65c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "20f77cdc-947b-4703-a838-9223f9678bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebc2cd9-8faf-43ec-b2e8-0f114c68fa1d",
        "cursor": {
          "ref": "cb5842fe-5074-483d-a8f5-b0cab3535ba4",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "37eacbe3-5b6a-495a-9301-6958addc1ed1"
        },
        "item": {
          "id": "8ebc2cd9-8faf-43ec-b2e8-0f114c68fa1d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7a1dc572-7115-49e6-a252-5cc4de4850e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f250d97-0549-4cca-b429-d336b190e906",
        "cursor": {
          "ref": "c32495d6-2584-4651-9aca-0335f950b921",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b1a75aeb-0fba-4b87-9141-5697fe0dc0a1"
        },
        "item": {
          "id": "7f250d97-0549-4cca-b429-d336b190e906",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "07ae6641-7a4a-44c2-8e90-86e243754582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a848c8-65c1-4f4d-b6cf-cf090aacbe15",
        "cursor": {
          "ref": "fd3c1b60-05af-40b7-ad44-bae93bb005cc",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "30320c26-6c26-4b3d-9c3a-90d14baf68da"
        },
        "item": {
          "id": "e5a848c8-65c1-4f4d-b6cf-cf090aacbe15",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3bf4e0c9-a2bc-4732-ab4c-67d857c875e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ad6c01-a6e1-47bf-a6c5-bfcb02fecef8",
        "cursor": {
          "ref": "969c8987-9368-4425-bf3a-5881ea3a1ff4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dc3fecb9-d1c1-44a3-84a3-bb97e0f9064b"
        },
        "item": {
          "id": "72ad6c01-a6e1-47bf-a6c5-bfcb02fecef8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ffb6e7a9-8684-4909-8466-80b1229e7a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938adb47-1c81-4cbb-8c5b-778aa29136f3",
        "cursor": {
          "ref": "79123e98-b1fc-405c-94fd-0ffc2e881b1f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2f396072-43b3-4632-9bcf-985e67c443cd"
        },
        "item": {
          "id": "938adb47-1c81-4cbb-8c5b-778aa29136f3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5c4b88a9-1404-476f-b74f-265c4ac123f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e54e278-6ed5-4785-84d7-b8aa6a734b1b",
        "cursor": {
          "ref": "1e8133b5-a910-4ebf-81e9-7248f032bf3c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3e4fc60b-1fcd-4298-b6f9-fe8e5e38fa6d"
        },
        "item": {
          "id": "2e54e278-6ed5-4785-84d7-b8aa6a734b1b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ed28225c-0d16-49ae-8126-bc32fa216d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fb8e43-fa0d-4821-8828-bd2b91b834bc",
        "cursor": {
          "ref": "51fbe4f0-b05d-4d79-803b-b20ac4da682e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3648f639-165f-43af-b296-b3599028d2b4"
        },
        "item": {
          "id": "31fb8e43-fa0d-4821-8828-bd2b91b834bc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fac21dc2-f7b9-4c9d-b8a3-283395291204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3d7378-da17-4af0-8933-e779eecaf855",
        "cursor": {
          "ref": "20333eaa-06f6-461a-9eb4-d18ccafe7a0b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "77882d75-3c2a-415b-be7a-896b8bbddcb6"
        },
        "item": {
          "id": "fe3d7378-da17-4af0-8933-e779eecaf855",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7846e831-d80e-46ee-ae02-565d30317d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1038d977-0598-4c00-9db2-3a8968044d12",
        "cursor": {
          "ref": "88ecd3d2-df0f-4534-983b-79d375ded1a6",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f55455c7-6b06-4ab6-92e5-4fde44165529"
        },
        "item": {
          "id": "1038d977-0598-4c00-9db2-3a8968044d12",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "81354874-0350-46a2-a090-1967545e2f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80de494e-8c43-4956-a719-3249a9baff45",
        "cursor": {
          "ref": "057ecb04-a7a5-4b55-b201-a023723c57b9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a162a936-d854-4b24-b72b-27c7bb28b22d"
        },
        "item": {
          "id": "80de494e-8c43-4956-a719-3249a9baff45",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "759e145a-1998-4964-afbd-9adc6c6dd1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36698594-3dd0-423d-916f-3d7561b2806f",
        "cursor": {
          "ref": "2bd24419-92b6-41b2-bf5a-8957f242eebf",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "151766a8-e7cb-41be-8790-83a15d54959c"
        },
        "item": {
          "id": "36698594-3dd0-423d-916f-3d7561b2806f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d259b2c8-7c47-4a50-a5d6-8b025220ea4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad5002b-d0fd-476d-8a40-112328061429",
        "cursor": {
          "ref": "1d130c08-c7fc-4d99-a803-c38d11999734",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bb62fd71-94ab-4d32-8667-6c4347d31567"
        },
        "item": {
          "id": "2ad5002b-d0fd-476d-8a40-112328061429",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ccb87402-80ba-44f0-b11b-20310eb31e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1acbf04-83fa-4a62-94e0-c70a5ef99953",
        "cursor": {
          "ref": "9377ee59-6062-4333-a3a8-0c13df6aca5e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "482b12fb-f90d-4733-a19b-bdffae5914e5"
        },
        "item": {
          "id": "b1acbf04-83fa-4a62-94e0-c70a5ef99953",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3169b02a-68eb-4ed1-abd5-c3b2526fc75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585351ce-4324-4655-b1b3-2c762b2422cc",
        "cursor": {
          "ref": "c106e673-789b-49d9-91e7-f8ab60174e75",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9dc5a41e-3e02-483a-92a9-9eee4f18c231"
        },
        "item": {
          "id": "585351ce-4324-4655-b1b3-2c762b2422cc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ec444c4d-8f01-47a1-9bb6-5d648c93b8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7a2159-5273-471f-bf29-b7f678f169a5",
        "cursor": {
          "ref": "208380d2-9359-4b75-be36-701544e11b9f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d2e4f580-9323-431f-b24e-9083e1ebaedd"
        },
        "item": {
          "id": "9e7a2159-5273-471f-bf29-b7f678f169a5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "eb5df84d-1591-409d-b4d7-c6bc336eac2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e639a9-c97c-4668-8293-02a40ab6a012",
        "cursor": {
          "ref": "8c49e405-fe1c-465f-ba89-e7e0553e5427",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ff4a7a44-51a4-44be-bc94-d7e50a08ac04"
        },
        "item": {
          "id": "c9e639a9-c97c-4668-8293-02a40ab6a012",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "aca7856a-8ec0-4c93-bca4-45a2cfb8cb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72311a82-2bb4-4399-8d87-ed35ef6db637",
        "cursor": {
          "ref": "a41b46be-f4a0-4339-8305-d1a34ba69b08",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f119e3c8-f163-4b1d-9632-a7eac3200262"
        },
        "item": {
          "id": "72311a82-2bb4-4399-8d87-ed35ef6db637",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "08e952d5-c11c-4deb-9b18-c0cdad529487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4712f31-5fa3-47fd-b9df-5c8b3e840fd9",
        "cursor": {
          "ref": "eb2c8b29-d075-45ec-b021-2a6169f6efb1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "02d0f1e4-bd6b-4feb-825a-593b66bc5003"
        },
        "item": {
          "id": "d4712f31-5fa3-47fd-b9df-5c8b3e840fd9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dfbee0a5-eabf-4e74-8630-e1ab42530610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2073311e-1df7-43d2-bb3e-d23aa92cf05d",
        "cursor": {
          "ref": "73233b16-5f86-47fa-940d-5a0dee797179",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dbdd5527-96e4-4a5d-8a97-02ee604a0362"
        },
        "item": {
          "id": "2073311e-1df7-43d2-bb3e-d23aa92cf05d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9d54ce57-ae81-47f5-b701-e7b02ee923e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c9671f-883a-4605-bb93-363eafe72e19",
        "cursor": {
          "ref": "f6044736-71ce-45b9-835b-049a9a7747e9",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6361b7e0-1516-4a09-adf9-ec263d5a31c3"
        },
        "item": {
          "id": "d9c9671f-883a-4605-bb93-363eafe72e19",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4a017612-5c4b-43c1-b4b9-5477e0cb9125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39687b9-1848-48cb-8f22-7730ac013ab4",
        "cursor": {
          "ref": "c6d0e17b-f1a2-4e0a-b86a-a6d8f5825f5c",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f71a999d-d0a0-4804-bb4e-72eb37b199dd"
        },
        "item": {
          "id": "d39687b9-1848-48cb-8f22-7730ac013ab4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7691de42-666a-42f2-a3ca-4c2106f052e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc35772b-b0d8-4696-bea0-7c3480fee684",
        "cursor": {
          "ref": "f23ccc51-9b4f-4680-8197-fcaa3f7d2d14",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "70bab6b0-dab7-4dbe-8668-13b0c93435c6"
        },
        "item": {
          "id": "fc35772b-b0d8-4696-bea0-7c3480fee684",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fb793dfe-83ac-4855-a6ec-cb55d2b1d3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4e3e43-05c3-41a9-8b42-df70bf599574",
        "cursor": {
          "ref": "702c2489-0dfc-41e4-85fd-484f921d65c5",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7700d8ee-83df-495a-a6a3-989c4619661e"
        },
        "item": {
          "id": "2b4e3e43-05c3-41a9-8b42-df70bf599574",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "77b9a518-3340-4c8a-b481-1b5a5b8126d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cfa659-5fb2-4192-9fdc-c4dfbb7fd195",
        "cursor": {
          "ref": "295338f0-66c7-4e64-bcf2-238f1031627f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0a5145f3-396c-48dd-b469-4a837a6eee7e"
        },
        "item": {
          "id": "18cfa659-5fb2-4192-9fdc-c4dfbb7fd195",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c5fcb147-3f52-4071-8bbe-335d556ffa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21dcf1bd-5d54-447a-8cec-022eaa5ff73a",
        "cursor": {
          "ref": "6642655d-66fc-46a0-93b4-713ce3ccd073",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0a05a1aa-e474-48ae-8c8d-394f8632123b"
        },
        "item": {
          "id": "21dcf1bd-5d54-447a-8cec-022eaa5ff73a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3c0d2020-71d6-49d7-b3c4-40f717b37d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee809067-9451-4538-8726-fe90f639973b",
        "cursor": {
          "ref": "435a4fee-d6eb-421f-aaa5-3f6639b9f2d9",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "294e8f76-2856-4e0f-bbfe-af6f8f56b759"
        },
        "item": {
          "id": "ee809067-9451-4538-8726-fe90f639973b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b880b767-f881-4c7f-96d7-130ced792221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb5a95d-8134-4f50-95a4-5fad8bd11a82",
        "cursor": {
          "ref": "36d5ec23-57f1-4251-8ee9-adf0269eaaad",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "661dd322-a813-41ca-a609-622368558a33"
        },
        "item": {
          "id": "9bb5a95d-8134-4f50-95a4-5fad8bd11a82",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "363a8181-9863-4518-abe3-89097b631e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9434c719-a283-41d7-8bc3-89d78f409e7f",
        "cursor": {
          "ref": "5c0a69a7-7ed5-463e-b76d-08561946e97a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3cda63cd-52f1-4409-9664-9c12539e6bf2"
        },
        "item": {
          "id": "9434c719-a283-41d7-8bc3-89d78f409e7f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "62602fb5-2d58-494c-b823-1b112040307b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95687d5-0ef1-45a2-b8ed-b882a5e2cb12",
        "cursor": {
          "ref": "23d93ac0-9b3a-4486-919c-abf3b9cc390b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2a7475ea-845b-4ab4-8bb6-26f989dc9941"
        },
        "item": {
          "id": "b95687d5-0ef1-45a2-b8ed-b882a5e2cb12",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "82378cba-beea-43e5-bade-c1e9c598030d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e415f9-9b10-4a06-8190-95f30f4f7a05",
        "cursor": {
          "ref": "1d8fbe95-9a32-4fd9-84e3-3158922b790e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7e4ac171-0122-41e9-ab67-96787d148d7e"
        },
        "item": {
          "id": "64e415f9-9b10-4a06-8190-95f30f4f7a05",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d54fbadc-e37f-4398-aa6a-00cc41cabdeb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 35,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3b904a-c553-4235-bc78-a98c1cba4407",
        "cursor": {
          "ref": "d9499ad7-34c1-42f9-bed2-e711e54e7723",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c1c8d695-049d-48fb-b53c-9a0773fd84a0"
        },
        "item": {
          "id": "6e3b904a-c553-4235-bc78-a98c1cba4407",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d277d939-c580-4a6c-a639-f0311029d7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540cbb3d-a44d-4786-ac5c-a9d57e384108",
        "cursor": {
          "ref": "d1dcd35e-681e-4bdf-9676-b968a5f10429",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f85c4268-cb11-4a5c-aad4-da1afdd955d0"
        },
        "item": {
          "id": "540cbb3d-a44d-4786-ac5c-a9d57e384108",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cf61b41a-6807-4bb7-bed6-78597d77e42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f73557b-acd2-4fe4-ace1-4afe98be50e9",
        "cursor": {
          "ref": "4ee7da8f-1271-4fd3-ab24-b0b8b0c2d181",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9d2dfe48-e0a5-4ad7-b3ea-3d286d987154"
        },
        "item": {
          "id": "2f73557b-acd2-4fe4-ace1-4afe98be50e9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "93bc33f4-2fd8-4e70-ae5a-16d7e6987438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ecbc94-b607-4fb4-846e-67e4ff2bc289",
        "cursor": {
          "ref": "8f17543b-cd26-4943-be91-ad58162deebe",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "10223b07-08aa-4a22-a06d-76cc4c94eb4e"
        },
        "item": {
          "id": "e0ecbc94-b607-4fb4-846e-67e4ff2bc289",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "74f593e3-5f5e-43c3-ad3f-75eb15d8d256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844be9ba-d1fc-499a-a729-5f6d7405a0c6",
        "cursor": {
          "ref": "474b49c4-1f2c-4edb-8cd4-ecc314449d65",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cc231dd0-77b3-4c73-a750-648c4d8f5184"
        },
        "item": {
          "id": "844be9ba-d1fc-499a-a729-5f6d7405a0c6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fd18894c-9cc3-41ad-bf40-2c4da2a4d900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbe5f70-2458-42af-a8c1-4bd0a626171b",
        "cursor": {
          "ref": "73de2948-b30d-4e80-8ff8-3957b65fb8cd",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c47e1627-afbc-4946-ace9-dce3d01560f9"
        },
        "item": {
          "id": "7fbe5f70-2458-42af-a8c1-4bd0a626171b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e925577d-3932-4f12-b00d-5fa73aff8b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75ba498-782b-48e3-b7bf-9aa3b0f68870",
        "cursor": {
          "ref": "3f819833-669b-4d92-8479-b1863e92a0a2",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1222a2a0-7a5c-4668-9874-f1ccd07856be"
        },
        "item": {
          "id": "d75ba498-782b-48e3-b7bf-9aa3b0f68870",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ba85994a-628e-41c6-b178-55595e81d23f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9a3eae-6eba-4a86-8487-b09b3428704e",
        "cursor": {
          "ref": "72221f23-d5b5-4fb5-b9f0-abae3f69d08f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c353d1be-2c14-46f2-91c3-99eabe1d0c3e"
        },
        "item": {
          "id": "0e9a3eae-6eba-4a86-8487-b09b3428704e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3c8236bc-d2a4-450e-9fdc-3fe748fc4706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506af60a-444b-4e82-9fab-afee9459cbc2",
        "cursor": {
          "ref": "13302fad-9bca-4310-88a8-f0fde5324748",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5666611b-6743-4143-8188-efa81a3f106d"
        },
        "item": {
          "id": "506af60a-444b-4e82-9fab-afee9459cbc2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "157bb5cd-d32c-47cb-b9f0-547cbd92c12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83914772-7554-464a-86d3-784bddae38ab",
        "cursor": {
          "ref": "f3c9d1c2-c7f9-423a-96c6-26ae1230c0d2",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f7edb095-a80e-401e-b261-034b4560d43b"
        },
        "item": {
          "id": "83914772-7554-464a-86d3-784bddae38ab",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9a01a8c8-5a16-4993-8e4c-93b181476599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab4a711-8505-4103-b0c0-3431ce2fc6eb",
        "cursor": {
          "ref": "037265c1-ed84-47c1-9415-15bc399fd7b3",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ed2bad9d-e5dd-4d3a-b78a-4e651d1fa27b"
        },
        "item": {
          "id": "bab4a711-8505-4103-b0c0-3431ce2fc6eb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a8840553-3a69-43bc-87fd-62cb18e4d0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3b3680-7979-4ddc-b0cc-e1c6a99ac3e4",
        "cursor": {
          "ref": "5462c000-d470-4758-8db3-42e13535ba78",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e0ebfeff-ad01-4e4a-8b46-06227928ec0e"
        },
        "item": {
          "id": "8c3b3680-7979-4ddc-b0cc-e1c6a99ac3e4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "31d9def2-5d05-4272-a55f-0103c3fcd36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ddc720-9d0a-4453-bfd2-4dc2027f0d82",
        "cursor": {
          "ref": "f559059e-aeb5-456f-abba-c852c9720dbd",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "36f2d015-d2da-4987-8c97-f0f1d83cc38f"
        },
        "item": {
          "id": "a9ddc720-9d0a-4453-bfd2-4dc2027f0d82",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "94e9ac20-c4e6-408a-83f0-32d84f6bbed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557d9171-b849-459e-9544-b214f3a8c3d5",
        "cursor": {
          "ref": "bf83540b-98d6-4e61-af70-29ca9a3390bc",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3245c076-c3df-4384-becb-8efda2ee6f15"
        },
        "item": {
          "id": "557d9171-b849-459e-9544-b214f3a8c3d5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c39a7565-cc4d-4457-ae22-783fb0522aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eff365d-bad9-4937-93c6-fff07e0a8802",
        "cursor": {
          "ref": "32ae43dd-902d-4e05-901f-0c8c78db7b39",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4160adb0-77f8-4aa2-9106-db3c46187ae8"
        },
        "item": {
          "id": "0eff365d-bad9-4937-93c6-fff07e0a8802",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8e2516f0-b487-444b-8ef8-3d76d1c12859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729c4484-a554-411c-bebb-22078241e4f8",
        "cursor": {
          "ref": "6faa6bed-2e07-42d9-82e1-537924c68a9c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "94af7420-3123-4ef2-9662-8eec0df0e351"
        },
        "item": {
          "id": "729c4484-a554-411c-bebb-22078241e4f8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "032b9c48-1ec6-4e7f-8b43-b9cd97e8fbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b210e70e-fbea-416e-862e-2b6be1d77812",
        "cursor": {
          "ref": "3916ab9d-d05f-4049-a23a-57a86802d4d7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8a70ffe3-988e-4f30-9040-557f694bc42d"
        },
        "item": {
          "id": "b210e70e-fbea-416e-862e-2b6be1d77812",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3f53e603-effb-4957-a06a-b7064363562e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3b51dd-9a3b-46c1-b3f5-0d926b2099c5",
        "cursor": {
          "ref": "08e8981e-7022-4f0e-8189-171318ca371e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "56f3891c-986d-44b4-ad59-18cc5e536567"
        },
        "item": {
          "id": "dc3b51dd-9a3b-46c1-b3f5-0d926b2099c5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "10c43c9d-e1eb-4057-9632-e491d3afc5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8b773e-f0ae-4de6-8abf-b793ac9ca2c9",
        "cursor": {
          "ref": "19c9c977-7df0-4c51-93cd-0a8a4d758ce3",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cf23e618-e93e-4913-8aca-4a6cfabd30a7"
        },
        "item": {
          "id": "4b8b773e-f0ae-4de6-8abf-b793ac9ca2c9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9c055536-3141-4887-8c28-d19193d9a901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7377ce6d-e92d-4f4a-a57d-95dba101c1d0",
        "cursor": {
          "ref": "f269682d-f949-42e4-bfa1-7433a9e0a794",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e82a2f9d-a0c3-410c-802b-a7a995f631b7"
        },
        "item": {
          "id": "7377ce6d-e92d-4f4a-a57d-95dba101c1d0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "164a992a-6d40-4a0d-bfbf-d6c5ddf728e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2252538c-653b-439b-bc65-e86db6732e4d",
        "cursor": {
          "ref": "1add0aae-5ba6-4fa1-a6ff-2f4a0562f653",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "baace556-0331-4502-b7ed-0ab255827033"
        },
        "item": {
          "id": "2252538c-653b-439b-bc65-e86db6732e4d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "889bd30d-883c-445d-9e8c-2b59e4f99663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524ab1c2-eac0-4abb-9aa8-e88d8fae80fc",
        "cursor": {
          "ref": "1460f871-3514-44c3-843d-9fa9f527806c",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ab955b51-a852-44f2-bd3f-84ed338dfd05"
        },
        "item": {
          "id": "524ab1c2-eac0-4abb-9aa8-e88d8fae80fc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "359c216e-3461-4108-9e24-589c8e6fe249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a981908d-76e0-4ce6-ae92-6db735441d77",
        "cursor": {
          "ref": "616c1ec9-14c0-4345-8feb-aa6e32c7969e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9cca014e-6ed0-4721-9b15-23884a427243"
        },
        "item": {
          "id": "a981908d-76e0-4ce6-ae92-6db735441d77",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9ea3d01b-2d9d-4eae-80c5-fc29704f7feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053e2223-4333-4ea0-980b-dc3d94e03cae",
        "cursor": {
          "ref": "4d7f6cda-ceac-4730-ac5a-ea2cbf25c7ae",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7b87182f-b3f6-4494-9824-bece04abad46"
        },
        "item": {
          "id": "053e2223-4333-4ea0-980b-dc3d94e03cae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0b991adb-295c-45aa-9726-39b14834bb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463c2570-9156-4959-9b41-3db6038789dd",
        "cursor": {
          "ref": "296272da-07a1-4e6a-af85-42c122308f65",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3dc0f0f4-4b7d-4022-b50a-9fed2cafb97e"
        },
        "item": {
          "id": "463c2570-9156-4959-9b41-3db6038789dd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6fd0133e-643f-4a23-822b-90298bad2337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5756f532-bd96-40c0-9822-9f1d80a758c5",
        "cursor": {
          "ref": "e3d9fe77-ef81-4f79-a8eb-391a906879cb",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5d4a7153-ae41-454d-93fc-c0a31fd1a5b5"
        },
        "item": {
          "id": "5756f532-bd96-40c0-9822-9f1d80a758c5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2e818905-3806-43b2-9e30-a6688003f3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0640d4a9-a8c4-4565-ab21-f43c2bfd1b19",
        "cursor": {
          "ref": "05c348f8-c8c7-4b21-8b62-bdb0da20a560",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "66da86a7-f268-4fd8-984b-452caaed849b"
        },
        "item": {
          "id": "0640d4a9-a8c4-4565-ab21-f43c2bfd1b19",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dbe946a4-9591-4682-a21d-182aea6b72f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2eb9c7e-98b5-4f29-a2cc-fef8e8543a5b",
        "cursor": {
          "ref": "2cadc4aa-f07d-42a0-b295-ba9e8ea2deac",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5afa0ab7-81ed-4364-9fff-bbbc1efac32e"
        },
        "item": {
          "id": "e2eb9c7e-98b5-4f29-a2cc-fef8e8543a5b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "123c606e-6420-4a66-a98e-16c4d7c8bf60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c68a63d-8122-40d3-bbed-80382727fc55",
        "cursor": {
          "ref": "5e036d84-db5c-4fbc-8d26-4bca497bd96c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "120d99a6-cdbe-403b-90be-09654fd5feb0"
        },
        "item": {
          "id": "4c68a63d-8122-40d3-bbed-80382727fc55",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "04f83e92-ec62-4209-9483-abecc032344e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495944a4-60c7-4fb8-b911-ad70eff62f83",
        "cursor": {
          "ref": "4716e14c-f73c-4e6a-8ac7-6d8d334b78c5",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "affb357e-8cd4-46f6-bc79-0f274b9b1219"
        },
        "item": {
          "id": "495944a4-60c7-4fb8-b911-ad70eff62f83",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "80336a75-9ae5-4fa8-8f4f-cbe17668adca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c7ff3d-b215-4155-977f-b8f3dc756b9c",
        "cursor": {
          "ref": "99613ee5-a4cb-47c4-9152-f49aa3b115ad",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e4e2a53d-b2ec-4ee2-b198-2103aba8a8d8"
        },
        "item": {
          "id": "a1c7ff3d-b215-4155-977f-b8f3dc756b9c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4d600909-4d6b-4449-bd41-a913646c2bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4aa86e8-697f-4900-992f-049d00a5e6d5",
        "cursor": {
          "ref": "92c24903-397e-4e75-9c72-317b3006c3cf",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "85aac6e2-915e-4a0d-837a-825b1579d028"
        },
        "item": {
          "id": "b4aa86e8-697f-4900-992f-049d00a5e6d5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ee45c962-6e01-43fe-8590-2c30779442b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0b2560-9c3d-4f59-97ce-8c9834c795e8",
        "cursor": {
          "ref": "7f2839a5-489e-4130-b74f-16955e332141",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4c5cf0c3-9d95-44f3-a43e-a0cf4b067470"
        },
        "item": {
          "id": "7c0b2560-9c3d-4f59-97ce-8c9834c795e8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6d2a71c8-7ca4-4fb8-8214-450f3fa5fee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8cbeda-10a0-47fc-b906-fc6bd3abcb73",
        "cursor": {
          "ref": "e57b9b11-5ae8-40ed-8f62-fea73e70070a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "81b07c1c-9efd-4c6c-b886-ce6deb55f471"
        },
        "item": {
          "id": "2b8cbeda-10a0-47fc-b906-fc6bd3abcb73",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1752e8c8-c227-4d18-8676-c49cdeda99f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59295941-e55d-4e6b-8a33-315fe2843596",
        "cursor": {
          "ref": "3d430833-411b-4237-9857-09ef01b1ad79",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "96b0aae4-2b97-418b-bf6b-f4901f2ced84"
        },
        "item": {
          "id": "59295941-e55d-4e6b-8a33-315fe2843596",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ba06a35e-7de4-441d-b7d6-0dbc37b64ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5bcb8d-4f70-4032-83d8-e234f7b1dd58",
        "cursor": {
          "ref": "fca48f57-120f-46cd-af2a-590581af9fda",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a5cdcd63-5adb-47bf-afd5-c794d734dab2"
        },
        "item": {
          "id": "cb5bcb8d-4f70-4032-83d8-e234f7b1dd58",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e8f147ac-fce9-4b28-8c7a-7cedced975d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac6f6ba-b7c1-488e-8d13-ce7b03bea9ea",
        "cursor": {
          "ref": "82f181fd-6993-4ae4-a4f2-07ff743a27b3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6d603047-67a0-449f-93d4-6ff5c8148303"
        },
        "item": {
          "id": "7ac6f6ba-b7c1-488e-8d13-ce7b03bea9ea",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c5a75ea6-2bf4-42da-8351-4bff2ac785c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eea94e7-ae94-4408-a333-0c22538afca7",
        "cursor": {
          "ref": "1ec256f8-4f18-4a98-b040-c621f333461b",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f55b178a-1c74-49ae-83b5-4b764d96c8d4"
        },
        "item": {
          "id": "3eea94e7-ae94-4408-a333-0c22538afca7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6857b85e-5790-45f1-bae4-de4b4ebdd5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d512119-b2c1-46eb-9195-bbabae4278a3",
        "cursor": {
          "ref": "c87b174b-0930-47f0-8ef5-cc2d86a3c027",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0b8b7e44-7521-488a-ae09-7c61804d756a"
        },
        "item": {
          "id": "9d512119-b2c1-46eb-9195-bbabae4278a3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8bc2ff1d-4770-4f9e-9665-56e07a2e4cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ef8eb6-d391-4010-a09e-16879698f62d",
        "cursor": {
          "ref": "2494fc5b-9364-43a6-9e8e-abbcfaf14f89",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cfbcf6b9-1e71-4627-876b-1f4f9fc2c82c"
        },
        "item": {
          "id": "23ef8eb6-d391-4010-a09e-16879698f62d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c33e942f-e0d1-40b5-9b3b-e3400cf5719c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe247aa9-54ef-4922-9518-4ca4b7f7bc1b",
        "cursor": {
          "ref": "14b1cca5-9f5f-4c75-b72b-3244cdada8c4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "93831dc5-450f-4d40-a497-41d1253a18f8"
        },
        "item": {
          "id": "fe247aa9-54ef-4922-9518-4ca4b7f7bc1b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f9af724c-adcc-4d2c-90a0-43884dd0d746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4bf02c-7c7f-476c-bda5-ffcba1095320",
        "cursor": {
          "ref": "5a83d600-3858-4bfb-ad8e-09869144f7da",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e83cb7df-4c4f-479a-b3fa-16b497350914"
        },
        "item": {
          "id": "fc4bf02c-7c7f-476c-bda5-ffcba1095320",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "49272bda-e85f-4a2c-a486-89734d1ea043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94ad554-e885-4a5d-b658-94d3378a5e23",
        "cursor": {
          "ref": "009890ac-9566-4ddf-abdb-7c7b4d3c214b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2f8ff5dc-d541-49ea-97b1-9339d2a55952"
        },
        "item": {
          "id": "a94ad554-e885-4a5d-b658-94d3378a5e23",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d5d19e36-e1dd-402d-9a4b-efff46357394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d573bbda-5663-400b-a6a2-5c5d1ea7bddd",
        "cursor": {
          "ref": "17318ff7-c70d-41d4-8402-3630b6244ebe",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6947ced4-df65-4bc3-833e-0ebf6aeed0e6"
        },
        "item": {
          "id": "d573bbda-5663-400b-a6a2-5c5d1ea7bddd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5f603b59-3052-4105-9d46-139010a105e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d570aea-3af3-401b-8795-b1d38587a9c1",
        "cursor": {
          "ref": "dd923cf0-9565-4a1a-a0a4-24254fe24d41",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a34c2dd6-8bef-4e6c-b20f-c6c5bf2a9648"
        },
        "item": {
          "id": "2d570aea-3af3-401b-8795-b1d38587a9c1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "868fbe92-f438-4223-a39c-9b9212766e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f94478b-3628-41a0-995b-6860b4ab2124",
        "cursor": {
          "ref": "ceb672aa-0976-44a9-a306-b2b8439019d3",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "448795e4-ccd4-4bac-b1e1-cfb073b6eff8"
        },
        "item": {
          "id": "6f94478b-3628-41a0-995b-6860b4ab2124",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "eb9319ad-13d5-4c0f-9428-1ba3a4e201df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ffbadd-6127-40b9-a22d-f4f665a91d79",
        "cursor": {
          "ref": "17338d02-8909-4e12-bcc1-41b72586632f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6823ee29-9161-4236-ad57-5e181a218108"
        },
        "item": {
          "id": "07ffbadd-6127-40b9-a22d-f4f665a91d79",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "08c2fa70-514f-468b-8d15-f581cd73d417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd202000-7b21-4788-92b4-a372b1dea1af",
        "cursor": {
          "ref": "a5284f09-244b-4738-afed-7c5975577195",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6afa9e9c-a5c7-4271-918d-19aac027bf9e"
        },
        "item": {
          "id": "fd202000-7b21-4788-92b4-a372b1dea1af",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "40d0d9b5-1261-4b58-87a9-531a8fe6f49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f52ae73-2aca-4ec7-8b5e-a0b794a60c1f",
        "cursor": {
          "ref": "202ba6f9-40b6-4cf6-bde3-835b302920d6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f369029e-c29b-4ee0-8670-d6d5c185c9c6"
        },
        "item": {
          "id": "4f52ae73-2aca-4ec7-8b5e-a0b794a60c1f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2374b8cd-2717-43fb-89fc-9d6808de251d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80ff416-bd81-405b-885e-f64614d4f486",
        "cursor": {
          "ref": "4d91ae2a-f4e9-405e-a813-a59a3ad27655",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e47bd055-23bc-4df4-83a9-1a60a27e1052"
        },
        "item": {
          "id": "f80ff416-bd81-405b-885e-f64614d4f486",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d7f0cbae-c0af-46f6-b654-65e2967079b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4c3b42-7902-4cf1-ac0a-c9c3d276dbe3",
        "cursor": {
          "ref": "c686105b-f636-474d-a4f3-6fd8da18e039",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "491abc71-2d31-4d2e-91f2-42e68de0eb68"
        },
        "item": {
          "id": "9b4c3b42-7902-4cf1-ac0a-c9c3d276dbe3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6f9c0f12-5cbb-4882-b739-5e04981f87d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b2ee3b-bac8-421d-b742-8ddc83ba94aa",
        "cursor": {
          "ref": "de077011-13ee-4edb-945a-11019bd26747",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "21619a2d-4b08-4728-b9b4-fbd57e6bb8b5"
        },
        "item": {
          "id": "23b2ee3b-bac8-421d-b742-8ddc83ba94aa",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "821ebd8a-0317-4048-85ca-62c34ac657e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ebc551-a083-47ff-801f-983d677d587b",
        "cursor": {
          "ref": "4185444b-f765-4b0e-878c-3416fdf7197d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "976a4923-93e0-45de-99be-9d4a0c27e91a"
        },
        "item": {
          "id": "d7ebc551-a083-47ff-801f-983d677d587b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ac8db52b-17c4-4742-973d-d3b274d04def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147f3856-7320-49fb-b715-304f07ffb0b7",
        "cursor": {
          "ref": "8b6acf4d-55c0-4080-8cae-0d880e01bda3",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f0ddfa94-06b8-4f42-9671-5e37357a971b"
        },
        "item": {
          "id": "147f3856-7320-49fb-b715-304f07ffb0b7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cc2f0861-2b94-4bb1-b350-fc0161e17dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6eedcc4-0f77-487d-bf46-cc2efe4a6ebd",
        "cursor": {
          "ref": "4c558642-ac5c-44fe-8f70-276ca9a7a6fa",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "89e47d1b-c466-4974-934a-e64517a06d73"
        },
        "item": {
          "id": "f6eedcc4-0f77-487d-bf46-cc2efe4a6ebd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6af2991d-2770-44f3-96b5-91a7ae3aedd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f4ce4f-d9b8-4b5d-bc75-647044ee3104",
        "cursor": {
          "ref": "c8b8f039-280c-4d82-8e5e-b45e83ff1281",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0f77a9dc-7137-46ba-b55a-2e98233172fc"
        },
        "item": {
          "id": "c5f4ce4f-d9b8-4b5d-bc75-647044ee3104",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5340c96d-e59a-4d10-b8aa-921b13578950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b20d272-4deb-4d40-8ade-77014478953b",
        "cursor": {
          "ref": "4204ec56-77fa-494c-a5da-7c059308c089",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "94d4a4ff-4259-49be-95fb-779273b01272"
        },
        "item": {
          "id": "2b20d272-4deb-4d40-8ade-77014478953b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6a77dc98-a15a-45d8-924d-f0b2e55587e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e39327-3507-423e-9cbc-b716912c75d9",
        "cursor": {
          "ref": "d1baca68-fbdb-4158-b2c1-05968e33878f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8ca1493d-d98b-4e31-ae38-ba084ad4a905"
        },
        "item": {
          "id": "94e39327-3507-423e-9cbc-b716912c75d9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "85b65333-e41f-4ff8-a331-342495073d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "062d7aa0-ea53-400f-8940-c6ecc82e77d3",
        "cursor": {
          "ref": "13e264d7-e73a-4f6c-9aa5-b0668049c9fe",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bcc35bd0-a2a5-485e-ac34-76e4999a08a8"
        },
        "item": {
          "id": "062d7aa0-ea53-400f-8940-c6ecc82e77d3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "31b9ed32-a721-4d41-b4f6-6cb6c9a875b2",
          "status": "Created",
          "code": 201,
          "responseTime": 24764,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0537fa1d-c600-4d25-956e-9f2c43fc473c",
        "cursor": {
          "ref": "76edb5c6-8264-4580-84fc-cd1daaa528d4",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "73399ede-900a-49a9-80d7-4b8037a9b92b"
        },
        "item": {
          "id": "0537fa1d-c600-4d25-956e-9f2c43fc473c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "22d459d2-0463-40f5-a9c9-c354cb587781",
          "status": "Created",
          "code": 201,
          "responseTime": 24317,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9e6f06-ee41-492b-bad1-746da7755f33",
        "cursor": {
          "ref": "11e4f60b-fcb6-4a81-9817-70092cd6f47c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4d0e3f37-407d-4bd8-a1d4-f44b4212c637"
        },
        "item": {
          "id": "0b9e6f06-ee41-492b-bad1-746da7755f33",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "42562c0a-fbd8-4e12-805c-820a550fd880",
          "status": "Created",
          "code": 201,
          "responseTime": 24821,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3de8b1-9ac1-471c-ab9e-284c64549b58",
        "cursor": {
          "ref": "21aff8fc-07c6-4fc9-8ea1-ad4caefc0354",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e58254e4-6cd5-49ac-85d5-f188e3d103b9"
        },
        "item": {
          "id": "9b3de8b1-9ac1-471c-ab9e-284c64549b58",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "61d635b9-f5b7-4d22-87ae-5471e4a08d83",
          "status": "Created",
          "code": 201,
          "responseTime": 24995,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3054ea9-9e74-4e90-b106-f84692ed1466",
        "cursor": {
          "ref": "9683844e-cef8-4522-bf36-b0b2ad52ea22",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "28e3b7b7-53f7-4084-a9d4-fc227b4f6117"
        },
        "item": {
          "id": "e3054ea9-9e74-4e90-b106-f84692ed1466",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ec7a67e9-03bb-4363-b860-dde956ba773f",
          "status": "Created",
          "code": 201,
          "responseTime": 25252,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-24T00:47:48Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-24T00:47:48Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2eec0763-92c5-458e-a19e-fb358fd9b492",
        "cursor": {
          "ref": "65a9ef4e-cb79-4c81-863e-b418c0a5c83c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0601102a-c79c-464d-8c6f-5c647f9a6ece"
        },
        "item": {
          "id": "2eec0763-92c5-458e-a19e-fb358fd9b492",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3dc352c6-a174-4a8d-b057-595e0432831c",
          "status": "Created",
          "code": 201,
          "responseTime": 24309,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5442c1c2-5d9a-4526-9fe8-86320af125c0",
        "cursor": {
          "ref": "d425bffa-224e-41e4-a3a9-42f5348f2daf",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cac4c662-42b3-44b1-b6ce-79c180cc3577"
        },
        "item": {
          "id": "5442c1c2-5d9a-4526-9fe8-86320af125c0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cbb6d2f2-fe0e-4268-9e80-7e0b6a00c778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513b15fb-a8be-4aa6-8135-398cd9864f79",
        "cursor": {
          "ref": "2d505bc0-a1ae-405e-a0ad-24a2235c89a2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8a29298e-3702-4212-8618-3cc6e2f91e23"
        },
        "item": {
          "id": "513b15fb-a8be-4aa6-8135-398cd9864f79",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "edd39052-bb9c-45d7-b11c-046fa132867b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1531a330-0fc5-4611-8686-6de273dab179",
        "cursor": {
          "ref": "3b26684c-d85f-4265-a87f-4851b599d8aa",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b6b38d30-b967-42c1-a69d-d84751be9d8a"
        },
        "item": {
          "id": "1531a330-0fc5-4611-8686-6de273dab179",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "78990ec9-b20c-485d-861f-90f5d3299bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79b84fb-0df9-4e73-8af1-eb68d96e9ca6",
        "cursor": {
          "ref": "c92b2346-21a2-4553-813f-b0eb468be758",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a63dd9e9-0dc1-4077-af9e-37eaec12740f"
        },
        "item": {
          "id": "f79b84fb-0df9-4e73-8af1-eb68d96e9ca6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b923d2b0-4503-4ac2-85d6-5d14a8f871a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34360513-7c62-4423-9a32-794d9f3de085",
        "cursor": {
          "ref": "0b632579-0023-4893-8886-0e12f50c72e0",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ee54d86b-95bb-48af-a9f3-3a2b672ccc6d"
        },
        "item": {
          "id": "34360513-7c62-4423-9a32-794d9f3de085",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5395cbe1-e7f5-4db6-9a62-cdcc9dc547c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0671452-300b-4d9e-9c24-e69ae55a1684",
        "cursor": {
          "ref": "d86786ad-e32b-4b04-ad5b-1cd52ec36bbd",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9a3ba453-ee0f-47a6-9fee-7db8f7de501c"
        },
        "item": {
          "id": "c0671452-300b-4d9e-9c24-e69ae55a1684",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7adb569b-9a2a-46a7-9216-1e0e5761b51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e139c0aa-f6ff-491f-8a4a-8bef09d54d12",
        "cursor": {
          "ref": "ab4cb520-2802-4a23-8924-b965ea894372",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "04c78ab6-a1c5-4ea7-9a74-be4e62a1fd5f"
        },
        "item": {
          "id": "e139c0aa-f6ff-491f-8a4a-8bef09d54d12",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f5174fb8-6e31-4ae4-ac58-b0aa865da514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6617cd-bf6c-4981-bf4e-c9610d31e58c",
        "cursor": {
          "ref": "6da6e1bc-7c31-472b-972d-b810e5400cd8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "af739e49-27b3-4961-98c1-f2bea818bfd7"
        },
        "item": {
          "id": "6c6617cd-bf6c-4981-bf4e-c9610d31e58c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d4b28ea0-89cd-4179-bda9-00ed86a04d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb346a1-4de7-4755-97ac-825edd37f81d",
        "cursor": {
          "ref": "72d1f8e5-0901-4eef-b6a0-d76a9d96490c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b2b242ae-f602-4393-89fc-a1fd4dd6dd4b"
        },
        "item": {
          "id": "7fb346a1-4de7-4755-97ac-825edd37f81d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b0f3d8bf-0443-4ab3-9efc-fda9f7f57302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4894766-59f6-4867-843b-7ede77a02464",
        "cursor": {
          "ref": "adef6f95-3429-491b-8db5-4bda1687c1f1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ee31a7fb-84ec-4d4f-b1ce-31775f26d3a8"
        },
        "item": {
          "id": "d4894766-59f6-4867-843b-7ede77a02464",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ddcd6384-d417-4f34-95e2-dc16eb5601f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f336733-a5e4-4ce3-8b8f-469c75502bc3",
        "cursor": {
          "ref": "14e98f96-2188-4123-b017-7d1c75e5ca02",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "530c9e8d-5cd0-4418-88e5-00eb0a056094"
        },
        "item": {
          "id": "8f336733-a5e4-4ce3-8b8f-469c75502bc3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e5180349-d0b4-4975-8f4d-87bc11f60f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfa21db-54d6-4dbe-a57e-4b0ddfba2188",
        "cursor": {
          "ref": "70810d39-a167-4178-85a1-f3e7f152341d",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "56fa44fd-b519-434f-90c1-a1eeb563203f"
        },
        "item": {
          "id": "0dfa21db-54d6-4dbe-a57e-4b0ddfba2188",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "abad2d35-3f7e-44a9-9dd9-3f7272330d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8d6782-d345-4b84-8fdf-d3abdaa1e83d",
        "cursor": {
          "ref": "3fa0e19a-3940-4bb9-be54-07746e692fab",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a5895855-7a65-469d-abd6-d811eabea65d"
        },
        "item": {
          "id": "da8d6782-d345-4b84-8fdf-d3abdaa1e83d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f6ef2417-0ccb-464b-91de-c8531f827cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035b497f-96d3-4f33-ada8-745f5f985c54",
        "cursor": {
          "ref": "a53631bb-fcbe-4e4f-bf5a-89e64bd0c230",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8843274b-8c03-4a3c-b12b-4c48c2661407"
        },
        "item": {
          "id": "035b497f-96d3-4f33-ada8-745f5f985c54",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "27230703-44b9-4c4f-b52a-a16c131af357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110055f9-5e67-4d16-8254-354baf2e2c41",
        "cursor": {
          "ref": "edd6e06c-1497-4784-af34-748a899f64fb",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7cd7659b-e250-4a07-a946-da5a9fba1b7d"
        },
        "item": {
          "id": "110055f9-5e67-4d16-8254-354baf2e2c41",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fdd387fd-4694-4436-ae58-3e7a8b27de16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363bc39d-1da1-47f1-9539-d709ad5558ef",
        "cursor": {
          "ref": "2f33ff27-1400-4d2c-9bea-99c73a3692d8",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "50dfc59a-2224-4c28-911b-2dffa68e7774"
        },
        "item": {
          "id": "363bc39d-1da1-47f1-9539-d709ad5558ef",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4bce9b8c-34d4-48c7-9256-d913a4cc88e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9a603b-4379-43b9-9082-e2ab6ae2720a",
        "cursor": {
          "ref": "570fb78a-1a55-49ef-adc4-b7ed1b2ba639",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "951214e0-be0f-415a-8bae-b66a52818bf5"
        },
        "item": {
          "id": "bc9a603b-4379-43b9-9082-e2ab6ae2720a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "314f6008-fc4a-4c05-a648-85429ca7adff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fee86a-aa84-4c7d-afe4-ebf1b36e10b3",
        "cursor": {
          "ref": "f2ae154d-de26-4107-bea3-a2d809fa652e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "74801377-96f2-4467-bf27-3c4a1b91f1e4"
        },
        "item": {
          "id": "a5fee86a-aa84-4c7d-afe4-ebf1b36e10b3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d8f15386-cd9b-45e9-ac01-4850689ad121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6ae90e-ae7a-47a8-bcfc-d981129d5bc1",
        "cursor": {
          "ref": "58014f16-4322-4361-99d0-a56cebb57373",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "38b4ff0b-c880-4a9c-b70f-63be36966726"
        },
        "item": {
          "id": "7d6ae90e-ae7a-47a8-bcfc-d981129d5bc1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "75665deb-a60f-4cf9-af9a-3c75d7e23b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39bdedd-cad2-4016-b6d3-120e9c4b2030",
        "cursor": {
          "ref": "34416575-eecb-43a1-9b03-3965a72b0d76",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9a8feb08-69a9-438f-a70f-94960698c903"
        },
        "item": {
          "id": "d39bdedd-cad2-4016-b6d3-120e9c4b2030",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b39886ae-f81c-4a20-b77a-ac7a7eb1c99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905af4ca-c1df-4cb9-913e-7e86b90f3f6b",
        "cursor": {
          "ref": "6e0b71fe-652b-465a-9eae-08d85bc9f954",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "09c83502-f25f-4a5f-857e-eeb4f3168a30"
        },
        "item": {
          "id": "905af4ca-c1df-4cb9-913e-7e86b90f3f6b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "782ff648-ea70-4efe-b99b-2ad523f10472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0749740-ca94-4516-b287-a06cf5e83d4b",
        "cursor": {
          "ref": "b8bb88f5-b664-41a0-b58e-e9ae0f0db6a0",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "216da054-e0b3-4f24-8f56-fba126482c43"
        },
        "item": {
          "id": "e0749740-ca94-4516-b287-a06cf5e83d4b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "43e7b566-2121-4628-b18d-183216792aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770e6614-ea0d-419e-ba9d-6a90e5f83ac6",
        "cursor": {
          "ref": "1b621f84-1491-428d-84f9-8e281afcd2b3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4a1f1f20-a0d6-46b1-9a5d-b2c75c99a748"
        },
        "item": {
          "id": "770e6614-ea0d-419e-ba9d-6a90e5f83ac6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4b2f10b8-a691-4bf2-a3e2-8423e951db5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d477c93a-c6db-4887-8899-1cb86dc87a75",
        "cursor": {
          "ref": "065e5a9d-f9f7-4a90-adf5-6a59055c6a32",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "72921268-42f3-4d98-af88-f219be2fe4ed"
        },
        "item": {
          "id": "d477c93a-c6db-4887-8899-1cb86dc87a75",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "25248307-8c0b-4f5b-b853-04b1e90aaa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390e3601-15c7-45d4-b93c-44e42771a377",
        "cursor": {
          "ref": "8404d668-8e7e-4d13-8f3a-7565e602ed3c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d094bf99-df56-480c-94e3-2e245248e7dd"
        },
        "item": {
          "id": "390e3601-15c7-45d4-b93c-44e42771a377",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a95ee8ba-1297-4ef3-b1cc-2e9520c9501b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fae7b18-13a5-48ae-ada0-ca42bf093e3a",
        "cursor": {
          "ref": "d0c37b75-94d2-4987-aa28-8ad79793876b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ce5271a6-64c3-4797-9feb-1c1bc9fa4428"
        },
        "item": {
          "id": "3fae7b18-13a5-48ae-ada0-ca42bf093e3a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "30d3fcda-3ae8-4fd2-9374-102f6da25861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201227c1-2960-42cf-a0f3-c60a29c42439",
        "cursor": {
          "ref": "d0f1667c-5fd6-4ab6-8e2f-74c052c59573",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "390c09f2-ca81-4046-b426-c361ebcc7392"
        },
        "item": {
          "id": "201227c1-2960-42cf-a0f3-c60a29c42439",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "17a5393a-e712-49ce-94bb-e07f79211960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b4a605-cab8-4c03-8c04-45c61ffaee6c",
        "cursor": {
          "ref": "a7fce4dc-87a7-4d45-90c3-f65f5822b5e9",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0a4ec7ee-a095-40ac-bf41-0ce873fbd71c"
        },
        "item": {
          "id": "80b4a605-cab8-4c03-8c04-45c61ffaee6c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0fcc019a-2b9e-4609-b5de-5700d1bd9ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06e1581-831e-4be3-8682-8cb14860fb2e",
        "cursor": {
          "ref": "e88a6ab1-7c4b-4c27-bd9e-5a6a917f0d3c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "288fca69-ca65-41a5-8af2-14cffc97fe18"
        },
        "item": {
          "id": "a06e1581-831e-4be3-8682-8cb14860fb2e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "844b3fa0-e19d-4a36-9b2c-f23ddf3be8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3276708e-2e36-45a1-8c8f-a479e91fe48c",
        "cursor": {
          "ref": "cf75e4b0-3288-4a5d-8865-7cdddb6a7bfb",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ec74f3b6-6b1e-4c4d-8806-77cfd7a76f97"
        },
        "item": {
          "id": "3276708e-2e36-45a1-8c8f-a479e91fe48c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d072f709-5744-48f7-b223-fdb9f304db02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d4f745-fd97-45ce-be62-926f474d6171",
        "cursor": {
          "ref": "af45c0bc-5ca2-4c40-a1ac-61ef887f0914",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0d7c4a58-3485-407b-b6a0-d8a824e24b57"
        },
        "item": {
          "id": "c5d4f745-fd97-45ce-be62-926f474d6171",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ba487876-3496-4fdc-8360-3840b7a1dc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f5b1e0-5311-47b0-9939-50d9f32f4eb4",
        "cursor": {
          "ref": "fb23fe27-734a-4c65-92f8-a2311f307e4e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8710ad89-3153-46d4-a6b9-a54ddf1bc161"
        },
        "item": {
          "id": "29f5b1e0-5311-47b0-9939-50d9f32f4eb4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9a68754e-ac5d-4ef5-b875-bd4df3eea1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee14523d-ba06-42ae-bbb3-98b6834e76c4",
        "cursor": {
          "ref": "151815d1-87d2-4603-bfb5-c2d9cc9f8667",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "de3d16c7-4084-4430-a804-1b2dd7db4fc9"
        },
        "item": {
          "id": "ee14523d-ba06-42ae-bbb3-98b6834e76c4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8bb14a92-316c-40a5-86f9-ebf7f13a32c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57702977-fdb9-4944-869a-7eea9079df8c",
        "cursor": {
          "ref": "8cecb430-929c-4f3d-aeac-bdaa417f3539",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "00ec509e-7d9d-4597-ad45-a8782afe852e"
        },
        "item": {
          "id": "57702977-fdb9-4944-869a-7eea9079df8c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c6e941c9-29bc-4d97-aaec-237dbe5edc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cd8582-10de-462b-af25-214cb722d4a7",
        "cursor": {
          "ref": "c04b511c-e071-4b39-8dcc-283e2bc2b551",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "567a0cde-9b32-4c27-84ba-5dbb68857c5e"
        },
        "item": {
          "id": "d9cd8582-10de-462b-af25-214cb722d4a7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1fd99168-b6f1-47d8-a92a-0f0e1e3b9d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07eec6e-5258-4e0e-bdfc-1be576856a5a",
        "cursor": {
          "ref": "cdbea6f0-a7ce-4489-a387-abbae033298b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4d399c47-f0e1-45cb-9821-0f59bc06dfc9"
        },
        "item": {
          "id": "c07eec6e-5258-4e0e-bdfc-1be576856a5a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a2c82801-739d-4e38-af93-fee408f57ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efd1a7a-517a-4f32-8476-2d97c0bddf90",
        "cursor": {
          "ref": "9b489c1c-ec1c-4e3f-b699-4be3f92ec249",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d0c89ec7-d4dc-4a3d-8bfa-15537c93eabe"
        },
        "item": {
          "id": "0efd1a7a-517a-4f32-8476-2d97c0bddf90",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a2b196c8-02a3-4105-affa-89da53b01eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0380a89-8803-48f4-af04-5e96e8e1cb87",
        "cursor": {
          "ref": "9e06be78-bc55-48a1-819e-27cf5e206681",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e1339145-a7bf-4251-80b4-0b30fab6a20d"
        },
        "item": {
          "id": "a0380a89-8803-48f4-af04-5e96e8e1cb87",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eb92dea3-bfc8-4c3d-b6bb-eced9fb11d18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fd8a2a-82bc-4eba-9807-45354591e974",
        "cursor": {
          "ref": "566af04d-6ac1-4592-96d3-e60785771415",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8c47a3d7-cf9d-4b94-a4c3-839dbc79858c"
        },
        "item": {
          "id": "17fd8a2a-82bc-4eba-9807-45354591e974",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "898daf3a-53c9-4f9f-b2ac-2e79b3f4aae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2e3610-cb33-48e4-8d00-4aee886714dc",
        "cursor": {
          "ref": "6dbe9b28-75f4-4682-a05d-bc889df905e1",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "914b93f6-4008-4475-9014-5ae0e8c0ae74"
        },
        "item": {
          "id": "4b2e3610-cb33-48e4-8d00-4aee886714dc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a3f47511-3bac-45cf-8778-630ec5770b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce4435a-e24a-4a52-ba8b-b8c6c9548c16",
        "cursor": {
          "ref": "0b0eb5f3-5a9f-46f8-9165-e9ca82d15a91",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "54f3d207-3f62-4129-8711-53ab45c15174"
        },
        "item": {
          "id": "2ce4435a-e24a-4a52-ba8b-b8c6c9548c16",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ca34628f-0096-47e0-afea-492288f20c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c604c865-17d5-4196-827e-9538cb2fc45d",
        "cursor": {
          "ref": "22020fd7-5ed1-4c3f-ab71-517fb717674d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a7a34723-8631-457a-bbaf-0441a3e9d3fd"
        },
        "item": {
          "id": "c604c865-17d5-4196-827e-9538cb2fc45d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "216134d7-bd15-4203-821e-44d16fcbb148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ebe60a-af7e-4aa8-a343-c2645440a5a3",
        "cursor": {
          "ref": "2e7c6f4b-e7df-43ff-9434-7882aade27cd",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "15507620-d6b1-4513-98d0-577c3f1081f8"
        },
        "item": {
          "id": "60ebe60a-af7e-4aa8-a343-c2645440a5a3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d4a5ccc6-cba1-4489-beed-4912cbe8afcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c0744c-b47f-4e50-aab7-52d236ab29f2",
        "cursor": {
          "ref": "3961aee7-86fe-4606-9944-25d6bf1acff9",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "693aef40-22a5-42fc-9696-cc4d97c0da79"
        },
        "item": {
          "id": "35c0744c-b47f-4e50-aab7-52d236ab29f2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2252fda1-f072-485b-962f-4278f5611739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7138a84-5d4d-4924-b67a-7601b98f2e2d",
        "cursor": {
          "ref": "4c034571-4af9-4628-a241-27e2f35adf29",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "55769b03-d571-4d94-8cae-5d38545686f2"
        },
        "item": {
          "id": "b7138a84-5d4d-4924-b67a-7601b98f2e2d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "30d3175a-6049-487e-b44f-72add8779b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052a1286-da82-486f-b80b-e830fcba6a22",
        "cursor": {
          "ref": "c192d7c3-2e6b-46a6-9a85-1e98b42699de",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4db88a26-73d3-4a6c-a196-97d06665344a"
        },
        "item": {
          "id": "052a1286-da82-486f-b80b-e830fcba6a22",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ba4b0e97-04f1-4e36-9c70-c1d5032e9b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e805e0-7bd5-4648-be07-7cb4bcd77f6e",
        "cursor": {
          "ref": "aa81f9be-4356-4912-b13b-20aae21aa854",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9edd193f-42d9-49a8-b0dd-62a944fa2363"
        },
        "item": {
          "id": "e0e805e0-7bd5-4648-be07-7cb4bcd77f6e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "18ed901a-7628-4d08-95cd-f4bb2dc20660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fe1658-c621-48fb-aa2a-c1efe4fba0f8",
        "cursor": {
          "ref": "d9ae5a98-fea4-402f-9323-ca5a9390393c",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3fe1591a-f6c1-4ba9-8773-d13a2de8e6cb"
        },
        "item": {
          "id": "96fe1658-c621-48fb-aa2a-c1efe4fba0f8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4be6bca6-3be9-4a3c-846e-778ac35fe94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd74c032-c934-4d5f-9f2b-9485e2b77e6c",
        "cursor": {
          "ref": "9606c894-a3bc-41db-9575-292855559eb0",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "db4a4504-4603-49f4-bdb0-25a95145f0da"
        },
        "item": {
          "id": "dd74c032-c934-4d5f-9f2b-9485e2b77e6c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7e599646-39f1-472c-9123-0fad7f87b1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8541bd0-e5db-4d94-90bc-5be9bdfea3b6",
        "cursor": {
          "ref": "c229e68e-93d2-44a1-8cdd-f088bdebf9f0",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "95e8ed5b-d9a2-4eeb-9fa7-0790341a2320"
        },
        "item": {
          "id": "d8541bd0-e5db-4d94-90bc-5be9bdfea3b6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "edd0359f-97ad-42f2-af3c-277fae0546b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a0b447-eddc-4bfc-9b5f-1cfa9e52a89b",
        "cursor": {
          "ref": "df9a9104-d07d-4790-86f4-ee184c974a14",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c75eb01a-c1ad-4621-a49c-b7fbafbd53d3"
        },
        "item": {
          "id": "48a0b447-eddc-4bfc-9b5f-1cfa9e52a89b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eeeb783f-563d-428f-9a4d-03d111d0982b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb666492-abb8-4135-ad6c-85bff8f846d5",
        "cursor": {
          "ref": "447b0a5b-c2d1-4a66-b67f-f3db19e153c1",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "71fc4771-c6c5-4974-9f79-bbf3bb8bf989"
        },
        "item": {
          "id": "cb666492-abb8-4135-ad6c-85bff8f846d5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9b02b51a-2508-4e5d-ae3c-2b4731e84fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54594439-67f1-46ec-92bd-6a49cdd64ecb",
        "cursor": {
          "ref": "a8358486-c0f8-43e1-a0c0-56b314124ad2",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b6e77e94-77cf-46bf-8f20-7a68e1761e15"
        },
        "item": {
          "id": "54594439-67f1-46ec-92bd-6a49cdd64ecb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6a89d017-c886-4ccc-91c3-4a8309446e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7f3763-1eaa-494c-830d-c670b34aca4d",
        "cursor": {
          "ref": "7dfd3dd2-35ba-4f6f-a320-dc565c829866",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a750a0b8-e45b-4a94-8f38-edcb033944ff"
        },
        "item": {
          "id": "9d7f3763-1eaa-494c-830d-c670b34aca4d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4b93f26c-6df4-4f63-96d2-5033fcf6c6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7467eee2-5d7c-42e1-9cd5-3bf6ea3e13ce",
        "cursor": {
          "ref": "67266962-5dff-4496-846e-efe59e861053",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6a76aa03-84c3-43f7-bb45-0fcfe93706a1"
        },
        "item": {
          "id": "7467eee2-5d7c-42e1-9cd5-3bf6ea3e13ce",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "832e8d1a-fc8a-4764-86fe-29403d03413c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df478e6-0b95-4ad5-b725-c023d8800f23",
        "cursor": {
          "ref": "a175a200-e1b7-4a63-845c-7f191555f4e8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1792910e-8e0d-4276-9c64-5f3791928f35"
        },
        "item": {
          "id": "2df478e6-0b95-4ad5-b725-c023d8800f23",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2277c6af-095c-44c6-84b2-1eece2187542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a3bbcb-581c-4e06-a379-0756d22eefc2",
        "cursor": {
          "ref": "3351e591-b6de-4077-a340-db6f3eb988a4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4aaafade-857c-4a9c-9cc8-3ac5df8c672b"
        },
        "item": {
          "id": "18a3bbcb-581c-4e06-a379-0756d22eefc2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0e2feb21-a72f-49ab-b8ee-f1f03817ab1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4937be-2a54-4cee-b7e1-0b4f3cc7085a",
        "cursor": {
          "ref": "ff22f519-35f4-4dcd-89cf-35de998f0671",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "464eb157-cd6d-47da-9a3c-355fcee01e4e"
        },
        "item": {
          "id": "bc4937be-2a54-4cee-b7e1-0b4f3cc7085a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1f90363f-5394-49b6-9be0-3c3f615c0ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c928f9a3-7612-46ed-b884-8501ff979c28",
        "cursor": {
          "ref": "f3d2e4f2-90dc-4b41-8bec-4f43ab55adf8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0aba2a7b-1dab-457d-85ce-16c17787a1d1"
        },
        "item": {
          "id": "c928f9a3-7612-46ed-b884-8501ff979c28",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "50e07b45-ffdc-4201-a4ab-f38f9f8a776e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48415be-4c03-4113-b7a8-31fa466659ab",
        "cursor": {
          "ref": "b96ddb5e-adeb-4a38-85fd-9adc27adc5c0",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b289597c-21cd-498b-8b72-3cdcdba60f82"
        },
        "item": {
          "id": "c48415be-4c03-4113-b7a8-31fa466659ab",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f065e6b4-4e9b-46af-9271-21ddc11be7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e0d5d8-1660-43b7-ade5-c5b26147da0b",
        "cursor": {
          "ref": "d113b3b3-5a27-4957-b23d-aa6ff787c3b7",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f29d688c-fbbb-4b74-add9-7c3f2f10f083"
        },
        "item": {
          "id": "c6e0d5d8-1660-43b7-ade5-c5b26147da0b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fff2b322-4859-4f19-80e2-1b08538e4449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9453cca-20ab-405d-aba4-57a7ced0830c",
        "cursor": {
          "ref": "2571a6c2-5afb-46a6-9e96-bbc7d72fac3f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d9ded7ea-9895-4711-9b05-379596ef4249"
        },
        "item": {
          "id": "e9453cca-20ab-405d-aba4-57a7ced0830c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f49f327d-f053-4e9f-a73d-49fd43bd057e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22c359d-a639-4850-973e-712eafdf80d0",
        "cursor": {
          "ref": "6126c37a-5d82-4396-a95a-b26753a5e268",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "021438eb-e48e-4e25-b97d-b5b08a80ee94"
        },
        "item": {
          "id": "c22c359d-a639-4850-973e-712eafdf80d0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "20198db4-dbce-4958-b69c-1b7ba6ffe066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db79ba0-1f93-4f56-abf3-088b2837d266",
        "cursor": {
          "ref": "b7f5e6f4-f4a4-4cb3-8d93-e5c267bce2f9",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6b008e5b-086a-4929-a99a-caa6dd375868"
        },
        "item": {
          "id": "7db79ba0-1f93-4f56-abf3-088b2837d266",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6b6c9fc5-3187-4107-aed6-f19c192eb435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be827dd-17d6-4cf7-ae61-087cfa328e11",
        "cursor": {
          "ref": "5b45e7c0-6eef-4b58-a18c-9aa9743612d0",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fa5bf499-cf0f-4751-a935-d1ed7822a090"
        },
        "item": {
          "id": "7be827dd-17d6-4cf7-ae61-087cfa328e11",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "57f7b9cd-a1bc-4c96-b2a9-2a91cd996815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980584ef-3a27-4361-96c5-f8e6612671b6",
        "cursor": {
          "ref": "dfadf9cb-4d6a-42e1-8dc7-db675e0e66fc",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8f1a7c0a-e342-47d0-944d-92e52d8065d4"
        },
        "item": {
          "id": "980584ef-3a27-4361-96c5-f8e6612671b6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fe95a3b2-86f6-4166-8b25-f89b21f6d4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a59366e-c3ba-4c35-a0d3-017470f4a0ae",
        "cursor": {
          "ref": "a9d8db37-3b24-4995-b06e-e4918135e799",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2b2f60ae-8d18-4255-b744-b6020e804492"
        },
        "item": {
          "id": "9a59366e-c3ba-4c35-a0d3-017470f4a0ae",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "86eb1343-b0ed-4acf-8d59-0fe2944fb9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3f8500-4935-44b6-bce9-f3219fe9e8ef",
        "cursor": {
          "ref": "e22a2777-c131-4f24-b3af-04c64605c278",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "df310851-59b9-4aef-b7d6-17c0dd318160"
        },
        "item": {
          "id": "2e3f8500-4935-44b6-bce9-f3219fe9e8ef",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d7432ea0-7776-4492-b484-e5c6ba12e76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45142da-0b40-4fb7-b2d5-8c197e85ada9",
        "cursor": {
          "ref": "43bf8e82-4808-47c1-be5e-5aa5479806dc",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "29d26ae6-13b8-4966-a2ff-e05cd3cb6a50"
        },
        "item": {
          "id": "d45142da-0b40-4fb7-b2d5-8c197e85ada9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "18d7af09-945a-4ffd-8fb9-508eab24109b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a909da-87bb-4965-b709-7a4d30a23b0d",
        "cursor": {
          "ref": "c4002601-b3c0-4f1b-8372-a0a20bc9a3f5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4dfba366-05e2-4ab7-ae99-81f0e44fc92e"
        },
        "item": {
          "id": "28a909da-87bb-4965-b709-7a4d30a23b0d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2a57ff46-2fd6-45ba-a2e8-6628e6397bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e57fc4-59c4-4f84-be47-62f783efff49",
        "cursor": {
          "ref": "f1a0f17e-984d-41c9-805c-5fc9d1e845ef",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d74ff49b-2151-4495-864b-af646dc0ed6f"
        },
        "item": {
          "id": "c1e57fc4-59c4-4f84-be47-62f783efff49",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c89dc299-b63b-46e3-9670-7e28ba8dc59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22e2976-1bb1-4d2a-a11e-a774e1864d38",
        "cursor": {
          "ref": "dd5a50bb-1674-43fc-ad81-890c7b35bfd0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3f337ddd-6dbb-4c39-9347-9231025204a6"
        },
        "item": {
          "id": "c22e2976-1bb1-4d2a-a11e-a774e1864d38",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bb772f78-ff56-4ca1-8ff2-f114965bce46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c674dfeb-1a0c-497c-b9b9-6e6b2043c64f",
        "cursor": {
          "ref": "88a86214-da0e-466b-8614-9aee5f35d6b8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7f52957c-aa4e-4866-bdc9-2c7fb2490dd3"
        },
        "item": {
          "id": "c674dfeb-1a0c-497c-b9b9-6e6b2043c64f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e612ec32-ca5f-424d-bbda-e772b0375d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea560f1-8f51-43dd-93e5-79770bad2f02",
        "cursor": {
          "ref": "675327e4-0e6d-4022-9404-6a682ce5b6e5",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6ba7e331-5162-49c6-bc26-6958fb5c430b"
        },
        "item": {
          "id": "bea560f1-8f51-43dd-93e5-79770bad2f02",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "19300f55-424d-4adb-b216-924a9e1457e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab751c0-6c51-4e31-af9e-3478d6c11442",
        "cursor": {
          "ref": "1e87a637-b715-474d-b64e-03c5236cc2aa",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "086ca437-8143-4805-9a0e-83fff7301471"
        },
        "item": {
          "id": "9ab751c0-6c51-4e31-af9e-3478d6c11442",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "66a10fd3-e43f-497b-8e08-d9815c4ed57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f684999c-dec5-4f07-9bf4-d58509b5320d",
        "cursor": {
          "ref": "2ff35d16-572a-4d57-9546-1ad8c566fbaf",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7ed72fbc-3633-445e-b6aa-5ec3c478c96a"
        },
        "item": {
          "id": "f684999c-dec5-4f07-9bf4-d58509b5320d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2e8c25fd-54f0-4d7c-9669-e18c130d3774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af6f1dc-b5cc-442c-a9c6-e3c809ac8b8a",
        "cursor": {
          "ref": "688cd416-f666-4f38-8226-b319464f11d2",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "110a9218-c3d5-481f-b9a5-6e6906943968"
        },
        "item": {
          "id": "5af6f1dc-b5cc-442c-a9c6-e3c809ac8b8a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fb4b0b81-e37b-43f9-a61e-e988dc38a76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478d45d8-d8fc-4f6d-be69-a62db827036e",
        "cursor": {
          "ref": "d72273de-6cfb-421b-bf49-b0ea9ef7b4d2",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eb4b4caa-ac32-4480-ab11-4b1e0ef6b6b4"
        },
        "item": {
          "id": "478d45d8-d8fc-4f6d-be69-a62db827036e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bfe11b12-696f-4a7c-ad52-0bc4d865a491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a28aac-0b74-4baa-b5d6-69ad71dac3ac",
        "cursor": {
          "ref": "a1a844f8-11ca-4505-a984-c0aa490a3c86",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "193e4d1a-1290-4579-96a2-154abd5af8b0"
        },
        "item": {
          "id": "33a28aac-0b74-4baa-b5d6-69ad71dac3ac",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4cb678e0-6eb7-40f9-827a-81fc328ceccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61058e13-a36e-49f3-bb4f-e36308ea6905",
        "cursor": {
          "ref": "20e4f1e7-2011-456b-b8c0-02c6bc6f2b1e",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "50529a5a-4ba0-4fc7-a0b7-d3538e77da2f"
        },
        "item": {
          "id": "61058e13-a36e-49f3-bb4f-e36308ea6905",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "03783b79-da2b-4aa8-99b1-3414bf42c21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfc81a1-90c7-4e51-8319-3fb53befe6c1",
        "cursor": {
          "ref": "d0a9ab5d-99d6-460d-a2a5-685c7feb5fe9",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "91cfae77-df44-433d-b695-5ae4dd9d5e54"
        },
        "item": {
          "id": "7bfc81a1-90c7-4e51-8319-3fb53befe6c1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b3a6d875-5498-4297-994c-6a1b63f03713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a8bc3e-a9d6-4b4f-b6a3-6a1973425808",
        "cursor": {
          "ref": "c06791b0-cf49-4aa8-ba4f-0c8bc36788b7",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "864fc175-480c-48c3-9b74-3f0b5d141296"
        },
        "item": {
          "id": "55a8bc3e-a9d6-4b4f-b6a3-6a1973425808",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7a19508d-7d8b-493f-98b8-7d88be603323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac79f8b-6a00-4ecb-9397-b175b2b57b3f",
        "cursor": {
          "ref": "74aea8e8-192a-4b05-87bc-e8f1b29b1ea6",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1a90be5f-f294-46ce-b31a-d4ad119e6b5d"
        },
        "item": {
          "id": "8ac79f8b-6a00-4ecb-9397-b175b2b57b3f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f6a0a76a-4a3f-478f-bc11-2bf969aaa984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d9d219-b26a-48a8-b59a-fef22c011af5",
        "cursor": {
          "ref": "ab528b27-da2d-452b-ba67-3feb0d2f3c6b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f9c53780-30e7-41c4-9c5b-5e7f739a2c9a"
        },
        "item": {
          "id": "18d9d219-b26a-48a8-b59a-fef22c011af5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "539432bb-6e56-4a72-8e33-4b4da07c1e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d30c330-c83d-41de-a01d-a0570269895b",
        "cursor": {
          "ref": "4d0885b5-d7d7-49b2-8487-34819a74298d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "22013fab-00e9-44bd-b3e0-989c6b292b85"
        },
        "item": {
          "id": "2d30c330-c83d-41de-a01d-a0570269895b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4672d0b5-8f39-40f2-a973-8db8b19e6aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261a20e1-1d99-4d74-9c07-0b2be4997cf3",
        "cursor": {
          "ref": "e20a910b-807d-40a1-a039-9887cc2394c9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "09fbee84-2a8c-45a6-a460-be5f329afde8"
        },
        "item": {
          "id": "261a20e1-1d99-4d74-9c07-0b2be4997cf3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3f679a1e-a982-4b42-b6b7-f6287012cdc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd0324c-b2f6-4b37-b6f5-7c9ffc0a6094",
        "cursor": {
          "ref": "02e277aa-0e3a-440d-a11d-be286fbb2cee",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "38165284-aaef-4486-bd63-b359738d4d41"
        },
        "item": {
          "id": "7bd0324c-b2f6-4b37-b6f5-7c9ffc0a6094",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "32fbd59c-b4ff-4d5c-9ee2-b8389d90d54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b92f7d-d6a9-4d76-b4d7-1712369e367a",
        "cursor": {
          "ref": "07347e1a-c9b1-4682-a202-3a17e9c6de6a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8c2a9f23-e4b1-403b-8e57-06501e0491e8"
        },
        "item": {
          "id": "29b92f7d-d6a9-4d76-b4d7-1712369e367a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fb91e7ff-c4a8-4b8e-a1bf-d92e95441893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c3fe2a-0017-489c-99ac-0ab5d5b103e0",
        "cursor": {
          "ref": "56f18c2c-1359-4df9-a567-d237d5159353",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3023c68e-5344-498f-beaa-086f7d208bbe"
        },
        "item": {
          "id": "e9c3fe2a-0017-489c-99ac-0ab5d5b103e0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f3cfc28e-57e1-4d98-8911-a3e030b54c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824c418e-1de9-47db-bad3-c0ae6611638a",
        "cursor": {
          "ref": "cdfac68d-40b5-4803-b9f4-c8032a10d814",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9bdbc6bb-ce72-42fe-9c31-b63de089ab65"
        },
        "item": {
          "id": "824c418e-1de9-47db-bad3-c0ae6611638a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "db88e8d7-7e5f-4a11-bcd6-7437b4c1d5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5050a64-0025-461f-a942-68adcfd6c3b7",
        "cursor": {
          "ref": "b44007dd-cdf9-42ac-a198-9f26865d661d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8da25243-796d-44bb-bf82-ca2bdd87813b"
        },
        "item": {
          "id": "b5050a64-0025-461f-a942-68adcfd6c3b7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4a87a041-7373-4c8f-b715-fac193e63d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4deec3-c100-4816-a71f-b2410fba652b",
        "cursor": {
          "ref": "0f24b472-fb4b-4882-9adc-5d04c7c8d1c3",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e6199f01-3e30-4ae7-bd65-a554b61d4f4b"
        },
        "item": {
          "id": "9a4deec3-c100-4816-a71f-b2410fba652b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "de9f053e-2da1-4195-8d67-1949b462554a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e718ccfa-049f-4bc6-9aec-9dcc18299cc3",
        "cursor": {
          "ref": "8667dd22-dfbf-495d-80a1-8fed1a5678e5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6e375f7f-a690-4c34-b0d8-86303d923e00"
        },
        "item": {
          "id": "e718ccfa-049f-4bc6-9aec-9dcc18299cc3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cceabba8-c2c8-4522-88a5-7f2de3a3cfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e314cd0b-8f03-4831-b119-8067631db33a",
        "cursor": {
          "ref": "4e084c47-4467-421b-b8cb-82b3e7236b45",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b0d70eac-b877-46bd-841b-30624380efe4"
        },
        "item": {
          "id": "e314cd0b-8f03-4831-b119-8067631db33a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0860acfa-6146-4071-91e8-27b051c1f617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b16e4a-06c0-4900-a197-1482884103e9",
        "cursor": {
          "ref": "ec27b990-aa3e-456f-9845-083d126b0682",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2b82f2f7-347d-4460-9058-55de55ec8aff"
        },
        "item": {
          "id": "b8b16e4a-06c0-4900-a197-1482884103e9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3493709c-2d88-4d8d-b5b2-7cd34b4e35ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6963d13b-488c-4dfc-98e4-c856f6c68d8f",
        "cursor": {
          "ref": "6f710279-bd8e-4e27-9c58-eb2d5906bb6a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "685cae55-a319-44fb-adae-bd817438f8cb"
        },
        "item": {
          "id": "6963d13b-488c-4dfc-98e4-c856f6c68d8f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "33a19660-ed9f-4b5b-931a-430be8b040de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5581919-952e-4ba3-a657-7156b107ba5f",
        "cursor": {
          "ref": "0617a8e7-7bd4-424f-bc1a-84c2e3bfa311",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ecbf5629-d3af-4b53-8740-7fa64e43db5d"
        },
        "item": {
          "id": "e5581919-952e-4ba3-a657-7156b107ba5f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "29cdb87f-bf83-4f88-8682-82a473a73e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7977545e-7051-489b-872c-16b100479b70",
        "cursor": {
          "ref": "00d72c51-60af-4bb4-ab81-1bba648da2a1",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "33d2c850-726f-4c76-a3f8-d080cfd264e8"
        },
        "item": {
          "id": "7977545e-7051-489b-872c-16b100479b70",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "97732df6-0d0c-4d25-ab42-8540e127300f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e2b344-b040-46ed-8773-d61ce03a220a",
        "cursor": {
          "ref": "68b10398-0328-42d7-8489-44e3d7e29d39",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9aaf31e7-c9a9-4c99-bdb3-7741fe2aa08d"
        },
        "item": {
          "id": "d6e2b344-b040-46ed-8773-d61ce03a220a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9252e002-606f-48a4-ab54-91bc77209f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a391c39-fc2d-488e-9016-ad29fa0ebf38",
        "cursor": {
          "ref": "3cd2402c-719d-4bef-b7ef-b8da94b09e99",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a86ef0d2-cd15-42c9-a265-1a26378d8f41"
        },
        "item": {
          "id": "6a391c39-fc2d-488e-9016-ad29fa0ebf38",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "55ea41f3-c545-47e9-a2f9-023fa91cc493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f493df3-79b7-4f6c-9571-80275e7c2f83",
        "cursor": {
          "ref": "a2e1bb17-1611-43c6-9102-65dd599299e6",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "22ca1727-7aed-4d48-8d46-66d6f911d68f"
        },
        "item": {
          "id": "5f493df3-79b7-4f6c-9571-80275e7c2f83",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d8ece0ac-157b-4545-ad44-d2e758aa8cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dd98bf-54d7-4a3a-bbf2-48a88b105ffe",
        "cursor": {
          "ref": "9932aa61-f423-498f-8f47-de16cfea9d9b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5ce00307-de0f-43c3-97b9-5d732daa44b9"
        },
        "item": {
          "id": "67dd98bf-54d7-4a3a-bbf2-48a88b105ffe",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "707b5d1d-45c0-47dc-8061-d84a1e2fefbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd44f92-b7b4-4e02-8853-4e158d1fb072",
        "cursor": {
          "ref": "e9ef4464-25d6-4c13-95e0-dc947949905c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3f2f51ab-ace8-4688-991a-98d5ca18ee1c"
        },
        "item": {
          "id": "1bd44f92-b7b4-4e02-8853-4e158d1fb072",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d1b962df-7e7d-4ff0-a432-a44e3c4b5b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b97fad-8fdc-4c30-8706-9c31084e5e22",
        "cursor": {
          "ref": "76315fe3-116b-46bc-9e61-6af4dbe6148a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f302007f-634f-4d74-ae5b-7e0399b4c0f5"
        },
        "item": {
          "id": "c8b97fad-8fdc-4c30-8706-9c31084e5e22",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b2a8db1e-a5cf-45f8-9a83-20530c7ad00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8e8356-43ce-4360-b316-7e6df02c5637",
        "cursor": {
          "ref": "f84c39dd-3b0d-4443-8d4c-890f59981fee",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "80c09fa8-6563-433d-bfe3-28ce83beb4f3"
        },
        "item": {
          "id": "bf8e8356-43ce-4360-b316-7e6df02c5637",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "87e2c14b-441a-4fcb-8739-eaa9e60961dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfec547e-ad8b-4d61-b7fd-2f164918f700",
        "cursor": {
          "ref": "76bbd359-73ca-4127-9ccf-0a0ef4f62977",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "951be3f2-33dd-43bb-844d-7af063610fcc"
        },
        "item": {
          "id": "bfec547e-ad8b-4d61-b7fd-2f164918f700",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ac061541-5cef-474e-8097-717aa5305997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143e34c0-39c3-4596-9cac-fb2777db282b",
        "cursor": {
          "ref": "ff245db9-6eb1-46c1-bdeb-b954d2a87d15",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3aae67c2-deb6-4234-b5c4-f770a806e1dc"
        },
        "item": {
          "id": "143e34c0-39c3-4596-9cac-fb2777db282b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f476a815-2966-474d-a778-35bf08898656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd35b30-f670-4414-af76-7e9e56707510",
        "cursor": {
          "ref": "8aea059e-a970-4753-b204-d68ee1f2cfaf",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d157bc76-f0e6-41ac-9949-d8d918d9ddc1"
        },
        "item": {
          "id": "5cd35b30-f670-4414-af76-7e9e56707510",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "45a668d1-849f-420b-a1d3-b07e54418aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257fe3d6-6ea7-469b-a08d-277810902105",
        "cursor": {
          "ref": "2d0b2e4e-5ca5-4272-8a1b-6f7cee5fa0df",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2daf50cd-6ad2-49a3-96f8-ac01ad4efeeb"
        },
        "item": {
          "id": "257fe3d6-6ea7-469b-a08d-277810902105",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1b5705fd-32ec-4ef5-8b3e-6e5ade267f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b47aa0d-be63-469d-8e36-97a844e2857e",
        "cursor": {
          "ref": "93760fd8-789b-4393-ac93-e0cd26241101",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b227c02c-7adb-45ba-9874-60ac7fbbaa42"
        },
        "item": {
          "id": "3b47aa0d-be63-469d-8e36-97a844e2857e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7a1c5954-ff46-405b-bdec-e495522d919a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3d3154-e839-42f3-a605-5676c3e26c60",
        "cursor": {
          "ref": "6c2f22ce-8c87-4ead-8802-f64b02145e4f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e1f1be73-d1e2-4291-bd1a-b93d7a55561c"
        },
        "item": {
          "id": "4c3d3154-e839-42f3-a605-5676c3e26c60",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c135d676-2a68-41de-bc1a-e146a3d006d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c366cf-bc6a-49a6-8bed-e4ca3fc34a81",
        "cursor": {
          "ref": "0a6d011f-7582-40b4-a019-434d54d3ff84",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8db0deaf-5d28-4278-913a-53d229e065cd"
        },
        "item": {
          "id": "d1c366cf-bc6a-49a6-8bed-e4ca3fc34a81",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "21dd95c0-04ae-454f-8633-0271f22be7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f337c5e-e0a0-44ae-b5d4-3897f347201a",
        "cursor": {
          "ref": "c642182e-c718-4c79-a6d6-4501ec7c2c0f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cb4fa2ce-dcca-4aef-8769-04e9296ee24d"
        },
        "item": {
          "id": "1f337c5e-e0a0-44ae-b5d4-3897f347201a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b0b02d44-7937-4659-96ef-b91762d29abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22eb6edd-61ee-4a57-a568-2a33e1f1cae1",
        "cursor": {
          "ref": "88ed4913-ad39-4176-90d5-de5ac162d7c4",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7a2eb2bc-2a67-417e-824e-f0a866194aaa"
        },
        "item": {
          "id": "22eb6edd-61ee-4a57-a568-2a33e1f1cae1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "13dca4f6-623c-4f63-9172-4fb24684afb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f840e9d-b06b-401b-b747-31008f51e595",
        "cursor": {
          "ref": "0ca652cb-3e3e-47f4-9357-f041047c8472",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d9641e86-ce89-4f1d-8987-5911639b0bf9"
        },
        "item": {
          "id": "1f840e9d-b06b-401b-b747-31008f51e595",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b1d11e24-4c66-4a47-81c2-80b5145d0299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba080a7-7b2c-4958-9093-32c696376c65",
        "cursor": {
          "ref": "ba66cb49-0527-448c-9447-5d994c0f571e",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "de8be9e4-d21e-4e6b-a0cf-3d7fdc28dc46"
        },
        "item": {
          "id": "dba080a7-7b2c-4958-9093-32c696376c65",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1044885f-669b-47f6-b209-2ae3bcb68e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21648583-34f9-4983-8631-db9c2e721ff1",
        "cursor": {
          "ref": "84377765-a17b-4486-ab9a-b2806eb3ba6d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "29142b44-8323-4809-980f-e422fcf723be"
        },
        "item": {
          "id": "21648583-34f9-4983-8631-db9c2e721ff1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1465c592-c13c-4883-b467-74eb5d6b08f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c0d13c-6a5e-4903-ac30-a928e75d4d95",
        "cursor": {
          "ref": "983bdcd2-859e-4127-a31f-348b1adf30dc",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "eced4349-d5f8-4e2a-8810-f09fa169e696"
        },
        "item": {
          "id": "87c0d13c-6a5e-4903-ac30-a928e75d4d95",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "75f32216-1989-4d3f-9d40-5b81366c4f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a207cb-a6c7-4815-9da0-c8be8372f01a",
        "cursor": {
          "ref": "f63f9751-10b6-4444-99cf-5576b95d2ab2",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2390d796-193f-4d64-a428-0a59ce630cbe"
        },
        "item": {
          "id": "81a207cb-a6c7-4815-9da0-c8be8372f01a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4c15c87a-a333-42f0-8a06-55fbc21f5bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6938c27-abf8-46f0-896e-a2377431328e",
        "cursor": {
          "ref": "a8b95e7a-f7dc-485a-a2cd-edccd0435c90",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "adf323ae-f626-4e6e-ab29-59cf8305ab5e"
        },
        "item": {
          "id": "a6938c27-abf8-46f0-896e-a2377431328e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5eb3c402-5991-4f32-8dda-1506a26864a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd59c96c-17e3-41b2-ae39-5146f21fb86f",
        "cursor": {
          "ref": "2e0c3ade-fc4f-46b7-9a03-98b28f5bbabb",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "44509e67-a647-4046-8e86-3925c5a91624"
        },
        "item": {
          "id": "cd59c96c-17e3-41b2-ae39-5146f21fb86f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "709ad5d4-cabc-4002-ab0b-71509875b405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1bbb6e-3973-4d41-aba6-27903c566ab3",
        "cursor": {
          "ref": "fb413170-0486-4203-b212-0ef9636149ad",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d71c4afa-f1bf-4a5d-88ac-767a989eb745"
        },
        "item": {
          "id": "ce1bbb6e-3973-4d41-aba6-27903c566ab3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f40320d4-684c-4b5b-b162-65ab85f0d907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae2735c-cc1b-4e8d-93ac-1a6919ab6b8a",
        "cursor": {
          "ref": "8ef65552-f11e-4990-9eb8-2549f0173310",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3e0e99ae-c9b7-43a4-9c36-363f516685be"
        },
        "item": {
          "id": "3ae2735c-cc1b-4e8d-93ac-1a6919ab6b8a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a2c7c35d-f3ae-420f-bd6e-1882a47beb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaeae5e-a647-4cb7-b136-0ff884c4298a",
        "cursor": {
          "ref": "dcc0d0cf-e746-4c9a-9249-85f710fc2335",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "884cad42-3dfa-4505-b14d-1abaac0e06e6"
        },
        "item": {
          "id": "efaeae5e-a647-4cb7-b136-0ff884c4298a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "657a9adf-715b-43f2-a4c3-0e1a75135361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44014313-8912-4d79-b60f-e5db54425e7b",
        "cursor": {
          "ref": "cb28ccbf-d5a2-4ba5-a01c-e27fa8f6ad9a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c117009c-25ed-4cc4-a24b-20a62df3b6bb"
        },
        "item": {
          "id": "44014313-8912-4d79-b60f-e5db54425e7b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cdbda1a1-82de-4314-901f-6d5532bc97e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995c5370-efc4-4fb1-8883-162c1b6ed82f",
        "cursor": {
          "ref": "59885686-0e3b-4691-8545-2aa05e7def21",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1042d9d2-d348-4c6e-b1ad-ce4def3c448b"
        },
        "item": {
          "id": "995c5370-efc4-4fb1-8883-162c1b6ed82f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "998f87e0-79bd-4b6e-bbbe-dd765e11b361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb84be6-639b-4872-89ab-49bf37e5f6c1",
        "cursor": {
          "ref": "ec3fe992-453c-4474-ae0d-f8c1142928f3",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5596fd7f-8dcc-4899-9234-2acb7e3a852b"
        },
        "item": {
          "id": "4bb84be6-639b-4872-89ab-49bf37e5f6c1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "595281b9-f1f6-42c4-a880-038dd0a5be27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88868a30-38bd-4520-b4e2-320667f884a3",
        "cursor": {
          "ref": "2e2c96c9-1346-4adb-a77a-9492e25a8713",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e713daab-690f-45e8-8985-ea26a9f555b1"
        },
        "item": {
          "id": "88868a30-38bd-4520-b4e2-320667f884a3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "59909d80-abce-4a3d-b596-ebf3cb8fd461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0285066e-d301-445b-b37b-09625d1f88df",
        "cursor": {
          "ref": "a25ad49a-d2b6-4114-b560-343bf0ffc7fe",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "00121d66-8535-4bd4-8666-15d4637cf7b2"
        },
        "item": {
          "id": "0285066e-d301-445b-b37b-09625d1f88df",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a284c12b-c9bd-4778-8c88-235d9a7d723d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22aca4e-b899-41fd-a0bc-3d703e421622",
        "cursor": {
          "ref": "4cf37026-e84e-4fc9-a434-5660c376a35c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4c7ba3b3-b3c2-441f-a38f-cf828bf060c3"
        },
        "item": {
          "id": "c22aca4e-b899-41fd-a0bc-3d703e421622",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8ef0a333-cb90-4b1b-b2f1-5347ba743b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d11ab9-208e-4670-82c0-2ce98cbc954f",
        "cursor": {
          "ref": "9e645fcf-6b92-4e78-98c5-d87f5846ed68",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0b3bd753-47af-4057-99a9-65ddf05e43aa"
        },
        "item": {
          "id": "99d11ab9-208e-4670-82c0-2ce98cbc954f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "04c4846c-bd3f-41a3-8ee5-c52be579f9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f56f2e-4872-4265-be1d-d3e53fbacfad",
        "cursor": {
          "ref": "17fadec7-5755-427f-a100-2038e2bfabc4",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9eb1e351-ee69-4532-b6f6-0bb83a165871"
        },
        "item": {
          "id": "c7f56f2e-4872-4265-be1d-d3e53fbacfad",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c3bde674-9ed8-491b-a46d-87b7b882691b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d20803-f791-4cad-a5d8-5091a015b685",
        "cursor": {
          "ref": "7f889817-d9b8-4ca4-bafc-8d9c3454c1df",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "62ae47fb-f237-4ee0-add5-516bb7c2656a"
        },
        "item": {
          "id": "83d20803-f791-4cad-a5d8-5091a015b685",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6a3ae11d-3749-4613-9da2-cd1a7e136d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65c53bf-64e4-44df-95ea-5b4f0dd1b4ff",
        "cursor": {
          "ref": "cf5faac2-8627-43c1-ab49-e280cda20d4b",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "37fdbbbe-f68c-4b86-80c3-c87b84571b9e"
        },
        "item": {
          "id": "f65c53bf-64e4-44df-95ea-5b4f0dd1b4ff",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9717e96d-bf7d-4af4-b180-1a0a1c1b2811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7ceb2f-b56c-4f6e-9bff-ae8e8c92e7a9",
        "cursor": {
          "ref": "b6cbe4b2-39ca-4849-a16e-a08ea86852c7",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bee7e05b-ecb3-4577-ab17-d7c617b8c12b"
        },
        "item": {
          "id": "cf7ceb2f-b56c-4f6e-9bff-ae8e8c92e7a9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6de54e94-510b-4354-9c3f-6d78d010dca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c263ee78-35d3-4972-a777-41be24adc75d",
        "cursor": {
          "ref": "b34d880a-394d-460e-ae7f-b0be973912f3",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9152ed44-a6a8-4f4c-bf7d-df63bc2e1199"
        },
        "item": {
          "id": "c263ee78-35d3-4972-a777-41be24adc75d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fb636fff-10a7-4cb1-aea9-79c4dec7f5d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30df7ff9-9342-448a-8022-cc109ff6fd57",
        "cursor": {
          "ref": "a80b256f-0f6d-4de8-a8c1-f33c20883560",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4197101e-93cb-4944-bae3-c6e3ced0f386"
        },
        "item": {
          "id": "30df7ff9-9342-448a-8022-cc109ff6fd57",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "58ae46fd-5fdf-4da4-9b40-9bcd88ef8ecf",
          "status": "OK",
          "code": 200,
          "responseTime": 2358,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d970da94-1667-4576-b10d-96ace8afdc27",
        "cursor": {
          "ref": "04f2f948-b86d-4c19-9750-60bdb84c0a5d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8001a271-6dd2-46b3-9998-69119beaf4dd"
        },
        "item": {
          "id": "d970da94-1667-4576-b10d-96ace8afdc27",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8f6931de-29fc-49dd-a073-419086d5cbd5",
          "status": "OK",
          "code": 200,
          "responseTime": 3726,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6553825b-340d-4b47-accc-d1d2a1d9a3ec",
        "cursor": {
          "ref": "45e7ffa2-71be-4480-8c97-e191de282520",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "254f021f-a149-4d4e-bbda-88b6a9b4e909"
        },
        "item": {
          "id": "6553825b-340d-4b47-accc-d1d2a1d9a3ec",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "545bae69-74fe-425c-8c7b-3893882444fe",
          "status": "OK",
          "code": 200,
          "responseTime": 3456,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59a4e9d-1127-41cc-8896-1fd8b18e750e",
        "cursor": {
          "ref": "7836fe5d-faf5-42e9-994c-c4ce1ccc30dd",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "df8155b7-a5b8-4f95-b9f6-8388d0dd19c0"
        },
        "item": {
          "id": "e59a4e9d-1127-41cc-8896-1fd8b18e750e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f700a39c-eefe-457e-bf7e-44902215b98c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59a4e9d-1127-41cc-8896-1fd8b18e750e",
        "cursor": {
          "ref": "7836fe5d-faf5-42e9-994c-c4ce1ccc30dd",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "df8155b7-a5b8-4f95-b9f6-8388d0dd19c0"
        },
        "item": {
          "id": "e59a4e9d-1127-41cc-8896-1fd8b18e750e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f700a39c-eefe-457e-bf7e-44902215b98c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ad9fb7-1a45-4908-af36-6980ecbe51f4",
        "cursor": {
          "ref": "eb0291ac-6768-4512-b3e4-f92745528e64",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9c3dfe30-e7f1-49e2-9a80-e4a9b478986a"
        },
        "item": {
          "id": "68ad9fb7-1a45-4908-af36-6980ecbe51f4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8f87c235-2ae4-4cc6-8716-67e780415bf7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afebde1-a06e-429a-a978-f4268ce78716",
        "cursor": {
          "ref": "b3f359fa-08de-4b31-9c9c-69401edfd965",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2894eae2-3618-4611-843b-fecb5bd03ad6"
        },
        "item": {
          "id": "6afebde1-a06e-429a-a978-f4268ce78716",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3d481342-334a-47a0-981f-68671d140d17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}