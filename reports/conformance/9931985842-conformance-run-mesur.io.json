{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8ba6ca57-a7b6-42a4-a90e-a7848bbef510",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3f213afd-cb9a-48a3-a1dd-59e9f5300295",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c1d9cb43-d85e-4923-bf49-d6be1438b752",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "07e49949-3e28-4fbc-a91c-a188d51459aa"
                }
              }
            ]
          },
          {
            "id": "5bcce67f-cf79-4a6f-ac6d-c96fc25136d7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d5daa43d-d1c2-473c-98aa-ad6c4c428ce9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0cde7157-3663-4847-a151-17560066118d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "66f6ca5c-f879-4ad6-b63e-e7a3dd97ff78",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1c082cdf-fd32-4a15-a4ae-2355b03a6b7d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c52f7d13-9bd5-4dad-ad5e-9c203fe4aba6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c40c7c59-7140-44a5-86ab-47d96d0c56a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a21503f-0206-4593-b376-a4e2e5cd8245"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4df909d-1bb0-466f-9154-653adf14da78",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b6b24c3-ab8c-438d-b307-cff7ce390def"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5b41f3ad-4a67-4aa9-8d4d-5a3140554446",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7047d10e-46db-4e29-bb1f-e54c76959463"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b15f42d-1d66-4fab-a83f-0ab55b7b170f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e73018b5-aa95-4281-a48c-8b4983022cb6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd829345-6f86-48ed-beea-03076f3b36eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fafe91e-5309-4914-bd3b-5a32f53c9748"
            }
          }
        ]
      },
      {
        "id": "f86fb23d-707b-4fbc-91cb-463d2ca26ce4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "03fcb084-32c5-43a5-ab8e-b9a40538b598",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ab36aeb-834e-4229-a461-f4fe76898ec1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc2f5527-dec3-4081-a185-cf5937e56af3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70785bff-10ec-4fe0-a5e8-c933582316e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f06920f-0f3b-48d3-9daa-afbfa61e08c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4940a3a-a62e-4768-b050-c279d0d558e8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bc34cb-a2a7-40ba-bcb8-0a117d8066e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8a54522-66d5-4397-b1ee-2730ff49ae22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe94cd92-09ab-4d0f-82e6-404c5e6754c5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e9be27-0011-444c-adc3-78aabfba5c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1da049f-5b82-4ee5-8562-99ba23705d29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "40c63040-6d83-4d14-87f0-75d946a06733",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bbe63ad-50b4-48b3-8ddf-5cd21b4fa12d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e83af8-6257-4b06-888d-bbf473e3ad5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ae27999-bf33-4a73-9f62-1117ebe1fe5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4e1e8c-5719-4ac8-b7f8-549635ce1e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c17c7a-6e7c-4740-9d6a-180b83092eec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ac7f37ce-9a5b-4f55-a6d4-fa9a46262105",
            "name": "Positive Testing",
            "item": [
              {
                "id": "687fd47b-86f8-48ae-936e-0e9ddb2e3d9b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffae369f-3882-4002-9f05-812920bcbe0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9f9934a4-b652-4496-bfe4-45e840024e0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d68590ed-42d1-4f97-ba5e-c15db918ac1c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4656e788-b6dc-4c35-89a2-396d02a34007"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60eff824-08f2-4ec4-a37a-2e7f1e8873ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0cdbf59-e82c-42cc-9253-3ff91b1ea295"
            }
          }
        ]
      },
      {
        "id": "892f3cf6-2525-4fac-a25c-bb843704cd3e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c9e34a0f-16c4-42cb-8faa-a1bfaa64e89a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cda93f4-0f10-46a8-80c3-175d449719b5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a7daa264-f2d0-4227-b792-b7d094522fc4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf78ad5a-8b46-43f6-ba42-e76a4fd3fe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48651109-b1b7-485e-b01e-58e9de30ce3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc3efa6-4165-4179-b1a7-d5855317198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c59738a-55c5-4174-bb8d-e0cb795978c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d035d79f-b3d8-48e9-8081-3f5ed73e4c05",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a51e085-7811-4591-ab0b-a6ff4a98cc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef72f2f-22cb-4252-8255-0f1347d18e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c239b58-e752-435f-8b49-e1a9d689a2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fe8c474-749d-4fdf-a8c6-273724ed7d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b04a13-6136-4053-8b92-4b4423b989dc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b223d9d-f3c7-45c3-b534-550ac1f4b90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9743c5da-56ef-4f23-a4c3-9d89b39334a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2de4a63-0b57-4ed4-9d70-bdaecad77d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d33cc25-b8a0-4949-ad87-d93998a31773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9be13e2-ac9f-4576-b807-f3ca88f9bd75",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f03c9a-23c7-474d-8774-c124f9b56b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae39c24f-b26a-48ce-b0f0-af45922a97ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e003dc-1be5-4fb8-a2e0-8958352da21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "982e024a-31eb-4f67-94df-c96d4915bd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f8b1d9-57c3-4fa1-96e7-615a4105f900",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567f0c58-b099-46be-a7da-77d5137f0efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0f8b63-cb0a-4f81-9c91-3a666be5b2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438ac1ae-820f-4fb5-b162-a5ad62686fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c84512ff-0436-4f32-9d27-a8a3fc6272b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efadf5fb-79d1-4509-860b-c062f0cd39b1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef22324e-2277-4026-affc-9a74743692b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9f5c01-2ca5-4f66-a9d0-69222a89cbd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbca65e-2e16-4461-8008-1b3c9915f20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74b7d149-6123-45c6-aa9e-cca96e77ff70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51dcd3f-3401-467e-bf20-79b792e0545f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba930a8-5a42-4ad0-968c-50324f9c4513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58b5ced-938b-40d9-90c0-658f4f8da9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a226844-d260-4919-bfb2-89b352410dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ac0e5b5-d7b4-49b6-975e-8fd92bec49ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82004637-4864-4811-b389-1eb43c375a72",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17819fcd-7417-46bf-9b08-fb4e73cc3b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b8742b-0a30-42dc-a548-f4cb9aa7ffe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da2c02b-3794-45da-98ec-48cadbb85433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1e7564c-eb94-45ca-add3-0531fa69dcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7198fe18-8068-474d-8ce2-dee3c5b51298",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9010e7e0-d114-4428-9e91-359e9c19d927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9741305-f14b-43b4-972b-76c7d9d90f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ec23c4-9ee5-4fcf-8034-4686d0a7ea3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1779231-6ca7-450f-9431-65b658ad18d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8724564-7da1-40f4-8b94-d75a01495f68",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14813b16-4b46-4caa-bdf2-308eccdca0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf77bd6-2544-496e-916d-56650219aaba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01884e0e-a39c-4f67-b710-0b7d7a886bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24318bb2-f58e-4594-89b8-6617f55349db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7630c3-33e6-4146-b24e-ff35edd674f5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c2f78b-ac90-4af6-8388-11febd6779e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047051e2-b5a2-4168-b485-ed5f00cbf1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d7b703-f3f3-448a-a8f0-5bd9bdccb3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "899b10bd-deb8-4688-ae6d-4046d352891b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23075c6e-7dfe-4d0e-b454-42d383df4376",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d0ff00-9c20-4401-8036-6c76e4a9d609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0209b760-b910-4642-aa5f-046288b22d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9f1750-5c48-49c1-bd31-dd9215439494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72b285e8-7e84-4e25-8065-35d3d52de1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957c4aa0-6e33-41a7-b00b-38f5bf89fadf",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9136c6-1d11-4356-b501-c5396baf0401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb31daba-6e63-4a33-9f3c-05146f3d5171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dfd58a-9ead-448b-b5c9-227bb15a09ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e79d55c0-ef91-460d-8de6-a5d247b2cb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80365e1c-cc46-428a-a34e-90aa6575c733",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb00a31-bef4-49e1-b847-eb8b3540c327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef05ef40-9949-466a-a887-f2bacc0c8c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a17cff2-fc0c-4d83-9f1b-b99b059344ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b2fcac3-748a-41b0-86e2-1aa8aa135e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a00320-aacc-4458-8027-db9f09d0306b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73a723d-63de-446a-91e9-66fddacd506b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cced0ccf-d944-4efa-9a2d-1346f069d48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6331315b-0ce4-49e6-9636-6d064b8c2f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b51c0b3b-c0c5-433b-853f-2d7b1157fb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28e0dc1-de0c-482e-9c04-d7c4bdbcd34d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a51632-365e-40a8-8f39-2fa0ddcdbaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c91a47-a56e-406d-aaf2-883d105b7b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d83055-aed1-4cae-beea-32b15713d9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4471822-7052-4c7c-8809-3fc334de70b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2282b13-ff98-4e95-82cb-be92ee20713c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a62e6e-3e6c-4241-b320-23e1229f8848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0abc50-fd6e-48ac-afb3-c50048d1ca72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7cc2cb-4477-4a60-a788-99081ae4f1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2046df7a-19f7-497e-8f9d-ed50c4cb9541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7de743f-d1e7-4ca4-9122-6de7102d39e7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635fa08d-5810-47ec-a47a-7325d71180a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff11e20-2142-4359-bcb4-51a3d8bd2179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc77509-c917-4041-8284-54d1fd814284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b324414-ca42-4a2a-b8a7-1d6591898e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca9ff4d-c4ee-4d1c-8226-b18793b0e854",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770a7489-0dbc-42b1-8cb6-054a4057e4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9111b317-29a5-4d64-9c17-cf81f8afbe4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401f27b2-665f-4bde-811c-8b016a0e5de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "034bacf7-124d-49c6-8506-52121fc066b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26be0e4a-7506-494d-aafa-2de2374df25a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa4303c-0304-485a-91f0-3edbb74b8e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e444d037-4272-4730-b199-e27ce3fb57ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166b718c-6081-4971-8142-5b7159b714b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "770b598e-feda-45a2-a615-1fc5bd1c1a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a8b66a-cc58-41a4-bc85-870036d8b075",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b5fbfb-241a-40bc-806d-ef9cf75223ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc3ab9c-9fb2-40cd-b537-8c97d97b4179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2cc469-c58c-462f-ab19-07e84c6b50dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef06c1a-2d2e-40ea-a6d0-8d8968ad4d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afebbb3-8114-49e4-a39d-94a74f9c4a22",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86844b9c-4b4e-4232-b0b1-9b7a140d02fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e39f770-bc20-46f0-8d3e-5d0f02997046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed11289-20dd-4e6d-8fc1-72736f1873d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e48ea4e4-993a-4bca-86f7-d0348b64a8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5e9685-e955-4f7b-9bdc-153034ba7da9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb2e77f-79e7-425c-8bb2-fdc066cd30c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bc90e7-c431-49d9-9937-94bc74810add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fb8703-aafa-4bc3-813e-132443d2eba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e0b638-5ca5-45c3-b9b0-602b31a68d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be72a33-cf05-4811-8d0a-c373dddf92cb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68f9812-ba97-4fb9-a784-648e86fce40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc3b788-d985-4965-a59f-96afe0a9dc18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3aa1010-2513-4eb3-9ef6-aa3d90b4f36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "af71a6ae-6f1e-42b9-aa3e-bf95bfee5e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3482abe-1e2b-4e7a-9d24-cd691aa502c7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae7765e-64d6-4147-a16b-93ddf09c2888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1edc9e-d1e4-4354-999b-5b3a461a3b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b997fb81-c684-46c1-9c45-02bfc3fd90a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "691e9230-4679-462d-8efd-1c6545d3e048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6534b6-a310-42e2-921e-51321ae20dcd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576ed136-d4ee-4ab9-be99-2c777a15ed43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747187b4-d221-4db5-b40f-af21b938c904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1882111e-96f6-43f1-aa1c-9084576d05f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "742d77a0-cd06-47b3-9fd1-bbfcaaa3b0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2741e705-f60e-44f5-b8cf-3041fd0c86b0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5494ddc4-c5e9-444b-b525-a0ff7dde9677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5631b07-39db-4632-b93d-5579a0ac5638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978cf2ae-a3a4-4fab-a97a-435421237b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef602462-d26e-46b4-9aeb-44a0314487d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8f3c9d-cbac-4b8c-b5d0-f3b05cf6c71c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fe4814-8081-4cb4-87de-d0a2cec2c890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd99d9eb-2770-44cd-8b11-98f027495e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217681e8-12bc-49ad-ba4d-8477f924eaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3319f0f8-dd31-4c65-a455-14d9266064ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a50206b-cf9d-4e33-9fb4-92378353ab46",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737a7419-b4b8-43e7-931e-b2b5d1a332f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d268b2-407a-4f1a-bef7-164d344e1340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0eb10e-30d9-4d76-8dc0-29ff758e9125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "303843e0-2e18-43e4-b565-9da5c2d1545e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec5b115-9a4b-48b9-a238-158e7f178544",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c644900-7bc8-4963-9dc5-5896c488e73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158efde1-c358-4b9e-9e99-00e3f7febb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d871765-dc11-4bb2-b9d1-631508aeddc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0461dc-eddf-4ed3-80c6-5cccfe636eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e383c533-2de8-4c8d-8dc1-d348492db812",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101efd2e-e07a-4be2-b73f-14160515576e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf02ec7-38e2-4b2d-9086-031bbf87291e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646124ee-b3f7-45ab-a045-aa47af2f4d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ebb798-9907-472e-bf9d-1342554d8b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cd2edd-6c5e-42e4-8854-afdb3d5daf68",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb330b37-1cf4-416c-8039-d3e4be4eee7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fbe7aa-4967-4aeb-88cb-b9393a4fb339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a4ae7f-f813-4555-8d10-bfa5b0238f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90a3a3dd-dd35-477a-b83e-60ca3d4d0f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14922806-cf39-43d1-9bdf-1425d3dacc80",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaa3365-7666-42eb-8f55-ad367b43b427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b46020-6a85-4094-b132-77f85dd08233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a44b8f-1b09-4868-8c5b-f62653610503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bf5385-e356-4b70-94ba-8772c560f4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8058432e-b20d-4553-b6d2-cd0a7bd40e75",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c65926-285b-4827-b5d3-8ef082122379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61444a73-5429-491d-b97e-aed49a15f513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a039a8-f605-4998-b553-a004877cf21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9af508-dd00-4af2-b956-acc65d9b9457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05c5434-287a-4be3-968e-f0373a930bc8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecdaa11-df13-4318-9c2a-3f7b40f05ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d49462d-3c42-4396-ade1-9c63b27ab053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d23bb7-727d-4fbf-a1e7-39707eaa3732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f92ae455-2807-4ed9-91fb-fc219dddfa1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45defd87-8b10-428d-a756-4ac9740e237a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a47c001-a2a3-4874-bae0-5a65be098bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe736231-97eb-4215-ba36-caa201309e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa58b67-4740-4ee2-9785-b03939e74b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce16164-a8b5-4d7f-a401-7472d7fa4624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fb44a5-f581-4e6b-b26e-564966577b54",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c29604-4e4e-4418-8387-8e79dabbb18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a86fc1e-fcc3-46c7-981a-6e1ed0f7a697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c857f49-a425-4278-a14e-1a397668053c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cc89de-42c1-4650-ab52-57914b5674a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b47954f-1b81-461d-8aff-1c32f7baaa9e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c2379c-6227-4046-90e3-b0f0483794b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d539a5-34a2-4aa5-bcd2-d1d2d1df78f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffef3ee9-a5a8-4240-8db2-2019285b3d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "42b948a4-9dfb-4702-b078-d5b104aafe2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1dcfe1-2592-40da-85f2-5c616b75dd81",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef83499-65c9-4c7b-95d4-76cf00d5973e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a53784-7e2d-4ab2-bc9b-0b93a3116534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fb418e-ad68-4ef1-9de1-c2caecf3bc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c77da7a-586c-4dd9-b35a-903770f98ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6465ffa-7f7d-41fb-9b6a-1c323a109f41",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0977cb-07d6-4772-a920-30fc7ed9511f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4127739-fff6-4636-9401-dc4820d65bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d06915-e39b-43d8-ab8c-beb67e8a7eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "65fbf9aa-d5a4-41e8-883c-405698a9c75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5ba073-6dca-4ae8-8a26-f31cf3d580f6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5845b4-2b08-430c-9442-378bc2bea16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f3f024-5b3d-4bd7-a738-93b020eb6510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364e5624-658e-4172-8fa6-ab00ea54843b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "11cfec09-1743-4290-a727-303f64dfa9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14569e53-dc1f-4f25-9d71-527d682fddfa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056c86d7-d205-4b01-b510-e7f9ddf45ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c39718-d0c1-4e7a-8728-dd293017e34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375010ad-6784-43ef-a49c-6b80b085d1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7a7765-47a7-49dc-9751-23e1fc5829f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58035258-2e77-4013-a5eb-f6e107e222f4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e904e4-ce06-4286-b2f3-8b0b0b16f1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1d65ff-42f0-4d2e-87cb-b829723417a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8e5149-d0d7-44ff-aeed-164b0fd30180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0369c2cc-72cf-4093-aa80-25a0efeb837b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19d919e-d36a-47f8-8759-bcd258c2063c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae17630d-2294-4d48-9d05-040431b1778a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951abf87-e8e9-4bb1-8fb8-dafe79b4fb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d78eb4-9b25-4839-95ee-0f11bdad2aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "79f1eba1-6eaa-4471-ad43-485950fb0426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d979f8-e49a-48f7-91b7-6411646034ca",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97545e7f-56ae-49cd-a7ec-4de86e2c2439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc4242e-f6a7-47bd-b084-dafd113ae26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2327ebd5-8445-4d91-a8a3-1eddb503c140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d48f901-4bfb-4387-bc2c-216919139de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c722d9-ec04-4e8b-9f5b-c9ea6210a914",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6a8b26-76a0-4292-8f2d-6c6f9b22a06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2164f791-702b-4d2c-b8f8-8810f285f63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927d0a3f-8b9d-4168-9b49-5ab592a2bc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e06096-b8ae-41d2-bb8c-a4d6e62b7f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923245f0-8b13-4566-91ee-d20d63a6e018",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e9e31e-1820-4e5c-b925-b353b80e5a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44015cd-d5dc-4199-9fc2-8cb4d99aeb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071ea910-8263-413b-9c90-eefefffc11e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e04b0a5c-6008-480d-9d28-8b9450566986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056286ad-cbd4-4207-98ba-560ebd215826",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb40a22-f6fc-43b2-b0c8-c0cf43147da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1dfa0a8-e84e-4a3f-be6a-14e9ba8ad989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3465a6ac-3149-4df1-a3af-02266b462fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a83ff690-15ad-4e10-a4ba-9e2908a27fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fa315f-d42a-4df2-be11-4b75d1d364b6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f932714-4fab-4ff3-b41f-0b18cb722e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b628115-bc7a-4fd8-828c-5a2d3d5019db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dacc139-725b-4809-88b0-f2f4c18ca1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8f7127-a1d0-47e7-a0e0-5d1b3342874e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961d5f23-83a5-4692-a55e-af0281779927",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db20f3c8-7bc0-47f6-9d4d-7a121c486859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ad386a-35fb-49f5-ae78-b6f2c567ff21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fffc9b5-cc3f-4b7b-af62-498ff23e90df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26623c42-b112-455a-bb84-280f20f9745b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70a6099-0a08-4341-a6e0-c6b6890ef86b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec1eb6f-46c9-4968-b15d-d9920006ca4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f5a353-acf8-472a-b329-b2bff4ae9171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214a66b0-591d-404c-aa28-074706205216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbd44ac-3085-436a-bc84-82998cf49cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ababfea2-792a-4074-a225-6b0e7d27aabd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce975a7-4ca9-4fab-bd6f-a4fcff875868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b92ebc7-06b6-4206-9527-3c346c5bba8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bf3b6b-cdd4-49ca-a88a-863a99decd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c41f0a9f-1705-4d49-bb69-723f2a7b37dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887cc492-2967-40ed-a211-3e2f59ff693c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c1aef9-f9df-4e99-ad45-524f95a7b794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73daf2c7-6200-427f-8722-083634ad4010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f451397a-09c0-4c80-b567-0895bef83868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccab2865-d4d4-4bae-86ba-5750bf57b73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29219267-29f6-44f6-9b53-c8bcb3ad761c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e389c6fb-30a5-4670-a4da-247130ad9f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01031d72-e980-4bb9-b6a2-4b0b658f1750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c1f8bf-6775-444e-b324-ce0a8b81a200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93014cd6-c51d-4999-8ddb-4265e016751c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad135fde-ad98-4407-8bca-3b7c21b40a40",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807ace81-60e3-4ffd-b91b-5ac72e3b6f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb74c2ed-0eb0-43c0-b031-4f4f0860de90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797ae108-4484-4c4b-ab00-b158fcfd7bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab2a9ef-6064-40b7-9707-d889b142421e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdeab240-1d3a-49ab-bcee-6779a2719fbf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41680343-c846-4096-9e60-55ea790cbb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62a8f02-83f0-4315-94fb-033419e96ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b4d350-18ab-4d05-b570-c846766915ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c15f3f22-badd-4721-a8ed-88e07be64efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da64ef44-b5ec-48ed-aed8-d92a9588cf30",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b5ebc6-c60d-4900-af12-89f3d6d2a03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee68644-5c3f-49c7-9819-18a3d2b3d19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b2117f-ccbd-44cc-a349-219b0064cd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "887228f3-4822-4d72-95ef-eb027d221f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f89399-0468-4cee-b6d2-aa891e143579",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0aab47-9fd6-460c-b8d2-600baa160c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9804dfed-0b9b-49e3-97a4-be646d170dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51389113-bf6b-414e-b8b7-1a6f290d986c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a279a5f-1a82-41f6-a7cb-a85a4aab616a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d376b0-7420-4260-9fb2-0d1a120989ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c84ccc-7240-4de2-afcf-25986d07ad82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0298a7e9-1951-4657-a20d-f9fe122de68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7bf37c-22b1-4f06-8b0c-991ec5845239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1854a047-5a59-4b8d-adf0-f33d824f01cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d06c2b-949c-4c58-85a7-0a4cf64321bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa74666-471d-43fb-a4c3-65f1bc9d76c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1615e148-4813-418c-9938-79a2b31196a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67f0b2e-97a9-4aab-a87e-e9769ab849ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "47ee1ee9-4be1-4026-93c0-af896f08326f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2970af72-d865-48f0-8c16-c645286c459c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e786836-7490-46f2-9e5d-4132215cbdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f915c2f7-f1d4-4aef-8a66-5e61f930bcab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39be7d2-a6ff-4012-854e-2953a7e492a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e33d4799-a75a-4f04-af40-aa9610884c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1c22e7-e19a-44ab-a62c-b3d989a4e8c9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7bddc6-3d4f-4eec-9ca6-7d26d8d4c954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25aa6f0-31d9-4357-ad57-8dca440a7b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0f0de2-892b-4316-9727-3f35c2e4d6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6176625-603b-45a6-8b2c-e5761f6f2ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6a7000-c628-4673-93a9-59476716af0f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd300b5-46df-4c00-bd2c-b103b9ecbd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4b56ed-0326-4828-b9d2-d5d9a4014658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfb8f9a-0c94-4565-b9dd-f718e3181ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d72a57-41f1-4c3f-bf23-be76bebf6eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f1f366-b3ba-456a-976e-c6b0a992fdea",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432d9f88-f809-45ec-b120-20c45185bf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed01ecb9-b40f-4f6d-8c59-4f54eb6b16a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21453166-e142-411a-8dbf-a78ffe790870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5289e9a5-c7e0-49e6-9646-809143c3e538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f908a342-c09d-4af5-b9ad-b8d5c5401d47",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ddf569-52d3-44ec-8958-a683f3775ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c71c08-fc15-4491-8b76-44187589de4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0625ade6-0f7c-416c-b8d9-8cff3a344986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd34ec6-e7b9-44fa-a584-87835845ef44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371ddfa9-db1f-4e97-98c2-46f968340456",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe540c65-9429-44b8-87f2-e9774757ae21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d324a777-c203-4162-be68-07eecc92e0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d80af3-d92f-4cb5-8617-c9115a337c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "048bae97-b006-48f9-90db-6ef6c4c4c65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0424ca0c-5c40-4ac5-83c1-8324232646d5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc4e54c-8cc9-4863-860a-72fffa923da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa4fffe-e9d0-415a-b91b-7cb9b48c34c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3d8a1f-9e55-47ea-8226-11595dbf2476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5a416c-7f65-4ca4-9743-8fe1ba55ec55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a377238-01f2-4a63-97dc-902b1881f6c0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f8f971-2fca-4e93-99a4-8abe0a74cba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0bbf61-382d-47df-9756-abe8abc49fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f506871-7223-4355-bd62-34aa52be4e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d06c36-d771-49c9-a4f9-e4cdf0b8350c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00899cb3-a2d7-4914-a802-66f6514ae72d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c134b50f-b3f9-46a5-b8b2-9c571a977491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75ac10e-14e4-4772-8732-59a77f9569ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b14683-bd31-4d47-a429-dc48ca306822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e132255-bba2-4d9b-90aa-4375a13bd82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910dbef6-dbcc-4656-8fa0-54f1aa02bc16",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502912fe-0cec-4d85-af01-b5a79d16602a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36483225-45ff-4cd7-b670-1ee53228d09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b626016-3cfd-4e8b-961b-bc9c10c76b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f6472c-ab2f-412e-8cf7-4e17c262fd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0ad10b-b70d-465b-867a-57cbd84225c5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a05c59-7a6f-4021-a8fe-04707a483114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b27d64-57d2-4f03-b2ef-5418985a7c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa135e38-d937-4b32-b38c-6a02dcc51142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0d0af2-3e9f-4269-9e10-a8cdb518789c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0368db90-2345-4665-814d-de0c0f1a9ed3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54eb3dc-2298-4460-875c-a0f90fa71c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c25a99e-b839-45d5-aac8-300ab61fb6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb11d42-9d31-4e74-bd96-cb9d11797b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3128cd7-4621-4d13-bc4a-0e6cc9f79fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5115b8-8a32-47ce-b795-4e6dfaf69fb4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11833b53-cccd-456a-b7fa-61c281d294b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bf5ff6-9567-4560-96c1-2b1550cd70e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f83e95b-1618-4a9d-a1d1-c349f27cd494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "102c4f9e-f793-480a-8a9c-4cdf04c15bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad2fcb5-3d6e-4bd4-b93e-5217eb5003c3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a9165a-cf8e-4ca2-8b7b-05b2820272a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e933408-a710-4379-b806-41db63e7b0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b502377-ff2c-4e79-8d68-e66743f87293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eadc5abf-7ec2-4dae-aa0a-132a6aad32d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f1cfea-93bf-4d3a-9860-6a0e549f9654",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455076d0-f44a-479a-b446-adbf4d0ef069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97028c87-e4e7-4fd7-a439-1bc545c4866f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63020327-65e3-4fbf-bcf9-ceaddfbe5918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "739d14d2-5e1b-4582-b726-4dc39eba8c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96ba499-64b5-4e3a-b625-83e6426fe5ac",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f578e32-ff14-4582-a88b-60ac43496424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa940e6-eb2d-43cd-a44c-769169a4b35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0728763-7a74-4607-ad0a-e9eb546d02d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5559313a-c678-4c90-a87d-731f136ef382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb77715-cc96-40ea-abfa-21833694e7e7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70be353-377b-445d-9189-d7af2c6bf8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcd548f-6edf-4f59-8450-196f29e6facb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d062aa-69a4-459c-ad85-bbed5f728f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d48e6bbc-330c-4613-9239-697c6fedf9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0731e3e3-d34f-4f11-875a-25da693492f2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388d0c35-33c5-4d90-9d43-ff1484590c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5876938a-dff2-456f-baa0-c41391ebf64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f490b4-af4b-499f-aa21-4f9290010bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e91de927-5de0-47cb-819d-300c2d5de05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f576af-82af-4942-aaaa-f832d80e52d1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca764607-1774-4956-a10b-ac26f5a5f70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b372bc2-4f32-46eb-a4cd-0ec73b242c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3aa3a2-a498-48a0-af72-64d2e328b67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a92f8596-269e-45a4-9871-c5fdcab0d50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b13db4-056b-4ec6-b732-928437d9af38",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6b378e-2355-4a50-8590-fdccdcdb182d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189b46f4-a499-4205-88d7-7aa9e6be0293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694e3835-3b21-4155-ba5f-103edd773498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0bb6aaa-b464-475c-98e0-be4506050837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d59b01b-60a3-4a2e-bf9c-d5487a7b0870",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab8adb3-5fdf-4d1d-a487-4fc9139ae635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded21429-aa7a-484b-8d41-d605c0e11f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82423184-fb52-48ea-bede-aebe8d966e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bc6bea-251e-40a0-8921-0d75eb7c1455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8886970-df22-40e7-a5c7-59c1ebdbd60f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d1e69a-23a8-4f70-aeab-5f690f98c98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58625c79-2446-4f33-ba83-47b8e046b426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec07c67f-c5da-4f56-91f6-17d449544c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d75e38a1-fd62-4a5d-adc2-722c02213cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75b23b5-5f41-4059-be94-84c4cb5921c3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965b5d6c-28cc-4a9e-a1fa-bbddab701962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d236909-7eda-42ce-8aa6-5fee305ce676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fae7eb-ada0-4ec2-a8a2-79f4fe1986e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e51fdf22-28e8-4ab0-8792-103ae9746cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fadc2a3-a1cd-47a0-83cd-380654f89eb6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98406f03-593b-4fd0-ab4c-e8e20440058f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fbf8229-fdfd-475d-bfa1-0eb6e214a5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77886e99-2e66-4009-9412-8db36ae7fb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be3893ea-7535-4f52-81c1-f285e97d3e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d610b0-38b0-4b1e-94f1-e6d3b62ac489",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7340f3bf-f535-4ce5-b94c-d37a79f04854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17705df-81a2-4863-8999-890446f1631b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca3900a-1263-45dd-8cde-a94c8cbb69fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d84f4c-3084-448f-9bfc-3d46285ac4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9bf35d-df4a-4213-925e-f47e17960ff3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd9ecd4-f761-49cc-94c9-07fe3e6e5e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266e2e5d-528a-433c-b708-c1450a5d8eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bc14f6-d0c9-40c9-82f1-add2eab1206b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea894f4-1a1d-485d-ab1b-8351cd206a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c89adf6-c50a-4575-9915-a8e5fce37f76",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0aafabc-bd7c-4e23-b1dd-bbdffef9f384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f85dacc-d9e1-47c5-a8ab-be2550ef56b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d1a3e7-71f9-40b3-a6a4-0a7851a6e37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b03db8b-e9e5-4063-b902-b1191c4c231e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b996c095-5ee4-40a6-a7bf-ab757df87980",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901fdb01-217e-414d-8ac6-f41c05b70176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c9fd33-4d7f-4357-a4e8-563bb537c783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661dde93-cb30-4b20-9a2f-fe9e4412787a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7aaa6b2f-ac79-44e5-ba4a-2a289d6e5f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acf2bb4-278a-4dd4-91a3-31505fae4c17",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6b3233-f28f-4c9c-bab9-7744ef2ecddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda116a5-96db-41cb-9b12-3a373eb57971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c032951-9176-4666-a1f1-29d1ea08d159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1718ab-12d1-4f85-8c50-3ebdfa752a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49b9dff-827f-4371-9b75-d4bbf2160ef5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0721b823-8204-438c-b611-d48a5237ad96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de93e394-80bf-4c99-96c7-4a84d816b184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600bf268-864a-4ecc-8a35-fe786c3a2828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8eaf61-a110-42e0-a356-cedc5c0e658f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6965fab0-eacd-4563-8fea-e29d1a0067da",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cf2dfe-0754-43e9-963c-5fda6752f13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e283f97-56ab-4500-b5f1-4afa5804f7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd6317d-00bc-4e05-8606-bb345a051022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a03e3956-0ea6-45f7-9752-a564c733e710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa38aa3-971f-4ed9-a660-6db0f39cf6c1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4278753a-3a62-4732-a1be-926e5bfb4744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "662f2d75-2d91-4e84-88c9-42a8c42e6c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0003f2a9-3faf-49ac-94d5-842dbc1e49fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad110c8-6228-4e8b-9b28-6a9794e1362d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b0937b5c-52fa-49fe-9de3-354b72b44de9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3be6fc1-e4fb-456f-9f9a-80d59851bc88",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40c008d-943d-4f6f-a850-b076cc8668c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "188bcf6f-85b1-442f-ba5c-c25acaaca710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d530b32d-99a1-4c16-b8e1-ee44b2fd2009",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "811d2e95-d928-470a-83b9-034cf82a7bf8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47acdba7-3df5-42db-bfd0-b3fc5713126e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc96e61b-b1da-4cee-ac99-4cbf7c2f1e75"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cef3428-c739-48f0-b577-9c835202c8bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6483cb4-b0bf-4577-b55d-f14541d51cec"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c0b1853e-d137-4222-8563-b63e87780c8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b41cd9b-ead0-4eb2-9adc-46019c7fd238"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6e4a2675-b7d2-4d7d-98f0-afa453000908",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "001af223-4e75-40b0-9645-17be974bc402"
                }
              }
            ]
          },
          {
            "id": "a1b5218f-61c4-4978-9cc6-ac5b6bc59ce8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da75938d-0eb9-4900-9ec3-88cc15c6fa06",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f25c0901-016c-41f9-a9d0-706c7ed02052",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a797ad-1031-4785-8bad-970855d41e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "15005f64-7016-4aec-a925-95ee2f772af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dc4da9-c2df-4921-af4b-248c3e11b498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6185b69-0644-44d0-8f50-fde910db90fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ac4bd95-d1ba-4dac-b2a4-c22dff7ca28b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bf8193f-87c3-4d8b-8630-81d709d57d92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9c8b666-7a2b-4353-baba-8bbfeb0f9ca6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c256f309-7f58-4add-9419-d22e75ba8875",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "578c8122-cc35-43d7-92a4-cad5dac0868b"
                    }
                  }
                ]
              },
              {
                "id": "e177e1d5-cf63-44ba-8784-e2fd322f294b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71da18ba-ba6c-4ef9-8282-4dc1b7112fb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8dd5b36-18e3-4726-8814-d72002bafeee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2c4a7e3-8b89-4332-8076-507ac7b361f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16a6fe6e-e7ab-4019-b569-4d0312429a32"
                    }
                  }
                ]
              },
              {
                "id": "f990ebd3-cd7d-4934-a6e8-e2b8a71583e2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d08811c-0ee3-4f6d-821b-292a846a1ff8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9ce4186-903c-4d3b-b895-0b3dfa5b604c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6831ad5-8eb6-4674-848e-db6371221ecf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7897725-e465-439f-b4d7-e023413b5257"
                    }
                  }
                ]
              },
              {
                "id": "1592c19d-f5ee-456b-a70e-553e4e447e9a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db8f1505-e3b2-4ac1-8e67-37895621370e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56bc8797-2d34-4c17-8ec7-9c056f6bf92d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e03a381c-80bc-43e2-90d5-a1ae833a2c6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9122b498-202b-44d1-a97b-621f40ac5c85"
                    }
                  }
                ]
              },
              {
                "id": "e69cde09-96ee-470a-b671-e45e569ec17f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b1887db-bd61-45eb-8d8d-94d1130f5e8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41771736-72e2-493e-bcb7-fc25a5022b85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2111779-db1f-4499-96d9-016fbaaff0ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b58e6ed3-8d41-4d46-b38a-0c96eefd6aab"
                    }
                  }
                ]
              },
              {
                "id": "48ad08a3-5b92-4cdc-ac29-bfe1d9b6776a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6378da5b-610e-4ed5-bae4-fbd5fd3165ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b06bb62-87cb-4d4f-870a-7744275bd28c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81ac75b9-9130-42e3-b5db-c122b99266ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86e8e30c-6540-444d-bcd8-a5d2a13ed896"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ed994ef-d9ba-4c71-96d4-64556fdd1685",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fda4b16-1ce8-4572-9e47-17010143b7ed"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1f7fc5b6-77ff-4815-b79a-9a013a21966f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "335ae665-43ac-4a03-83c7-22c1aa7b8940"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12cfe84a-d7eb-4ada-9b73-59714ee17f95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a380eeb8-97dd-4b64-8973-31f68259ac09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a354620-a0f8-4140-ab92-0c2ea433da12",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3aeb4f6b-363d-4833-be06-eea66e9c8a89"
            }
          }
        ]
      },
      {
        "id": "243698db-e677-4fd1-8364-741237678be2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cb84a74a-c422-442c-bfd6-90563707cc85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f5376ac-c45e-4902-855a-872821880f47",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8242ca07-20b4-4fea-a3b2-a6b6b47c47ca",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ef906c-e94c-41f8-be22-ff6192b1217c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9afa2d6-242c-4409-92fb-6f1d94cd189d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0f85e8-fce6-47a2-943b-72a6c4e15fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7509c63f-0271-4bfd-9d90-7d9c1af722b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed8d90e-f2a2-4e71-b1eb-a24f3b543909",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61f5519-f00c-4064-a9a0-afb20e342c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d8671d-dda2-4002-b0d6-e31cd438527c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc8bd95-8f41-4dbb-a6cd-8dbf4409a84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0792a57f-0993-4eb9-a6ee-0b09793938e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86287be8-0a50-4e8b-a0d6-0fc81ca3a86c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5342a954-be38-48cb-80fb-aec7388e2987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166b1106-eb95-469d-8817-23ef1ac05a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1db880-62d0-4c2b-80da-3e1141e6bde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a26a06b-4713-4554-b973-6e91835e2be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af90fad0-a394-4574-b855-2baf3299a186",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0eb282b-0ffd-4632-8814-0665729257f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08d407c-be71-4535-8a18-b3fad9e383a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea11710-078c-4945-980b-b163131122c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97a64fa4-3918-4f15-81e8-dc26542f4d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97b90db-d60d-4401-8a06-7f78bd7aa36f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c976ead-2f9b-4a25-ac21-d729a872d374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b7b6a2-6f37-4b98-b70c-d2fa483dabad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dfb397-3922-4020-9bf8-aefeaad2927a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63697665-0312-4cd5-8cce-01de00c57a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34e207a-778a-4a1f-9f12-1bff5b3c7940",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed6d3ad-3ac6-49fd-90ce-eb61a86ea08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee8ac8d-c26d-4f6e-92d2-c9cf063d1a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda3e33d-aeaa-4ac7-be20-7094f449ce11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b91ac0f-6d15-452c-b3ab-11f4a0b9312d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289fedd4-dd9d-4c66-b1be-9f1b7870822e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0dd88c9-6fe1-4b63-a572-23b13137ae51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac07114-b78e-4ae0-8355-3ac57963c1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ca399a-7fd2-4fca-a395-a7436537097e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e35f40-e02a-4a56-bc8a-082ad29f7e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ba1a78-efcf-41d1-8911-e8d5bb012087",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599f94a3-0e06-41ee-8676-f0c492190694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbbe8ec-07ae-4fa4-91c3-a6ef305cf7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ec8770-5b98-4dac-92a9-73285d20c924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7b030a-0d27-446e-9630-8f323404e670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ee7a4c-75f9-4305-9d50-3e1fb0fceb86",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8392a36b-f0f0-426e-b06c-6af5eb191325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5358c2-41ed-4d45-abdc-186589cf8690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675d4654-b3f9-47ba-86ff-da8a6babea10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2c1f0d-364d-4e22-b8a2-132ca16b37f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25b3581-7360-40d2-94d7-471f7c5433ed",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f081d3c7-8017-4ecd-acf2-94bbb6be45e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1828de0-f530-46fa-a20a-779868ff6ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc63aac4-337c-4a0f-a34c-ec146699e235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f735163-5013-4ff3-9359-359422e6ee56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3889c84-9938-415a-8913-550d8f48c0c0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe91c51d-dbfe-489b-b8ae-41c98d8d7483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fbbb76-6554-4765-b4b0-991e2019e0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f31f4e3-f179-49de-a7c8-b3d34f92a750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "18cbe3b0-a07f-4cda-be08-4be4abe961c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071be50f-cbd5-4c47-b19a-c8883769d7dd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e68c33d-be6e-43ce-9d47-40ff8f6e53fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f7766e-cd57-438a-a599-b428b5818421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14006102-50e2-42d9-9fc2-4dfeade05287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c663cc60-b9c1-48c6-9045-6da94c941df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b364c0a6-de73-4ba6-9507-91329f575cea",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34889296-4d87-4fba-a745-7ecb8bc36250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67d0fed-69e1-433e-8b33-0c9fedcabf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a8b6df-83a9-4975-b5ae-cab8d36572eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4738b34c-66a0-4ce7-a0a3-41c33e71091c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33958d4b-a089-4ae4-957a-bf4710ba9fc8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c1a42f-68e6-48d4-a96d-39456103f3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304e78d6-004c-49f0-9745-de52bab24bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abec786-99b7-4739-aa23-b7fa4dff20c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b60b7e4b-657e-45c5-9d0b-bdd91bdff932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a081196f-d793-4c75-bf71-c460674e4b50",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadc234e-6354-492b-a5de-38039037911e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3814939-fa34-41f8-8395-bd0c85a41b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84c2c76-8046-456a-83bc-33e0b316bc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0983863c-eef4-41b3-a39c-999fb3fff07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b743e0-b2f9-458c-87ab-f5f095712285",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af8aba1-b4c0-4c7a-ac75-428b00342550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab0be3e-c7cd-42fb-b3e3-7084b0dee732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f56a5c8-8450-4139-84eb-3d582f3cb8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce16bd3-2158-4206-b2ac-16a571b8c605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11aa086c-ba96-477d-9040-3c73ae3e96f5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d8b795-0e7a-4d32-b438-f3c571081846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ee0601-387e-4261-aa65-16246f1cd061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd556649-6752-429c-b461-e2d923adbca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e181d21-45ff-4a84-b249-b49a621a0c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e26503f-8edc-4e1f-9970-ef264e497503",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5a8f40-74f8-4840-8bc2-a3da07126230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d6e869-9bde-4d70-b75c-f8115bafedef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da556a9-029c-4a0c-8ec2-24c445abdb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9dcfdc-3b25-441e-b42b-541197563a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413151ee-78b8-4373-aa59-788f92590229",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a92ccdb-f135-4382-bbe4-c4583564cb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9b145e-6846-4a9c-b8b2-4b06f49ff3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37c8d03-866d-4199-8418-ad0f6d56a2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a388df39-036f-423b-9079-77df1d5b2b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcc2410-71f7-4cb1-bfdc-431068d07297",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7215eaf0-653e-4992-ab8c-12aced1d31d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6995a83-838b-4f4c-9e7a-a8ad39fc6f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca8e0c3-f056-43ce-9386-e41a82e4afce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "049277c9-0925-4a28-893e-df44cbb82e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d32632-9a84-4d82-b4c9-34c1f6ec35bd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f158572-5591-4a88-aa9a-6084b029bc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1fac14-8ed3-4ff9-8a7c-6c9c42346f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17df7c4-6718-40d6-949a-edb404c12c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01a4378a-9052-4a17-bddc-8fffea8e96e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bf2678-0aa7-4a12-b2cb-6698ab24af2d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08adac2-2cb3-4838-a7fb-839378c628a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f300af05-c8e3-454a-b1dc-364f3137d1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0ae60a-6aa2-479b-bcc9-4a1218830c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d26ca2d-4cbc-4a02-b170-a67c0426eecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c792551b-83ed-4be7-b9d8-706e2372754b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171c0dae-834b-4cd8-a6d9-72337b64a170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67b344e-37fb-42e3-8068-9178e23fb8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbb61e8-8762-4206-b91b-26cb296cd5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b43f5af4-7d80-4eb5-b7b7-e995f64c2487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0bea4d-d10a-4242-a187-765d85f2a124",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccd62de-858e-456c-acfc-3f657f127c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e563fc26-ba92-4925-bcde-a84dbf7cc6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bd0556-5ac7-489e-a015-60fb0f195d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1116c777-77a9-457d-ad59-9c3d870bf739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d583aef2-2160-4a39-b258-771dc163b8ee",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547b2c7d-05d2-4585-ab26-820632e8b71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715492c8-0126-4ed0-babd-ce3bd0327236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfce2bb2-96de-4cc1-802e-67e5d81436ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34123209-312c-4430-9ef0-37f434aa3180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bcb754-cf96-4fd5-bef8-42fa780d90fc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c035913-07f3-4b6c-aa17-b31536b620b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4018d164-c6bb-44b0-8b20-0c3bef721fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44974b85-adef-4ece-8c15-f9410bd67218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a8123c-1bb0-4345-90e2-9b6d34d86879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3815231d-ec52-4ca9-841d-6311d57477f8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2b4041-639c-48ba-a9ef-ee73e4030854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a58491e-be27-4686-b4fa-5534debd6ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb92fe20-d9bb-441a-9b23-e6461dbcb6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7d9d50-6484-4b77-acd6-682fe148b508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8711e5a6-a446-42d9-a49a-2da39ded16d8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ce43fd-f848-4093-9a24-c2176b2a1e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e1048d-1567-4f58-806b-4c1d04fd09eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71de81cc-58db-4c5b-b526-553d4bc83bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b62132c0-2b68-4af2-bee7-ae4228bc80fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6276cfb-b59b-4aba-b62d-880231e1bf54",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084fb4d5-d546-4828-b00a-57f8759a061d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbac047-2217-4bfb-9c13-483d144d9af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d68f926-4b01-4bed-810c-db7561fe7cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc5b44b-0567-4284-950e-18ca2d2f8208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6ed782-b96d-4c12-9460-840baaa163c7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1e60d0-869c-4c45-acbd-fd700966aa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01792178-686c-4bbd-8dc2-32162fedb9ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927848f8-85ae-4ae4-8ca2-6e4ab5c028b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "319f0086-06e9-40b7-b3d3-ed9c66f64796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb1c980-7956-42c9-b869-0edbc1b5d44c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df988816-5c34-41b8-a323-1d8fd5f657b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbc5f8b-b561-4b6b-a44b-61cdb011b64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774d475e-2779-44a6-8bd0-2076a8f53f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd45e53d-9978-45aa-b6e9-4cc46f05117b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b39df63-19ba-4826-9aa5-1460a66fd735",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9ab7b9-ddf6-4bc4-8f22-909262df57f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b364c9-3041-46d8-b0cc-19f09d760b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f69da24-5cd4-40a3-a9ad-ea275ee0c0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b03b9c96-2e87-47ac-bc76-190d0e34bb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59b0605-fc62-40fc-9de7-b8df07a56916",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b736ff1-c7d6-484b-baa9-acd1120a44ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42c5919-28d6-4b13-93fb-5b4177e56cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828ee5f4-a1a2-4043-89a9-8a8d85da482b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "179b0005-b0c1-4a06-a20e-610c536f5040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4399690-55e3-46fb-92ee-fe291d478c93",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fd9d33-a671-4ed2-a426-a8ec429f8eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51136448-1469-405c-ac57-bd3a038b03eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ca131d-f791-4b1e-b078-b4ac1cbb269e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1763ad-af20-4a7f-b81c-0b17a847791c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2aa852-1e5e-4538-8599-c6074b3581ef",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dc8f3c-851c-4265-ab4f-08998f3c5119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7632721-9346-448a-bcb1-9a4b0f4f9148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df68828-cb26-481d-bd4a-7fbcf3855ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "674d5167-cab1-4741-93bc-97d5a1fe4e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d4b444-8ab7-4cd5-83fa-f74e35b4c70d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9262d139-9130-4681-b9cc-3dddfae75ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0053ad-f122-4e49-88b2-49aae064c8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acdecc4-30b8-43ab-ae1d-8444184be80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7149a1fd-2511-436a-bbae-dc74a0db46da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964799c2-55c4-43c6-ba49-f76381541be6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b12f52-e40e-4489-8319-0f50996709a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175c03be-a48d-471e-bbee-1a6da7c97c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa78b7d1-4221-45c6-897c-ba1ff40848db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86aac8aa-d24e-47b5-b989-6714cec4b43c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7699ac67-cd41-4256-8a3c-343278cc8621",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8395b30e-d0ca-46a7-ae38-958bd568dc12",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39626e7b-4fee-4d43-b0b4-405fdd58cbb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "503c61a9-3f4d-4a95-a54c-83bf79542a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9dcb97-ed38-4dc0-89fa-1ffdae24adf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba7913f4-92b2-494e-bb24-3a91b3ba50d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "541080b8-1678-4abf-ae80-1c07a4ea0dd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae9979df-b119-481a-93e7-320d2e584872"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5c74b90-4a91-4d5b-8528-6e17b1059e10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14a09ce2-d67f-484e-be43-2669dafcea63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef0045c1-b392-488c-bb53-ea4d19cb8712",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "09db0e69-afe3-4ccf-9ff1-2a8cf002866e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3b772a1-cbfc-4b67-b30e-d933dda3ffbd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e744c95a-8386-4775-9f1b-edc3c142aeaa"
            }
          }
        ]
      },
      {
        "id": "95b72cf9-069c-416a-9fdd-df90d6c0098d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5fe59f21-6134-4577-bf4d-5b9eb512a19a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21078aff-4965-40a6-ae0a-3cb0d33f7cb5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "070797e3-2aba-4b8f-acfb-73a68137c2e8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5061ef-8ad2-4d54-b77b-697974e06b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3569e7f2-6d18-4cfd-8ac8-c5beddb32edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44253da6-35f5-4d15-951c-f5ad930feca9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da822c4-6b9d-4f43-83d8-ec700cf9d2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e14d04-c2ae-40f2-ba7e-8ef36338af57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26db15ac-9a9e-42d1-906a-3be02c7a586e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f97f82-77f5-47c9-95f5-97a1c9141cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d425e6-72f6-43e9-bcab-62ad003d4347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba97f37-1e1c-4361-91f4-58d9de918df6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d65cef-3512-454b-aeb9-633667e251d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2399e39-4070-4f9b-8d07-ac11175e4218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68646250-29bc-4c1f-95d0-b90d50ed6a82",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd609439-3ed5-4cdd-a6eb-677b35f199f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47d85f2-b0fb-4180-bdd7-2747cc03a35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe76228-ad3c-447d-b08b-0de1dcb0d497",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d8d5b7-cc56-4a82-8d92-cdb9ce830659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81c9e5d-9bee-49d4-a60c-ff85e1905b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27030edb-65dd-4313-ba2d-17ff5af74d60",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ab49c9-af31-4447-9596-859dd094ec3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85db26c-9312-4d2f-b209-478d9564698e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54151f7-dd7c-4b2d-a2c4-91772e967539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34407842-38a4-4ad1-8de7-ac23f1e23d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27548423-f631-4cce-810a-ce1c55ef12cc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959e49d6-5110-4918-ba56-35dd7a6e5850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af40bbf3-4252-4939-9365-340b4eef6ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfabea1-b541-47f8-8646-9711ac94e182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85ffffd-7da1-40be-8914-26965d21c1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edf98da-b2e2-4b49-b298-64855c27ba66",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb6cdbd-42f0-4dca-8e33-8d6e91aec28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecc804a0-1f29-4c6f-98e1-369da9d6f147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e288f88e-4db0-4fc2-a6d9-eeda512c16e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0934b4c-6c1f-4aca-8f8e-02bc5fccb55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce5881b-d5c4-4fdd-a9c7-4ca20cc3db9b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2448a3-7c2c-41ec-a683-310722874827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65fff643-68ef-49a8-bd69-951fac90111c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e60f60-6446-4947-ace3-4b8d149ef385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6c44a0-3b40-4c50-8fe7-ea79280dc38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cedf466-915e-4803-b94c-22518c8bfa82",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428562a8-bc71-4173-94e8-fc0b2858b146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b010d4a-f654-446a-969e-37d1570b2b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b6e128-728f-4038-befa-e52af0a10416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd7f4da-c529-4c55-bc52-d8cc348cc432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380faab7-9337-4649-9735-a6a62547fb32",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a1f0f9-397e-459f-98ba-915e7d6b2a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae0b16f-2a9a-4b8f-ab48-7d7550335c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f438f52c-ab9b-4413-8428-da16c8ff5e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a4be4e-5ed1-4852-96e3-219b619e8982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad80a1ee-a98c-486e-900f-ba04ed0f45cc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081cb627-f68c-434b-9e35-b6d275fd3f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c837e71-ac61-436e-88b7-6ce754397ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c33b8f1-3973-416c-9fef-ddcafaf339fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fc0d49-3568-4d43-99c7-2f7a4396d7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644cd2b1-40db-4d55-9218-1f8ada3c1234",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d788857-ca2c-4102-a1d1-f0607295a279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1efebe1-ca70-48c0-be79-63e8997f7321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c93c1e-56fb-44a7-b8c7-22b935b9d98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb04d0f-9b61-4cc1-ba5f-a171a3a33eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a26e3f-8c6a-4ae5-aab6-a0fddf32fbc0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d166db08-34b0-489d-8181-5830c9b1fdce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3daff65a-91db-4567-be77-3e7e1a32188e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d456b9-4a34-4d13-afce-b284d1e1ff23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c139c590-d080-473a-8e58-330d6237f341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f784eea-d13e-41a2-b221-e7a6e4f86f0a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c095fd2-167c-40f2-b7b1-5004b129e42a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46bf8bd8-78cb-4e94-bd5c-805abf95b0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b09f1d-71ce-463c-8ff7-21491af47e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78182384-27b3-4a7e-825d-87d9402c21f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb3af2b-0966-4a54-a53e-1a76d212fd9c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a61996-d053-4938-8078-5dd96e348246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25ab78e-867b-4ff5-a5c9-898304a8f879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce39e10c-c540-4fb6-81ef-c9f39cc057b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfb4bbe-6c78-4425-b8c2-a64fff7a9429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd757d75-dade-481b-809e-0ac15959d089",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396a6829-31da-4fe6-ad96-7f1334008a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15547813-73b7-4599-b594-1654d2f948a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e5fcf6-754e-4f2b-93ba-c85a1c64b193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea17549-07a0-43b7-94b8-1e53785b9046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95683ec-b946-497d-bd12-adc4a241c0b9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727ce6a6-a6c2-43de-9018-d4e93256a5f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45259e8a-17e0-4695-a27f-fdf066a0ba30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40ac7de-0c40-48db-8290-5fb866af0d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7140cd7b-c866-481a-895a-21ff7c5d1b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ea515d-fd09-4cc1-a5b5-3acace72cd4b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7812317b-ed7d-4414-9b84-96a84f874484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4235f52-c52d-402b-bb54-0030c86792ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30eca569-713e-4361-ac4f-79f6bcd1e357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b516450e-829d-4a13-a26b-6e646976b120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cb401e-3f30-4b00-9493-b1fe12750a06",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a773b6-b877-4375-a547-4747854fa1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59de8d9-95b0-4bc8-b320-b6d5a614542e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e035e31-0439-4ccc-b20a-dc44bb25af6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b22e51-88e5-4deb-ad07-ada6ca2789c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca644501-f3e6-4b35-a5db-f727de5bf283",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d5b45c-bd27-465a-a03e-b2e0f0882db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee79979e-347b-43c1-b92d-bb15eadd8d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b117e574-09fa-4730-ad71-8d961d757756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f89d91-2ad1-46cb-91ed-6e0325e80737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ce051e-f2b4-4e01-8422-f568bbf18672",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fd4a3c-3933-4a64-870a-94ab46e6bcaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4fd4e7-4e1a-4aa9-ac29-f0935c04d9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8119686c-497a-461f-a5f7-ecc1caba53a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8af221c-d4ff-49e3-9983-74c4c8f3b126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25684de-f25c-492c-8447-02663c1c4576",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc784cfe-ab8d-4443-a8f4-b29ec80952d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "596e830c-9620-4765-8afd-b97affcf4fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586e3c2e-e9b3-42f8-b965-67b6c26b0561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f197bc3-85a7-47c3-a2bb-b1bdc6000e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50349026-3ec2-4ce7-b473-1f9f67ac94cb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6aba803-5372-4c1b-bb92-dd0ebaf77344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "505a3406-ca34-44c0-beef-402e01d626d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e8339d-7d4f-446a-8220-729db7825706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82653b49-a227-4392-8913-c6d46c8b372c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d388bc-2d49-4aa0-bb9e-a4ad7469e55a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50da268-5d78-4508-8d76-a4e26c65073a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d960cd2f-61be-470a-b8d2-ec65b48a2d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f7d006-c817-4dca-a7a8-7906c293a01e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeed4357-6a27-4893-a42a-e8504af98c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826006b3-ea48-47e0-8688-927b01a4dbbf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4eabf5-27ad-41e6-b53e-f8e69a47e43e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e7dfa26-540f-45c2-b696-367fa696b1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e604ba6-3041-4485-beaa-e531f6ac3a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748eb233-ed52-4f96-86ff-bb35e2ed0d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63cd431-f218-43d7-827e-9fd4b07f6be9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b581a722-6f43-490b-a059-912b6a8efe15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956bed4c-c0e1-419b-a2ce-412ddcae64c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae1a88e-1d55-48f5-b26e-6f41100f6c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf9fd1d-1003-480b-9410-fde46e39dc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e2bd87-8333-4004-968a-6365d7b8329c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacc13e1-40db-4127-b3aa-a2058ad7406f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "755d8466-1ed7-42ba-9c82-59b290b7b86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8df0b21-62a6-49f7-bf58-470b7ea7b7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2277c2ed-2e96-4e75-8c1e-87d0956b7bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4900e9-baa3-4964-982f-085d9fb0222b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e84c7c2-8064-4f6b-a1cc-11e02a748083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c827652-b8df-4a87-b8a8-8b70d0cf5b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d28eb4-1d79-4e18-8d2c-267243ade410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ad9462-1f0f-4458-8c97-005a537d9db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e2c886-a244-4396-be52-ae2ac2d73ad4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e29e067-30f3-44b4-88f2-85d939130a60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d73b59-8975-4977-9fa4-8074d3084715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2443b1-b346-4dcb-8e81-215a4883918d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4220d34-d3f6-470a-849f-a8c9853a8893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953a2e80-47bb-41bb-a6f8-7ccfa73c3002",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9644079-a152-4145-8b45-6c7314f042f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d626b90-1e10-4eab-8cef-53a5e2747c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d51c48-eb74-4b12-9d5e-79255e3814b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0a33ef-cc5b-40b5-aefe-b447a1bfeabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4268dee-82ba-42dd-a9f1-92286071d6d1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358e8194-0780-4ad7-8f88-172178fe6c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "880c8817-8919-4c43-9a54-9864df668c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9814e9dc-15fa-472e-99c6-6f736e6e9d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfd7f96-a7b5-4afc-9be1-e2cff99c4f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d8f3ec-f27c-4f3a-8e9b-959cf9a6a5b2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3f8507-4ee4-418c-97b3-8cec6d0731c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f604fc3e-06ef-4a80-a600-eb3d079bd29e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4983be60-b774-4ee2-895c-b75e302f0e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085d0036-1702-45cf-9862-49495ce07fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3ff460-c8e1-4913-be5f-043b7ce07142",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a68f7cc-a849-4f87-a756-20116a82b875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68ef351-2f8c-4f30-9b04-03cc2451d48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d5b241-40e1-43ac-971f-ef7c3c250327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a3b5cc-ff11-4491-b98c-ee2f19d70b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03932b9-d108-4df2-bb98-ae06cb7b6fbc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a791009-e55e-40f6-8e29-a1e770e0b21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498ee433-4f54-4fd5-acca-5e30dfc06253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8659d09c-9041-4a92-891b-c030f9020d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9afd25-4d9f-4579-a097-33003a980bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bb69ba-8a5d-4a90-bc13-900eaec65f6c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d41d160-1840-4163-9edb-c341ecb9f02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12c46f7-8213-4778-aaf2-c9e654ce3e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a12331e-b3e5-4265-8c55-872221786b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3e0f12-d42b-4d02-aabb-9f586e72025b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f72cf6c-83d4-4b18-9224-75a421309e6d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d3b2bd-2773-46ad-8491-44b113654526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f294d6-8bc4-450e-b9fb-e1306d02b592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05992d46-8756-410b-bc8a-8da0582ec796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e002f40b-1dc0-408f-b78b-2a34bb3406d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d741dcbd-0b56-4d83-9967-a2f91a615c89",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b47af7-97fd-48c8-9350-05d2ad23b9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f83c9b2-208a-4f52-9d18-7e8a3b5bdd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f54da8-0c79-4b67-9da0-3c8f9bc11abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8e3731-162d-48ec-8a21-950d0a4e4273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ee2f08-7ee2-415e-b875-8887d16eefa9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041dc806-21e6-47c8-8fc9-9d99a8543472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176298fb-024a-4d3c-9975-b15b80863f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e83746-cb3f-4930-b71d-d22c20e75755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0f00e6-c99f-42e3-9778-a12997462856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474461e3-4f99-4082-af14-4b0c5bc9c93b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22db0e39-0519-4ccb-8ca2-a4f1bd08d0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af14317d-0194-435f-986c-28a382ce7135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5185f8-ffc6-4e79-a9d1-cbdf5f261a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93001138-ca1b-4cb8-b1a2-c6021f055eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df116c3b-cc89-4976-889b-21966c807b86",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6802c9a8-3ff9-4900-9ff8-c0274be2b24b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562dfbdf-4260-42af-8d3f-fa1d2600ee01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fb0be4-39d2-40fa-90a8-24eb3f9c0eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbedfc8e-605c-4687-b5b8-c1f18c73c894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a7239d-016a-4074-93ff-0f3ef00fe165",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938707b4-7657-401f-91d4-58d847622f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ca0c52-d124-46d9-8667-d1d52fac9b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8425e28d-d805-424f-b2fe-c4f91d81f005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbceda55-ea24-4ff2-ad01-efebfedde2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9c86f8-262c-4848-afa3-a6c423fcc1db",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209f88cd-479e-4db8-bfac-eb88f9b1d010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b759d6b-d36c-4c60-ac80-58d6fed33e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba166338-dd1e-419c-91d2-6a0804b40215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da6d377-6a6d-4c32-a02e-09dfcc74298f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0de20a-ced2-4c64-8552-004fd52e61d8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53f28d8-ad0b-428b-9070-b08fc1619bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce52130-c4c6-49c9-bea2-2c65f73a365c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be38424e-da10-4558-86ba-90ab6b178a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98668659-c96c-4076-acda-3d28c284d7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09dcfec-3a2c-474d-b4bf-6c69dbda40ff",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f0c3ea-3352-4179-b102-a0d43dbb1dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7253dc16-31e4-4690-b33c-4f0344d015d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c37ba0-bc9b-41ef-9e40-12cfe8db398a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed71efe2-65a2-494e-a96d-c9a60a58213d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad19040-a795-453e-ad04-2763fafb3db5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a10fc8-f982-46bc-9294-2797aed003d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abd64f4-5c4b-4e6a-85e6-e60acdbcdcab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0249a3-047b-46eb-93e8-6b36880bf461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52adde5b-4ab9-4ef9-8487-d0aa1f99ee0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da3ed44-60a1-457c-8fc4-fe19741c8466",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff149e1-bd34-462a-8f73-c045519972a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a2fbbd-c78a-43c6-bf68-e6a89f422c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1dea2a-1873-49d6-83aa-0a9cf545be81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381973d7-aeac-4b5c-924b-36c50dea51fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f158f1-0415-4895-a370-6a4224baa716",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d4f3e0-8054-46f7-b12b-1de830f34537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da7185c-e691-4ea0-af3b-e6c44744fa86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed371cd3-5783-4f42-8b63-c196feeda139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1d15c2-fb59-43a2-8c87-0b698aba35e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626cc1e4-983f-4c37-85d2-6ca28e814f41",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf8c95b-7fee-4c72-8840-76d8b67d47cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff461abd-bce0-4ac8-b69b-3f27d2eea400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c7a402-313e-4ee7-b451-beb8b8b00d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26941ef-f8cb-4da6-820d-ba069057f5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e424c92-6d76-49ff-9578-a88ab8d9e452",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928bccc7-0dd9-4ce1-90b9-ff63fa7eb407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad284c9-2f0b-48c1-86ef-2d22d2094773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7a461a-d788-4c54-8be4-fbd00cdf14bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda17cca-7af4-4c85-b623-6e09ecfda5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14700016-a8af-4917-965b-8f1ae5782b83",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43926392-c732-48db-bb23-90a64f89c664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8c5d91-bdc9-4ec7-97cd-2143bdbbc5dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5020c8-2bdb-4a94-9da1-0a9ef758d0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdeb9053-383c-46c7-8df8-38ac8529273a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a18f73-9826-42d4-8cff-c922c5f1d8a2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8955b76f-12d7-449f-af99-3de92dc2e611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f045c627-b0ae-449a-8f25-ca6e6488495b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc91ec54-1527-49b9-8c80-5c3da4fcb026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efd4a0b-5fb7-4202-aea8-bad2d538f582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0a5e06-f6b3-41c1-af4e-bb259c7766de",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0bd3b5-f6bd-4885-97a5-b5e4096a741f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f729b3-9d22-447d-84cf-2949e3c6df24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5933f894-4aa5-45bd-ab92-6148503c06f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac40e4a1-d0ba-4190-97ac-048ed5c3d4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73a7e14-483f-42f9-9dd8-0bc1c0ff4bdd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdacbe4-6dea-4f91-ac0c-df39a72efcef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6208bb00-a6df-4f6f-bb26-9fa43ac06847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654b3c87-6610-4629-be22-cdfed4f1c879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede68701-6455-4f00-84c8-1723bb3b6077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b445e89d-4890-4ea3-8273-0a92eb928d21",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49e3db3-28b2-4932-8375-6dd98d147791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e8a9d4-fd23-476c-8bbe-6fc5ef2e578d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0349bfee-4380-4f84-9bfb-af069c4e7f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99e9e21-f319-4c8b-b6dd-508774abd6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698c00c3-1fe3-4901-91b3-8c8671e88d5f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba24900e-7d8b-47fe-99a5-0ffa6752f1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78086664-8570-45b4-a744-b534eb6e8809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d808296c-5e4f-4086-b126-509153077a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23eb335-90ff-4f27-9a81-d1984c77a492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7faf19-6945-4244-ae9f-64c02c770420",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901ab405-d296-49f4-b9c8-ba6b6d65ba62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757447b9-d107-4a14-892d-d9942c8816ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f090f1c6-0ba7-48b1-b79b-0c271a2069d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268d7b1b-4c7b-49b7-a985-b4f6f06be48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2b5dbc-2da2-428f-96f9-95e9e12ff3f0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46f5fb5-a4db-4141-b09c-273a23acf3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c05eb92-91a9-4d72-a20d-b817a981e9b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "818598a8-b6ec-4a45-9c46-b65debabd785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf9fa43-3b85-44b0-a55f-d3a632bf6ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b835ad3b-a987-4736-9e43-532855896357",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd47cf6-67d9-4003-8a49-c5286d4ca0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2485b37e-3bbb-47b0-b431-1cec5ab4d6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705347fb-2b2c-4aab-8085-bacf0ab07676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5029d196-4030-480d-8744-c6fb832c34d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6de8e38-ef9b-4706-a788-7207af6ec0ed",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9203d74-2d2c-4e16-b50a-e39f1af71499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375da922-6150-421b-84f6-77dd3ed93312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63549517-056c-41a6-82f3-67d453e10ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd566b0-b9f0-4a8a-ae81-b890dd51956c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80ecbd0-2c90-47ac-9e7f-d8feb186de56",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219aa2a9-b40b-434f-8318-6808ff769447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999fda38-1163-400b-adaf-8d9948b86198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a79ed2e-41e5-408c-b76b-13c4b6f92ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340a3fd4-103e-4c96-94c5-2d8aab8f3bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab664bda-1fc8-421e-8bcf-21afd744a35a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9536f45b-ce3d-4b8c-84f7-8bf1f7e75b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4c404e-9237-47e1-b3f9-f6769b6c0141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57f09d9-01a3-4394-9b36-1af7c629a063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d5259d-53d4-4624-b0ac-898c2d66fe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f6da21-0aec-4d92-8acb-a380f1e85a8c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b83cf39-effd-4012-8fa9-90e356a71a38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18178cd5-3dfd-48b5-9b40-1a319a4c7635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe4a3c6-c5ee-4120-89ed-f5fa178773f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2753fb-bb7b-407b-9c42-a73f93363446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c9f2d6-eaf8-4ffe-9217-a19010395e41",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d52cc67-a9e7-4cea-858c-bd8f525a7a1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb40298-831d-4ec6-ac27-1b476775ee7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d47478b-f7e2-4811-ab6a-061712190401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4826ff2f-1d77-42cc-96b4-00091a404b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3de9b43-bf89-4bf9-9915-c8e4187a9585",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23150ed3-4ded-4746-a6f2-553e26cb1777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318203bd-3d22-4122-a4c9-abd9be1eb5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7b0302-45d4-479d-9196-ed453a9ca248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72897dfa-9bc0-4cff-b358-dbd7eb999a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf529d8d-0352-46e7-ba07-a403a4d17d4a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d0e68c-d2d8-4401-ad2a-c27bb6b8a165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "754b83af-9ca4-4fb4-a268-2a05dc4551fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f3cbd7-695d-4b50-848c-ca19c496a756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8944bb0-3c95-4ceb-a454-8feae2ce46f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a10080e-3800-427c-a3b9-ab2f575bb6be",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ff9a2c-8bba-4bcc-83f7-043ace5745f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40386c7a-1758-4f1d-bb81-ff819f245f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c04232-f832-4a47-a2be-01d55b37da5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b8cc1f-9107-43b5-bf8e-b86955049aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92552ad-103f-440c-99cd-7eb3988f392e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0a0779-a323-4582-bdd9-aa788e248ff6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf5741fb-88d2-413e-b01a-afec5089879e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2db4df-0f74-451c-a47f-07e2d0347ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3db5922-7f8c-4460-81c5-1f46236539fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d039a0-789e-4310-ab3f-7a4e67ddafa3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821386c0-a4d2-49f9-9a96-29bccfd88e8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f82501-7e33-4c12-9dbb-c7ccdaffc5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4372d92-f91e-4075-8181-7a1d07127b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04bc6ae-9ec1-40c8-b561-1ef9a1c99f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44553528-34ea-46f3-a8b7-a72b3133fc19",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be0c48f-ab0e-464d-91ce-df0cee0a73a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01a8af44-7c7e-4c56-a3cb-4b367c1ded4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4811d66-2086-41dd-9eb5-121828bddc20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2962cdec-672c-49db-a4db-8e9def732364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d84731-eac2-44b7-9007-a9f066042167",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dd10e9-7369-4451-b94a-9a30c36d3415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53377682-e7df-45a5-a9b3-7648634cb6cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e2aaeb-9463-46da-8ce9-89ed816422ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6945008b-1a1a-4769-b464-f58c36655da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f385535c-d6f0-451b-a7cd-17b56e6771ec",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba68313c-89c0-48ce-901c-28a4a167d501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a7210f-c34f-44a2-bdc4-8be7b7559b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3210bdf1-3e23-4ddd-a688-fde4cc0b485c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c80846-6eea-4918-9940-b85a2d51c374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c481330-690b-4041-97d5-58250803deb2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b118022-4a68-4d28-b2f5-1d9f9c29a658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1fb3da7-4991-4650-b5d1-c6e48d44e9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf9dd3b-fd3a-41d4-9518-010f4a72c56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82cbf936-609a-44fb-9ca5-d58ec3c3efaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375f137a-e3e2-4d11-a83d-30e4bc618cc4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d12f7c-f51d-4812-9d1d-65b9babc8dbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aad6b1b-9b76-48bb-be71-59a21ff783ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1eae357-4aa1-4bb7-bcae-d63df487e49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4dc5793-ae5e-4bcf-a9e6-d2c539470b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9b06ed-2d7f-42d5-9b71-ce29d728cb3b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acea265f-bd3a-4819-84ef-34b124e94490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79833660-5c1c-413b-999e-552ed59fda63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a54d2f-2e40-4f7f-a71e-b7f081356845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f99f01-0ffc-456c-a658-d23432b022df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8b54cc-08cf-4aa5-a3e7-b092718e42a4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa37b82-1055-4305-92b9-c95bd98aaf89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bd67631-6975-478e-bf63-5f2064520da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3426e63c-300f-49ee-8989-b5bc580105c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca8210c-4532-4e97-a1fb-14d4c5cb4f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bce127-a2f2-4777-8833-d867cca50d8d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2caf0eb1-b8e1-47e8-89d3-a946874c3963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52d4708a-9a56-4a1a-9df8-623c591bbf3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a469b594-2d00-462b-ba37-2145c82a6b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e47657-5612-4fef-b22a-8ac45748ccf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f834d69-0c5f-4ce9-a4be-c457408c0137",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f79003e-f185-4d9d-864c-675e3cf77079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98ccc387-8cff-4d7e-80e1-0bdc700a5814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a5546a-fe88-41de-9008-83156621ac88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd5c546-7255-447f-a13b-ef1cbd9a0666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2beeca15-8398-424d-b309-74de42b1ddf0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47004bb-a686-4356-b003-37fc58450c47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "825b8660-8031-413f-bd0f-b7ba915811a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775a12f4-0ae9-4a17-893c-e1bc5e4fba78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb1b965-6809-48b3-ad7d-5a2532878cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe0c1d5-d989-465a-b2e4-0820697413db",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d905537f-f2de-4958-8cd2-fb82c56b5889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "757b1ae9-13f5-4b7e-b12d-ca5354cf616d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efa05e5-b5ee-4ec7-ba1d-f1103cedd89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80034364-a387-4c2a-84f0-2484153a4bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74825e9b-e584-4097-b843-8b353f0e8b8d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08c84e4-27be-4685-a21e-9420514cafeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "659a83c7-fb9c-47ca-b01a-58d8423dde05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de272ab-b82b-4cfd-beff-844ce9569fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1ba96a-fab1-46de-a0ee-97f1a45dcc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26799b9-3b37-4cf3-b25c-1d908382c511",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403cf784-0c54-4dc3-9940-ad268e4cf9f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e6f4d8e-fd65-4f3f-a8fc-946373e580f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed00b17c-6946-497d-84ed-ccf7cb7600db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfae312-e07f-4c9b-b759-00aaa99e44dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e3cdf2-baa7-4a3b-a010-1cb0d1f009d7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a5cd3d-de21-4345-ad66-db89c11e94ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de9677ff-9484-41d3-a00e-68b4d7371318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18c3e71-f481-454f-a4ee-7708784f2de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68296741-8c98-4ee4-ab98-21900c214bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07963527-abe5-43a1-a2ca-fd85ff0ae657",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4672df-faef-4f73-9eee-356635faf89d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7efa45fd-2b3d-4389-b49c-32c39d63c55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61e38b6-f8db-4ec4-80c4-fa2c73be265c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b68ecf-60f9-4882-833d-2a550001d560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145deb36-91f5-4c6b-b0e9-2d380f701670",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d547a6-09b5-499a-9a13-ad388d0334ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f651f5b-6927-4976-987f-1330bbf29676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230d5fb1-0ade-4ca7-a4d2-4da3cf2fa7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0a8515-b8e7-4032-86bb-d80831a6c273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3a41ef-12ff-4a03-a443-52e9e8b7d415",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e61a209-65fc-4347-bb05-ec99c48430e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be109e00-a2e0-4764-88e9-50016724add8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9365f541-eda6-4aa1-b285-aa3ce956ac6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc76b81-d38f-408e-a58d-08dd8b61048f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5806c77f-e9b2-4a7c-b06a-8d753b828b35",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ad934b-1675-4623-a10f-5634f34ad8fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f40298-eda3-45ed-bd07-b56388f270c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3427cf-629a-4c9f-b1ff-91751106fe53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39468b38-e4b8-4686-95c7-387b571cbeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2620e3a2-cb89-4dbc-945a-1fcd8fe90a34",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c8bf0c-b728-428c-9756-921e0a11e465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5391af6-a9dc-4a27-9c17-148355802ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e386a5c-16ac-4236-aedd-4f89fbac309f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25fd5620-80f0-460d-8f92-7697218e50fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5402bfc3-0c2b-449a-9591-fab15d353dff",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f172f24-621c-462c-a2d4-405d02a165d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10452179-4758-438a-b985-2c515eef04b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe9f7ed-014c-4c52-b82c-7f8fcf4881f5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c3de3c-01f3-4737-8e5d-ea248107aa0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af60f5a-1bdb-4897-bb8c-264a4138fec3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2ed973-33e6-428d-947e-e1cfae95329d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0ce9c8f-8e7f-46a7-81a0-d91ae0703cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e17b6b-5302-46a5-a22a-56e3e0c9446f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2764c6d-a119-49e7-91b7-8686ddbafcf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01636ca4-02e2-4b01-bb09-4551d666135b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed2c87a-76cd-423c-84c4-00109ae8b757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0089f2d2-e1d4-4ae4-b90a-d30b57627482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86914469-9704-495b-9ef2-a612c44c1157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5827e4-4668-4924-95c6-5f4001337380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9894f32-4fc2-4e41-aa3a-0594fbdbb949",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a4d3f7-f75a-4445-b5ce-6e29cb0fc47e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d92bdccb-430a-4a1f-9a3b-57542dd4ef1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf6c93e-809a-4ef5-a655-c598f352f462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897a6854-4943-4bc6-ab4b-cca9516cfb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308dfbe5-7ed5-4ec1-a371-6b2e6f1e7913",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b479f4-189d-4dbb-932b-e81a714b5f78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06f76a3a-f5c0-47ec-9509-bb4f1f0ab385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c290aef7-7ddf-486b-9982-d498b415a801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45dba5e3-4631-4eb5-9abe-caa8d7ebcab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ebb224-b7d9-4f0f-b0d3-ce7f2757cb3b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d4d858-e06b-4cde-8070-173a0b60e584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4457fd14-cab1-4ee3-9127-af7cd28765b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be5a343-b014-4b9b-9055-0c55fccb622f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3474e7-2cc4-4dc0-b4dd-1d7c68ec05e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569d2205-bba7-4926-aaf8-cd2f84061a7b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e052ad-4797-4930-8cdd-33760e50099c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6400bd58-4dbd-4ad1-ad05-defff9c515bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fff6dac-11f8-4824-82ee-2a478137535a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac244307-d95c-43f8-a5a3-466aa7d482fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96eaba0-8d4d-433a-a0d2-a652d40b90e5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f211d66-2e77-423c-9778-2aee1ce2052f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e109e476-2a66-465b-93bc-c273b4bb2c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ce67b8-0a48-4600-b4a2-c5e9ba40853f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b0e853-e6e0-4e94-8d52-13e3b7f95fb3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4c2e5e2-a217-46d6-8585-0b6bc91c16c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8717b05a-614d-4c30-bb9f-0ff4be131c4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9899863-c26f-41bb-bd8e-3601a35a3177",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "990c83c8-5f41-4e95-9e34-a2261295d484"
                    }
                  }
                ]
              },
              {
                "id": "03093fad-ae6f-451a-94ce-c563e86460ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f61ec323-379d-4ea1-8968-562d22de1dd5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d28439b-fdc0-49c2-b33a-96d50512f5a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "74decf52-e501-44c5-a0d6-c32ca74d8b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2768449d-8f89-4d87-98b2-02684df43381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7682b54-6c00-45a8-b67c-2bf9dcefa8e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa50ead6-e0ba-4d16-8d18-147c316cb330",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9dd6c57-b840-4d5d-94a6-f047b5d8efe6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6547b2aa-a085-4b53-b6df-8825a22172f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83e96f98-68cc-4216-a763-4fcc721dca68"
                    }
                  }
                ]
              },
              {
                "id": "e08f5480-a37b-48d8-9519-59320c869944",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3312754d-6d84-4006-a10d-4e956ad0511f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b640002d-84ff-4d96-8788-f8ff2f64b713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "61a43f1b-9fc3-4000-a72e-33a4f7d291cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccbc283-5184-4132-bceb-88959c1fab1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da69bd5a-db54-4ef6-96d3-87c52ac26e42"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1b04e263-ba9a-420b-8309-0fd5bf7d549d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae83736d-2a97-4144-921f-1d226c1695c5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "764f4b29-1687-456d-a5f3-beea80dd489c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a4378569-7581-497f-acfd-f96412bc57c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccf909e3-b7b6-4efa-bc7c-86b592bdc766",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53f3d8a8-a7a2-4654-aebc-c9f621a02a46"
                    }
                  }
                ]
              },
              {
                "id": "dcb7fc75-847e-4204-87b0-40fd16414ef7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "062c60c2-43cc-43aa-a51e-a4fa94740a0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "214c9428-5e2d-4b76-b43f-108732e858fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "673e5a2d-7047-4f4d-924d-a244e6deecfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55446d80-f544-4e8d-a428-6caad7bf7fd7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d63a2390-ac43-43d3-a82e-a888ef3ee13e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6d1287cc-728b-4303-9387-e2601c3b1bdd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6817959b-1b79-4d0d-9797-17e671bf129e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e0bd2de-8508-45fc-973a-d9feb2ce6238"
            }
          }
        ]
      },
      {
        "id": "7fa8ff06-8f92-4cc6-8d1f-128a8f73d02f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ffc28487-89b8-424b-b133-e2b833ec81ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48adefd2-acb0-46e1-8351-ec8b0b387bda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d96f594-6dc4-4d43-ae12-06c0e52f2111",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5d6444-5812-4b49-b035-b64254f6f3b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "750dad42-f5b9-4761-83f3-46335c6cb8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6cbb77-b3aa-4027-bb4e-37f432fe8b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47b41bb4-ce95-4150-acc1-8ec24263f701"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f95fd3f0-4452-436e-a6fa-ba4ca738e2ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "820faff8-5b2d-492e-930e-91f6b0157768"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "955407a9-e9b9-4a53-8fd8-70047781b2ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3aeb772d-dfe5-407f-9798-2deea68aecc6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "085b22a8-4c01-47eb-b408-c73ee7f5dca4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7f6dc20b-4cfa-43c8-9b63-856dfb2545f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61ee046e-13e0-45d9-ae36-2b5f7fb7fbd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77931262-ef69-4335-9941-8666b45c46a9"
            }
          }
        ]
      },
      {
        "id": "6f6a348a-c4da-45eb-8fb0-e9f524d6779a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "019d85ef-d9b7-459e-9f88-25066126a4b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8acc8e65-05a6-42eb-b256-19c78ebaf8a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12d5180d-6dcb-4687-9e78-f2dc37c25995",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c1afa9-1786-4170-a37c-a654e0edcb7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f091a6bc-dba5-4fa8-92e9-9652bd20f8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c124fe6-5ac1-4ba9-b2de-d20db7e0af06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38f3879d-0a62-420d-a78d-98e0cfdca6ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dd371d4-3297-44c5-9705-4b82b33aba49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "874706f9-8d0c-49b2-8a59-229be630b6f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a40449e-902f-40cb-9324-a317f130f0cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e94ba454-8686-4e64-9c26-f9c202bf7b55"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb6503ec-2ae4-4d92-ad3b-28c09411e80e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "55489d5d-5118-4f46-9f37-6c25d83db4d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cd54717-4ad1-4d19-a7fc-ae86ab8d4ab1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05c59c30-79cc-41cb-a739-ce60f74aa4f6"
            }
          }
        ]
      },
      {
        "id": "ce21fdc4-5ef3-4d60-9634-eaf1ca3817b1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f28f2f29-420d-46db-a8ce-c2dfcf96ced9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "155f43ec-f140-4e9e-8ffe-cfcac413caaf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd712c0a-8281-4bfa-9962-4daaa036dfd5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2641ff3-6343-49a6-a2bc-d9e261441a67",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40b74b82-6203-428a-add7-4b72841bf052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09210e9d-bfdb-460d-9e03-41a67f31f1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5dc6ea6d-80a3-4ce3-a15c-d7b79785b7a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6fcfd5c-ad85-4139-8118-4ca1caaf9e6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "badf3161-0739-4089-8fe0-1841aa5bf9d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73296b20-c4a2-4b68-9fd6-4671ca1723be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b87c67c-27aa-46fb-97ef-e0e0cd2d9bdb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28b0128c-2d6a-4e5a-8251-e1be11da932d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3bbeb888-2697-413a-a1c1-9cabca95dcc8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53df5519-3e36-41b4-93e2-32b82333bdd5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2cf0633-5309-4a83-9581-a138370a28ed"
            }
          }
        ]
      },
      {
        "id": "fcd7ee3b-59f5-4928-98c1-c8ed8e9db447",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17358333-cf16-417c-bd62-557ab0d4e8cd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e32bb64e-988a-48b6-82c6-e7cfeba8f015",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9b84767c-ee8a-41cf-96d1-d1970485eb80",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0833c31-1a0e-4ab6-aec1-3df448248e7c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7ec6ef9-d053-49ef-a457-4a0d42164f2f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 33.5238095238095,
      "responseMin": 6,
      "responseMax": 319,
      "responseSd": 28.686790911308254,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721004060018,
      "completed": 1721004076681
    },
    "executions": [
      {
        "id": "3f213afd-cb9a-48a3-a1dd-59e9f5300295",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dd3f2348-6187-4be7-a34b-8b0003a03a20",
          "httpRequestId": "feac4db4-cebf-46f2-b052-a0b8bb8a1173"
        },
        "item": {
          "id": "3f213afd-cb9a-48a3-a1dd-59e9f5300295",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d726535e-67f1-4514-a74b-720b9942b9b8",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "5bcce67f-cf79-4a6f-ac6d-c96fc25136d7",
        "cursor": {
          "ref": "5719f23a-efd6-42dd-b932-d59ee0f1136a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "41856b75-eadb-4363-b196-b2f21f76ea18"
        },
        "item": {
          "id": "5bcce67f-cf79-4a6f-ac6d-c96fc25136d7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c0e1d4cb-82e2-4461-85ab-4524f744784b",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "c52f7d13-9bd5-4dad-ad5e-9c203fe4aba6",
        "cursor": {
          "ref": "f4671559-4624-4a3b-a41d-1ef5d2e3ef63",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c1ab2078-f67f-471d-9af4-b74a62c15bc9"
        },
        "item": {
          "id": "c52f7d13-9bd5-4dad-ad5e-9c203fe4aba6",
          "name": "did_json"
        },
        "response": {
          "id": "203f4e70-14a6-4fc9-8e73-87d675651963",
          "status": "OK",
          "code": 200,
          "responseTime": 274,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2f5527-dec3-4081-a185-cf5937e56af3",
        "cursor": {
          "ref": "6d2463fc-5a02-4170-81b2-9ff1db484437",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f2ed67f0-d1d2-4e5a-b636-50639f76a8c3"
        },
        "item": {
          "id": "cc2f5527-dec3-4081-a185-cf5937e56af3",
          "name": "did:invalid"
        },
        "response": {
          "id": "de0b0c73-5284-4d81-aac8-28f616afb408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2f5527-dec3-4081-a185-cf5937e56af3",
        "cursor": {
          "ref": "6d2463fc-5a02-4170-81b2-9ff1db484437",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f2ed67f0-d1d2-4e5a-b636-50639f76a8c3"
        },
        "item": {
          "id": "cc2f5527-dec3-4081-a185-cf5937e56af3",
          "name": "did:invalid"
        },
        "response": {
          "id": "de0b0c73-5284-4d81-aac8-28f616afb408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4940a3a-a62e-4768-b050-c279d0d558e8",
        "cursor": {
          "ref": "24d54581-7fd1-4a62-b163-f38048c5f9ac",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d372e2b9-1fee-48f5-b987-5bf350fd03db"
        },
        "item": {
          "id": "f4940a3a-a62e-4768-b050-c279d0d558e8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3defe378-028a-4892-a1d3-0647c781424f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 146,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe94cd92-09ab-4d0f-82e6-404c5e6754c5",
        "cursor": {
          "ref": "1179a835-a74d-4f85-bf7b-1d3617e6bfba",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ecbda02a-8960-455c-83d1-7976003646bb"
        },
        "item": {
          "id": "fe94cd92-09ab-4d0f-82e6-404c5e6754c5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3248e826-96b2-480b-939f-7bfa3d0f07a7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbe63ad-50b4-48b3-8ddf-5cd21b4fa12d",
        "cursor": {
          "ref": "2d4282e5-ca2b-4f1c-8451-30fe74160eea",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9b0c5a3f-7a1a-4fcc-bc9f-6163a1c2d85b"
        },
        "item": {
          "id": "4bbe63ad-50b4-48b3-8ddf-5cd21b4fa12d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1060d4ac-07e2-4455-aae5-75d5b908c4a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687fd47b-86f8-48ae-936e-0e9ddb2e3d9b",
        "cursor": {
          "ref": "999db720-cd3c-4321-94b6-059742b3ffba",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0aa7e03f-445b-430e-a122-adaf3e5d3675"
        },
        "item": {
          "id": "687fd47b-86f8-48ae-936e-0e9ddb2e3d9b",
          "name": "identifiers"
        },
        "response": {
          "id": "c07bf468-6351-4974-bf42-fdfb7aa4ff71",
          "status": "OK",
          "code": 200,
          "responseTime": 260,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7daa264-f2d0-4227-b792-b7d094522fc4",
        "cursor": {
          "ref": "e6bfa58f-94de-4798-a1fd-d0e5862147d2",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "18496135-33f8-468b-9583-ae8686bd2c89"
        },
        "item": {
          "id": "a7daa264-f2d0-4227-b792-b7d094522fc4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fa80e629-ecbe-406a-9a81-794f06cc1319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d035d79f-b3d8-48e9-8081-3f5ed73e4c05",
        "cursor": {
          "ref": "5b44a6f6-caef-452a-92d5-c283978fc470",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8ed9fc71-89d4-4625-8ffa-513f6a234afc"
        },
        "item": {
          "id": "d035d79f-b3d8-48e9-8081-3f5ed73e4c05",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fb267eb9-3229-4b89-98d6-bb92e1301d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b04a13-6136-4053-8b92-4b4423b989dc",
        "cursor": {
          "ref": "fd3694ce-f6d9-4c03-9d6d-3d3718c0ec3f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cc569cd4-beaa-417b-81b9-ba317471060a"
        },
        "item": {
          "id": "78b04a13-6136-4053-8b92-4b4423b989dc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "220b6fb7-0767-492d-b585-fb173fd3ac8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9be13e2-ac9f-4576-b807-f3ca88f9bd75",
        "cursor": {
          "ref": "1985b9bd-f0e7-4244-b389-50286a3b7231",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1e812f40-fac3-437e-90dd-eca3019427b6"
        },
        "item": {
          "id": "e9be13e2-ac9f-4576-b807-f3ca88f9bd75",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "55c630df-a6e7-4478-86ec-c50ba30edfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f8b1d9-57c3-4fa1-96e7-615a4105f900",
        "cursor": {
          "ref": "daee5c27-0876-40e8-9851-2ffcfa018c25",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "33d0f61a-4278-47bc-9e50-deb8552db8c7"
        },
        "item": {
          "id": "87f8b1d9-57c3-4fa1-96e7-615a4105f900",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a88cb724-9ad0-4e91-84f7-d750254d86f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efadf5fb-79d1-4509-860b-c062f0cd39b1",
        "cursor": {
          "ref": "da79a281-50c4-417d-adaa-021422b4df9a",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2d38d9f6-462a-44c9-9307-e55c4ef7f7fe"
        },
        "item": {
          "id": "efadf5fb-79d1-4509-860b-c062f0cd39b1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3cd43408-3755-498a-ac55-86a8cc4214b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51dcd3f-3401-467e-bf20-79b792e0545f",
        "cursor": {
          "ref": "d0898fb9-d583-4520-aec7-511d88b5b0aa",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "aeae6acd-e8f8-4199-acf9-62afd562749b"
        },
        "item": {
          "id": "f51dcd3f-3401-467e-bf20-79b792e0545f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "356e5fde-9c23-4e73-88fb-c7b25ada699e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82004637-4864-4811-b389-1eb43c375a72",
        "cursor": {
          "ref": "941dab35-aa46-44cf-9536-8b96c82d69e0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "91faba01-a427-46f0-afa5-06528c7a3af6"
        },
        "item": {
          "id": "82004637-4864-4811-b389-1eb43c375a72",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "77e3e45a-a106-4c52-a939-2db106ab105c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7198fe18-8068-474d-8ce2-dee3c5b51298",
        "cursor": {
          "ref": "0c8a86c4-166f-487e-bdac-a15bc34bda23",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a18c0cd0-fb30-40e5-ba76-d8d02e5d503b"
        },
        "item": {
          "id": "7198fe18-8068-474d-8ce2-dee3c5b51298",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0c364cb7-c2b0-4551-9cbb-8b2f0c2415a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8724564-7da1-40f4-8b94-d75a01495f68",
        "cursor": {
          "ref": "ab32913c-ffed-4deb-98ab-35bdaf355fcf",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3d5ee765-3116-46d9-a30b-5bf27a5ffeec"
        },
        "item": {
          "id": "c8724564-7da1-40f4-8b94-d75a01495f68",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7e29cd96-206d-4bdc-9283-ae0c514b9df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7630c3-33e6-4146-b24e-ff35edd674f5",
        "cursor": {
          "ref": "8b70743f-aa11-4971-810b-ab90ecce43d3",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "545c1825-7a8d-4091-a1c1-bea77e1d79c5"
        },
        "item": {
          "id": "8c7630c3-33e6-4146-b24e-ff35edd674f5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "67d021e2-4ee1-4374-ac10-da49a22464ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23075c6e-7dfe-4d0e-b454-42d383df4376",
        "cursor": {
          "ref": "35152413-598f-478e-9761-0bf7d9e52b6d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d5e4e476-3bca-492e-a0fe-adcc25927f72"
        },
        "item": {
          "id": "23075c6e-7dfe-4d0e-b454-42d383df4376",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "914d8883-2468-4cdc-8ac5-2f0604c57a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957c4aa0-6e33-41a7-b00b-38f5bf89fadf",
        "cursor": {
          "ref": "34a0738e-f8bd-469c-aed2-3c45d468ea3c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "66d8c783-4f59-4a0b-8c14-34fa5764e146"
        },
        "item": {
          "id": "957c4aa0-6e33-41a7-b00b-38f5bf89fadf",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6fa2645d-0bfc-4460-81e4-0764775b9614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80365e1c-cc46-428a-a34e-90aa6575c733",
        "cursor": {
          "ref": "128384b8-c67e-4803-bb7f-1ed9bce24ef0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "58e2d529-c73d-4539-9f5b-d529e7a070bb"
        },
        "item": {
          "id": "80365e1c-cc46-428a-a34e-90aa6575c733",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "62396686-b293-4853-9ad2-1253d47791fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a00320-aacc-4458-8027-db9f09d0306b",
        "cursor": {
          "ref": "f2cf57f4-eb49-4267-8eed-9c9a8fa0e40f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b03aef4f-736d-4d01-bb49-9c9a56814e2c"
        },
        "item": {
          "id": "70a00320-aacc-4458-8027-db9f09d0306b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a9054853-97fb-40ea-8405-7982336f8407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28e0dc1-de0c-482e-9c04-d7c4bdbcd34d",
        "cursor": {
          "ref": "a38a0d5e-5455-4755-abf2-4fe8f5a4955d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d34b6d92-30f7-48f2-a412-182beb86f800"
        },
        "item": {
          "id": "f28e0dc1-de0c-482e-9c04-d7c4bdbcd34d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "92966669-5ec2-49f7-be6e-9cd0b798dce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2282b13-ff98-4e95-82cb-be92ee20713c",
        "cursor": {
          "ref": "001f442e-b72e-4db6-922b-6092b9c258c5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f3a1b431-04a6-48b6-bae8-2e845b77084b"
        },
        "item": {
          "id": "b2282b13-ff98-4e95-82cb-be92ee20713c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "970be0f6-f4b2-492a-a9cd-90c2cc2f89c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7de743f-d1e7-4ca4-9122-6de7102d39e7",
        "cursor": {
          "ref": "080be762-866d-451e-b279-c272ee75c067",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "619d0327-45e8-45c1-a5d4-f89987568f55"
        },
        "item": {
          "id": "b7de743f-d1e7-4ca4-9122-6de7102d39e7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f41be2e1-e157-4543-8049-7c8848492b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca9ff4d-c4ee-4d1c-8226-b18793b0e854",
        "cursor": {
          "ref": "b5c58100-6810-4816-8663-c5dfccaf3c5c",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "689cef29-26a1-4b67-9e43-dacad071f4c6"
        },
        "item": {
          "id": "aca9ff4d-c4ee-4d1c-8226-b18793b0e854",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "58b6d7ec-f60a-4da3-8a1f-1f7eec3c8f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26be0e4a-7506-494d-aafa-2de2374df25a",
        "cursor": {
          "ref": "ed521bcb-7397-4606-9f8a-f5461178ac13",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2cdefa95-5cbe-496e-83a8-f68b30356d51"
        },
        "item": {
          "id": "26be0e4a-7506-494d-aafa-2de2374df25a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bf72e952-3f88-4491-9609-caccd0f68cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a8b66a-cc58-41a4-bc85-870036d8b075",
        "cursor": {
          "ref": "dd119c2a-2f96-4426-8a22-3e4528c40ab9",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "98fcd756-fa3d-43fa-8b9f-b78a4e68b17d"
        },
        "item": {
          "id": "68a8b66a-cc58-41a4-bc85-870036d8b075",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "886b9ab7-c2ee-49cc-a550-1986c1f9fdd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afebbb3-8114-49e4-a39d-94a74f9c4a22",
        "cursor": {
          "ref": "d2337ffb-1abb-4cee-b97c-3699b2dea7d9",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2d36fdd3-b293-413b-9c35-c65ee4860796"
        },
        "item": {
          "id": "1afebbb3-8114-49e4-a39d-94a74f9c4a22",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0558a0f5-7988-4a05-ad91-6596f4a9eaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5e9685-e955-4f7b-9bdc-153034ba7da9",
        "cursor": {
          "ref": "9173820a-6f80-4c46-aeed-0a6083ac9a79",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a204c47c-bf6a-4f39-9a53-77144817a5d3"
        },
        "item": {
          "id": "cd5e9685-e955-4f7b-9bdc-153034ba7da9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "35de5c84-9b76-4e60-81d8-9378078aea4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be72a33-cf05-4811-8d0a-c373dddf92cb",
        "cursor": {
          "ref": "c7010c50-4e60-457c-8292-cb0f2c44593e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "58e2def4-6b51-4e82-8c2a-37d2a41bb408"
        },
        "item": {
          "id": "7be72a33-cf05-4811-8d0a-c373dddf92cb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6df2e6b1-09f2-4f39-949d-121e75170d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3482abe-1e2b-4e7a-9d24-cd691aa502c7",
        "cursor": {
          "ref": "497db0a0-2867-464f-a030-5afa3c290e1a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9043d564-b6e6-4166-95ae-2ae1abfc27c3"
        },
        "item": {
          "id": "d3482abe-1e2b-4e7a-9d24-cd691aa502c7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "871c2497-09a6-4d50-92d2-cbbcb826cfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6534b6-a310-42e2-921e-51321ae20dcd",
        "cursor": {
          "ref": "87909cbd-d26f-4f32-87db-c9b503de6e18",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "925b5f5b-dd32-43cc-a7ea-16966de5f7d6"
        },
        "item": {
          "id": "3c6534b6-a310-42e2-921e-51321ae20dcd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ac7a9f03-ec73-4a5c-903d-47cae920f289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2741e705-f60e-44f5-b8cf-3041fd0c86b0",
        "cursor": {
          "ref": "54527126-0cad-4f9e-b14c-acf0158512f6",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "81938aa2-7de7-4f36-a3ea-5edffbe9dcf8"
        },
        "item": {
          "id": "2741e705-f60e-44f5-b8cf-3041fd0c86b0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bed921ca-1d8c-41c6-a949-c362b8f34c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8f3c9d-cbac-4b8c-b5d0-f3b05cf6c71c",
        "cursor": {
          "ref": "aa805e99-807d-4438-98dd-bbf017e5f0ac",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "698953dd-aded-4975-bb1f-2fb113223e8a"
        },
        "item": {
          "id": "af8f3c9d-cbac-4b8c-b5d0-f3b05cf6c71c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5afbf25b-80e3-4d34-b9c3-b81f6adb2403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a50206b-cf9d-4e33-9fb4-92378353ab46",
        "cursor": {
          "ref": "49cb14b2-a71c-4b32-aa24-777e1c7760c7",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9def7728-66cf-4806-96aa-e5627dcb7372"
        },
        "item": {
          "id": "9a50206b-cf9d-4e33-9fb4-92378353ab46",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "276915e1-978d-4c8e-8bcd-b1f636725157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec5b115-9a4b-48b9-a238-158e7f178544",
        "cursor": {
          "ref": "1a6656c8-a6ac-4e6d-9e75-879e1757aa0c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6f41a4b7-16b4-4b29-9d6f-8b9e1136f1f2"
        },
        "item": {
          "id": "5ec5b115-9a4b-48b9-a238-158e7f178544",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b4d7cd7b-b36e-4e6e-877f-849c895272f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e383c533-2de8-4c8d-8dc1-d348492db812",
        "cursor": {
          "ref": "8f1c1bb0-3891-4ac7-ab13-537f610f1926",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0e4b1dc0-28a6-4c82-851d-3738433b42ef"
        },
        "item": {
          "id": "e383c533-2de8-4c8d-8dc1-d348492db812",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0d218e3d-aeb9-43da-89a7-8234a6010876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cd2edd-6c5e-42e4-8854-afdb3d5daf68",
        "cursor": {
          "ref": "cfad9d56-d717-42e5-bf16-6164572b200d",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "004b5a38-40d2-45bc-9486-545a4d5f2f8e"
        },
        "item": {
          "id": "d3cd2edd-6c5e-42e4-8854-afdb3d5daf68",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "afd1d0f9-f04f-484e-8fe5-8de35bc5086a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14922806-cf39-43d1-9bdf-1425d3dacc80",
        "cursor": {
          "ref": "98f32ac9-0e45-4697-9efc-cfc35b25785a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3ac12e1c-b337-44fe-9d0b-24135abcc7b0"
        },
        "item": {
          "id": "14922806-cf39-43d1-9bdf-1425d3dacc80",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "396c74d2-7691-4fd3-9e2a-ad8361651ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8058432e-b20d-4553-b6d2-cd0a7bd40e75",
        "cursor": {
          "ref": "7b24cf94-3120-4be1-996c-802b0122b359",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0804d4ce-10b8-418b-af06-437a40794179"
        },
        "item": {
          "id": "8058432e-b20d-4553-b6d2-cd0a7bd40e75",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9475d71a-9497-40a1-b509-ddb1901ccf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05c5434-287a-4be3-968e-f0373a930bc8",
        "cursor": {
          "ref": "ccb78e7c-e27a-4ddc-8a3d-3670ecd5d3a5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "75cf3fa3-2892-4fed-a6a0-28503fc7473e"
        },
        "item": {
          "id": "f05c5434-287a-4be3-968e-f0373a930bc8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "91b47db7-d275-438e-867c-823146bc3b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45defd87-8b10-428d-a756-4ac9740e237a",
        "cursor": {
          "ref": "89647515-566a-4021-b38f-8dabe15fa897",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "33afcdca-0469-45e9-9fea-82d7ed6937ca"
        },
        "item": {
          "id": "45defd87-8b10-428d-a756-4ac9740e237a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8c813808-c4bd-4afa-a9bb-991fc8906189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fb44a5-f581-4e6b-b26e-564966577b54",
        "cursor": {
          "ref": "b53f24c3-106c-416a-b6ce-f7905e0234b7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fc1b96f1-6331-4305-8ff0-799da4e8899e"
        },
        "item": {
          "id": "42fb44a5-f581-4e6b-b26e-564966577b54",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f9c344af-e424-4ce8-9adb-2aa2a708b64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b47954f-1b81-461d-8aff-1c32f7baaa9e",
        "cursor": {
          "ref": "66e21f1c-6391-4e03-afe7-441a6681761b",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "357a6295-6f1a-4a76-8bdd-e3ebb8d6b084"
        },
        "item": {
          "id": "1b47954f-1b81-461d-8aff-1c32f7baaa9e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "65937a18-fdf9-479f-90fc-7afb4e22c2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1dcfe1-2592-40da-85f2-5c616b75dd81",
        "cursor": {
          "ref": "571de787-4e05-47bf-b103-9dbda726f3d4",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dcf10b55-b2e8-473d-81ae-08a57a5a946e"
        },
        "item": {
          "id": "3f1dcfe1-2592-40da-85f2-5c616b75dd81",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cf78fac7-06f5-45eb-adf6-dd2db1e76cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6465ffa-7f7d-41fb-9b6a-1c323a109f41",
        "cursor": {
          "ref": "8ade8d63-fe59-4032-8d5f-9902e1ee3ff0",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fe835ef4-8974-471d-9b31-bcf87b1ace9d"
        },
        "item": {
          "id": "e6465ffa-7f7d-41fb-9b6a-1c323a109f41",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8b326e4b-bbee-460b-8d42-e8bf6f80c9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5ba073-6dca-4ae8-8a26-f31cf3d580f6",
        "cursor": {
          "ref": "e38be1e7-620a-49b2-a91b-9a97cdd3530f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "14126f0c-74af-4576-a51c-15f781d6b7e9"
        },
        "item": {
          "id": "1f5ba073-6dca-4ae8-8a26-f31cf3d580f6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4705f345-b209-4a52-bf6a-5dee14ff4549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14569e53-dc1f-4f25-9d71-527d682fddfa",
        "cursor": {
          "ref": "6769dc17-63a5-44fa-96a3-c43cd4e596c6",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ba88cfc7-c615-4759-8375-8339fa2486c6"
        },
        "item": {
          "id": "14569e53-dc1f-4f25-9d71-527d682fddfa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ede4197d-2cf2-4b26-89ef-0207a9df767a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58035258-2e77-4013-a5eb-f6e107e222f4",
        "cursor": {
          "ref": "ced4d3d7-aac9-45b3-ba80-3dd58fa502ea",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c22ec3bf-b0aa-4335-9f55-21992ac71826"
        },
        "item": {
          "id": "58035258-2e77-4013-a5eb-f6e107e222f4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e6dfe121-160a-4e73-bb4d-bc8d1ae39be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19d919e-d36a-47f8-8759-bcd258c2063c",
        "cursor": {
          "ref": "23ad6e32-f00d-41a7-8610-e43118d942f2",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "60409912-85f4-482f-929b-2c2db08c3760"
        },
        "item": {
          "id": "e19d919e-d36a-47f8-8759-bcd258c2063c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c0bbcec5-b34b-4fd8-8199-2948a929ff96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d979f8-e49a-48f7-91b7-6411646034ca",
        "cursor": {
          "ref": "d19a8252-4f41-466d-b8ac-cea6a6dd0aa1",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "99fbb3d5-d62d-4b2f-9036-9ef2d4969771"
        },
        "item": {
          "id": "c5d979f8-e49a-48f7-91b7-6411646034ca",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "918daf1d-535d-4059-81da-04e435986ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c722d9-ec04-4e8b-9f5b-c9ea6210a914",
        "cursor": {
          "ref": "ca481a4e-d0f8-40bd-8573-b73d39222132",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "17ae78e9-0a8a-4e58-a91b-7441a70125c1"
        },
        "item": {
          "id": "49c722d9-ec04-4e8b-9f5b-c9ea6210a914",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d59d5728-18a8-4a59-994f-563a6b906ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923245f0-8b13-4566-91ee-d20d63a6e018",
        "cursor": {
          "ref": "47a33ef3-451e-47a8-8d95-a4f87c16c04a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "baa436b3-e435-4af3-a52a-bedc7ae01fe2"
        },
        "item": {
          "id": "923245f0-8b13-4566-91ee-d20d63a6e018",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "68b95a49-146a-4732-a289-ca5377642f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056286ad-cbd4-4207-98ba-560ebd215826",
        "cursor": {
          "ref": "51c32efe-e6f9-497b-9c8d-390a398434e4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8088cddf-962d-497f-8cf6-319cd2986fc6"
        },
        "item": {
          "id": "056286ad-cbd4-4207-98ba-560ebd215826",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1250170b-c3e9-45c0-b8c8-96e326bbf570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fa315f-d42a-4df2-be11-4b75d1d364b6",
        "cursor": {
          "ref": "54659fad-41de-4717-aa43-2831bd2a9c9d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "86d66ef2-cf22-41d6-a904-913ad7940bb8"
        },
        "item": {
          "id": "b4fa315f-d42a-4df2-be11-4b75d1d364b6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "28479ad1-b5b3-4b67-adb1-cb6cb5ec8a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961d5f23-83a5-4692-a55e-af0281779927",
        "cursor": {
          "ref": "cacc5ea0-e99b-491e-aeb0-6c2f8cec6362",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6946b2bb-2921-4628-99ce-2a63d9073d9b"
        },
        "item": {
          "id": "961d5f23-83a5-4692-a55e-af0281779927",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "78a9ade9-987a-4813-9252-93436b8eeaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70a6099-0a08-4341-a6e0-c6b6890ef86b",
        "cursor": {
          "ref": "6f79ca28-6d68-490f-8b17-064ce695938f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f54a4225-eaf7-43d6-99c6-a1bd5b3f6b2d"
        },
        "item": {
          "id": "c70a6099-0a08-4341-a6e0-c6b6890ef86b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fb71edb7-413e-4360-90f7-343858982f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ababfea2-792a-4074-a225-6b0e7d27aabd",
        "cursor": {
          "ref": "8c02de43-1402-49ff-b2cd-37b98c2c2e85",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f5f82e70-f97b-4594-b42c-0cb9250207e0"
        },
        "item": {
          "id": "ababfea2-792a-4074-a225-6b0e7d27aabd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4aeab271-9b7f-433d-9cb0-65c093619291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887cc492-2967-40ed-a211-3e2f59ff693c",
        "cursor": {
          "ref": "4c5dbe16-6667-4bcf-8c79-b11c63ac340a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "54355977-d319-4141-bbfd-988dd19474f3"
        },
        "item": {
          "id": "887cc492-2967-40ed-a211-3e2f59ff693c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b699bec9-fca8-4945-9c16-5e1658d2cb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29219267-29f6-44f6-9b53-c8bcb3ad761c",
        "cursor": {
          "ref": "ecc9c792-2d27-4fe3-a54a-c3b206c5f0cf",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3767984e-1edf-42c1-81d6-87ebb6258e7a"
        },
        "item": {
          "id": "29219267-29f6-44f6-9b53-c8bcb3ad761c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "60ffaff8-e7b1-40bb-bf5e-8e1cdb1efa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad135fde-ad98-4407-8bca-3b7c21b40a40",
        "cursor": {
          "ref": "ea53bad0-ca52-4242-8877-a4e80133337f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0d1324b2-ee46-4fa5-94ea-5a3bda0ac418"
        },
        "item": {
          "id": "ad135fde-ad98-4407-8bca-3b7c21b40a40",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7a3d371a-8884-4aa9-b040-214dde914bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdeab240-1d3a-49ab-bcee-6779a2719fbf",
        "cursor": {
          "ref": "0a884d91-58cc-4af2-874e-cb9981965911",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "72559148-646f-49ad-9d6a-3f2885b275ac"
        },
        "item": {
          "id": "fdeab240-1d3a-49ab-bcee-6779a2719fbf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "df0f14d4-de8d-4a38-98d4-775a17578e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da64ef44-b5ec-48ed-aed8-d92a9588cf30",
        "cursor": {
          "ref": "ff928616-8b65-41f1-b40f-4b59f2311d55",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "456f4dc9-de1e-40e8-93af-9e3170e465ae"
        },
        "item": {
          "id": "da64ef44-b5ec-48ed-aed8-d92a9588cf30",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6e84c548-21fb-4752-a1c6-5e558276601b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f89399-0468-4cee-b6d2-aa891e143579",
        "cursor": {
          "ref": "e48b7c7d-9bfb-4f79-9dc5-8d13411d6bf0",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "01a38201-7907-4af8-bb5a-d5c14c487714"
        },
        "item": {
          "id": "57f89399-0468-4cee-b6d2-aa891e143579",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5ffa09b9-bee1-4d24-8669-08af8927136d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d376b0-7420-4260-9fb2-0d1a120989ca",
        "cursor": {
          "ref": "1c916ad5-49a8-4306-94d6-857f40908e8b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b718d56c-bc6f-4db6-9099-fdf5e27979db"
        },
        "item": {
          "id": "83d376b0-7420-4260-9fb2-0d1a120989ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a08da595-d49a-4d05-b4b3-11c96b47f203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d06c2b-949c-4c58-85a7-0a4cf64321bb",
        "cursor": {
          "ref": "dbe7ed1b-2b34-40d2-a1e8-b90d2bb20dbc",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "07abcd7b-e874-48c2-99d2-02a6cf904abb"
        },
        "item": {
          "id": "50d06c2b-949c-4c58-85a7-0a4cf64321bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "93a2fe94-7faa-4ab8-aa09-482b57ddf977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2970af72-d865-48f0-8c16-c645286c459c",
        "cursor": {
          "ref": "d6aa9899-fdd1-4e64-8672-3c03ed8ddf02",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "518027b1-47ec-4116-93d4-fc6e7f8d5d9c"
        },
        "item": {
          "id": "2970af72-d865-48f0-8c16-c645286c459c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "14fb5170-26dc-4c1a-9432-f7a17ed8e875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1c22e7-e19a-44ab-a62c-b3d989a4e8c9",
        "cursor": {
          "ref": "f558bac2-cbd9-436c-9a47-1d394d37628d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a3fcb65a-afa2-499d-bcfa-68357f1026c6"
        },
        "item": {
          "id": "2c1c22e7-e19a-44ab-a62c-b3d989a4e8c9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "80aa8838-0d91-45a9-ae95-51a0877e4a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6a7000-c628-4673-93a9-59476716af0f",
        "cursor": {
          "ref": "7ac06726-37f6-4ecd-b06c-8867976d0eba",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "afdd0ec6-4938-4ae6-86d5-c775f99ec542"
        },
        "item": {
          "id": "3c6a7000-c628-4673-93a9-59476716af0f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a7461816-33ae-4e44-9b31-2a2ccd55a408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f1f366-b3ba-456a-976e-c6b0a992fdea",
        "cursor": {
          "ref": "37177070-3b09-4a64-b298-4ad0fca5010b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a07d9810-89b9-412f-a802-77df3af6e13f"
        },
        "item": {
          "id": "e5f1f366-b3ba-456a-976e-c6b0a992fdea",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "22b6bb43-3a6a-401d-b1d9-61578b905787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f908a342-c09d-4af5-b9ad-b8d5c5401d47",
        "cursor": {
          "ref": "57a9a7f7-2521-426a-a289-9e86d8903148",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "32db1a9a-89b6-4abb-9f11-44461f25e931"
        },
        "item": {
          "id": "f908a342-c09d-4af5-b9ad-b8d5c5401d47",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f911682f-d95f-469f-890e-393af47c0616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371ddfa9-db1f-4e97-98c2-46f968340456",
        "cursor": {
          "ref": "e16028ee-d8be-43a0-9837-3ea3fa7a4509",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b1c411d9-8702-4dc9-9861-58617b009500"
        },
        "item": {
          "id": "371ddfa9-db1f-4e97-98c2-46f968340456",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7c7759e8-1914-4c9f-a264-8007755fbc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0424ca0c-5c40-4ac5-83c1-8324232646d5",
        "cursor": {
          "ref": "5506f670-1ac1-4e08-9d47-1f835bed2e38",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ea18ac8e-1b62-47c8-b14b-e614aec3bd09"
        },
        "item": {
          "id": "0424ca0c-5c40-4ac5-83c1-8324232646d5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "546b6c93-7f37-4a59-9ef9-99806b7b7b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a377238-01f2-4a63-97dc-902b1881f6c0",
        "cursor": {
          "ref": "bde3b94c-5c7e-4408-ac1e-8c68716a32a5",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e786c91e-f92e-4e79-8fc7-64c1ea59f635"
        },
        "item": {
          "id": "8a377238-01f2-4a63-97dc-902b1881f6c0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "32d2862d-60cb-47b0-a1d8-86376f9b58d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00899cb3-a2d7-4914-a802-66f6514ae72d",
        "cursor": {
          "ref": "27d0ded4-35d2-41c9-aefe-97b27e7a92d6",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7255acb9-c1f9-47e5-be60-b055ccdfc408"
        },
        "item": {
          "id": "00899cb3-a2d7-4914-a802-66f6514ae72d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3e6b5838-4575-4bc6-9317-467ea2f017c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910dbef6-dbcc-4656-8fa0-54f1aa02bc16",
        "cursor": {
          "ref": "4361094d-194a-4d6f-b314-51d6c4ee5e64",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1fa57378-80a2-4a84-9360-a71bd6438765"
        },
        "item": {
          "id": "910dbef6-dbcc-4656-8fa0-54f1aa02bc16",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d88293d1-d9a2-46f7-91d0-4ed52331ab97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0ad10b-b70d-465b-867a-57cbd84225c5",
        "cursor": {
          "ref": "5c5cf316-5114-415d-bd88-b7c382029b1f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9996f16c-9e9e-4dc9-a5c5-86c6c06d5145"
        },
        "item": {
          "id": "ef0ad10b-b70d-465b-867a-57cbd84225c5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "63fff84c-8665-4704-9bea-31b14db9f54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0368db90-2345-4665-814d-de0c0f1a9ed3",
        "cursor": {
          "ref": "7a6b7ad5-e09b-4e3a-8079-46fd028d2931",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "53b2807f-df73-474b-83d3-d18ea144cc6d"
        },
        "item": {
          "id": "0368db90-2345-4665-814d-de0c0f1a9ed3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9598c8e8-fb7d-4eed-be32-28d81472267d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5115b8-8a32-47ce-b795-4e6dfaf69fb4",
        "cursor": {
          "ref": "1d628d4b-c4b1-4a22-bef0-6519369642e3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ecd0a1d3-fbe7-4d4d-81e6-1829baead205"
        },
        "item": {
          "id": "5e5115b8-8a32-47ce-b795-4e6dfaf69fb4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "30f41843-0811-4da6-b1c8-f771e9de8666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad2fcb5-3d6e-4bd4-b93e-5217eb5003c3",
        "cursor": {
          "ref": "9bf520e2-6262-4867-b060-03772e322cd1",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7cf4f690-62c7-4049-8c25-99a90b1ca3bd"
        },
        "item": {
          "id": "cad2fcb5-3d6e-4bd4-b93e-5217eb5003c3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5c2ca781-30d5-4bef-bde6-e10325e40545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f1cfea-93bf-4d3a-9860-6a0e549f9654",
        "cursor": {
          "ref": "6e5691c1-cddd-4eac-8852-aac3687f848e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "481ff083-7a0b-48fd-b488-6a8773d5bc8e"
        },
        "item": {
          "id": "10f1cfea-93bf-4d3a-9860-6a0e549f9654",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ad09f984-5037-4dd5-915f-4f97a498616a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96ba499-64b5-4e3a-b625-83e6426fe5ac",
        "cursor": {
          "ref": "8b8427f0-1b79-48a9-9b97-4008f9b6dd76",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "00de9911-b54f-403a-8b60-0e4e5822bd11"
        },
        "item": {
          "id": "d96ba499-64b5-4e3a-b625-83e6426fe5ac",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "47ca02ca-71d1-4d26-9140-a8d734f42895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb77715-cc96-40ea-abfa-21833694e7e7",
        "cursor": {
          "ref": "eef28cbf-be83-4894-87ca-3b49daa5e6c5",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e9dbe401-4e4b-45f2-a125-98ea079bcf13"
        },
        "item": {
          "id": "abb77715-cc96-40ea-abfa-21833694e7e7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4aeb9752-ffb7-49df-a929-e720baaf3c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0731e3e3-d34f-4f11-875a-25da693492f2",
        "cursor": {
          "ref": "4c98d77a-cdef-430b-b392-88fe9b1ab667",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d61adc4e-49f6-423c-a8e3-24dd7f272c9f"
        },
        "item": {
          "id": "0731e3e3-d34f-4f11-875a-25da693492f2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3a0be7ce-6477-4882-8d2b-0e6e2cfa30dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f576af-82af-4942-aaaa-f832d80e52d1",
        "cursor": {
          "ref": "e12de04a-edac-4b63-afbd-b141b4a1a463",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b457671c-7b9d-421e-806d-b2c82886838a"
        },
        "item": {
          "id": "f3f576af-82af-4942-aaaa-f832d80e52d1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c87c2d67-e287-4e85-a26e-1904424fdbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b13db4-056b-4ec6-b732-928437d9af38",
        "cursor": {
          "ref": "21ada8a9-09a7-40db-9f15-dc2c1434914e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "99f9f4b3-356b-4100-a4b3-4b845ad426d9"
        },
        "item": {
          "id": "18b13db4-056b-4ec6-b732-928437d9af38",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f65475fb-f218-42c8-813f-5915317b9b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d59b01b-60a3-4a2e-bf9c-d5487a7b0870",
        "cursor": {
          "ref": "fa41ad82-840a-40e0-9063-a9dd0e40a4a7",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6620f261-1d4f-49a6-bc3d-8e2c56dd5279"
        },
        "item": {
          "id": "4d59b01b-60a3-4a2e-bf9c-d5487a7b0870",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4f622405-1892-47c3-b144-92818c6ded3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8886970-df22-40e7-a5c7-59c1ebdbd60f",
        "cursor": {
          "ref": "fb1485d3-979b-4054-924a-d80419a032b1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5dbd6ce3-2246-4890-bfca-6c96b55aaa85"
        },
        "item": {
          "id": "c8886970-df22-40e7-a5c7-59c1ebdbd60f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3d058cd4-8d21-4248-a48a-7bd421a82d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75b23b5-5f41-4059-be94-84c4cb5921c3",
        "cursor": {
          "ref": "a66ded57-5e86-4cf3-b87d-410c89c10d7b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "410e4d61-a954-4357-b6ef-f94e9224080c"
        },
        "item": {
          "id": "a75b23b5-5f41-4059-be94-84c4cb5921c3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6c898673-d181-499e-b8bc-9ecae932dfd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fadc2a3-a1cd-47a0-83cd-380654f89eb6",
        "cursor": {
          "ref": "11c4d0a0-ad32-4f41-97f5-9c5d8c5d9f53",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "66447c92-4af2-4bc3-bbcb-9e7bef05e044"
        },
        "item": {
          "id": "5fadc2a3-a1cd-47a0-83cd-380654f89eb6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e1b79cc0-d0ed-4f65-8b63-6015a074a551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d610b0-38b0-4b1e-94f1-e6d3b62ac489",
        "cursor": {
          "ref": "84d78ec0-25f3-40a3-8cf3-2c182182a210",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "42ab1b63-c300-4159-9e68-450ece397c7f"
        },
        "item": {
          "id": "e9d610b0-38b0-4b1e-94f1-e6d3b62ac489",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7dd62a0a-cba7-4b3c-b67a-69d167291414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9bf35d-df4a-4213-925e-f47e17960ff3",
        "cursor": {
          "ref": "c59df508-9f9c-40cf-b760-0cbac683bd6d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2c9fded1-092b-449e-b75f-c298a1c78c4a"
        },
        "item": {
          "id": "cf9bf35d-df4a-4213-925e-f47e17960ff3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b1a2b1b2-35eb-4470-a5fc-33a30b0d6758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c89adf6-c50a-4575-9915-a8e5fce37f76",
        "cursor": {
          "ref": "cadb68ed-394e-44ee-b3bd-01d434be420b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0a39a907-2eb6-4264-a6d3-e4dfdc70a63f"
        },
        "item": {
          "id": "0c89adf6-c50a-4575-9915-a8e5fce37f76",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "74999a3e-43f1-48c6-b1c6-9206447a8edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b996c095-5ee4-40a6-a7bf-ab757df87980",
        "cursor": {
          "ref": "444f2c2d-f6db-47c9-a750-fb848dbbe3a2",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c25df35a-dbf1-4fcc-93e5-cda061f3d446"
        },
        "item": {
          "id": "b996c095-5ee4-40a6-a7bf-ab757df87980",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a6457bc0-2160-421e-ade3-39611340a389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acf2bb4-278a-4dd4-91a3-31505fae4c17",
        "cursor": {
          "ref": "0f292763-5f9c-4eaf-8d1c-51f89395f259",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "29a0351d-ab5a-48af-ae33-854083a0f824"
        },
        "item": {
          "id": "2acf2bb4-278a-4dd4-91a3-31505fae4c17",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8a4e6b0a-6eea-40cc-a125-2ee186106c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49b9dff-827f-4371-9b75-d4bbf2160ef5",
        "cursor": {
          "ref": "b1646c7e-9d45-4849-aca5-a908d46cc336",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "61725357-b2d6-49a5-93b0-46a7efc6bdd8"
        },
        "item": {
          "id": "c49b9dff-827f-4371-9b75-d4bbf2160ef5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "22cf0822-21d8-4bdb-8d67-52250a27eac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6965fab0-eacd-4563-8fea-e29d1a0067da",
        "cursor": {
          "ref": "1f8bc560-d93a-4918-828b-42671d27428f",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bc6a9bd0-b1c4-412b-9555-b2b9c241b7e1"
        },
        "item": {
          "id": "6965fab0-eacd-4563-8fea-e29d1a0067da",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9c6bbf9b-af37-40f5-ac0b-a8dc5f753f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa38aa3-971f-4ed9-a660-6db0f39cf6c1",
        "cursor": {
          "ref": "23ad38d5-c8b8-451c-8bd9-daa7bb9a8b9e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "241075c2-3ffb-44b5-9922-3a7506311b30"
        },
        "item": {
          "id": "1aa38aa3-971f-4ed9-a660-6db0f39cf6c1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d1aa6849-7557-454f-b813-0eb7874792bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3be6fc1-e4fb-456f-9f9a-80d59851bc88",
        "cursor": {
          "ref": "0bf79b24-3d52-4632-b037-6b8ea02753d1",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8e7217bd-6541-43ff-b9f9-bd54b41a3327"
        },
        "item": {
          "id": "c3be6fc1-e4fb-456f-9f9a-80d59851bc88",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2b2f41f2-4f72-403f-9bc0-7659a774eb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25c0901-016c-41f9-a9d0-706c7ed02052",
        "cursor": {
          "ref": "726ef03e-e14f-43a4-8a9a-fb43cfa03522",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "09321144-3207-4e24-a349-63e5e6bc950e"
        },
        "item": {
          "id": "f25c0901-016c-41f9-a9d0-706c7ed02052",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9c427200-f0c6-420f-8d49-8db7a0d0d05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2ac4bd95-d1ba-4dac-b2a4-c22dff7ca28b",
        "cursor": {
          "ref": "8c7be277-bc1c-4b0d-9e5b-e767f4a7d529",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0a19a6ea-c116-4bee-83d9-9d37d39ad235"
        },
        "item": {
          "id": "2ac4bd95-d1ba-4dac-b2a4-c22dff7ca28b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "11d65fae-026b-4efa-8b48-ce682f647f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e177e1d5-cf63-44ba-8784-e2fd322f294b",
        "cursor": {
          "ref": "6fcdd4cd-0aa8-4d9c-9fcb-8aa16e263a62",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bda61ac4-a362-4f23-b4f5-9a7a27672781"
        },
        "item": {
          "id": "e177e1d5-cf63-44ba-8784-e2fd322f294b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e9e9cb51-a5bd-4207-871a-532d5b488938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f990ebd3-cd7d-4934-a6e8-e2b8a71583e2",
        "cursor": {
          "ref": "699554f4-7362-4373-a89f-4eb2a725ae52",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b0a11d28-6696-460d-97b9-0ddb39ac0a59"
        },
        "item": {
          "id": "f990ebd3-cd7d-4934-a6e8-e2b8a71583e2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c6097ab1-2cf1-4c7a-8116-8f937dcab4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1592c19d-f5ee-456b-a70e-553e4e447e9a",
        "cursor": {
          "ref": "8873df42-6694-4985-88e2-f1d249558a3a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "18e6acfd-61e9-45c2-af11-a1be884321cc"
        },
        "item": {
          "id": "1592c19d-f5ee-456b-a70e-553e4e447e9a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "72e1bc6f-8b11-4f69-8e75-d714281ca335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e69cde09-96ee-470a-b671-e45e569ec17f",
        "cursor": {
          "ref": "a5360b38-ab75-474a-973a-b5aeb4ea4e0b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9e304c84-298b-442d-ac97-e3c640f06b03"
        },
        "item": {
          "id": "e69cde09-96ee-470a-b671-e45e569ec17f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c473bf3a-1fdf-49be-850a-b99885e4a584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "48ad08a3-5b92-4cdc-ac29-bfe1d9b6776a",
        "cursor": {
          "ref": "70fda61d-d195-4eec-85f7-96b079d30269",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3f6b90c0-d4c5-48bb-a7aa-197edf225525"
        },
        "item": {
          "id": "48ad08a3-5b92-4cdc-ac29-bfe1d9b6776a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "62053959-8b6e-4620-a4f7-b6af1a440020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8242ca07-20b4-4fea-a3b2-a6b6b47c47ca",
        "cursor": {
          "ref": "5a4cd1cd-7dc9-47f0-8218-5ebe0c47a360",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b781cfcc-dd3d-420b-b1dd-94ccff04fe18"
        },
        "item": {
          "id": "8242ca07-20b4-4fea-a3b2-a6b6b47c47ca",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "eaff6ab6-1877-4e70-bd17-682b542ec68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed8d90e-f2a2-4e71-b1eb-a24f3b543909",
        "cursor": {
          "ref": "fbd6b9a7-403d-4636-bc2f-237de8050f99",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "64687490-da13-4893-831d-f3e87ba24a92"
        },
        "item": {
          "id": "5ed8d90e-f2a2-4e71-b1eb-a24f3b543909",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "83bf37fc-ab9a-4a4b-abac-a70b29481421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86287be8-0a50-4e8b-a0d6-0fc81ca3a86c",
        "cursor": {
          "ref": "aaa845f4-d21f-41e4-a356-951383ddf78b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dc710033-46ef-4529-bd98-8639e2f1a237"
        },
        "item": {
          "id": "86287be8-0a50-4e8b-a0d6-0fc81ca3a86c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5fd129d0-def5-4efb-a165-266a8d60840f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af90fad0-a394-4574-b855-2baf3299a186",
        "cursor": {
          "ref": "8a53d07c-d0e0-4490-b813-762015c35163",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "35bafb13-2446-4a93-92e6-8143daa88382"
        },
        "item": {
          "id": "af90fad0-a394-4574-b855-2baf3299a186",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d7a76d68-e63f-4868-b211-ebb2604dd5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97b90db-d60d-4401-8a06-7f78bd7aa36f",
        "cursor": {
          "ref": "1f90217b-ae74-4a8d-9416-5c3d1c6c9b5a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d1dfaebc-84fe-4b1e-9d1f-25fb47774f04"
        },
        "item": {
          "id": "e97b90db-d60d-4401-8a06-7f78bd7aa36f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4d9e41ed-cbfd-40dc-ae0d-590af09b3726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34e207a-778a-4a1f-9f12-1bff5b3c7940",
        "cursor": {
          "ref": "88c5c850-6585-411e-8b5c-49a54d511beb",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ccf7008d-5596-4f9d-851e-7685205f118b"
        },
        "item": {
          "id": "a34e207a-778a-4a1f-9f12-1bff5b3c7940",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "83e25e9e-fb96-4e46-8fdb-3feeaf790b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289fedd4-dd9d-4c66-b1be-9f1b7870822e",
        "cursor": {
          "ref": "a6c8a05e-8444-4e7d-92c7-8a7b0418e21e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c08e5a4e-fd63-40b8-8be6-5cf1e3b66e2c"
        },
        "item": {
          "id": "289fedd4-dd9d-4c66-b1be-9f1b7870822e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bdb7993c-e486-43f6-9017-b1aa0392af4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ba1a78-efcf-41d1-8911-e8d5bb012087",
        "cursor": {
          "ref": "8d8dcbe8-8cc6-403c-9b73-ba4caa8a202b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2532c87b-82bb-46b2-b675-0a4698dff400"
        },
        "item": {
          "id": "15ba1a78-efcf-41d1-8911-e8d5bb012087",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "93e8b9a3-e762-41ac-8228-bf89a3744088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ee7a4c-75f9-4305-9d50-3e1fb0fceb86",
        "cursor": {
          "ref": "22341a33-f4e2-4019-a266-1c0e8107c34e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e5996375-bba1-42dc-b7b0-9e1f412f6212"
        },
        "item": {
          "id": "e4ee7a4c-75f9-4305-9d50-3e1fb0fceb86",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0d0f9319-fbcb-4bbf-8f80-ae8fbb6b7a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25b3581-7360-40d2-94d7-471f7c5433ed",
        "cursor": {
          "ref": "e0465e6a-664e-4645-9c50-84d37edf8782",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0730787f-c7f2-47f7-84a4-063bad114055"
        },
        "item": {
          "id": "a25b3581-7360-40d2-94d7-471f7c5433ed",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e54a92a4-ad64-4f4b-8d4d-08c9e48a0eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3889c84-9938-415a-8913-550d8f48c0c0",
        "cursor": {
          "ref": "ec8e4811-6e75-4eb8-9fde-1222c6d4c80b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6507524c-567f-4829-8f57-8ce074acaab4"
        },
        "item": {
          "id": "b3889c84-9938-415a-8913-550d8f48c0c0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6c448c51-bac5-4d5e-a7f0-aa6b14d75022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071be50f-cbd5-4c47-b19a-c8883769d7dd",
        "cursor": {
          "ref": "5e9da629-ae20-4ce5-b3e0-8f79ca6f5eb9",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cbf58187-c1ab-4f5d-b46b-1dd35c5994f9"
        },
        "item": {
          "id": "071be50f-cbd5-4c47-b19a-c8883769d7dd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f4a5ca95-c553-47df-ab6f-dff3faafd16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b364c0a6-de73-4ba6-9507-91329f575cea",
        "cursor": {
          "ref": "17540862-5405-4545-abfc-4baac7c26f47",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9f3f1f21-0699-4939-88be-cf5bf94358ef"
        },
        "item": {
          "id": "b364c0a6-de73-4ba6-9507-91329f575cea",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "72296e30-651c-412d-bdd9-5b219da6fc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33958d4b-a089-4ae4-957a-bf4710ba9fc8",
        "cursor": {
          "ref": "b35f89d8-ccac-428c-b3d9-562b6928c50d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "676f0cff-1bbc-4152-9722-c2cc4e634429"
        },
        "item": {
          "id": "33958d4b-a089-4ae4-957a-bf4710ba9fc8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "74c3c4b8-3515-4cb0-826a-df8f20918efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a081196f-d793-4c75-bf71-c460674e4b50",
        "cursor": {
          "ref": "1602af4d-0c41-4ab1-8bc5-286d417237e7",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bb705687-79c0-48a6-88a0-356da11871cc"
        },
        "item": {
          "id": "a081196f-d793-4c75-bf71-c460674e4b50",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8d756d9b-34c2-4f4d-92b0-828e9d60b8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b743e0-b2f9-458c-87ab-f5f095712285",
        "cursor": {
          "ref": "c35c3a1f-6422-485e-bafb-4ef738123e7e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a8873a25-8d25-418e-aabf-5ede03f84bb1"
        },
        "item": {
          "id": "86b743e0-b2f9-458c-87ab-f5f095712285",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "07ede1cb-e1ce-4c31-9766-0b1feecbb0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11aa086c-ba96-477d-9040-3c73ae3e96f5",
        "cursor": {
          "ref": "c08a2486-4969-4c65-aafa-5bc94ecc17f2",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "547a1a9e-aecb-4da1-b5cc-b3b1e2e83ff8"
        },
        "item": {
          "id": "11aa086c-ba96-477d-9040-3c73ae3e96f5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "77ec6bf6-40ac-46ef-b2a4-c4508f767772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e26503f-8edc-4e1f-9970-ef264e497503",
        "cursor": {
          "ref": "74519ae2-5652-40c2-9fdb-957ca583654b",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "afefa3df-bd88-4a5f-98fd-2fdba4be2ff6"
        },
        "item": {
          "id": "4e26503f-8edc-4e1f-9970-ef264e497503",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e4587ce6-d387-4d6b-b64a-e13c94121440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413151ee-78b8-4373-aa59-788f92590229",
        "cursor": {
          "ref": "74432455-7f34-4b4c-bbd0-042c75d7dbac",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1d4146bd-dac7-40bb-b9b5-91ac1797c33c"
        },
        "item": {
          "id": "413151ee-78b8-4373-aa59-788f92590229",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "221b72e8-1d09-4adf-a863-4194c47c7c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcc2410-71f7-4cb1-bfdc-431068d07297",
        "cursor": {
          "ref": "cfd5ebaf-0a4f-4450-927e-221ec24a9ea6",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a9fbbd8e-957a-4f92-b5c9-5b6e9d8474fd"
        },
        "item": {
          "id": "dfcc2410-71f7-4cb1-bfdc-431068d07297",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e4f910bb-020f-4489-87f5-881e0e5d290d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d32632-9a84-4d82-b4c9-34c1f6ec35bd",
        "cursor": {
          "ref": "29de94dc-af63-422a-a87f-feff168e7d7d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e7c5fe4f-cbd9-4946-8da0-07d476075d64"
        },
        "item": {
          "id": "84d32632-9a84-4d82-b4c9-34c1f6ec35bd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2a715ead-c4cf-4fa1-aab8-821f6f420440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bf2678-0aa7-4a12-b2cb-6698ab24af2d",
        "cursor": {
          "ref": "c7aed234-5568-4756-beb2-60659e0c3369",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "77e897c1-de11-43bb-b1b6-1301a3bf860a"
        },
        "item": {
          "id": "c0bf2678-0aa7-4a12-b2cb-6698ab24af2d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "475c7075-2775-447f-b501-885e4610b20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c792551b-83ed-4be7-b9d8-706e2372754b",
        "cursor": {
          "ref": "95fa5dc2-f0fd-4c49-b38e-ee64bcea3dba",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1ffa190c-5c49-4887-8d4b-0d7de88d3192"
        },
        "item": {
          "id": "c792551b-83ed-4be7-b9d8-706e2372754b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f818a4a9-6131-497f-a843-f5c18998e876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0bea4d-d10a-4242-a187-765d85f2a124",
        "cursor": {
          "ref": "56ee91ce-536c-4cdc-9578-56515f691504",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d0e3b010-2d7a-48a6-9146-f63535637fea"
        },
        "item": {
          "id": "3a0bea4d-d10a-4242-a187-765d85f2a124",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "31297bc9-f79a-4c5b-b96a-67918679965b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d583aef2-2160-4a39-b258-771dc163b8ee",
        "cursor": {
          "ref": "42922ee8-9469-4c99-9a4e-ae84181188e2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "de5c4ec2-25dc-4a81-b9c6-4b58d9907468"
        },
        "item": {
          "id": "d583aef2-2160-4a39-b258-771dc163b8ee",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a8f8ea85-a0ef-4dd2-a7a0-26e8fc644c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bcb754-cf96-4fd5-bef8-42fa780d90fc",
        "cursor": {
          "ref": "320e4884-77ff-400b-bb77-279cb47187ce",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a8edf2b9-a435-46b8-979a-da05f43fc21c"
        },
        "item": {
          "id": "c2bcb754-cf96-4fd5-bef8-42fa780d90fc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2a4cf5fd-e006-4984-a78f-2366dc33ca68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3815231d-ec52-4ca9-841d-6311d57477f8",
        "cursor": {
          "ref": "3692d78f-f730-444a-8472-02bea86969f2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "79819711-421b-4cb9-922f-cf87cd0838fb"
        },
        "item": {
          "id": "3815231d-ec52-4ca9-841d-6311d57477f8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "789d55e7-4283-405a-8615-6aed5e0f27f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8711e5a6-a446-42d9-a49a-2da39ded16d8",
        "cursor": {
          "ref": "d98e2275-baf8-44e5-8335-f7c08b86f5ba",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "959b12f9-a207-4dd3-b1ea-9e7d49f4d6c4"
        },
        "item": {
          "id": "8711e5a6-a446-42d9-a49a-2da39ded16d8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "335d2a2c-b093-4d9c-a70e-a3196991bb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6276cfb-b59b-4aba-b62d-880231e1bf54",
        "cursor": {
          "ref": "d8eec2e7-64d4-472b-bf82-f94d1b4eb132",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0663292f-9f22-47ab-8082-72921eb47b39"
        },
        "item": {
          "id": "f6276cfb-b59b-4aba-b62d-880231e1bf54",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0930042f-b405-4ac6-b328-6488cdcf31e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6ed782-b96d-4c12-9460-840baaa163c7",
        "cursor": {
          "ref": "98c4b780-a07e-4166-8954-e6b568ceb78e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "131ed77d-c97e-4874-9434-7b9b4a168d8d"
        },
        "item": {
          "id": "1f6ed782-b96d-4c12-9460-840baaa163c7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a5841b80-dcd6-4219-a7dd-b86f914523d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb1c980-7956-42c9-b869-0edbc1b5d44c",
        "cursor": {
          "ref": "01f83749-fba2-4649-b133-23cd7782bd4e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b3632996-edd5-489b-abbe-eeb80a6525d9"
        },
        "item": {
          "id": "2cb1c980-7956-42c9-b869-0edbc1b5d44c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "16b9542f-4622-42a3-a104-d8d5aac634d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b39df63-19ba-4826-9aa5-1460a66fd735",
        "cursor": {
          "ref": "23cf816b-7548-4a2a-a2b1-f1bc4d92e198",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1b1445ed-ef70-47ba-b003-2dc8eb9ee5ba"
        },
        "item": {
          "id": "8b39df63-19ba-4826-9aa5-1460a66fd735",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "20023381-c178-4dfa-8aaa-9c87fff4df97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59b0605-fc62-40fc-9de7-b8df07a56916",
        "cursor": {
          "ref": "52c8d22c-59ef-4720-8ae3-9cdb3126a4b7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8e905e17-4778-487b-877b-69850910c6c3"
        },
        "item": {
          "id": "d59b0605-fc62-40fc-9de7-b8df07a56916",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a1426200-c927-4cb5-8bed-096aacac11ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4399690-55e3-46fb-92ee-fe291d478c93",
        "cursor": {
          "ref": "c4d39bea-ad65-4622-a90c-ac6c0876cb79",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a33382b0-d7ef-476c-9422-117eff241ee6"
        },
        "item": {
          "id": "f4399690-55e3-46fb-92ee-fe291d478c93",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fdfb50c6-908c-4c8a-80f4-4b2d063f7aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2aa852-1e5e-4538-8599-c6074b3581ef",
        "cursor": {
          "ref": "4d134a7b-19cb-4c21-ad26-3fa64e97b191",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cdaed924-a375-4413-9b7e-eb3e1bd75c68"
        },
        "item": {
          "id": "8a2aa852-1e5e-4538-8599-c6074b3581ef",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7dac85dc-80f1-42f9-88de-8bbd45992e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d4b444-8ab7-4cd5-83fa-f74e35b4c70d",
        "cursor": {
          "ref": "6143f1b1-8fa6-4e9a-a897-3e6cae95fc5a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c04a0d97-8ab7-4df6-b687-5b2176c80aae"
        },
        "item": {
          "id": "62d4b444-8ab7-4cd5-83fa-f74e35b4c70d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9102b07f-f823-4d42-84fe-1a31b75749cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964799c2-55c4-43c6-ba49-f76381541be6",
        "cursor": {
          "ref": "0b9c7fbf-f44a-41f2-93d0-da70491b0189",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ffd04bcc-89cb-4be8-a960-98b444280b63"
        },
        "item": {
          "id": "964799c2-55c4-43c6-ba49-f76381541be6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d8b6bd74-ad5b-498c-99e7-5ec387f47964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8395b30e-d0ca-46a7-ae38-958bd568dc12",
        "cursor": {
          "ref": "f4c43c82-09e8-44c0-9585-2b058b11fc48",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f58acaa3-aeec-4f42-8bc6-d52093be794a"
        },
        "item": {
          "id": "8395b30e-d0ca-46a7-ae38-958bd568dc12",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "63cefb69-c789-4374-9f29-f8e84489c532",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070797e3-2aba-4b8f-acfb-73a68137c2e8",
        "cursor": {
          "ref": "74bdf15b-2f1e-4379-9a18-81c0484e12b7",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4331884f-6743-41e8-aa2a-a74ea7a7d25e"
        },
        "item": {
          "id": "070797e3-2aba-4b8f-acfb-73a68137c2e8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5a3ca015-146b-4c53-9e9d-d7d5b897efca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44253da6-35f5-4d15-951c-f5ad930feca9",
        "cursor": {
          "ref": "e4d3bb82-103f-494c-a625-523be5c74c92",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bdc33264-cdd7-45c1-a4d7-745b90d4d620"
        },
        "item": {
          "id": "44253da6-35f5-4d15-951c-f5ad930feca9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "669d2fb6-a51a-4c96-b3b0-fed28904f256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26db15ac-9a9e-42d1-906a-3be02c7a586e",
        "cursor": {
          "ref": "3fe31f1a-364a-4eda-a899-00e3fe9b3a46",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "14e941ee-4248-4487-a106-1fbf2937853e"
        },
        "item": {
          "id": "26db15ac-9a9e-42d1-906a-3be02c7a586e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3a8cbdaa-6ad6-4778-ab71-d7ec3d13ab12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba97f37-1e1c-4361-91f4-58d9de918df6",
        "cursor": {
          "ref": "4b918d4d-c7d5-4a5c-8bbb-ce69157d978f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4c9b855f-6632-4f3e-b0e7-2f078c9e7d2a"
        },
        "item": {
          "id": "8ba97f37-1e1c-4361-91f4-58d9de918df6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "be35d137-75b8-47f7-b407-af601312fe0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68646250-29bc-4c1f-95d0-b90d50ed6a82",
        "cursor": {
          "ref": "8f041f20-14c3-4502-b4fa-309e553866e8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "53d17e11-3e9f-4be3-baa1-b4ef216ef025"
        },
        "item": {
          "id": "68646250-29bc-4c1f-95d0-b90d50ed6a82",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "850c2d7d-b707-472d-8c62-8491ccb9546f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe76228-ad3c-447d-b08b-0de1dcb0d497",
        "cursor": {
          "ref": "3b8d3b59-01fe-41a9-aca4-e1ecb27fa0c4",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "caac7f2f-7daa-4ad8-8387-2b0185f9198a"
        },
        "item": {
          "id": "fbe76228-ad3c-447d-b08b-0de1dcb0d497",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4c89aa41-6217-4617-807e-9268117b2238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27030edb-65dd-4313-ba2d-17ff5af74d60",
        "cursor": {
          "ref": "abcc7c4a-4d0a-4b4a-8344-92ff3ef59727",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cdbb58f1-ebdb-4ecd-931d-09699c13070c"
        },
        "item": {
          "id": "27030edb-65dd-4313-ba2d-17ff5af74d60",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "11f306ed-f61b-4381-9d59-1d3f04d68901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27548423-f631-4cce-810a-ce1c55ef12cc",
        "cursor": {
          "ref": "e3ca33c6-0183-4b1e-84d8-8cf33be31780",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d51ac600-8042-42de-9731-ca26156f80b7"
        },
        "item": {
          "id": "27548423-f631-4cce-810a-ce1c55ef12cc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4b4f478a-8173-4ffc-b044-641c789674d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edf98da-b2e2-4b49-b298-64855c27ba66",
        "cursor": {
          "ref": "b881d557-e24f-4c1d-92e3-04febfd5d619",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dce66fd4-4733-41f3-ae83-6d27be7cfc37"
        },
        "item": {
          "id": "2edf98da-b2e2-4b49-b298-64855c27ba66",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d15ff62a-629c-4361-9061-91e4cbfc1869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce5881b-d5c4-4fdd-a9c7-4ca20cc3db9b",
        "cursor": {
          "ref": "2cde2745-9bcc-4dbf-98ea-f2b7c848d8c2",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b15a5c72-f0a1-4cae-a73b-b565c7f17d84"
        },
        "item": {
          "id": "4ce5881b-d5c4-4fdd-a9c7-4ca20cc3db9b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "acf0d0c5-bc09-415e-9bf1-e9862ce83678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cedf466-915e-4803-b94c-22518c8bfa82",
        "cursor": {
          "ref": "bbb1a604-1b64-4d28-8e02-f334e67f18f9",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f28ab1d7-276a-4d22-8214-9ba2f32c9ff5"
        },
        "item": {
          "id": "7cedf466-915e-4803-b94c-22518c8bfa82",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e9cec474-d40e-4017-bc49-f3d42dc3e74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380faab7-9337-4649-9735-a6a62547fb32",
        "cursor": {
          "ref": "5ede69f2-ba60-4994-a8e9-d758b66aedb3",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0a3c65fe-7356-4e79-ad6a-2001c0f7597c"
        },
        "item": {
          "id": "380faab7-9337-4649-9735-a6a62547fb32",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "420e6920-e380-4ce2-b913-ac5dda308bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad80a1ee-a98c-486e-900f-ba04ed0f45cc",
        "cursor": {
          "ref": "970ed7cf-316f-4e18-b3f4-a52a37f1998f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d55e2946-aa8f-4ecd-be78-73ceef2fbd53"
        },
        "item": {
          "id": "ad80a1ee-a98c-486e-900f-ba04ed0f45cc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "46ab8a99-b10e-4a35-823e-791f2ee72118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644cd2b1-40db-4d55-9218-1f8ada3c1234",
        "cursor": {
          "ref": "ae4ab405-b7e3-4590-b3ad-7a3c64428d0c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "380e0081-8539-43a7-bb56-1aac649a17a1"
        },
        "item": {
          "id": "644cd2b1-40db-4d55-9218-1f8ada3c1234",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b8d8ef47-2eff-426e-beed-499345fd8664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a26e3f-8c6a-4ae5-aab6-a0fddf32fbc0",
        "cursor": {
          "ref": "efe410e3-a15a-4507-89bd-f5ad6645f8e7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fdb35bc4-81db-4707-be6b-b9c9f592639b"
        },
        "item": {
          "id": "16a26e3f-8c6a-4ae5-aab6-a0fddf32fbc0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b8d3f712-bd41-4eda-a5bc-f208e9387b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f784eea-d13e-41a2-b221-e7a6e4f86f0a",
        "cursor": {
          "ref": "666ff5f0-363b-4069-b1ba-d2d43dbbe2b5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eb2818b5-0aee-4c30-8eba-92a63f3e122d"
        },
        "item": {
          "id": "2f784eea-d13e-41a2-b221-e7a6e4f86f0a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "99621178-36e2-4da8-8d3e-a89d4bb78975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb3af2b-0966-4a54-a53e-1a76d212fd9c",
        "cursor": {
          "ref": "828839d1-b1de-4ef6-bfa3-0dc0a451ef84",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5db1f772-f5bc-4a5e-a986-c3bf979529ea"
        },
        "item": {
          "id": "6eb3af2b-0966-4a54-a53e-1a76d212fd9c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1e156fa3-3844-40ca-ba1d-219bebeae691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd757d75-dade-481b-809e-0ac15959d089",
        "cursor": {
          "ref": "40a208e3-327f-41d9-8b8b-271b44d1da5f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c868560c-a8b6-4224-9658-40f42fc29f4d"
        },
        "item": {
          "id": "bd757d75-dade-481b-809e-0ac15959d089",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "17a9ffb0-f299-419e-a1a6-66e8fd4d798c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95683ec-b946-497d-bd12-adc4a241c0b9",
        "cursor": {
          "ref": "0d9e6fcb-282a-4c88-941a-a44cb159ce00",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9c77ba4d-2c73-45fb-afe1-81d60bcaca47"
        },
        "item": {
          "id": "e95683ec-b946-497d-bd12-adc4a241c0b9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "49733359-2119-4134-ae0b-573e4ff06fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ea515d-fd09-4cc1-a5b5-3acace72cd4b",
        "cursor": {
          "ref": "cdf0cffe-2715-45bb-b81a-ffd4238037ad",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d45b442f-d878-4b96-825f-97502fedb084"
        },
        "item": {
          "id": "e1ea515d-fd09-4cc1-a5b5-3acace72cd4b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3636d5ff-10b8-4fd1-9f8f-baec9ae39b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cb401e-3f30-4b00-9493-b1fe12750a06",
        "cursor": {
          "ref": "c75bbe49-870d-4be9-933a-6c490d26dde8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f7399344-2b47-41b9-88a8-956759d5cae5"
        },
        "item": {
          "id": "53cb401e-3f30-4b00-9493-b1fe12750a06",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "994e8c09-77d1-4a68-a35f-d1502c9692a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca644501-f3e6-4b35-a5db-f727de5bf283",
        "cursor": {
          "ref": "cdaa7659-e8ac-4942-a021-a3691fd79173",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ced5858e-445b-4858-86bc-e199a868ada7"
        },
        "item": {
          "id": "ca644501-f3e6-4b35-a5db-f727de5bf283",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bf9c762c-1e30-415d-959c-476f9c3e8154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ce051e-f2b4-4e01-8422-f568bbf18672",
        "cursor": {
          "ref": "ae971fc6-dc35-4ff7-a775-5d24e853fa30",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dd08a164-a0cc-4bf6-8c35-4338524b0aae"
        },
        "item": {
          "id": "f8ce051e-f2b4-4e01-8422-f568bbf18672",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e3b7ab8d-91ff-4899-9861-5302943db3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25684de-f25c-492c-8447-02663c1c4576",
        "cursor": {
          "ref": "a3a67ac1-44e3-456c-a040-4de3839b76dc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6ec92fea-6966-480d-a24f-71825a1e2887"
        },
        "item": {
          "id": "f25684de-f25c-492c-8447-02663c1c4576",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "273e416d-aca6-43f1-abfa-c33a3ba06f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50349026-3ec2-4ce7-b473-1f9f67ac94cb",
        "cursor": {
          "ref": "c5a44d6d-9f65-4db9-9209-48d4dde89d3a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "83d4db37-c6d8-4b32-8417-915fc2c19d05"
        },
        "item": {
          "id": "50349026-3ec2-4ce7-b473-1f9f67ac94cb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7b36de1d-b78b-433a-8fe1-bf0967a206d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d388bc-2d49-4aa0-bb9e-a4ad7469e55a",
        "cursor": {
          "ref": "c4a3ac16-eefc-4fa8-8420-6eb1470b5307",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "13fe11dc-f4c4-4782-81df-0a893aa20c3e"
        },
        "item": {
          "id": "56d388bc-2d49-4aa0-bb9e-a4ad7469e55a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4ede11c8-febd-4c27-90fe-a2f4630f1edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826006b3-ea48-47e0-8688-927b01a4dbbf",
        "cursor": {
          "ref": "bd45b6da-b119-4c0a-ad99-b09ba35e0393",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6f4acfcf-5c6a-47f7-a218-d18e6aee3d61"
        },
        "item": {
          "id": "826006b3-ea48-47e0-8688-927b01a4dbbf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "81c5640b-0389-4279-af08-50fdb94247a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63cd431-f218-43d7-827e-9fd4b07f6be9",
        "cursor": {
          "ref": "9c9a41e5-54bd-42b6-9883-de9da28b9cc2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "40852294-2660-4eb5-82b0-34b0e441745e"
        },
        "item": {
          "id": "b63cd431-f218-43d7-827e-9fd4b07f6be9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "30b8a62e-85b6-4bbb-9dd1-0e39ef76acac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e2bd87-8333-4004-968a-6365d7b8329c",
        "cursor": {
          "ref": "805def4b-7162-46a3-8c9b-69a7905540d5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "26b5f76a-8886-449d-96e7-d48e2b9664ba"
        },
        "item": {
          "id": "26e2bd87-8333-4004-968a-6365d7b8329c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cf64089c-4057-430c-90ae-c5a2204799e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4900e9-baa3-4964-982f-085d9fb0222b",
        "cursor": {
          "ref": "18779b84-f4ed-4d45-8778-34c60b3cc43e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ffeb9203-ad29-46f4-bf04-3c13da59a6b7"
        },
        "item": {
          "id": "6a4900e9-baa3-4964-982f-085d9fb0222b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ebd16c0d-fc57-49ae-85e1-0ab7be40c28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e2c886-a244-4396-be52-ae2ac2d73ad4",
        "cursor": {
          "ref": "0626b1df-b300-4a30-ba2f-a658695ecf2b",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ada0755d-b6b6-43ce-b3b7-13cb609d70d0"
        },
        "item": {
          "id": "41e2c886-a244-4396-be52-ae2ac2d73ad4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "aceb4032-fd6c-4202-9cfe-bcfe32d2cbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953a2e80-47bb-41bb-a6f8-7ccfa73c3002",
        "cursor": {
          "ref": "9ef1196b-d406-439c-bc74-8083f2acf943",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "187a8218-35b7-414f-b291-4d0534f9d3d8"
        },
        "item": {
          "id": "953a2e80-47bb-41bb-a6f8-7ccfa73c3002",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dad9b3ff-405f-4f31-a890-f427a722abad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4268dee-82ba-42dd-a9f1-92286071d6d1",
        "cursor": {
          "ref": "c6037c85-fc61-4eb8-82cf-c8bd3da037ae",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7c6d900c-d897-4c6f-bf09-72cd1a1bfdc8"
        },
        "item": {
          "id": "f4268dee-82ba-42dd-a9f1-92286071d6d1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d74284fc-76bb-4f92-aa1c-822722706b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d8f3ec-f27c-4f3a-8e9b-959cf9a6a5b2",
        "cursor": {
          "ref": "79910b41-2925-4f73-bde1-1a29fdbedd25",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "56f3c4b1-5c51-4e49-8f47-da18b0bfcc60"
        },
        "item": {
          "id": "c8d8f3ec-f27c-4f3a-8e9b-959cf9a6a5b2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "266e6a34-6a20-46da-9a95-d771f3491ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3ff460-c8e1-4913-be5f-043b7ce07142",
        "cursor": {
          "ref": "0a14c32f-9e1d-4826-afb8-8e1fdd32ba66",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4b47b348-b360-4759-b9ae-f712f5136ca1"
        },
        "item": {
          "id": "2c3ff460-c8e1-4913-be5f-043b7ce07142",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "956a3cfe-f50b-4395-aa11-e2f42ae7cce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03932b9-d108-4df2-bb98-ae06cb7b6fbc",
        "cursor": {
          "ref": "90f2c2b8-de52-4489-a24b-72eaccccfd80",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d6111858-5aaa-45c2-8c7a-450f457353f0"
        },
        "item": {
          "id": "d03932b9-d108-4df2-bb98-ae06cb7b6fbc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2cc25530-c356-499e-9f88-18746998a453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bb69ba-8a5d-4a90-bc13-900eaec65f6c",
        "cursor": {
          "ref": "56f5e4a5-887c-419f-8fc9-2a93c8711159",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "094d894e-24a1-4b67-8859-795f1b0eba29"
        },
        "item": {
          "id": "88bb69ba-8a5d-4a90-bc13-900eaec65f6c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3f1cc0d0-006c-4c7c-8388-a4c984164f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f72cf6c-83d4-4b18-9224-75a421309e6d",
        "cursor": {
          "ref": "8b17befd-9f11-4e6f-92e7-3755ed846650",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2868faa0-b3bd-4501-9cda-8567ae2063f3"
        },
        "item": {
          "id": "7f72cf6c-83d4-4b18-9224-75a421309e6d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fa0a97dd-f600-425e-9c2c-9fbfa1ee16aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d741dcbd-0b56-4d83-9967-a2f91a615c89",
        "cursor": {
          "ref": "41c2cc6f-fefc-4b0d-9b17-434efe4be749",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1e13bcdc-e70d-43b6-951b-3b1a3b02e3ac"
        },
        "item": {
          "id": "d741dcbd-0b56-4d83-9967-a2f91a615c89",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "447dc63d-a4ba-40fc-b3f1-3d52f8d05cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ee2f08-7ee2-415e-b875-8887d16eefa9",
        "cursor": {
          "ref": "aa075a04-03ff-4298-a919-85ac3d8749f3",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "61ff8f83-4119-429d-9747-c364de7e0cdc"
        },
        "item": {
          "id": "14ee2f08-7ee2-415e-b875-8887d16eefa9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8a554264-3862-40d7-876a-1b9c08232f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474461e3-4f99-4082-af14-4b0c5bc9c93b",
        "cursor": {
          "ref": "42add229-0a9b-44bb-aee7-a967a4c919bc",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3cea36d3-b95e-4dfc-a70a-32bb40fb3a5f"
        },
        "item": {
          "id": "474461e3-4f99-4082-af14-4b0c5bc9c93b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0724911b-68ad-4f53-9be3-4800405b6bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df116c3b-cc89-4976-889b-21966c807b86",
        "cursor": {
          "ref": "7d5e6c3b-6b27-4f37-a85b-bd2b30675745",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "be40f7ed-62fd-496f-9445-6ec8a50e911a"
        },
        "item": {
          "id": "df116c3b-cc89-4976-889b-21966c807b86",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b20b4dfc-4eba-4d72-9c92-25f086b36f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a7239d-016a-4074-93ff-0f3ef00fe165",
        "cursor": {
          "ref": "4164695c-368a-44b5-b94e-7dcb8b47d0b5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c7204377-eea0-43f1-a0ed-26ce0b9aa139"
        },
        "item": {
          "id": "d9a7239d-016a-4074-93ff-0f3ef00fe165",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e53dc45b-3caa-4953-b726-1910ec67f49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9c86f8-262c-4848-afa3-a6c423fcc1db",
        "cursor": {
          "ref": "cf6d0488-7c1d-42fb-b5c4-642076a82658",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e44f75c0-e2c2-4762-b2d3-2351cd8e11b1"
        },
        "item": {
          "id": "6c9c86f8-262c-4848-afa3-a6c423fcc1db",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1522b5f5-3bd5-4460-a8a9-8306ef6c472c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0de20a-ced2-4c64-8552-004fd52e61d8",
        "cursor": {
          "ref": "ae2ccf15-d3c6-4ff0-88c3-4ec128117c4b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ab63dedb-5403-4477-a648-ae60a95c4348"
        },
        "item": {
          "id": "dd0de20a-ced2-4c64-8552-004fd52e61d8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "df5f9c24-48b7-400b-a329-36213b4c97b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09dcfec-3a2c-474d-b4bf-6c69dbda40ff",
        "cursor": {
          "ref": "46ad3362-5b79-410f-a93c-b96c81265f87",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "910848c8-d38e-4336-afbc-f5c885e4163a"
        },
        "item": {
          "id": "d09dcfec-3a2c-474d-b4bf-6c69dbda40ff",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "611fc1e2-fb91-4a75-a652-30813db966b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad19040-a795-453e-ad04-2763fafb3db5",
        "cursor": {
          "ref": "df3648f0-ab87-4783-b8a0-62209d2aabc0",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cabf279a-3715-4039-af8f-83f31dc9833a"
        },
        "item": {
          "id": "5ad19040-a795-453e-ad04-2763fafb3db5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a9127214-03ed-415a-97d7-cd00cef47e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da3ed44-60a1-457c-8fc4-fe19741c8466",
        "cursor": {
          "ref": "bbc364cb-e7b1-4d7b-ac2a-a1b3daa29d23",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bb41a478-6f06-4d7e-abc1-b52d75d56cda"
        },
        "item": {
          "id": "2da3ed44-60a1-457c-8fc4-fe19741c8466",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "96e80436-e9ed-446c-b3a2-5836b47835fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f158f1-0415-4895-a370-6a4224baa716",
        "cursor": {
          "ref": "1ee5486c-90ba-4a10-825a-7c064d8f5ce5",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bde2e58e-4e1a-4004-8e31-b36632d371f0"
        },
        "item": {
          "id": "34f158f1-0415-4895-a370-6a4224baa716",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7d3c2b78-56c3-4053-91e1-f7fc2963a990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626cc1e4-983f-4c37-85d2-6ca28e814f41",
        "cursor": {
          "ref": "e6422513-b5f9-4185-ae6d-8070c0e9df36",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a5d61eda-3b4d-475b-aab7-8c6ec5011487"
        },
        "item": {
          "id": "626cc1e4-983f-4c37-85d2-6ca28e814f41",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ba49a40e-8a52-431f-8730-2cc7e555eb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e424c92-6d76-49ff-9578-a88ab8d9e452",
        "cursor": {
          "ref": "370385ea-a6bd-4c23-b54e-c82e60dada92",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cd482780-287d-4aea-b224-00497b32d861"
        },
        "item": {
          "id": "9e424c92-6d76-49ff-9578-a88ab8d9e452",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ec894e7b-446e-4827-b777-1d69ad686fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14700016-a8af-4917-965b-8f1ae5782b83",
        "cursor": {
          "ref": "b28a61a5-2df2-4e5e-8540-620e1cf2f6bc",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9bef7cc6-60e3-4d17-b13a-05952cfd9e93"
        },
        "item": {
          "id": "14700016-a8af-4917-965b-8f1ae5782b83",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c897f417-860b-49fd-9f46-d3061ef293b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a18f73-9826-42d4-8cff-c922c5f1d8a2",
        "cursor": {
          "ref": "321b60fe-1641-4e88-b1bf-94f3029e1156",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7ebcd795-69ea-4d2d-a306-6ba797e11eaf"
        },
        "item": {
          "id": "a4a18f73-9826-42d4-8cff-c922c5f1d8a2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "670143e2-0c29-4b8d-8669-a218aacbb495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0a5e06-f6b3-41c1-af4e-bb259c7766de",
        "cursor": {
          "ref": "8bcbfc2c-e6f5-4f85-8952-5936c5e51f3e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "eb7613be-ec3b-477d-a170-70a3ce88882d"
        },
        "item": {
          "id": "ee0a5e06-f6b3-41c1-af4e-bb259c7766de",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "66530a37-6760-4ba3-83e3-54f04b83c00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73a7e14-483f-42f9-9dd8-0bc1c0ff4bdd",
        "cursor": {
          "ref": "b62f269b-3ac6-4805-b58c-a78f4698ea80",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cfbaf1d3-da44-4f07-94c2-13c93d8c9c43"
        },
        "item": {
          "id": "b73a7e14-483f-42f9-9dd8-0bc1c0ff4bdd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "90e119a4-dd67-4848-92c5-db304f1173be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b445e89d-4890-4ea3-8273-0a92eb928d21",
        "cursor": {
          "ref": "9ad55311-b5d6-43ba-844b-e5eef19fe547",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "23bb2069-d016-477f-bc00-cee93f6fdd4a"
        },
        "item": {
          "id": "b445e89d-4890-4ea3-8273-0a92eb928d21",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "37754b20-3878-455a-b7ad-cbf3dd1b062a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698c00c3-1fe3-4901-91b3-8c8671e88d5f",
        "cursor": {
          "ref": "b22b16d2-4ec1-4136-aa47-9bbdeb1699ba",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "94021289-88d4-4082-a384-38b944691c0b"
        },
        "item": {
          "id": "698c00c3-1fe3-4901-91b3-8c8671e88d5f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0b2dd01e-16d8-4a18-a4c1-770bd1155b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7faf19-6945-4244-ae9f-64c02c770420",
        "cursor": {
          "ref": "9f951d67-f732-49d9-8e3b-ce00dd451f4b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "43495322-f841-4eca-a0e7-3e7884fc4ab3"
        },
        "item": {
          "id": "7b7faf19-6945-4244-ae9f-64c02c770420",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "572bcff9-f96b-4aae-82ec-c963d69ecb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2b5dbc-2da2-428f-96f9-95e9e12ff3f0",
        "cursor": {
          "ref": "774a14cf-86fd-482c-a646-ef59673776e5",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fdd4dd40-d8e9-44ef-87e1-98f116aaf9ba"
        },
        "item": {
          "id": "0e2b5dbc-2da2-428f-96f9-95e9e12ff3f0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "88af9589-d21c-41e4-8754-882d9ababcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b835ad3b-a987-4736-9e43-532855896357",
        "cursor": {
          "ref": "604aba6d-619c-4a83-9f46-8d178d4ea529",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8aa155e1-eb57-434a-83dd-9760712a63e3"
        },
        "item": {
          "id": "b835ad3b-a987-4736-9e43-532855896357",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "28399c43-5df7-4cf2-808a-7584aac56a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6de8e38-ef9b-4706-a788-7207af6ec0ed",
        "cursor": {
          "ref": "77c2bc88-2a9e-44da-b3d3-956682517d3e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "48e8f025-eb24-46a0-9e25-fb80c38be651"
        },
        "item": {
          "id": "a6de8e38-ef9b-4706-a788-7207af6ec0ed",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "41acfec7-8ba8-4560-9455-f738c083a1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80ecbd0-2c90-47ac-9e7f-d8feb186de56",
        "cursor": {
          "ref": "0166a859-cb56-44d4-80df-04f3d915f3e2",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d3c39f37-2b59-4ce6-b10b-f2eb30316f8a"
        },
        "item": {
          "id": "d80ecbd0-2c90-47ac-9e7f-d8feb186de56",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8799cadb-c8e6-447c-89f4-3007cfd99c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab664bda-1fc8-421e-8bcf-21afd744a35a",
        "cursor": {
          "ref": "90cee43c-1cc2-4f37-a183-acb67a226633",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c5ce1686-da66-4eb4-86ae-25a097008eb2"
        },
        "item": {
          "id": "ab664bda-1fc8-421e-8bcf-21afd744a35a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d60fc287-3cab-4209-bded-390765fb53af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f6da21-0aec-4d92-8acb-a380f1e85a8c",
        "cursor": {
          "ref": "31ae6357-dfe8-4a0a-9d7d-a07fd8e739ca",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7f878de1-8086-441d-9eeb-668dd70463a2"
        },
        "item": {
          "id": "11f6da21-0aec-4d92-8acb-a380f1e85a8c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e01cf227-91c0-4954-ab29-f47f0aadc6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c9f2d6-eaf8-4ffe-9217-a19010395e41",
        "cursor": {
          "ref": "04288352-2736-401b-8434-63ddda27504a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b68d67f7-561d-411e-bca6-300b453b1966"
        },
        "item": {
          "id": "41c9f2d6-eaf8-4ffe-9217-a19010395e41",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0aefa8b6-e10e-4d8a-8118-31d1dd185beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3de9b43-bf89-4bf9-9915-c8e4187a9585",
        "cursor": {
          "ref": "30afd9b7-962a-4dd6-83ef-d8ce242c9929",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f79cd7f6-492d-41c0-be61-1560b8764877"
        },
        "item": {
          "id": "f3de9b43-bf89-4bf9-9915-c8e4187a9585",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0ad55de1-2dc6-46dc-aee7-78aa5113e677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf529d8d-0352-46e7-ba07-a403a4d17d4a",
        "cursor": {
          "ref": "3bf78003-2cd5-4f8f-8f52-355149293c18",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "76d0501f-4f5a-446e-9169-ce990db0b15d"
        },
        "item": {
          "id": "cf529d8d-0352-46e7-ba07-a403a4d17d4a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d6ff0474-ecaa-4be9-8a81-6aed13228e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a10080e-3800-427c-a3b9-ab2f575bb6be",
        "cursor": {
          "ref": "52943bbf-3689-407b-83ac-d1a4a012060e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8c28c7e8-e919-4b5b-a2db-7b3d01f14c4f"
        },
        "item": {
          "id": "4a10080e-3800-427c-a3b9-ab2f575bb6be",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7184c862-64e1-45e1-aca8-0651fd5dc748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92552ad-103f-440c-99cd-7eb3988f392e",
        "cursor": {
          "ref": "f01a29fc-3dd1-45e2-9768-75f76a421c2a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e91c04bb-22bf-4a3b-910e-72acc8b0d74c"
        },
        "item": {
          "id": "d92552ad-103f-440c-99cd-7eb3988f392e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "94509a13-d817-404c-9e95-1fcb08c6b974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d039a0-789e-4310-ab3f-7a4e67ddafa3",
        "cursor": {
          "ref": "5c36db5b-54fd-4959-8562-c5265e9759b6",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9a458bcd-cb0a-4eae-b385-71f2edd7efe3"
        },
        "item": {
          "id": "c7d039a0-789e-4310-ab3f-7a4e67ddafa3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "077cb9c3-bd03-4711-b341-9382952131c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44553528-34ea-46f3-a8b7-a72b3133fc19",
        "cursor": {
          "ref": "f3178851-e1e0-4ce3-a6ec-4412aa2fe046",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a22728af-b1f3-4074-8527-98b0e731c175"
        },
        "item": {
          "id": "44553528-34ea-46f3-a8b7-a72b3133fc19",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "078cca41-d208-4955-973b-828e7426fb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d84731-eac2-44b7-9007-a9f066042167",
        "cursor": {
          "ref": "85118a55-6896-49e4-abf5-8169c420e88e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "02c6c44e-17ee-4b9e-ada4-845fffd83c03"
        },
        "item": {
          "id": "b6d84731-eac2-44b7-9007-a9f066042167",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "27d58a49-88c7-4cb9-9521-b268dbe8c338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f385535c-d6f0-451b-a7cd-17b56e6771ec",
        "cursor": {
          "ref": "92884a5a-13b4-420c-a96a-541e41d79c6d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "20f15d10-4f10-4d56-a6ea-d3722114adfb"
        },
        "item": {
          "id": "f385535c-d6f0-451b-a7cd-17b56e6771ec",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2ec769d8-18e1-4891-a14b-3d2ae798c242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c481330-690b-4041-97d5-58250803deb2",
        "cursor": {
          "ref": "778dcfdd-3b3b-4432-98dd-f3b6c15913ad",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c11151a0-6ef2-4cb6-bee8-3c6b8668bb9b"
        },
        "item": {
          "id": "8c481330-690b-4041-97d5-58250803deb2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1c04795a-acc3-4ab8-bf41-ed306233241c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375f137a-e3e2-4d11-a83d-30e4bc618cc4",
        "cursor": {
          "ref": "2195df44-8ed3-4184-8f0b-ad092f969c8a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f6bee6ff-78c9-4594-8fc7-306412848bbb"
        },
        "item": {
          "id": "375f137a-e3e2-4d11-a83d-30e4bc618cc4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d577d542-da25-4dce-a1d9-d96ec1b3f14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9b06ed-2d7f-42d5-9b71-ce29d728cb3b",
        "cursor": {
          "ref": "3cfe07cb-62d5-4a9d-9610-977725ab40e5",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "360a3413-9fe4-426b-ba32-e73a6bbd37b1"
        },
        "item": {
          "id": "3c9b06ed-2d7f-42d5-9b71-ce29d728cb3b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0012a9b0-9bf5-4905-8f6e-7e2f6f408540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8b54cc-08cf-4aa5-a3e7-b092718e42a4",
        "cursor": {
          "ref": "9635c0c5-9d0d-4477-82e8-8fb5cb9682e3",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c9b05e71-8d7b-4b35-a85b-8c3ad07c87e4"
        },
        "item": {
          "id": "2d8b54cc-08cf-4aa5-a3e7-b092718e42a4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f08eb5e1-6a1b-4bd0-943d-0eb0a3598fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bce127-a2f2-4777-8833-d867cca50d8d",
        "cursor": {
          "ref": "60fbda78-b0b4-4198-89e0-92d80a192fd2",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "75cf2434-aa88-45bb-b211-825641cd49db"
        },
        "item": {
          "id": "13bce127-a2f2-4777-8833-d867cca50d8d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "83d73289-971e-4df5-a8b9-e8b0dab479b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f834d69-0c5f-4ce9-a4be-c457408c0137",
        "cursor": {
          "ref": "f62b8f54-0a5c-4af3-932c-59ba8a67c254",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "954bd689-f0d9-464e-8fce-dc45572b6b82"
        },
        "item": {
          "id": "2f834d69-0c5f-4ce9-a4be-c457408c0137",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f5c9bf63-051c-4da9-9254-00c313ce5877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2beeca15-8398-424d-b309-74de42b1ddf0",
        "cursor": {
          "ref": "6e5ec11d-631e-4956-a859-e70edf852e82",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6a67c292-2c2e-4046-b730-69dadc90dab7"
        },
        "item": {
          "id": "2beeca15-8398-424d-b309-74de42b1ddf0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "03605efb-e1c9-48bd-a982-a926fea04a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe0c1d5-d989-465a-b2e4-0820697413db",
        "cursor": {
          "ref": "c4ca63bb-3f32-427c-b9cc-c252ceacaf22",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "54074832-c373-4a08-90ed-1e1c017a96cb"
        },
        "item": {
          "id": "2fe0c1d5-d989-465a-b2e4-0820697413db",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2d321983-f4bc-4daa-903b-7e204e271c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74825e9b-e584-4097-b843-8b353f0e8b8d",
        "cursor": {
          "ref": "fdc148fe-7a1c-4f45-bf25-0783293604b4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1a26146e-31e2-498e-9119-0eeaa176b6e0"
        },
        "item": {
          "id": "74825e9b-e584-4097-b843-8b353f0e8b8d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "076cb6bd-adb2-410a-840f-b2eb30b95b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26799b9-3b37-4cf3-b25c-1d908382c511",
        "cursor": {
          "ref": "fd738838-4f12-48ee-9cde-a7f76e099ed3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "68cf2d51-e91d-4b28-90b7-692f629757d6"
        },
        "item": {
          "id": "d26799b9-3b37-4cf3-b25c-1d908382c511",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f88b321f-616b-4a9f-9ee6-4c271d16da80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e3cdf2-baa7-4a3b-a010-1cb0d1f009d7",
        "cursor": {
          "ref": "db8513fa-aabd-4e5a-8da2-2a84074d4a18",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9254b286-86de-4d0b-8648-c60c61cf6407"
        },
        "item": {
          "id": "f7e3cdf2-baa7-4a3b-a010-1cb0d1f009d7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9089b719-42dc-41cf-8bc6-837ed4a51464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07963527-abe5-43a1-a2ca-fd85ff0ae657",
        "cursor": {
          "ref": "2edc2d64-f3fc-440c-a7f9-9a017eb4816d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bf4dbf4f-3210-4026-8c2f-e3c52465f9ce"
        },
        "item": {
          "id": "07963527-abe5-43a1-a2ca-fd85ff0ae657",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e2be240f-2fd0-4f3d-8785-2f8134af9fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145deb36-91f5-4c6b-b0e9-2d380f701670",
        "cursor": {
          "ref": "5413e043-c808-4fe8-be5c-9d1fa2f47de8",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7efecb09-9a9a-4a9d-99ad-947ffcfb5007"
        },
        "item": {
          "id": "145deb36-91f5-4c6b-b0e9-2d380f701670",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "83156898-446b-4a88-be2a-4c3647c7e3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3a41ef-12ff-4a03-a443-52e9e8b7d415",
        "cursor": {
          "ref": "6e77979d-c52c-4aaf-9c8e-e4a9a96628b3",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1672e716-68fb-4e9c-bf0b-f6df849d74fa"
        },
        "item": {
          "id": "3e3a41ef-12ff-4a03-a443-52e9e8b7d415",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2aedddf0-bc3c-49e9-84bd-383219642992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5806c77f-e9b2-4a7c-b06a-8d753b828b35",
        "cursor": {
          "ref": "3ef7a707-f599-430f-8687-4fcd9ca4e242",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d5b5a7e1-b1e1-4441-9a11-55f4b79d1ff5"
        },
        "item": {
          "id": "5806c77f-e9b2-4a7c-b06a-8d753b828b35",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fab3180a-ce28-40b6-aee0-4994955bb9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2620e3a2-cb89-4dbc-945a-1fcd8fe90a34",
        "cursor": {
          "ref": "4935559d-b267-47dc-a66d-96a0b694c22c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "10b7ca7c-61d2-44d8-9b9e-7b411d0008e7"
        },
        "item": {
          "id": "2620e3a2-cb89-4dbc-945a-1fcd8fe90a34",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c579bb21-5c4d-4d3e-862e-456c25c2d6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5402bfc3-0c2b-449a-9591-fab15d353dff",
        "cursor": {
          "ref": "c58e5cbe-b23f-407f-8d5f-78a1f460bc43",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "adaf33a8-2e1f-460f-9901-52ae4565cbba"
        },
        "item": {
          "id": "5402bfc3-0c2b-449a-9591-fab15d353dff",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c90fac0f-866f-4d1a-b88f-d1ec85101d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af60f5a-1bdb-4897-bb8c-264a4138fec3",
        "cursor": {
          "ref": "314c8e7d-18c4-4317-8000-9894cb34001b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "86572f69-c479-479c-a19e-a541907d1318"
        },
        "item": {
          "id": "8af60f5a-1bdb-4897-bb8c-264a4138fec3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "644d2043-4081-499d-b278-a484d391ccf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01636ca4-02e2-4b01-bb09-4551d666135b",
        "cursor": {
          "ref": "617825b5-73f5-4b3e-8147-7583bc5edee7",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ee2b8b33-885d-4c00-967e-d3003924672d"
        },
        "item": {
          "id": "01636ca4-02e2-4b01-bb09-4551d666135b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b85d8ce3-4de9-4c5a-b031-bbc3fec67e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9894f32-4fc2-4e41-aa3a-0594fbdbb949",
        "cursor": {
          "ref": "6e1332bb-bbbe-4dc8-bc65-65df7cc07795",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4b8eb029-addc-4f4b-83aa-e3df63c26d1c"
        },
        "item": {
          "id": "c9894f32-4fc2-4e41-aa3a-0594fbdbb949",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "03bab6d4-c427-48db-bd21-b85de05d1829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308dfbe5-7ed5-4ec1-a371-6b2e6f1e7913",
        "cursor": {
          "ref": "1302285a-79e7-4b66-aef9-db27d699b76f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c51ba47e-b453-4b66-b6bc-df825b07983b"
        },
        "item": {
          "id": "308dfbe5-7ed5-4ec1-a371-6b2e6f1e7913",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8349c923-43a0-4157-bc15-8bf24a7ac5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ebb224-b7d9-4f0f-b0d3-ce7f2757cb3b",
        "cursor": {
          "ref": "27622a54-4df0-4839-8d13-d4425114de2e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9cf88d1d-cdcf-4097-a8cd-556945be83cd"
        },
        "item": {
          "id": "84ebb224-b7d9-4f0f-b0d3-ce7f2757cb3b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5a217feb-8153-42fd-8310-06a8671c56e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569d2205-bba7-4926-aaf8-cd2f84061a7b",
        "cursor": {
          "ref": "80da2fa7-3bb6-4cc0-9ca9-b9aff16714bb",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6c453ffb-8b1f-494b-9b0d-0891e55ea057"
        },
        "item": {
          "id": "569d2205-bba7-4926-aaf8-cd2f84061a7b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "86730c73-ad0b-4bd4-8ca2-e527a46dd85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96eaba0-8d4d-433a-a0d2-a652d40b90e5",
        "cursor": {
          "ref": "efb33316-8d9c-4d5e-bfaf-4cd0505dc393",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "28f7838c-4aff-4b3b-85f3-d161fa5335cf"
        },
        "item": {
          "id": "a96eaba0-8d4d-433a-a0d2-a652d40b90e5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3d8b2436-345f-4148-9255-eff42a3d4b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61ec323-379d-4ea1-8968-562d22de1dd5",
        "cursor": {
          "ref": "4d547527-f423-4eb2-8252-b3471e72b919",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7e15f67e-fa9d-430a-9c72-6364bbec39f4"
        },
        "item": {
          "id": "f61ec323-379d-4ea1-8968-562d22de1dd5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2430f540-76c4-4116-a736-2af04ebccccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3312754d-6d84-4006-a10d-4e956ad0511f",
        "cursor": {
          "ref": "1ca513a6-350f-486f-824e-7a6e4cd758be",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "04963cb6-eb34-4c97-8feb-aaa71e1ba730"
        },
        "item": {
          "id": "3312754d-6d84-4006-a10d-4e956ad0511f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "faa2bcd5-104f-4926-acde-710e6d0a2ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "ae83736d-2a97-4144-921f-1d226c1695c5",
        "cursor": {
          "ref": "310ad057-f091-4c89-9fee-1df2becb4458",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c6d5f581-7732-478a-8fc8-6b0bc753e8be"
        },
        "item": {
          "id": "ae83736d-2a97-4144-921f-1d226c1695c5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "551eecba-189e-4535-b2b1-4d4df2478441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "dcb7fc75-847e-4204-87b0-40fd16414ef7",
        "cursor": {
          "ref": "6dc89d53-a8e3-4820-ad07-3e565e31626e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a95bfb6d-35bd-40d6-a0b9-1402f75e30b7"
        },
        "item": {
          "id": "dcb7fc75-847e-4204-87b0-40fd16414ef7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9f509285-ab2a-43c8-8373-0c6f97982ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "7d96f594-6dc4-4d43-ae12-06c0e52f2111",
        "cursor": {
          "ref": "cf2eac29-6397-45f7-81c8-b034501c219d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "abc0bee8-3190-4914-8048-51acfb30dd6a"
        },
        "item": {
          "id": "7d96f594-6dc4-4d43-ae12-06c0e52f2111",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f044fd83-35a4-4544-86fe-b4aaaed039c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d96f594-6dc4-4d43-ae12-06c0e52f2111",
        "cursor": {
          "ref": "cf2eac29-6397-45f7-81c8-b034501c219d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "abc0bee8-3190-4914-8048-51acfb30dd6a"
        },
        "item": {
          "id": "7d96f594-6dc4-4d43-ae12-06c0e52f2111",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f044fd83-35a4-4544-86fe-b4aaaed039c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d5180d-6dcb-4687-9e78-f2dc37c25995",
        "cursor": {
          "ref": "d308c86f-991f-4384-bc09-f4f3a21496ae",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6e45588d-9caf-4f50-aae2-7904896e996a"
        },
        "item": {
          "id": "12d5180d-6dcb-4687-9e78-f2dc37c25995",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0dda6012-38bc-4f2a-bc67-d90ab0797d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd712c0a-8281-4bfa-9962-4daaa036dfd5",
        "cursor": {
          "ref": "34a15020-e325-4164-989c-3284e7347f11",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7f1456c9-b711-4f30-8490-008287172a0b"
        },
        "item": {
          "id": "bd712c0a-8281-4bfa-9962-4daaa036dfd5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0905674e-8b58-4e1c-ba22-cf58258ccc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}