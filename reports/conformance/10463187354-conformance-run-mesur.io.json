{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f1952dd4-5db0-4b5e-bd4e-b26af1ffc349",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0646e571-e301-4350-8314-8cec7a9e474f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a979b37-59fb-450c-809a-ce91fb660e7f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "abf0a10f-2521-4e8f-a6a7-063e242bbac6"
                }
              }
            ]
          },
          {
            "id": "dce6e5f0-af2e-419e-8af1-6c8ec26cc3bd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84cd9cfc-0af6-4c29-9387-1837b3d2fa81",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fcdb8b3d-8465-47c6-8c72-bad7a047a1d7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0d779dc4-ae4b-4d70-b8c5-3eaadcdc6aa3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "41bc0da3-f75c-4d96-a6ed-fb5f98eda366",
            "name": "Positive Testing",
            "item": [
              {
                "id": "16367cb1-e247-40c7-9e26-a78bd1e96da4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a272ab62-baae-49c9-9850-5b71e53c5bbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cad3d243-67b9-4ed8-9fe7-ee3e8fa05691"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "849cdf33-3b74-4988-8648-5ee34bbd29ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cff035d0-41d8-4564-be40-a1cd6f1a9b10"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "01e99ee3-d419-42d4-85db-dc89af0bb664",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49c43276-cb82-449d-91c2-f3119feaa5c3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0699b434-3fc0-40c4-aff4-dd74d7387ba0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dd7db931-b756-4ada-a2f7-4458aee5ef05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a4bf5e8-e071-47dd-968c-13b2148b2207",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23ca9c0f-7cd0-4fd7-a51c-25beb03a9c40"
            }
          }
        ]
      },
      {
        "id": "9a0c021f-b22c-404c-88c1-8a1acea6ad94",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c62389df-6c0c-407c-be27-7aa747a04752",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a626b37-ad55-4b42-98bd-896941690c7a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0607e6ba-b306-47ff-b9bb-f633bbc4fa26",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016cb012-2e59-4aba-8b05-710f76d31eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cfab771-aa52-4b7e-b285-a6adddf08406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b238538a-8b26-47ba-ac5d-7e200ad2aabb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbf8418-c646-4227-b5db-e63b09b6ef84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "764c07a7-4579-4d25-9e9e-ab0c5b25a48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1970521-598d-4212-88ec-d7c28c3ea2ba",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a7496b-59c7-4c25-88d6-73da1e95f3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "683c9558-25d3-4275-a90a-474d586a9e59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13352ff7-ca00-49a3-82c6-4e1b7c528566",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d90f7046-19aa-453a-ae31-f5c8e207d870",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaf85e5-5a23-4de5-b002-5f43765ae5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc14040b-0b51-41b5-afea-c72ee5bcd087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f3e60d-5a68-4abf-9916-7e95766bd33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6dcd28-5ace-4a98-94bd-b793009edfa1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4e9fd811-b00d-4909-9733-a085cf7279e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "638b61af-007f-432e-aebc-65289f8df15e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58e006a0-a995-455a-aed1-ee2459f6d929",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "60b5c1ce-f441-4397-9bba-8b7b2fae8cc2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "550974e4-ae27-4f2a-9831-6e2b7455fa1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1ae059df-518d-4331-8eaa-eebd41b09e94"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c30a1c0-4b77-42f5-8aea-2a397b1c6d17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8279975-d112-42db-9c2f-661a37a9d43f"
            }
          }
        ]
      },
      {
        "id": "2a9b0a98-4b9f-448b-8021-d386723484b0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f6c3acb2-0d7e-4857-8e9c-596ca550d620",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5da0d51-e66e-4e65-82f0-1e4df22a4c5d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3116e1b7-78af-4994-9b24-35c834f9e462",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dca1d5-2453-4b04-a983-f34d4a547b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96c81f9-1fa0-4121-b1d2-5b677e1f8932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0628ddd6-647c-4488-9784-139e64b8398c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6cdb4bf-c42a-45f6-bc14-27dcdb4c7c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afe16a0-ec2d-42af-8611-8ef5e73a8d52",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594a8e96-e77b-4c45-b376-ebc9a686b7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a2b4e2-bdb6-4d50-b81b-40a73174d1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30ea077-263e-467f-863f-b9d645fcbd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "590fe558-60a1-4e27-bfc7-8e9c86c80983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ad3347-e155-461b-b8c0-4e5d63111063",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169454c9-4f09-487d-8f4e-b954e7f30490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26bc1a66-40f7-4cc2-afc1-03262efb0bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0603fe-c72d-4a60-8d53-8b7c53efa21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abc47ddd-5077-443c-9c60-fcc0030a0efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e319983f-5fa4-48b0-8e0d-a48a621be8c4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53454986-a604-468e-a4d6-88be993a6202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f7e0b6-0e05-48c3-b26e-e1ef49335dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c433a23-e520-409e-8393-54834bb0bee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a50d666-a103-41c8-ab32-f994be186524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b52cc8-619a-4709-9990-8af4b5ed139d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd51099-b3e4-4e4f-a36e-8eea3c517a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721a90eb-b30f-44cb-99fc-fbe6677db4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b2cae9-1c61-44ba-ad97-7e31d2da4ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf408e5c-b125-4595-8300-cb879882ffb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a5b560-f813-467f-b9d5-e458d5e9ef96",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0234ba7c-b01f-4e91-9cbc-3c009b3107fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f420ed-3b91-4f39-bc62-cbb769f5d4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e083551a-f925-4fdf-aabc-ea23bdeb3056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0355e09-c607-46a9-a641-c51a272719bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fb3876-17ad-4854-8ea2-84a37071b7f2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dbd972-24e2-4659-b950-eaee9fc56968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada29dcc-3946-4c62-9b76-3d077d3bb5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604ccc5e-4423-4582-b666-ff5bdcde4b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4368b67d-34a0-4fa2-b5cd-ffd799d1e8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc7597e-9ee7-40bc-8758-f7b7a5341063",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dac3d48-7340-4cdb-b65f-646aa5eca1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e345fd-e3ea-4c9d-99d8-e7d00d9e017c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778322ea-bafb-4dee-8c89-800a2cf6c6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8a66ca2-f682-4830-9116-c4bc527be856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500b3c08-2746-4ead-824f-db3b12b21bfd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0220a505-fe36-4b3f-a588-8f022f9c3d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ff67dd-5ca3-4416-84a9-f56bb0b5efc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b382ccc4-91bd-4008-aea1-c60debf960fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c130c84d-b2b9-493d-8049-716ab7a5c4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e293ecbb-c9f4-4356-b332-1447c6d858b4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3003718-e90b-4cb6-ae56-7ef60d26d9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a55117f-d1c3-4b7c-af95-50b8194391b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d460362-4d09-4f62-a160-206180168a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bbe2dce-cf6b-47cd-8664-b38937431194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4179dd15-8dcf-410d-bfb9-ce36f5895d16",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582bf7cb-fb14-4f4d-bb94-620e2583e5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a462df-f5f1-4229-a9c3-c1a04098a50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d122f3-75aa-4bfd-8941-88cce2819f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96b52546-46e8-4402-bc01-93a9a37c78f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ef72c5-b5b7-4e56-9c37-182b3f079ad6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c70151-66aa-45bf-83c6-4dbc908b98ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e9dbb6-b471-4c88-b176-55b155e44320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa552e9-9fa5-4bbf-8196-45384a9a7922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37102dc7-01a6-46ff-a257-bbe7c49b0228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0a4f9b-195e-4241-ade6-3ee397ad0ce1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bf43fb-3c0d-4c4e-9dad-6833ae2894df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65cbdb6-0c59-44fa-aa29-29f41845f8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37792841-0c1d-4f28-9bd7-8b7536cf910e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6250bc34-e367-4042-9d40-a7755af17afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4717b77-d2b0-473c-b1a8-cbb43e1e1651",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275d2928-c759-48c7-896b-012898998992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c21276-80c3-40a3-93e2-b9617304a8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00da6fe4-7368-4ce4-9db9-cf40a3f62fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c47175ed-c21a-4878-a773-ac2374735c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b7581f-a6fa-4082-82b8-5705f7518046",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31d01f4-53a3-47b2-a4e1-a03a115932bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933fcd29-3db3-484f-8c42-039a63799511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351f4b90-6139-4542-9003-f47e47344630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a9a225e-d0ba-4178-8307-f20d46f832ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626c3f81-73a6-47c3-9905-daccc850d756",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2512a1-1b72-4f34-8221-ff5d53911f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914e1358-542d-4977-b9c8-3673e268001c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b19e91-e360-48cd-93ee-ba0be66d1044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8a581ed-1af1-412a-9190-5be073fb960b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da57d269-56e2-489b-81eb-f2586e722e75",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123a1bf1-4603-43b5-95e5-aad2b13eef9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cf7bdf-8dc0-4e09-bd43-95db69ab7cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ed3b41-ec54-472e-9a4a-807e8776857a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a51b16b-b841-4c15-8639-9b8f49fd8bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798415e8-79f5-480e-94dd-f814f9519522",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcd2ae7-044b-4851-945b-d1a3f5a344e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a8e13c-9e66-4efe-8b76-1a980bbe1eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f32ba9-20f7-418b-a099-5b8e6340b698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b755104-3897-406a-9f4c-283bfc9f2f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e86a86-7bde-4ae8-aea8-da9e65700b76",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c259cfe1-22b4-40bb-a489-a71735075460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05061eb-1bd3-420c-9dff-04ffb5cc830c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010cff10-1b12-42b8-b3e0-3d8d25226cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8a15eb-2710-4166-b45f-0b530b9a7e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb035ae-8b1e-461f-9502-f7251fd46345",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30993535-d5f0-4f2f-9d28-453d0a041aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d473d1-c1b2-475f-9558-c769201e7d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d2ba38-093b-4793-b24d-4a63eecbd924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6aca144-8aac-4c74-afab-30101bcef7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a899470-7c20-4a9e-9b22-6ff873d071e1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1f6b45-e539-46b6-8cfd-2591154e030f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab5b992-d24b-463b-973a-02614beaa802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cc3ab8-6a90-4884-82b9-1a41a50a6d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85627fa8-baeb-4b6b-bf48-280e4f3baeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f354019-ccc9-409d-9c03-4a98fb854ad8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6d03f5-cf05-478a-aa75-488e21f360a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd981b21-354d-46ee-99db-1a8136c19a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78990afb-c54b-4962-8c4c-1c7520e08f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1953d50d-5148-4bef-b3f0-8b73a78fbb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a5b65c-c6f9-4f62-b59a-9271d1126578",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227e7da0-530b-4505-a049-fb60f0f663d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfd6b55-e29c-4b62-916c-b3b6b64ff705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28447446-d1d3-4e7d-9d55-3c5d7b9e21f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38677ca8-523f-4154-96d3-1d2e8dd4a54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efb8533-9970-4db6-9f8e-f604d50c5529",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40275fb1-c7a8-48a8-aa58-3289cdb2d617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a7e7c5-3a25-40ba-836e-ccb0332990a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0690502-09dd-4859-a37d-2e61c5b843c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c05c8c38-fe30-4175-ba29-921d51ee143a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80de2f80-c70a-443d-81c7-795d2a67724b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2cce16-be3d-49a0-bf66-cb38998f229c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38313bf1-8c9c-43a0-bac9-b797d5fb89c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dddc768-ea0a-43e8-8120-af52a3054a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27af29fc-a3a5-44c1-804b-d61ae3fedba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8401bf70-a69e-45b8-a2ba-f7e4b3fceae6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fd437c-4011-4b38-92d5-9c6b6aebc81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c58d9a0-960c-40b7-a25d-4f37728afc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7b00b2-fab1-461f-903e-2f45b5743302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd83cd6-48cd-44be-82fe-d6e719085920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d5dfd7-a6ab-4241-a95e-9c79f06d5033",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299c8101-ed6a-40b2-8830-b4fabe0d9f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648b6f7c-e168-4fe3-8a76-f894d91ffa4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e336336f-00eb-4c31-9de7-648e15845f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc77df89-76e1-46f4-817d-d15b62af6981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa61e45a-8fc8-4d03-8bfe-0bb92dc01ab8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa590924-11cb-4d74-9297-8f149f9ce5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6622195-098a-4e97-8bf4-d69dab584462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe99cac6-5b86-451e-bc53-579621c59a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c97a1b7c-bf9f-45f7-b236-0bd5861cee60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b809d07d-1c00-4ffa-8388-4da5361e064a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23045cf-2b2b-4309-b4f7-db732b204557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a10f1f3-7022-4c96-addc-bf8637924a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775866b6-8efd-41c3-8d9b-5284d1afdfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d04e43cc-2014-47d5-9c6c-9a9fb560da34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c469c9-9336-4d01-bc7e-8cd82d4d7277",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd74c21-d358-4424-a0f4-857d0ab65c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c790b7-bb09-491e-8656-68e9a31f7957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11111964-6f73-499f-9a9a-06cd5ef5d74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec156a3a-554d-4a14-b2f6-7c72f09138aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ea5107-dd91-4db4-903f-bd0a26e32d19",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80d65fe-afd6-41f1-903e-991203f8562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c368d43f-2beb-4d53-9ae2-12bb9def4289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a0699c-719d-4d54-9a2c-7e4f7c1efd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "52d78abc-ddab-4cb0-bce2-34e328b6be26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a412f1-f7b9-4816-8bbd-d2ddd8671b97",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4109c7aa-bb30-4d8b-b0af-b934a10c35d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7662987-8058-4b5a-81f6-94c7d463b42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b84d4a-8a6a-4f2f-9aed-86f419348806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ae13b3-df1c-497f-9150-e4c59169b6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14491346-59cf-42f5-9fe9-1533d3287848",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5e6e99-c2ab-4569-999b-a4aae593c920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82869c72-1bd3-4b91-a0fb-b36653bbcb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3f14fd-3ea0-43e5-8f42-20ef8bce8ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "926e0745-304d-4a59-947c-a341e35a2b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b851f3-5435-40c5-a3be-bd9c9033b8ab",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f75a966-41c6-4d47-939d-49c1716a6d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70888296-0ee5-4d25-b6bd-0e4869e1581f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cb466d-b4f8-43ed-8c71-5efb409904af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0565ce25-da6a-41ec-9748-6725a7ebb824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1de7c9-51a6-4a90-b6d8-48239ea8a062",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ec03ec-6392-4873-9d5f-dc56b023c0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8ae9ec-642c-4754-836f-7a8aff52787f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42a2b75-bae1-47aa-995d-16fee3591c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bf56cb72-36c4-47d1-b52b-f76b1e0ca29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19702bd-d2fa-4dce-9bc7-aa2aaee97732",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9f2e04-09c8-4457-90e6-1289e2da36bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6820c4f-c15f-4bdc-8831-5a013e494080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410e61de-a40a-4954-9b8b-4ab368094a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b645013-2f55-4fb7-b91f-503f1af2defb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733fc67b-d72d-4489-8ccf-79259600607d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b509f0a0-a4da-44fb-b7ef-6b48268b2837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3748d9e-c37f-47b4-b94b-0bbd04f27c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc0751a-acb3-4171-ae8d-d0c2772e42da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0137b5b2-26e7-4273-b91a-0911916edbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563c21f0-dd56-4fb8-a310-811868d92a42",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e91e42-6f1d-46ad-8474-10a6d933f3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ffbfff-c29f-4aec-9341-199e029a9cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5aac1ea-a73c-48bb-aef6-7277cccdd8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6139f612-c064-4131-910d-04e1a53c5331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08ec01d-ad0a-4fdc-a6a9-ea6120f2fa8b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfefab3-5a71-4f92-87e8-274ad0ad6282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9131cac9-5fc4-4342-b4a0-e346caaabc0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54603935-df14-4618-ab34-c1333baba037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "19c9637c-8181-43c6-8d91-de105d4ac119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82da0c0-70da-464f-a671-46d2f80f5b5f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a2331e-ffe0-4466-bb30-958d975ca8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba36dd7-7fbe-4a94-ae84-f06658d91f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903b1d43-56f4-4234-9ff0-5e750a7133c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cab1a4fa-723a-438c-9fca-a501bb53ca6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d12b5ca-beec-48c6-b6f6-dbb4957ae6a9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d55dfa8-9103-4163-97eb-53f471c63831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420f53cb-1beb-40e0-aa21-928cb9c015a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a77bd79-f277-4ed9-b61d-80c3dfdde06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c21df4e7-70c2-416f-a289-f6d244baf521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105ff3b6-10ad-4966-8679-1ee97f803097",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88052c91-3450-49f6-845d-a7b969f284d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b602fbb-21dd-48f9-9639-e684cb41aa8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cad569-dcee-4ff5-b3a7-7e8970b5d40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb38bf1-ff2b-4a02-93af-13c36686204d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0d516c-25a4-447a-a821-c395a58dda2e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec163820-a68d-4629-a249-e735c8629c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5703d6-613b-4bd1-a31a-a9dc3cdc2235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870702fa-75b9-4c1f-96ea-bfa3db899a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bde70fa6-8076-46a4-a232-164468bd66dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d03c1d-12f8-4b55-a8c4-145dc06b2bc9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0f4758-48ee-47fe-9fc3-20ba64c18b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c956ee9-49fa-4464-9e0f-252bfa93ae5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dd7296-976d-4c7e-9a01-810057f76a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "034228ed-4954-4c57-9aed-9eca5451fe81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4677f3-ea40-464b-90fc-8792bf4e0c34",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e49d33-62cf-4237-88f9-83ca7a19b13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfd0a7e-b78b-43f7-861b-eb7017ec9c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cc1937-6f42-4742-af01-b3a13284dea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32559876-de24-43b5-a700-d7075f6084f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fdfb5f-dcff-419c-af51-c103d38bfa18",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fccee3d-d1d7-4353-a844-ea22e9190746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ec39fa-f8a3-43b7-b438-d9b6921c9b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aeb8b47-7bfb-408d-9da5-89506aa57c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af764542-3a52-4a5e-8c48-ef737bcd55dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28b2938-5826-40b2-aa74-02449b33b431",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27078da4-e70b-454f-84c4-39b1e8ff874d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db79fb8d-7a09-4e26-9003-ecc0ba22648f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39312686-4ed4-4e01-9308-d573facb851d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18fef65e-4a59-4120-a9e4-4d8719ec63bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ae71bd-7ee1-43dd-92c5-05aaf40a09b7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a56bf3d-28b7-44f5-98d8-63a798188de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8f0de7-a4ca-475e-adff-43c97a9bef21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca3ca29-dd96-48d3-91b5-faa9a1edfafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19e8ae22-199f-472f-8ce2-2b173fcb85fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8becdab0-e9ab-416b-a304-ecd3e17311be",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df238a7-e33f-4947-b53a-54996d2228aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3d0252-cc5b-4745-89f6-9ef45f45ccc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9410ceb8-691b-480b-97d3-fc6363f90ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b09946b-5ffc-41d7-87dd-35fc15f425e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6241002-a84c-49fe-9f0b-7d1ffd3b085c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0af1348-519d-49ca-b55a-683885f835f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e396e0-043e-4a91-9c24-145defa745aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4735625b-0cbe-4c34-92ef-7e9b283e0c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97ce95ee-60ff-4297-a742-47865bfb54cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ddb1d6-2e17-4f89-ba6d-aae6dca65419",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea2e747-cc00-4649-8d65-6f078b1654a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8f28da-63cc-4894-9703-0c277a7c2b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a1cf8a-41ef-446d-a0c4-8784784412b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "34d2bc6f-fac6-4dbc-ae7d-43d8db53edaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26163f6-e48c-42cf-af8d-b524f8a069b2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebfeacf-549c-4e91-ad0d-596a7255e967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f297c27-861b-4125-99f7-353667721a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86e0d2e-8b68-442c-8eef-ee23304356c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b027b9-7c98-47aa-b096-165f0f996ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8eaf3a-0e3c-481a-91db-dfc02694436c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe45a513-a5bd-4bec-9695-24d52f90cebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a57d570-733c-4d54-a8ba-891e701a9270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddd6ebb-3980-4e34-b5ae-6b123e394a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e74edbf-d77c-48cc-aad5-2d0af91796bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33998ea4-476e-4f01-8ee9-a30124124ec6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ddfa94-4f34-4e32-8e5f-b048e4f9b6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed812f86-8ee2-415f-9243-134bbaaac090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9410fbb1-4adc-4472-b1a7-e4696cae19b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "292d5f26-4186-47ef-b222-0070dddd8d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5027ed2f-5c97-4e9f-b9d9-fa3a61912af1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1444da-93b2-4ede-adf9-182b33dec213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e8b6f7-d861-4094-a80e-aec51c839a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914e601e-4ae0-4dba-bdf3-0e94100a342e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "787eb718-fcab-451d-877a-5e9eeddc9907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4b0435-dc2e-4390-a292-261701be6b2e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2fe896-a32c-4320-a2da-3e9bb9ce74f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350fe47f-eae8-42ba-ae65-2ffb4efa37a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da9fa7f-636b-446e-b075-73c4596c3e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bef5764c-6468-48cd-82a9-54392e5d712f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c441933e-da83-438f-886a-fa5fc8112df0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365a07e2-9634-4200-9386-cbd4db1abd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd854c1-f1dc-43e4-8f56-eee37f16f7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f921a1-f2d1-4db0-9108-576a93497108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "91a8bb07-ede5-4852-9586-236374defbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42d869c-6404-44d5-9dd0-32097bafa2c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc6a93b-4e8c-4111-bba9-a571ca4b35d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02cd3e8-36a4-400a-9d2f-d9c9b386dcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e74065-30e3-49e0-bfb5-610b90e503ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "207a4f2d-1507-4b30-bace-9523094671c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee6ed7a-c0ae-4fe7-a7dc-70711a491333",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2e4108-283a-4455-865d-78661c03e47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85d1500-a069-4442-bd7f-7efdcb406f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcb9de8-0a30-4aac-a17a-8ee3a829e8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dba40a40-09b8-4c2f-b277-598b323eb75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd2a9e6-2fde-4add-b1d1-6cc6741e9a40",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155ac07c-8cf0-4890-9b1e-2a78c1809bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f185d701-fb65-41fc-8fc5-3f63aa6d1cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b289ff-334e-4e92-80dd-453957e756eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97d4749c-cdae-4d7c-8422-082bb0487311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26be5a5f-9a50-42e9-b594-4af277319e9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ac3b13-cb7d-4957-bc87-3ac4a5657426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472781ca-3445-45a5-87f9-a57d394e2842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bbe2cf-d934-4a91-9287-260d4126d447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "06d3e881-2c04-4864-aaef-5be93fc7768c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f4c15a-cc9c-4806-a434-923302b45a85",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d855acd0-d824-4b97-8d62-c2a62e8a187e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5480a2-9be2-48b9-bd04-91c619f01796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48007205-51c3-4d2a-82c0-f223a761cbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e91c09-0ba2-4ffe-9b0c-91aefb92384f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e47c62-edd8-471c-9353-b5ae3c455d95",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b59d31e-994e-4d36-a779-203586774b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9106f08-ed00-400f-b669-0739ab458ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276d30e8-fcd0-431d-9798-9cc7d210f8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1de36905-d39f-40ae-ae82-589049170157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ebb2e0-fc11-46f6-a420-0cae08fd10cc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a89e51d-b7d5-45b4-ba59-5afd15a4147c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26bf4a8a-6dce-4b92-a13f-406f393cdce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6712b27e-3a9d-474b-b396-54cc37369284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c656921-43c1-4bd9-a110-96ec68a92982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de2012c-0ba8-41d8-8a07-e6974d2d1405",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab89ea0e-e030-4eba-a57e-dbc5b70b6695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef1eb7d-ddfa-404a-ae62-40f6cf337fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3411512-33e2-4291-989b-352e036cf24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e82f60-83d5-4188-a4e8-3a89313867b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fb471e-a2ec-43c3-a51e-9332d492edf4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9699f2cb-872d-43b8-98a5-e065f22a122b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9e811b-8f99-40c4-a90f-fd20d9be65d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b5948f-0305-45e3-a43f-cacf83b76d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adf104df-0ac4-4f8f-af82-65b12d11375f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8e5dfb-cc3d-4c32-94c3-a18d306234c9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1f2844-3cb3-46e6-8ef3-455841b435cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d4614e-cd8c-4bf9-918e-d0b6d06c0658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b309b7b3-83bf-4b20-9b12-a85234e2f18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd41f66-c1a7-49b6-916a-e1971325ab3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95b5687-3ad3-4704-be40-df138801d3b6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565dac1f-01e0-49be-9bb1-00d9a44eeddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f18d491-94a2-4ec8-bf87-be13f882c718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4f05ac-f083-44c3-b022-271304781088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "195b40c5-25f6-4804-b41f-cd4ec92c10ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e000ae2-55b8-44b5-be94-64c5e5bab10b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f1dfd2-b479-48c7-b4c4-d966a6d0b3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a82204-c140-45c3-86e2-5a80dd5126db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f7fef9-9c11-434c-8377-1d48036ab347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7150a5-fbbe-48fc-88e0-763e037f8e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddc65de-38d1-4d16-a341-b652cfbe0392",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09b165d-4ed7-45ec-aa8e-1a064d8cbb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e1cab1-5ed5-4825-b194-c51df1f9991b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a214ca6b-2578-42fd-be34-fc5a1e939d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4e36cd-7836-4223-a3d0-52eb23c30add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442b9604-4b12-4a70-b4f9-157ad9003615",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4c8c8d-63c6-4cfe-9a72-dca7a61661c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3453d7-3f6a-4949-aa10-ada85632c9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3d67d3-e6e8-4624-bd8c-5d54e570283c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "979860f5-75d5-4317-b943-96ffb3793fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3511fe5-8aba-49ce-ad56-d254f18b507c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90700a98-0af7-4c0b-8c48-109ea1c6b69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ad061f-e74a-4f95-9dd4-3a5fb1fbb5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13278d8b-e88f-4f95-ae7f-e9c5596a1b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a35585d0-e86d-41c6-8b7a-55c0fad1797d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d090b9-7abc-4977-b840-f368d6667257",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dca6ff-fe11-4c55-97cc-2b59abf23de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed3d388-51b2-4f73-b8d5-ad421acb436c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18c079c-92c8-47d4-8702-778163501cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23747302-b917-4891-9852-8884038889f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d48ea16-cae3-4716-8ed5-6d6b6f922149",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c847a5-a3bb-4a0c-adda-b898c1abd2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7520fb39-fe43-47d1-8b3c-e0ffd908e312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610b4c7c-d295-4fae-8809-f260e804648a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3458f19-25ac-48e3-bc08-032035b391a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06202484-b437-420c-954a-1150906beb27",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8453035-c92f-47ef-9550-cb2409d2d0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c444e00c-a2d9-4c34-862a-598c6b986e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aac6be9-aa76-4cae-bf8e-fbd00bf363cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4af3f4-1ee4-4c72-a9ee-3fb0d0f7494d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20213eb5-e637-4faf-893a-5f397e10aaa2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd94fcb-035d-4f32-84ed-13949f099367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389b576a-6026-4877-9d9b-e643471feb39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11cbc80-1700-4eca-8cf1-2a6c3733c16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e90dd71-7af1-4a59-a2dd-2974cdc5fb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acdf0fe-73c2-427d-9d94-a32fc3976ef0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffba38d-5d4a-4775-952d-ba26963b92d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39652b8-b157-4c86-b26d-0d26e1f6dc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fef868-4b7e-43f0-b33c-b054912bc5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f32e5a65-3d32-4cef-8514-22354471a80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8c58ba-7e16-4efa-9d2d-5d5e2d1a58e1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65afae0a-f370-49af-87c9-4eaf78f023ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d50321c-6a9f-446e-8f63-b1d2259ca21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19556389-10e5-40ce-9409-66d7f368e30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b7b438-1edb-4df4-a3b0-4a4c8117bc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1aa4e60-7adf-4b6e-9304-4de876fe7a40",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4a4c61-3f57-48e8-96c4-e6d35aef8738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b31a55-cc02-4d38-8918-3e1fc49db6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb706c4-3c99-4495-860b-b4c3101a8af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b2baa9-6ba3-43cf-9ac8-1243a10484c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2447748c-1edc-40dc-ad7a-809c509d1ccc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af70eb3a-8b06-43f5-87b3-f2bb80923dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bce5b6-fb2d-4316-a0e3-654888512d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6a726d-3d7c-4000-8a1e-35acbd2d0e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec4598b-2642-4e9d-8572-f14f10b6d813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2886991c-4063-444a-a2ca-9fb82208de65",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aaafce-bac2-4ec7-a3d7-669d3e75776a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5fc44f-d098-4c5d-91db-c47c7db3b51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db35603-3ff2-4fa6-a2b6-19c375181526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7426a0-6682-4690-8127-41d4e0fcc469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ff538f-90dd-4acb-a9fc-80197ea3442d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e1b90b-ff39-4a35-9b8e-cdbbb077a664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359c7dec-0257-49b4-8bbf-e917ba2ceece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85688354-e151-4750-8eaa-aa338140986e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3293e3a2-a741-4358-b13e-da3cc70e4132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f92d6c-dc35-4044-9af0-ce22ed98530a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee9f4cf-79bd-4350-a40d-409eb39f37c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8f891d-0e32-4d3a-adca-1a6bc154cbf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c33fe7-40db-4da0-b34d-c2473ea4ad65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d278bf2-a8eb-4c31-b187-a570c0c37664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e30db84-c6f0-4f23-b02c-11ed18355ed5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6665ee0d-698f-4286-b802-70b728d64a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401cbbba-cd37-4850-beae-13f1967c5467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a636aaac-5c27-49f8-bbf9-c9439b061179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0a0fde-33c0-4778-8f35-68b81bbe09fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18da0188-5b47-462e-88f5-5391b6639f92",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ac798f-b4a7-48e2-b244-e2d6c35bb5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39805dce-a9b0-4746-b19d-443e030af814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b86f9ac-c267-4015-98ab-17056a6aadd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d98b7e-1311-42a4-90ae-6a9c72550be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0af3ef-40be-4134-9dcc-e3eb7a04b320",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143d89b6-4ba5-49a7-8907-b12f8919031c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb09fd29-09c3-4b3e-b33a-03cdef5b2390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14840c20-3ff7-42d7-a5eb-b0f5c119204d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23a8d2ec-6415-4d52-887d-bc7071b2b1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9466d8-ca3e-4197-a4ff-4d0b979d8c79",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34652cdb-2791-49f5-a911-b5a7253f7d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c11c23-7bfa-4fd7-b523-2ad81a47da77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14597842-60f6-4d26-8cf4-16ec42eb3e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4318ce-9f02-480c-88e9-a0c5dbc806ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24dde22-cf0e-4e6e-84c0-1a07237e8d8d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff657e1-bb57-43f0-8336-3b81707d8a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a969c38-afd2-4279-b693-b504a59d9711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6aca7b6-1c22-41e6-810c-ea3fff6043ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e73d4e6-c79e-4293-9b9e-9d6c6f400a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d6d540-ef47-455b-b831-a62aaf105243",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c878bad4-6e92-4419-be18-23b6fc6361c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cc635e-2043-4379-b6ad-f50a3519511e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265e2af0-f488-4e66-bad9-515ac6a6cb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "39cfa337-053b-42eb-9587-c0b6f82a1285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94379fab-409f-46cb-80e1-ae02ab8de045",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a3e3db-d78f-49f5-bac2-bcc3ff42b0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ec2995-282d-4708-8a1a-f0824fd25a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a927d35a-5726-4ab9-a123-816822d787dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3614bde2-5096-4925-ba0e-8cbc86a3019b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c621ca-a77f-4bd2-b4bb-e9dca1a6bb73",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff1498c-07b0-4df7-a8dd-7e7b99935dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917d6a76-bd4d-4b3f-959f-59d16964bf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9211939e-0886-4386-8eb0-616fbd210393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5121d23-28b6-46a6-8113-138489b39fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff70911c-77be-4071-8640-4562ebbbd128",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f55027b-497f-45c0-8ac1-ee63718f505d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7a64822f-9294-4515-bc95-45f6a441930a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d9a944-e375-4f7b-bf44-95877bc9c066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bde10be-823f-4179-a46e-df272ec94ae3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dfbca07f-f564-4fe1-ba72-b9e7ce53a9d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51061296-73b3-4fb2-8ec2-260470479e09",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d1da1b-a52b-4c9a-9191-25a68449ef8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36c0999d-83d1-47ae-b6d6-6ca5498c1e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f5ddda-ef38-4c46-a69c-ab70e4785075",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cd6acd8-8729-4c80-ae46-f549f932f57a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7fe192e-a409-4f6a-b5e6-ab1fb168dac8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61c017f1-a053-4684-9fa1-54954d224fff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c561ba9e-2be1-4796-9942-069e81d97a4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b0a8384-fdc8-4f53-a93d-9f786859b941"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9dabcad-ce5c-4df8-95e9-e6e51fe17103",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e13a5fe4-24aa-45c8-8592-8fa1f2ee48fc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ea2e449-7f35-4739-8309-5bda14f1d82f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8227cb49-7d17-4fa2-a597-e96d3be1464f"
                }
              }
            ]
          },
          {
            "id": "9603d268-5aad-4c79-9e3e-79d6e7a368c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "829bdf87-4073-4fe0-a17d-94bc73bb966b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5e6fe45f-9aaa-464c-bb86-537add4dc70f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d01d7ca-5334-453a-9db3-6ecbb38ddfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "21b0db4c-cd65-47f8-95c1-7191270e1344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb1df06-dffa-4574-a901-4df47af4043d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf30461b-30d9-4b77-b01b-8dcce69e410d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "77dcc287-a161-4da8-8adc-e9de97a7126e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f321eb8-cf6b-47de-8f89-c1d67051e630",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56b70c6d-4a9f-4293-b5ab-62ed22577cdd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c73b790-aa00-4806-956d-586dc423b140",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5ce8fabf-3046-4402-a3c9-81aa86c6f69e"
                    }
                  }
                ]
              },
              {
                "id": "7223c7db-fbfb-4c59-b05f-ab1651d320c2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a38353d9-8256-4751-b2e8-932dcfee90ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77e62564-ae9a-4949-9f7b-0505cbfedd33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdc5f7be-5a4a-4aad-b1a9-741e0bdf620a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4458eb5f-e682-4289-ba7a-def011ab8ab1"
                    }
                  }
                ]
              },
              {
                "id": "bcb47376-3bdf-4589-bdb1-174d14d1e0e4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18e90c68-38d6-4fcb-ab11-5f529312c525",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e9d347b-d92f-4221-838d-61a893e0d291"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf26bd44-c84d-40bb-8404-0600c461f787",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "757f433c-6e2d-4d14-a771-ba520b429647"
                    }
                  }
                ]
              },
              {
                "id": "5def3cd0-a614-40e4-b4a9-76e431e6ebe5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d4c7942-7db6-4f1c-8bcf-b276c384eb2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "005c0aaa-0b25-4ff4-9052-0a190ec17762"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11fe9d30-1505-4485-9c51-bba7d7cc85f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "989fc9a7-f38e-455e-837b-84dc35a80382"
                    }
                  }
                ]
              },
              {
                "id": "b16a828d-dc15-4fa3-a478-b606e61ee86c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93cd4a2b-a788-4283-9a56-5e6f1992ac6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8d6a068-b8c2-47e9-9197-fc1b345e8e7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6235b8da-4e54-42c5-ac31-9d1986a4eaad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7d306297-4288-43f6-b9af-305fa42a6062"
                    }
                  }
                ]
              },
              {
                "id": "f421cb18-0ae5-46d1-9e90-233578c290ad",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a507baa-ef34-4973-87ab-2ec56de3858d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ddfa3554-367a-4c0a-9fa2-6ffbc8d3f2fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7b0db33-a347-42c3-b984-322d7ab0ed0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad935a08-ed78-4c9b-9b64-cb26bd3aeba5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e76a1de5-c94f-4384-9dec-4faeff337554",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5804f700-1ba8-4945-990a-c41607eb16b6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c1ca8bc6-2130-40c4-8caf-08529da1236b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98552a96-f67e-4c22-9737-ddfad582a709"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "346657ca-4e50-4e46-8ea0-df7fa38bc7bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ffe9c253-0d17-44c6-a95a-7833c1f4eed9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "145fe987-0c41-49be-8f6a-fc88e74b2b99",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "013a5559-512c-40a3-a692-4bb126c599ab"
            }
          }
        ]
      },
      {
        "id": "a87a5273-bbbd-4ff1-be8e-ef2ffa61a36a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "193cdeae-9265-4157-a001-86f5f4285d72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8125b128-fefe-49a7-a73c-b65a3613082d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2d43611-5bc9-47f4-8ef0-74b161750c53",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2215ffbe-af1a-4d94-8b38-40b9f91a7a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80975aa-35cb-4971-a7aa-09ea394df662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadf1e9e-7884-409c-91c0-684f8daab7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e52237d-98b8-4c6b-b68c-e93bf7ec66c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2cb109-9681-43f2-bb3e-cad2dccc7543",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d163d81-e619-4438-920c-b5a15783f5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e7795c-f365-4883-964b-62c9b9ab4ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9ae467-8d8b-4d49-b674-5082ba83ae93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2e6c85-12f8-494b-aed5-66d1ae9a8559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f0930f-b2d0-4267-99e2-11aa1023cdca",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc02d3fe-2d6e-4930-8390-2162e7b190f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cc9e5c-f2a5-4266-8abe-4ba98284ad34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1c96dd-cd5b-425b-b4f9-c0759b8ca322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2837de2b-4b1e-4ba2-aef2-7a5d5f22977c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf9b344-b842-4894-b4bf-e33c06045c4f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d02f2a6-4e13-42f0-93a7-c5764247d40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db46a30-7dc6-4567-a54d-f799f4d45289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed14268-c590-4ae6-a417-b7ce2f16a29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba83397-17d7-4fe5-bf04-589412804435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a35e99-bf22-44a1-9454-a3c672e2d832",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6624935f-9e02-4049-b32a-3338500391f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f42198-d50e-41fa-ba94-657d5772b0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d72cee-6001-4daf-9113-91c6480fa618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ba09cb-0edf-460a-b1dc-753bac7f7dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c2571f-817d-487b-9cc7-8a0bbe4b85b3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a14066-c66d-4718-b31b-901a81623c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cc6bec-e48e-4063-b975-87bad056b6f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86c0398-1d25-40f9-974c-4ea29e08b3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa02941-de43-4c46-9101-79db53c0a08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc14485-ceda-4528-8df6-d7d21c857a1b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d244793e-7ba4-4074-b526-fb0f0610055d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f816cd-94a7-479a-9952-ccc34d91e5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f0b419-581d-432e-b3a2-45b3bcb57d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "be54b28e-1c45-410c-ba82-daf49f2d8abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377ec8c7-d53b-409d-a56b-b839d3e6f633",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bb28a3-0e3b-4d67-b353-103e1aa4b79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8271b6a-c64c-4ddb-a7d0-a75b8be16f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92d53ea-14da-4b7d-a32c-fc357d62dd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e11d56-ac69-44b6-bdad-f2b0ace6cc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8727fdb0-df49-4bc6-9ee3-fc586a368af5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ad20bf-2ef0-4d27-88b7-fbc21d720cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c83e159-f57a-411b-90a0-a40a79e76ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fed922f-7068-4f88-9d43-bca6c1595324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f38e5912-ec79-4630-811f-0a9e31c81c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c37f49b-56e5-4764-a447-3f6183ce4304",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929ebebb-e58b-43b2-8ad6-8a0310801124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851a55a8-19a2-4d63-9dd9-9a5fcaddc946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fc5f76-a4e1-4727-9aef-cd3596de92c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28cb0454-3d5d-4b02-b19e-da141722157a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838dc5a3-2812-47b8-b7fd-8ebf083a926f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ae18e0-0b41-41de-ac3a-c2849d1578f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdf5af4-09f9-42fc-8242-8034cc81ac61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3473bf24-b044-4876-a7ad-2d875972b55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "04d817aa-866b-4832-937a-0ab2e9b0f776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90b2da9-a8a6-4777-861a-67185e98201d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab75641-56bf-4d55-ae0c-35ef572f3799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a29c1b-f3ad-499e-8d43-67c56903ebbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e57ce3-9294-4a78-baa8-60f8235aa4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdaa982-65c7-406a-8a7f-924e0e8b909e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f7d2cd-775c-4875-9222-732c020624e2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91da4109-e25d-405a-9cb2-b61d852e8576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5c6780-865c-4c39-9924-541ab42f1d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2f63f5-d982-42df-8a70-e239e7d3b0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3141d180-0076-4309-881d-2c606c6a6629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b037cba-cf41-4182-8184-a0312c1a1644",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e191afa5-45a4-43ff-b8ad-68a47695985c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ac8449-9087-4403-9d2c-ab79e3399d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddf4938-1cd3-41ba-bc38-cc465be21d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "280d5165-3936-415a-a9da-e9c127ca1c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c7f21e-f962-4a38-b79e-424dcaf2a936",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e4532d-7961-4189-8baf-688e493e9c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d9c136-4b13-45d9-b98a-12d37af9f14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153656bf-95dd-4f6f-b249-e0c2baac5dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b71bfb6-2a2e-49bc-9353-32f6b86de826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0350491-0690-4f94-93f6-c3a6969e303d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b40406-41e0-47fc-8f9f-37f9232e91d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c70a0b-1390-4971-9597-8002acaf6ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df65674e-b6dd-4d3f-8014-a66832e8793f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e050c083-01c5-4522-b87d-b82c2692b65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ec8fd9-c6a6-47a0-a68e-05979eb84d95",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf760ba-44dc-43c6-a678-8f22809740be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eba9110-5601-442e-be9f-a491df064266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68236b6-521a-41c7-95ca-116bfa9b1b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bad9225b-1719-4f61-9504-4c4e62031c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400c39cb-c2cf-4ab2-85cd-d6461351a037",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf442af5-df5f-464c-966b-80968ec9d0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979cc406-66cf-4896-9b2e-4549ce6a81eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b604d1-5ffc-4089-bc49-a118f0c0c811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c034f8a2-8698-4644-a5da-b9817ae255ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0939a55-b8ea-4226-8e0d-43e6829b62f4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6db182a-b937-4090-a541-694ba8c681d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83a2520-cd13-4bb7-8479-4d9db78ea72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2474cc9e-5d1f-42f3-9a9b-dfa956457962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8006b91f-4b2c-4670-960c-82b01b8d6099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d710965-9a22-4e0a-8a0a-cba6cf4b8280",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc96f2c1-7301-4458-87b6-95b26c8fcf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e950cdf-cfc5-4f6d-b70e-41cce581aa35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a3b1b7-a348-4562-9085-bb247e8e6bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a896b47a-558b-4ba2-b69c-472fb4eabfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740bf6d3-981c-450a-b2da-6e6546f7bcab",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30d9c1f-7720-4f50-8418-4567960dd099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6adcd622-5c8d-40dc-a82c-406ccdd3be3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1e7405-8776-47ef-9f62-3607c8f33f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92fb337a-679c-4b31-b469-ed2ef8d04ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb18325-1803-49e4-af65-996352ee7768",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10bb914-42ad-45d9-b954-958a7917c295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d638b3-c7a1-4d16-8645-e09345729733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f79575-e3a5-4af0-9092-5b97cdac0771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa10dc8-3a5d-42b5-b32f-0cf74d987ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f35572-72fc-4900-8d2c-6668dc6bed46",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8badf5-2cce-4391-a3a4-a77cbd9cafc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b1fd5e-6e1d-448b-bf33-0ce7c0bed9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d492082-e487-4817-afef-5521b473cf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16da266a-f7a8-46bc-8adc-af324cf69a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212b234e-b25b-4017-9467-a688b3786191",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1144ce1a-6cf3-46a9-bc1b-bfb47cdb8796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4a22cd-fa67-4671-ad8f-977ab2554f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79213ed-5c03-47b3-9475-86c5331b4c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23eb1dc4-1d62-4cc1-91e8-c758a7ca890c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6fa718-4f86-47cb-ad07-b343b591f2bb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac8bd6e-453e-4ade-9354-fd2d6626f45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76b8498-5810-4706-b553-70eaa661d979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e057de6-b473-420e-a8ac-34afec77fe1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2a71ba-4265-480d-9cf6-f407386ba1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afef2bf1-061f-4a73-86bc-5c825de4869a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d843ba73-cee6-453c-984e-1b1f416fd020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6c5778-0738-45a3-a056-b2082e086fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a0904c-f5e8-4f04-81d6-a2deca373778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4f94d7-7ede-48f3-a9b7-ffd157b64ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3221c0f-f617-4033-a520-92babbd9134d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06de9d5-0ccd-4b6b-8c2f-c376cc21b606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc6612e-45f0-42df-88cc-39204131ea62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cb24b5-638e-4e98-9265-6ce66b22a74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "958f8563-c63a-47ae-b419-4e09ceae0fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980e4c37-ac93-4f19-966e-8b6a4429a2dd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2094fd34-62e5-407a-bc65-083ccd07b385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c290ca1-4574-4031-a641-5bd5432f7fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75600a7b-6f5f-4df8-88df-6a4caa587556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80537f4-2225-48ad-9406-0175eb80c8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfe286c-c32d-4ecd-b923-0ee9b4a1a05a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8e54d9-6316-4886-bf00-20e6a2b9b944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5078122-399b-42df-9ae8-6f78a934d778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ebf3b6-6a8f-4abe-ba97-118ea8b22fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0dcb09-f91a-4a68-a02c-f78676610cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff3c187-aff4-42e8-a5e0-6db736b9ce22",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e45a7b-40b4-4ab7-823f-a117a34d7a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b433b9-81e8-4cca-944a-31dc6b4a88fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e35ab3-7ecd-48a9-85ce-4279d2f76a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5dadbc-ba49-441c-9db0-cf8ffbafac03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f95f923-ca9e-4a46-9c16-6d774ce89b7d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639f2545-addc-4b01-b999-3b81f4e823f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4bd517c-e048-4270-b727-d8ac38c3b8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa69b43e-8d7f-4387-a666-36d92445af75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32d43e71-40a3-413c-836d-4b1ddab535d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d5f266-50ef-4c35-8460-75fd813514bb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f6e16d-f4ae-4cf3-8ff9-99c55daa8408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68602716-089f-4f81-9191-6ed515401650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78993ca-2826-4d5c-a816-ea538c4c1481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1adad6-d993-48f9-9e59-87f3e2d82233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4c6b04-1e58-4ce8-b06a-b7e2549ca84f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04564da8-bba7-4708-8239-87c2e3df37cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdbf980-c60f-4e89-94e3-138d0d5c2847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d77456d-4ff5-4f59-8f0c-96e916394830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df0e1b0-1f53-48df-ac38-61cd5f327f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b02a36c-89db-4b90-8d57-45e370319c65",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02f2afd-6fb4-4a9d-9275-5a1be919e591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b037118f-1086-42d4-b4b4-c01a1bdd54a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bf799e-cb08-4ff0-98c8-52e9de12887d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b38dbc0f-73dc-4582-87d5-ae18f84d09e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdbb4e6-4b71-47ce-bf74-240c4e5478f2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3b8ac0-1473-4a14-b191-581330134eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0dc189-5284-4d70-b6f6-113b8b70424c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ef84d1-6b6a-4639-8673-7080e980081a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d082a62-3be3-4344-8ede-f3b3d5ed1caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b981dbe3-4114-4489-ad88-024968ce0969",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7af41cf-326c-45ed-b5f8-28e5f98a9869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71efb67e-999a-49a8-9487-e13ca9f54c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af78a4ad-67c8-4114-a651-2cada3880dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ade994-5af5-4543-bd36-471efbdc4067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770e7104-c4a3-4da6-845d-5b9c275878ea",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957ff1b0-046a-4de8-94ff-866e8ab8f084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c432cd19-3677-458c-96ab-68b8f59fa06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bdf7eb-ad97-4f1a-ac3f-e2987acb1470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b81ad3d8-c89b-4039-bf36-5f796e1ffe69"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a046a020-615d-4ed1-adf7-cabdd179d307",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ee67a18-806b-4c81-a571-d8d9d8c0e16a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e10e013-3a23-4433-84ea-c0b4dea6d8cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "56a0754f-c529-4db9-8330-d98e2c8cc954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e043a23b-2db7-4d10-883b-a083cf33d874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67fe5eeb-b9df-4bd0-ae2c-c874fa482567"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf76c61b-a0df-4484-984b-faf008beb1ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d29be1ea-452d-49c6-919c-0bde6329e560"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "960b09e5-9443-4437-83e5-e4ca8923ae63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce224519-8ed8-4c66-bc25-6a0ea7b46bd2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ae18a02-4437-42e6-97fe-5dfd35a7fd11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa597328-6091-4e4a-803d-574c92f39136"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bf22917-2d8d-4df5-a807-e1596e2b321c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e53f6880-6d9a-434d-9c17-8f18aa362033"
            }
          }
        ]
      },
      {
        "id": "056b93c0-b1b6-47e9-9664-e42f2659ebb6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7e7a3ef4-fc24-4ff1-afbe-34a2743b7b9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e74c06af-4942-48e0-b948-5f3e6a614b8b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "02d046e1-5cd0-4844-a233-ea1dbbb8ccee",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f845b7-2851-42da-aa2d-ae0a3da4476d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128f620c-e0ae-4cfa-afa5-b3e2d02d7c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dadf51-df31-447d-8682-e762dba8cc1a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b162755d-7712-4ea2-adf6-b643bc69d7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831a7f7a-44b9-4278-aa3a-bd92f819ca00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79783280-bdff-4ee7-9eff-adf97ebe5cc4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07cc8e9-691b-4947-97b7-aa2ad8e4b2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef429959-dc08-49f3-8a02-41e66ae1970d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a76787f-244d-4c43-8c6c-6ddb3fc5ffe2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c74612-9085-4165-9b70-fb5eb376bf67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b92617c-9fbf-4574-aa4c-f327f3955067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75d357c-5fc2-41dc-ba8a-4460e3b4efcd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab62b07-9efa-47fb-bb73-746f658ecf56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb593182-348a-4009-ac41-e4f602ad7acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a7ba33-b9fa-4bf3-9ff9-acbad78e02c7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed2475f-44bc-4546-b638-935fbdaf8cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2061cc-31f2-4adf-8078-0d02a3e17291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f54f52-d02a-464e-a35e-20d01c3d30ec",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bd0937-2981-40fc-b8fd-5f4d9cff022a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf73991-1618-4071-a3cc-91087548d074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338e9d08-a75a-48ce-a682-8b579c7068f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01135e07-d2fd-4c04-921e-1dc56681e4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af7b5a5-765b-4315-b060-284f48a0f091",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ad4982-4f52-481e-ae61-f869c81aa5dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b9761a-4eac-425d-8044-d26fe9d085e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed34453-aa90-4df7-8ae4-96ce88f886cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ac6e4b-e3b3-4873-8e89-b6e433b2664a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc05b27f-a3b0-4deb-98fd-761655eb61c1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9169b6e8-4b11-42cd-8544-70f02aa9ef94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc5b9389-9c3c-41be-b8e6-1eab327a5be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d828f575-455d-4816-a24c-73da8374c01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef57cf6-3c22-4ec1-9423-c88e340968e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a19282-8716-40f9-a3d8-2569aad08777",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb12fbe-2bc8-4945-b7b7-d30620a45073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6545ba8-c7e8-4035-ab57-0577e8ec88ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dba33f7-6c53-4d4e-8b0d-aa7da38b4204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482b87ec-b88a-48a8-a600-4ec54543a4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db92b2e5-151c-4d4c-92c9-44193d83c119",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2c349a-8dc0-4593-ba5b-09916bbd677c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec3b650-2e0e-4faf-8ac7-1a6558d5da87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2521e68a-ad03-4da8-af5f-a0da23f49867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b4c73d-7ec4-4775-8f32-248a7648ce93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6595523-cd44-4deb-9ecd-b0d3578e65c0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616f8aaf-ee80-4999-942a-f604df3ab79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dba3b6-6a7c-4b21-946e-c0c29dc03c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "106d15a3-6977-482a-9669-0c11d89bb236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c96bb9f-db1a-487c-ae89-bbcde4259029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7341e713-0a21-41ba-9734-a471ead8935f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd38ff0-e90c-4fdc-b57d-4768cb9fe608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29c46142-a79e-405f-b916-e630138bff49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359941c4-c587-4bcc-9b00-df4257313cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b61844-6767-47ff-a26c-392731821567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92e8e31-16e2-455d-bb0f-a8a0b5a6744f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212afe97-c45c-41cd-8a44-4cae557496d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af8c252f-c691-457e-a7b9-1cfd3fc38abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959bf2ac-bd59-4731-b73b-b3ad777fef75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d50bf6-1bea-4d52-ae17-1a4e5ce0434f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d877b71-31d0-4360-a9d9-7c3116c8239e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4be776-0b5c-4daa-9c1b-e32c385c0149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab576aa9-71e3-446e-b9ac-f0a381d2dc4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a114c59-6e95-47ed-9f89-fda81d191921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67dbbc0f-57bd-4c1b-8801-b0113c26871e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0a5e58-a175-4747-bf0b-710f812bdd40",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639ccd8f-1f90-4818-b9b5-f043b8b2d4cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f1425e-dfd1-4831-9f44-8aebb98a7705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c711b8ba-3810-427d-9183-87b521ebe74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8f1705-2ba3-4761-aab8-1e4d9d7801e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09da9e16-00fa-4000-8c28-5b9689b32a46",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1103b3c3-c3ce-4b08-a3dc-570e26f45e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd9fd09-350e-4d28-bd04-6685a8b086a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079290aa-23f1-437e-99b1-9644d8e112f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba722352-aca0-431a-9aab-f7bc50be97e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa63078-c296-4498-a18b-f73c4df67d8a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be91040-10f9-4584-8331-ec6edc133ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ff4fed-9265-4629-9d0d-28a256bba818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5081b43d-3295-4504-991d-b025ac25dde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f043305e-00e6-4872-afbe-fd6a16905083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de644fec-83a0-4872-b1fb-f08f0c812d09",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c613cdf6-930e-4a4a-a4cf-5ef174f7734d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702ba65f-f49f-4879-88ea-807c4af35810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9a845b-e104-4021-8cfb-8c3520feac31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ae1917-4150-4aee-b4f1-4dc26ab016f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27d42e9-a242-4de7-bc3b-f0c4f37a4d27",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e83a280-122f-48af-9381-14e6b2a1d51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee49796-dd1b-4eab-b703-de9dfd3f0dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe2797e-f795-47f6-8a36-d9e966056dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38d7132-184b-499f-b875-508542fbddc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5487ada9-8019-47cd-b009-be8269775f3c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc01f650-385e-421a-b324-606e2b2990e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1588b467-38ca-47fd-a229-50750774ba7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd06db87-16d9-4aa4-9ab6-887741ca3949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d48a3d-4c84-471c-a5fb-48ed0ece858c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0626075d-cf85-47c2-9992-6f4814629d54",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8953124-81df-4831-956a-7f7958494e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbc9847-918e-42fa-ae8f-71cfeb2e4957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c388b627-c4a7-4db2-adbd-51cbd9633610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7232356-b655-4dae-a326-dcaaea1eaf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e458f1-194a-4216-9fb3-655e4d362db9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82aea6d-67dc-431e-96e1-3df92c20aebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43077709-0bf2-4238-8d63-39862c12c490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a892797-3346-4707-8640-4cff17d6ed33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142f4d09-d237-463e-824b-e42ca528d9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4917c3-b422-4369-9310-4ab2afafcb95",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1407d4-6eaa-4712-86d0-b55383817af4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be342252-759c-4eea-b6f7-ad4a46116223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319f9876-cb49-4514-b09c-d21a4c053e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850a92c5-49a1-42bc-8593-1eb2888d2605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e3c54c-af7d-4866-8503-04421cf248d1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5172e7-1899-46fd-8b4e-8704d7ab4305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca115093-f376-4744-a2ae-9a09218e2d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f372f39a-a11d-4f58-a752-f80af7ec13d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017b390f-e7ec-46dc-b4aa-c42530e5fa5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1592f2a9-8088-448d-b2d6-f2953096c56f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16ae8fa-bce5-4eeb-9da3-b3579298e95a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4246c78-b371-4924-a495-7ce35567d5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7245c8a1-e4d1-4600-b0bf-6a2970837434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f3d355-e277-40b1-8f6c-42127e9a065f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5978be-4aad-42a1-a21f-e9d74c84844a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a98b9c4-21b4-4536-8cf0-2cf1dc873245",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc821d5-88fe-4e10-a43a-d280188e6d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81728543-ce3a-4593-8593-fbef66c70d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6daab3c-f486-4378-8b53-243d3c517295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93e50d5-1024-4b97-87e9-fd03e386a160",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50844b7-20a8-47c9-922e-88e2bc4ba31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42409d08-260d-4a3b-98ac-21c54633e96c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a158cb-ec26-4a76-a52f-fc25d57f0669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4b1441-6d13-4e78-8641-5b0e061d9aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b814e1a-f876-4fe1-8d63-76ffd453171d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0adb0f-7734-4a44-89cc-9a2a2e398183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "706fdbb5-c985-44d5-9359-903055237072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c6964c-0c18-4862-b98b-21fa40e9322b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8daec6-303c-41e4-990d-26c4e2d8c6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064e9396-5825-49d9-96b3-f0c944a8ebe5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b728c42-3403-44e4-8c78-80185d89eade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f5883f5-40d4-4af2-96f9-e579b3429d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ab1dce-77f1-43e9-8042-8571d295b79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d418b36-6914-4467-b7cb-1d4a31547671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b653303-f4ee-4ad6-9508-e76505655644",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fdb700-21af-46ce-87ff-b5061fd0d896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a872d760-14aa-41c2-8cc3-6d487c284d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f353487-18d6-42d0-8622-09890d5c49b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56c44b0-8036-48d3-b205-23338760ba06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8403c51c-f67e-43a4-8ab9-383a632c00da",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cdef73-2228-4fe8-8e50-636f6cc44d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "512d1044-b0fb-40ab-9c79-a6b73baf24ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2797183e-5d1b-4dd3-acff-3cfa70704b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5524f5b0-666c-40de-a522-1d6f89c8ab28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf4dbe8-bfc1-4654-914d-0f5b73f7b386",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a593a06b-c11f-4a74-800a-9d3c5f64e762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7401899b-671e-4880-9221-6bf5cbefeeb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9634e529-78c9-41a7-baf1-e59c69b90939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe21b500-e2ab-46e3-9f5e-cc9002668987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76de3fb5-22ed-4193-88af-164dc7127d64",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851d0fa1-8f06-4d47-8653-1e65d6a03040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96f127c-8001-4400-965d-e9bb1eb45eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2504f978-05b4-4b57-92e4-fbc47529d939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2157bf4-7b1c-4936-8695-5781b230ed1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcd6cf9-0f1b-4c12-8cf2-88ac121d5356",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b9c0a2-87b9-42bb-851e-9cd3024d232c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdea91a-3584-4aa6-8262-a7ac510a99d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35b9ec2-68d3-436d-a69c-de93497f919f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed9393b-7554-4aa8-a6a3-abfce1aad444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8746fd1f-b560-4d8c-82fb-6e2afaeaab58",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b33656a-0ada-495d-a34b-fc5f8748cdf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47687d6a-fe56-4b7f-9080-2c5600c83970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682e5ce5-1543-488f-a763-4d40e42b40c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b987996-9603-4a7f-885e-d255d67b1f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfd4f32-1523-4b16-9760-dc2f3e6895ce",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0592ed1-e9dd-4920-baac-217d3da4c213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce49fd37-5a83-4627-be4e-0d5882b46879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6badf04a-52c3-4f46-a54f-1d3f4d0e3150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffb4087-6d41-4491-a363-0eacdc3a4e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecc0fe5-48ba-434d-a4dc-d04d01e1b3cd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8005c4ef-5d11-42d5-85f0-88d6194c6ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e25359-51ac-4e9f-8ac1-5428258a0c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40de5b1c-b56c-402b-a62b-c828515e5db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988a42a1-a37b-49f5-bc75-a6c42f345d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbdf619-42a6-4a95-9e1a-b94b339e0673",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f701ea-58ea-44b9-80b3-30385bb32830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fabbf0b-40fc-4b37-b896-afd041e3ac48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2cd31f-9132-420b-8840-60c390ffbb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdde7f18-cbbd-48f1-b45f-5460ea52f2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3d271e-f578-410d-bff0-7d9929d9dc68",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03857487-23eb-466e-87b7-db38ea1716e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3d490e-adfb-469c-bf33-1477664368eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2107475-ba60-46b0-b97a-9c516c2058e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e4fb98-271b-410f-bf09-bc3bf2ae98ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde8782d-b2c9-41c4-916d-13b0f4f49ec7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f67d228-7a76-4cee-9319-8050faba866f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67297ecb-6d46-4d43-adac-84c0ad77c43d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43b16a1-9573-4d53-9393-72595f0e6087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b4a8a3-1804-4c71-862a-8df59e314d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ec96ea-7fdb-408e-ae4f-4eceaf231e86",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461ab049-ee98-4014-b35a-894d7ade9582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0448130-7c59-4fc1-b8cf-adb3bd006625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24bdff7-00ca-4ae3-a5e1-a89cf7708ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c98353-4550-4c57-8585-11dfbd182114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdece7d-2723-456d-b9fc-b7c8eb9e4aa1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4395b7-7204-49fa-8897-c04296bb9339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fa8b04-b7e2-499a-9e3b-1ab3566b7f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa187ed3-11ef-4756-ba85-3441a6f6ce9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42916866-ef9e-434a-b84e-90862fa5af17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7568ea37-5395-4ef6-ba9f-920512f271e7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a89762a-84d7-422f-8551-44392504a900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc96cbf-36b4-4776-a76f-47164e76fbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bdd6ab-18d3-44c6-a562-ff08bea4ac7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55439996-0128-4fba-8c41-dd1bc8a8b4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf47089-b75c-45f4-bd46-a7a4cd0deb78",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4b7256-506e-47ed-84d4-dca91597d43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3960b56b-9f74-482b-8176-28fe05a0975e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6f412b-a7a5-4480-86a7-1a9be5dc12df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a41384-4dde-438b-9fda-83e17dd09dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e335f850-e78e-41f0-9a90-4ab7781eb6f3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5698137a-7498-4bec-86c1-946f5844e9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d5f6b1-3c1d-4f2d-83d8-25a753caa36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b37efb1-d030-474f-9a65-da95a9d8a796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161981ec-5fad-4def-bac2-2641801cc77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce24628a-d194-4fca-ba29-ea18642ca49d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd40c207-fd68-41a4-bb0b-0a63f0f9e9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d31f8e-1510-42e3-92d7-7fa26b180dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781d3362-b470-4808-98a0-e070bd086489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f195ca8-8166-47ec-b102-4498d40e4394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb9861b-cfe9-4a93-82c1-fada8a664781",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c37349-8a73-4c40-a690-32c3e0ea209a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de6605b-c794-4d61-931f-b2e939e0a51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0811a27-7e43-4040-b49c-6d6d8439e14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b8c334-b723-4515-9ae2-a9a34eda67d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3270324c-5ab1-410d-a9ab-8612c03fbbce",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75af910-ad83-4e4b-9c4e-67bd224484e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65beaf3-7d01-4ca7-98e5-e58e5ed740bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b6d0ab-971a-492e-9025-4f478319fb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a773c4c-26bd-4f0d-b146-7fd66818d2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c096ef3-6fde-4044-ae1f-1ee896d5c888",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d95279-be48-4887-83ed-7bdd8c780a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7e2070-62e6-4bc0-bfb2-cc88b6d6a3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55df144a-dae8-4113-94b7-6fad0cafa32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3943d5-6f1f-4184-9e5c-24da24cd8277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92098af-d7f6-43b1-93c1-d5ee29c1ce2f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159e1019-a5a5-442c-9c36-ec137190d991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ad124f-e812-4732-830a-2a01b1c9520b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d71401-f68e-48e6-8201-0f7d013bb16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458ee427-805b-40ef-ad88-9486bde9dbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6854cd42-dafa-45ac-9ef6-4178875641cd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b8ef56-ec95-44a2-a04b-dfecc4692cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa29740-f3e4-4f44-a800-0d7f43198883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcedc212-3c8d-44c5-a53f-0c9844c6ad59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205d1580-7f90-4234-8c46-9f1285cfb0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d363c16-0340-48a2-b54c-7a0d95763eff",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faa4e73-8e7d-490a-a6f4-79d2dfe5c5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c36f5a-45c9-44f0-87b3-3da45cdd47a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5708609c-f916-45e9-ad19-cf497f7c6426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ebb4e4-0880-4d1e-8a6c-23087709870a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0071e3-b2b8-4c3c-a0b6-4fd59b216344",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f23607-10a9-410b-99d8-77376a85462f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7fcdb4-7868-4985-a7e8-0474ebcda150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42096878-90cf-4ddc-8c33-e85ba8fa0860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197ff96b-a207-41d6-b7d2-d61ea631d8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c505cc8-b85f-428f-9669-a4afeba2e79b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f655328a-2c1f-4c20-aef2-362dc1eb8c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0face74-8acc-46ff-8f3d-43eb19a1f612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569f5a4e-33d2-4ae6-8958-e2fe9eeddb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34138ab0-5a5d-4943-b52f-847dbe8952fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab110577-1f62-4f70-9a0b-5a3e17742967",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dced87-e93d-453c-bb1b-08d36582a848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1332fc7-f7db-4894-9bdf-f86e6e6e011a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd275f20-d5a9-470d-a4b3-46271b278bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c46f54e-d909-431b-a091-c76c11f5f9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6498dc4-3fe2-4ecd-8eb1-1f34f1536c4c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4a859c-433d-40bb-b1c9-390324c7f822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbcf5fa-a9ba-4f95-85c8-66be059572cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212c3d81-fb21-4ffa-94a4-fb96e0650445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87b0ef1-6800-49a7-aff8-6ab503203ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8713a2-5b8c-4327-833a-b7057272e0c2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adf4bac-9fcf-47ce-8dbf-33b01cdbc438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007c1374-81d4-4f4e-bedf-f78d4362ab6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9894db-3977-4fe9-bd98-9da84debbe1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e029f06f-6437-433c-b017-316446693403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a5577d-b282-4e99-8f27-bfd4d1f97f77",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d326405-6ec4-417f-891b-7cb8ec663690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cee3cbd-d8a3-4377-80e4-4b4747247bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0635962c-fba6-4570-b753-a9c18f7ed106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385a60f5-8286-4ba7-a035-447a2551c14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddda8698-68d0-4020-9b2a-d07ae8caa8a9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1b22bc-3116-43e6-8bd6-ce324ee4f705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b660fb-16ea-4802-8a7d-29f98bba4788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b32fac-ca38-4e1d-a8fd-70f24e3de8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c14d6e-455a-4f85-bb33-c9d9526f3a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0f44b2-bee9-4b5f-878c-87c538a446e9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c4a8e2-238c-4509-877b-624d5c1143eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c05843e-0c09-40bb-b246-a71c5a1cb7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f2bf15-7007-4b3b-aa11-533660196699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561b009f-3c08-4ad0-8d8c-7401d867c0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82060ff-f628-47c2-b9d2-e7a580711c4a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950a53dc-7228-4b94-a8b0-6044d685e178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5370a682-8ff5-4928-978e-b27070711ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0274ee-d774-4a76-88f3-f03b032eb0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88efb245-a003-443d-b92e-da41ab9eab9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e785a7-c64a-4296-b2a0-2d2d396ac927",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b26de7e-06a0-454b-a08f-e4f31483e5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0061d2e8-9f4f-4542-9b93-a88f8d48a73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd80c3a0-4a94-44bc-897d-b77b0efcc8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4483b64c-01b5-4e36-b4b8-dd3fd62f24e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57312dd-3454-4e04-96e1-ad506f16301f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe1ed27-6adf-46e5-90cc-0d0a0d67fa59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0de29b4e-61e6-4687-8a35-74ee1d8883cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eda15a-736e-4e00-bc66-e6f8f4498937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ec3b9e-d04f-45c4-ba77-7636e851b05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94253505-4179-478c-9dbf-a866fc4f2aa1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51e7b74-3ddb-4090-a14e-45980c57267f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5d2a801-c6f2-4c74-a124-83fcf335c90b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa24b584-5f45-4c07-84cb-d9561ac2e641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6643c42-9801-462a-9015-d948f142e10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53c42d2-cd7d-4603-8a39-3319b5fd5306",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17a2e70-bbf4-46c0-89e9-c9e53e65ee3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6fb8f2-2e9c-4a1c-bbc1-1dda3f398b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb36c168-58a1-4c31-9bda-3c750b96186d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f97b63-a479-417c-95b8-0e40ec70bf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a0003c-b394-4732-accf-69f9438153e7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7333b16d-2f94-4600-8f98-c1420f9cf4c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11420460-eb8a-4353-9815-ccf70c6011ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8596b6e-2d9b-480b-b4cb-e25441bdb623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d228e07-d9bb-49b4-ab63-cd042c06c8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f38a5c-cb26-47c8-a82a-03f1160e3ee3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d63d13b-4341-4074-894d-db9a85c2817f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6cdebf-3180-4f6c-85a2-e2de71a77206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa45213-7133-4f42-a971-99530b85b62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6dcef1b-5a85-43fd-b579-c9af4352f617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ab5dfb-d923-4816-b3a0-1c15d48e8565",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a506bc-d494-4570-80cc-00a76663e1a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39c657c5-2ac0-44df-9fd6-ae67f0ff82b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894ae6e9-fa4d-47b0-ac0e-94a7f900cf25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee012aa-ae83-453e-819b-4c261a7d3525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b87695d-42af-4d2c-a6ff-12c10e382a74",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2e17b9-0501-4b18-8fec-584962818e73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6916ce5-7870-4673-b5e1-cd650d04611c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea62cff-f51e-417c-a246-5ccecf97805d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f786df-a34e-4533-94d2-eab497d88d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2107e87-23dd-4be5-97a9-940c99783ce4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5babcaf-12cd-48de-8ea7-5b2fd5324785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9830e433-fbec-42af-9212-a8929ad59e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f1bc2b-9148-4066-8799-8adf8b23f44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6df8f52-f074-4f92-aaa2-4a0c529748a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab1ab8d-44f2-4274-9b35-76545b57d226",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9603de-22b9-419c-afee-ef0db1f28e89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b192c92-efe9-411f-a466-7ba679c08d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cc187b-a424-4792-b54e-763cb0a6f97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff062a73-a4e1-4595-b9ea-2d78ee74ef22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139cb094-74b7-42bb-a3a1-ca81c4b21976",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0e90df-c5e3-45de-ae1a-efd73b82e774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8da58061-c65e-41d6-808a-609752e783fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26870943-eb43-4923-b6a2-f260ac503a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf850d42-fb79-44f0-8531-e8dbd02aaad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b470e4db-552c-4704-bd2f-8aca4764e336",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc95b26-98f9-4800-9ba1-0adb45cbbb07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f05eecee-38f7-49da-a10c-bac89d4b12f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90817b50-6a0b-46a1-bf62-1748e42b4053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e499533-594e-420a-8ace-a507ad47688f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624d158e-4181-4f90-90ef-cf778030e8ce",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e469b74-41d8-4d44-bbe5-8406e62b3a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c919f1f-5528-43d9-96d6-b67b9ff05311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043ea02a-69bc-4a6e-a181-9ffe0e95882f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d194c5de-491e-4148-a0bb-ce9baf7f7c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8193fab1-62ed-4ace-95bd-e1ae1e47de1e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e3bc54-6a98-4766-aeed-6323038e59ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e150fffc-6fea-42d1-a178-caefc9c6745e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e582f8-837b-49c9-8538-e3589fb2585e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd9aa97-385f-490d-a83d-75f7f01930f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83eae9d1-e7b3-4d3e-a089-e089237ec1c5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b31c83-05f8-42e2-83b8-eea8ff8bd7af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc470525-3350-4924-87bb-fae69b440811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cdec5c-ac2b-4cf6-876a-cd0b4025c1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff4c43c-372b-4ff6-b15a-3c6db9ad2138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f632de-27ea-48a4-a9f9-c4ad7c11f133",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a62bfd0-4882-4329-a10e-671a19d7fb29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d77b0e1a-2592-40c3-bcdf-87b14183e892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850533f4-f87f-42ce-90e5-31be9a7a40d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b459f0f4-fefd-46a3-89f5-5bf38cd9b032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb248019-15eb-494e-9658-26163187617a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf8ba75-b186-4467-af3e-c8ecc9ba7679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd32e3c4-1170-424f-a415-fc6d521d2269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6faaaa-5c73-4677-85e8-95b426f8e24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b63267e-826a-4caf-b697-91c37e427ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db3c97f-bfbc-4576-a93c-d8db7f91e7f8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26a629b-1732-4c91-88e1-50ab0da1439d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13810d21-8a0e-4c11-a1d9-7feaa5dc79ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effe9b64-d99b-4c3a-8c02-070b5a6c0df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f48971-bc71-4aaa-bcda-bea03f17d1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69467418-d38b-4e40-8025-91a3af235115",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13459582-1689-4dc3-89ef-fa1babff1adf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77fa72ae-d9be-4449-a51a-d4a421780f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812b9315-f8e8-4099-9b19-02908aee4858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff1936d-a51d-45e3-9f16-55bd883827aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f4e6f7-1e07-4fda-ba73-981a1f1999ba",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5485481d-becc-4d21-9bc0-06a952dfd650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bde4863-f619-46b8-bd4c-dc2b2c953a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6387abc-a397-4ee2-856d-67e1b4c3d90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e594aa-ace6-4c3e-bd06-283feb2af3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55e568b-dbcd-44b1-a6b6-21bcf656a86d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f8b16d-c712-4d75-9384-a0081c713064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56bb359f-4273-44b8-b95f-c46c36f8dbdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8939561-13ae-4096-a1d4-f3372031ef63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da79cf1-9112-4b02-bf20-4da6b086571a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b584abe9-d19d-4949-ad37-8a22f8d08cf9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8803209-09bc-4ee4-a61a-fbf9072a45a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eefe237-1e51-4055-bfcf-213c41d7db5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d13c4f-bd92-4776-bf77-cfd122b42bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e56ee03-7bc7-451e-beed-81a6f06308b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e699a6-bd25-476a-aa46-3bc15ce41a47",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a998b67-0349-414d-99e1-a61ae027e84d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cf4f89c-b534-4324-9de5-fc8d69112d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5f8856-2603-4a89-8d56-f3981f873b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36519386-b1c2-47a1-ba33-e950ce8ebc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca873290-ff70-47fc-90e1-d1338409bf7f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37c4bda-bed8-4831-9591-6f09f5501f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0766ec5-60c4-4294-bad6-e0686eea7d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e49ac3-68b3-47ae-b738-f71ec98f1197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45812a9b-a1a0-4be3-a2b7-743394e96b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0bd363-4b65-4b6e-8413-0bb4a95248f4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7710a17c-9af6-4fcb-8d9e-3056d5ad1c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5d8bbe7-b0ab-4a91-b243-02da239ac692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b870dee1-3b2d-4f69-83e4-dda66b92a6f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd76cd00-fd08-4eb1-8a20-a766de2a726f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e69c5c6-a8c9-48fa-adaf-43e9ec4d8578",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef987f8-07a6-4b3d-9fa6-692518d16bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53513b55-0a68-43b6-a64d-71180f76792b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b802d7-4738-491a-a958-d22c5ca86620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f60fee5-d2da-45af-8473-41d671f23b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2e25bd-8f2e-46ed-b1e4-48d5d047fd7e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484cfabd-1703-4db2-b6d4-66170c28ec0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94f89660-ae7d-4bb3-a5af-ee7b1cc52cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3afca36-453e-4f56-be4d-ac17b22b6c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ad3d8d-8f9f-4920-ba7c-d03dc81d7704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db46d5d-1968-4390-bc92-dac14b584f0c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7615d8-0882-405a-b00c-8c1d59e71fac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "063c3eb7-61dd-43d1-99ab-80867f0bb1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3858ea7-52aa-4ee2-b487-82637fe34ac2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436d6b25-ccea-489f-bfed-c9e1f380bb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cad9b58-7791-41e2-8bf7-e93544fe36b7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36e25c9-9e8d-4870-8b4d-7b934d39153f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee08030d-54a0-4909-a1fd-1d354f5c140a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71a5584-0506-4ec7-b37c-438283e9599d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091e522b-97c7-491c-b316-6598e0485388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe180fa-747b-40df-8c19-2eb19541b02b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f8514e-3e14-4a8a-b8b0-88f6e50f6de6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7466b05c-5da7-440c-8289-0d1558be3008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5435b6-7751-47a0-aa61-dbc70c34c69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1f2388-3fa0-484f-be3a-9e3c6ed28ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a69242-c917-4da2-a9aa-03790b26840b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa06739-3cf4-47f9-a626-7134d9581312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46094df6-a231-4e74-abc9-a29169e05e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116509a2-0c97-4d67-8bc6-c53998998038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa30b06f-fb42-4b92-94e7-f9453f2f8d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38682b3d-4e2c-4134-81d9-b0776d1a0c69",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7729834-3541-4636-aaae-9199105b0bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "304d6d6f-25f2-4b16-b19d-8c38744deaa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0409873-3f33-4c85-9fad-d4b6ab528662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4776cbd-f3b6-4509-bd0f-1aad7728064b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c2fbd7-7d16-4882-b8c5-9e8e9f04e349",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898d327a-47f8-48ce-a23e-4dd9823d61f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a625e2-eea2-4158-8750-0b6d5b2ced96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d6b008-b5ae-4b2c-8b0e-c05cf5e10c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417be4bf-ee10-43bb-836e-cc180393d5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6190e2-02a9-4636-a387-b749219e2d23",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86df96e-ba83-4d0f-9e7f-9490d314accd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7986771-676d-421f-bf72-98a521d0ea36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72751ffb-abf1-45ab-8b66-6b739ea7fa20",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5689863-4e1a-4290-9409-95ff82c76859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b774b4-5be6-4e38-bbb2-fbcf0ff98e6f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce94210-8a54-424a-9a57-81530188669b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33cc8df0-dbe5-4573-92c0-f54ad8d00943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9b1127-6541-490a-aa24-43e2221a9b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642d2dd0-0174-432a-b280-be741eaedf5f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14740026-c6ea-42aa-9e09-d95638b930bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b78e2c9e-4dc4-4358-ae62-e9f563031b32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b89307fe-764b-468b-87ac-d2896a9758b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be914cad-f434-4edb-bf75-fd53a720539e"
                    }
                  }
                ]
              },
              {
                "id": "b962642b-8262-4ed9-85da-12b3737c2fe4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74968801-5b58-4ff0-989f-2e7493022832",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98529b37-a850-4bf1-b8a9-44c11086ee6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ef4a7a37-f38d-4944-8ca4-3bdd2bb3d4bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eb0eea-6ed8-4404-b6a0-976b05cdc024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1dfc477-f4b7-4755-845e-dbe95b78820f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "274e3c1e-ea74-4dbf-a285-9b06d592216d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "520e6192-2e94-4000-8bdd-b639ce638603"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94b878d8-bd63-41d4-b77b-2e5109e6c0b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "163495c3-e93f-404d-9472-6460981af84c"
                    }
                  }
                ]
              },
              {
                "id": "b3d8bbce-a2b8-427a-85b2-335f74b1d49e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8f934065-b522-4fcb-b625-3777ef613148",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2a3faa-b1f0-416f-9ab1-63c935d51941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f3fc6a3d-4d0a-4663-b167-360a4358dcbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eee0bf0-a16d-44d4-8b50-854158689635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f599be36-9b03-4715-bcd3-793a5391f3b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ff4b7757-acb9-4015-8ba0-7b6454c10476",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9029cfbd-a5c7-498b-b949-68623972b5d8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "119abac2-9c30-41ba-9066-43e162b32e6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eb668f0f-21d3-415d-aa52-18d7c6268662"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c0c5bb8-20d3-4447-8b31-8ea8f90d506c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5ee26c9-922e-410f-ad43-a817297c382b"
                    }
                  }
                ]
              },
              {
                "id": "e93e483c-d6c3-46de-9fc2-dcdb3207de16",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3678e174-86c7-4d04-8b53-e97de5dd7ff1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0862bf7b-19f9-479f-89e3-5ef57964ce3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f7d1af4-a6b1-41c4-a682-82f64756fa13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64bd84be-ed46-42d3-be3c-9c219e487594"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00efada8-9778-4f40-bd9e-c918ddfa459f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5db2abf8-1547-455d-9cb9-e9543ed63074"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4ca871a-0fc8-47fc-acfe-98aedd15e41a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4700d83-7714-4620-b1d6-6d63469d5dc7"
            }
          }
        ]
      },
      {
        "id": "cea85b3c-29eb-4248-b778-ce4c567db7ff",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5bb80b76-89a3-45f9-8115-2f58a7c2adae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce712434-2952-4c1e-822e-c7790cd62a62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b19472ad-0394-4b47-b414-35a946043596",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce3a160-a7ed-4fb2-99ed-0c4437ed54bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1af49d4c-3030-4998-ab64-5b0675385b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc590b37-ddbe-4fb2-a026-ef83ed86fa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a46ab657-233a-4e14-b084-9807d8b85631"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "869dd388-e130-4e97-9a47-c64c78409025",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a270014-980d-4ad6-99c6-34658572242d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c95f701-2985-4f2d-b780-e7f80a1488a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f127f14-0cb8-439e-90dd-76e59d847edb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcec82d4-78ea-42c0-bbab-3d7af63a7bdf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6bb4a442-65c4-4b9e-9885-53a56cf12f9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbe69358-534d-47f0-b3b6-a1806f9eafa2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45dd37d2-96e5-4df6-a239-7b87937dcc88"
            }
          }
        ]
      },
      {
        "id": "aff4acec-aebf-4f6c-a367-c5788a1486ee",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7d82de1d-cfc2-4223-895a-fbf9cd028dc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcf6e7fe-33dd-4a2a-b48f-46508585fb4c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b90cad9c-3d2e-4d1e-b8ec-ec4ef9b992d9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f3cdaa-43c5-4e6f-b3ad-520b296d0165",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "116d372f-f98c-401f-a467-37a064567946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe15588-9f66-4291-b567-d2081ee96e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3104d0c9-9d4d-408e-b687-eb0ebae94528"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32ac021b-2070-4fb4-89a2-9c74514658c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35cffba6-5bed-4263-bb27-904ba566667a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efeb734d-6c6e-425c-8985-1b79a6c2ef4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "243c312e-d294-46e1-ac7f-6433a605f859"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b280095f-316b-4fa3-b7ab-87d3201ea308",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "19615b49-2944-4f77-9275-627ed0e29171"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33ce52c9-905d-432d-baa2-0597277dbed9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5799bc70-4368-464e-9852-32b1269a2088"
            }
          }
        ]
      },
      {
        "id": "df24106b-076d-47b3-932f-f4715ac6e90d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7089b452-18f6-410c-8429-ae93bb01cb8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "740db9fa-9cfc-45fd-b8bb-0080f37c7a62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ab92dbf-5fe7-4034-9213-6fd210902576",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6085b80-9c1d-4b4b-9369-66d622e19e97",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "587e16a2-cdc6-4e04-af2c-5c72b3dd13d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca91ec7-1652-477b-8b59-ce6234660c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e2fb9b8-f38f-4540-817f-08408af1726b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9e3010b-900b-4cab-858b-bcadd5f3eff3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8926f723-c137-4882-a2ab-9b81f5655b0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "896e0db3-f442-4a47-82df-9c39f7185a00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cf93cd2-63ea-4590-a269-319117ee0663"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a98237e-fa1d-49cb-9cac-8b99e84043b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74c7acbd-54ad-401d-821b-09ac9502d4f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06456227-5071-4698-8688-c4a513a46156",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "253191d5-7049-4d9e-9676-53263191ead1"
            }
          }
        ]
      },
      {
        "id": "835a4ea0-9c82-4c72-90c4-38023b391cb4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6c8c861-f5bd-4537-836e-7592831cac89",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc227769-50c6-4887-8a36-471391b00e0c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cc974aef-04c7-4c6d-8e0c-915fb4ec0862",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cc8a0db-c96a-466d-bffb-bbff002ded58",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c122855-a28b-4ced-9bfb-7db4073f1cca",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.214285714285712,
      "responseMin": 6,
      "responseMax": 255,
      "responseSd": 24.082894918684474,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724114428498,
      "completed": 1724114439197
    },
    "executions": [
      {
        "id": "0646e571-e301-4350-8314-8cec7a9e474f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9e342009-ff83-47cb-b171-abd7a15de66c",
          "httpRequestId": "7786da25-6273-4128-abd2-a6bb319bf4ac"
        },
        "item": {
          "id": "0646e571-e301-4350-8314-8cec7a9e474f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8ae1808a-29a9-452a-931f-adcacbc5c273",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "dce6e5f0-af2e-419e-8af1-6c8ec26cc3bd",
        "cursor": {
          "ref": "41033812-c09d-46ae-930d-8c5c965edc50",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "05ecabd2-e4d3-4c5a-9a8c-a229b6a30515"
        },
        "item": {
          "id": "dce6e5f0-af2e-419e-8af1-6c8ec26cc3bd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5d0ac7e9-a0dc-4096-804c-57e792066714",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "16367cb1-e247-40c7-9e26-a78bd1e96da4",
        "cursor": {
          "ref": "ed4b6252-cbff-4ca9-8697-6126bc37a831",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "33d18f06-0010-45cd-a650-bdc300e30abf"
        },
        "item": {
          "id": "16367cb1-e247-40c7-9e26-a78bd1e96da4",
          "name": "did_json"
        },
        "response": {
          "id": "b77cf24c-2725-418e-8081-8f2825138187",
          "status": "OK",
          "code": 200,
          "responseTime": 199,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0607e6ba-b306-47ff-b9bb-f633bbc4fa26",
        "cursor": {
          "ref": "b5919de1-f58c-45bc-8443-0ebd742de248",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c47210bf-c1a5-4670-9b58-2ea20eac254d"
        },
        "item": {
          "id": "0607e6ba-b306-47ff-b9bb-f633bbc4fa26",
          "name": "did:invalid"
        },
        "response": {
          "id": "e54de5c3-4b68-4a8f-a086-34ba45f9dd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0607e6ba-b306-47ff-b9bb-f633bbc4fa26",
        "cursor": {
          "ref": "b5919de1-f58c-45bc-8443-0ebd742de248",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c47210bf-c1a5-4670-9b58-2ea20eac254d"
        },
        "item": {
          "id": "0607e6ba-b306-47ff-b9bb-f633bbc4fa26",
          "name": "did:invalid"
        },
        "response": {
          "id": "e54de5c3-4b68-4a8f-a086-34ba45f9dd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b238538a-8b26-47ba-ac5d-7e200ad2aabb",
        "cursor": {
          "ref": "5a0f1cc9-055f-46a1-8cc5-b59655b6c333",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "93ceda3d-774d-471c-bcc6-be74a6fde6ff"
        },
        "item": {
          "id": "b238538a-8b26-47ba-ac5d-7e200ad2aabb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0fc71ac6-dab3-437f-b95c-671f81b13e9f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1970521-598d-4212-88ec-d7c28c3ea2ba",
        "cursor": {
          "ref": "0dbb8567-0d3b-43b1-8c10-d9fe291fe6f8",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4e5a8c62-c0c7-4f03-b9df-cd9c763aa66d"
        },
        "item": {
          "id": "d1970521-598d-4212-88ec-d7c28c3ea2ba",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "627d7dbb-666d-4368-b3fc-86950484a272",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90f7046-19aa-453a-ae31-f5c8e207d870",
        "cursor": {
          "ref": "a9ad860b-5021-40bd-9699-2996940a07c8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "29d32b56-b6cb-4a8c-a2a4-c316e6aabb9f"
        },
        "item": {
          "id": "d90f7046-19aa-453a-ae31-f5c8e207d870",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1b48258a-3512-4d0d-8dc8-1c1a413759b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638b61af-007f-432e-aebc-65289f8df15e",
        "cursor": {
          "ref": "0536e96f-3e95-4c5e-b2b6-f8e0e52de8d2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a192e583-abc6-492e-88ae-f3c247171ad8"
        },
        "item": {
          "id": "638b61af-007f-432e-aebc-65289f8df15e",
          "name": "identifiers"
        },
        "response": {
          "id": "bbfd3b15-8834-4d0c-b663-7e354bc1023c",
          "status": "OK",
          "code": 200,
          "responseTime": 220,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3116e1b7-78af-4994-9b24-35c834f9e462",
        "cursor": {
          "ref": "512c3479-e6a1-40eb-bdcd-712ddd812311",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ec7e78a1-5856-4d8f-9f08-673bcdea61cf"
        },
        "item": {
          "id": "3116e1b7-78af-4994-9b24-35c834f9e462",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "72337a93-ef20-4fd8-9128-995007504dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afe16a0-ec2d-42af-8611-8ef5e73a8d52",
        "cursor": {
          "ref": "8b7aac59-89af-45c5-96c4-d4e6cacc5080",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6621e1a5-9fee-4905-8c11-c58ab678f8eb"
        },
        "item": {
          "id": "4afe16a0-ec2d-42af-8611-8ef5e73a8d52",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "25878154-1552-45d0-96d4-c89fdd9652d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ad3347-e155-461b-b8c0-4e5d63111063",
        "cursor": {
          "ref": "4e0df142-4631-4340-b8cb-7ebf3d7f143e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "863c5d49-cd3b-4cf3-94ea-12a3009a0177"
        },
        "item": {
          "id": "75ad3347-e155-461b-b8c0-4e5d63111063",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "826b6d36-f147-4621-9cba-ff71b4b05ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e319983f-5fa4-48b0-8e0d-a48a621be8c4",
        "cursor": {
          "ref": "5839b80f-06ef-44b1-bd43-78c317dc2e5a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "edd9bae6-daab-4ce4-b8df-94b4cf90fa57"
        },
        "item": {
          "id": "e319983f-5fa4-48b0-8e0d-a48a621be8c4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "42264252-c5a1-416d-a514-5085d104fa61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b52cc8-619a-4709-9990-8af4b5ed139d",
        "cursor": {
          "ref": "5152f3ea-4a7b-4e62-86fc-8c184b314a48",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "296ee13f-8300-43c3-aabb-991340f40ffc"
        },
        "item": {
          "id": "18b52cc8-619a-4709-9990-8af4b5ed139d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7b33163e-ebc5-45a2-8a9d-af1b7498fe2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a5b560-f813-467f-b9d5-e458d5e9ef96",
        "cursor": {
          "ref": "5a9a7ef2-919b-4a06-989a-39dad42a6b6d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "04639272-a2f8-4f70-bf56-680938949ea8"
        },
        "item": {
          "id": "11a5b560-f813-467f-b9d5-e458d5e9ef96",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "51b5ea98-db3c-4a81-86e4-013d781117ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fb3876-17ad-4854-8ea2-84a37071b7f2",
        "cursor": {
          "ref": "66340ab1-a983-449b-af0e-d040e4553f7d",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "92bd7540-55a2-41d1-b54b-a1a904859a1e"
        },
        "item": {
          "id": "30fb3876-17ad-4854-8ea2-84a37071b7f2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e88ec23d-36a0-4566-a88f-af1eb98f1b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc7597e-9ee7-40bc-8758-f7b7a5341063",
        "cursor": {
          "ref": "2b5b6973-a028-4ff1-8fc5-3d4c54a509e4",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "948738ae-b9fe-4bc9-adb1-2f6dd7134cbd"
        },
        "item": {
          "id": "0fc7597e-9ee7-40bc-8758-f7b7a5341063",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "05e156e2-1fa4-4b32-9532-bbb7f3ba7f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500b3c08-2746-4ead-824f-db3b12b21bfd",
        "cursor": {
          "ref": "f5d45166-1843-4ecf-9ee0-6bc5ee91c83c",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3eae813a-5d83-4c2c-a918-fab37a92e7d9"
        },
        "item": {
          "id": "500b3c08-2746-4ead-824f-db3b12b21bfd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c6f06ac6-9220-4190-8917-d3161aea7f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e293ecbb-c9f4-4356-b332-1447c6d858b4",
        "cursor": {
          "ref": "2acb3876-4672-4c7a-83b0-1318d763dc93",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "765132b7-d4fa-4641-ab6d-51520fd261be"
        },
        "item": {
          "id": "e293ecbb-c9f4-4356-b332-1447c6d858b4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3531f097-8721-4837-91bc-4415f77e4a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4179dd15-8dcf-410d-bfb9-ce36f5895d16",
        "cursor": {
          "ref": "9700f99a-ab18-4ded-83c0-d0f3635c8d6d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f21cdd5f-69d8-415b-b2bc-d7dd3d8fbee3"
        },
        "item": {
          "id": "4179dd15-8dcf-410d-bfb9-ce36f5895d16",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dec042df-a39e-4301-95b7-1dd51ebc9085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ef72c5-b5b7-4e56-9c37-182b3f079ad6",
        "cursor": {
          "ref": "e15737b6-8227-4fb9-a1b4-007f7a222d6c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "860ed861-123a-4a83-a2cd-bec030c0a1a6"
        },
        "item": {
          "id": "55ef72c5-b5b7-4e56-9c37-182b3f079ad6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e6f076c4-8a6b-4417-9929-00a21c404b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0a4f9b-195e-4241-ade6-3ee397ad0ce1",
        "cursor": {
          "ref": "91888441-c367-46bf-86f2-b5293474679c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4586b4c3-f5a0-43a3-bd56-c79939ba4bf6"
        },
        "item": {
          "id": "dd0a4f9b-195e-4241-ade6-3ee397ad0ce1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0e966e3a-fe79-4ce9-acc6-787ef55174c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4717b77-d2b0-473c-b1a8-cbb43e1e1651",
        "cursor": {
          "ref": "7199d6d5-28c4-4660-b152-e6eb81a9909e",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a4d7d3aa-bd25-4731-9f46-d15375b8e15b"
        },
        "item": {
          "id": "e4717b77-d2b0-473c-b1a8-cbb43e1e1651",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fad36724-d227-462e-90ff-4e1424c85b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b7581f-a6fa-4082-82b8-5705f7518046",
        "cursor": {
          "ref": "3f211406-e534-41d5-806d-d41e3ee6263a",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4bbf2886-64ea-4ca1-a032-5ec0de0328f3"
        },
        "item": {
          "id": "42b7581f-a6fa-4082-82b8-5705f7518046",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a0c576c3-4475-4afc-90a4-62f7d65e8bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626c3f81-73a6-47c3-9905-daccc850d756",
        "cursor": {
          "ref": "0fe75bd2-bb9e-4198-8cfa-55cebce29c85",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ded78dfa-b5fd-40d6-a9f3-6309c88152c0"
        },
        "item": {
          "id": "626c3f81-73a6-47c3-9905-daccc850d756",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ba10bc26-638a-4d87-b9b1-39c2cc6ad756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da57d269-56e2-489b-81eb-f2586e722e75",
        "cursor": {
          "ref": "6aa5f0bc-0c59-46da-84eb-f8a74e369cf9",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "67cafd5e-1040-48aa-84ff-7654ffb1cd08"
        },
        "item": {
          "id": "da57d269-56e2-489b-81eb-f2586e722e75",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c9cea026-4199-4f43-bf3c-13b07a304e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798415e8-79f5-480e-94dd-f814f9519522",
        "cursor": {
          "ref": "1da56768-fdd9-4770-a44c-317e919d683d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1463abb5-5721-4d97-8a53-b0b684279912"
        },
        "item": {
          "id": "798415e8-79f5-480e-94dd-f814f9519522",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e3eb868b-801e-4c05-b32e-d96a0b080715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e86a86-7bde-4ae8-aea8-da9e65700b76",
        "cursor": {
          "ref": "0d646186-3c0f-42dc-b020-c6134c47a9b1",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2ff81134-ab62-4bd6-a754-c8eb58be4f7f"
        },
        "item": {
          "id": "d8e86a86-7bde-4ae8-aea8-da9e65700b76",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a7f4dd14-ed99-48e0-b3a9-edecb97ef889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb035ae-8b1e-461f-9502-f7251fd46345",
        "cursor": {
          "ref": "e518d4fd-3fc3-4261-808e-f7c4e79deb0f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8c1034f3-6dd1-45de-a967-c919abe2784c"
        },
        "item": {
          "id": "bdb035ae-8b1e-461f-9502-f7251fd46345",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "acd70623-c8cb-4405-a388-41f5044239bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a899470-7c20-4a9e-9b22-6ff873d071e1",
        "cursor": {
          "ref": "1cbe128e-4d6b-467b-89ec-48273e7c68e2",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e1e81393-3014-424f-9d4b-f168fda93098"
        },
        "item": {
          "id": "3a899470-7c20-4a9e-9b22-6ff873d071e1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "559030e5-037c-4231-babf-adb7264a7754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f354019-ccc9-409d-9c03-4a98fb854ad8",
        "cursor": {
          "ref": "214fa7ee-c10e-4320-ba63-d1b3c90ad272",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "87c02c11-e41f-421b-bb18-52695c83c75c"
        },
        "item": {
          "id": "9f354019-ccc9-409d-9c03-4a98fb854ad8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c6728699-c883-46cf-bbe6-c0fef5e46daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a5b65c-c6f9-4f62-b59a-9271d1126578",
        "cursor": {
          "ref": "f327eb93-37c4-4fb7-84f1-28e46cf236a4",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "27677dcf-fe33-435e-b33a-d9adcaa8cd5a"
        },
        "item": {
          "id": "c2a5b65c-c6f9-4f62-b59a-9271d1126578",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8eb5b643-860f-4ec3-ab04-b76f21fa3b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efb8533-9970-4db6-9f8e-f604d50c5529",
        "cursor": {
          "ref": "cabb41c0-9d89-4618-b1fd-5f847497c2c5",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8d9b01bd-69e2-4b74-bb40-607d5c65469c"
        },
        "item": {
          "id": "8efb8533-9970-4db6-9f8e-f604d50c5529",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "422f9fa9-eaeb-4a14-8592-bf9fb37442f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80de2f80-c70a-443d-81c7-795d2a67724b",
        "cursor": {
          "ref": "d3e9b820-0374-4d48-afe2-679adc39f660",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "26644462-e016-4529-97fd-260d09f3ca81"
        },
        "item": {
          "id": "80de2f80-c70a-443d-81c7-795d2a67724b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "423ea31d-6226-4672-9255-75709cfb8a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8401bf70-a69e-45b8-a2ba-f7e4b3fceae6",
        "cursor": {
          "ref": "ac05e748-34b8-42cd-b688-54973f62c82d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ab996422-cf26-48f5-a856-8ed85bd05b06"
        },
        "item": {
          "id": "8401bf70-a69e-45b8-a2ba-f7e4b3fceae6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a1f19ddd-a1c8-427d-893f-88335a1b6ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d5dfd7-a6ab-4241-a95e-9c79f06d5033",
        "cursor": {
          "ref": "e12a4ac5-ba3d-4c4b-85fb-fd1a78999e1b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3fb56ab2-8ef3-4997-abe1-b7049c422fe5"
        },
        "item": {
          "id": "05d5dfd7-a6ab-4241-a95e-9c79f06d5033",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e66b4051-542b-4058-8d48-0d9d77432954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa61e45a-8fc8-4d03-8bfe-0bb92dc01ab8",
        "cursor": {
          "ref": "4c581e01-5179-4ab0-a766-5c3b0c33c1e7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a1c7811c-ca1b-4aa2-81b4-18d8dd703546"
        },
        "item": {
          "id": "aa61e45a-8fc8-4d03-8bfe-0bb92dc01ab8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bf67e73c-887d-4a6a-bd25-5530bdd1700e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b809d07d-1c00-4ffa-8388-4da5361e064a",
        "cursor": {
          "ref": "efac4209-ef58-421e-9600-c260669bbe3e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "aeac8c54-bb4d-4dbf-98bd-c8def0ef94b3"
        },
        "item": {
          "id": "b809d07d-1c00-4ffa-8388-4da5361e064a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b279cc73-0dc9-4a2e-9b56-cf7e84cff03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c469c9-9336-4d01-bc7e-8cd82d4d7277",
        "cursor": {
          "ref": "0d101766-9a28-4a2a-bc7d-ea42a069d1bc",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5853650a-92c8-4724-b540-ed5dfc2fa319"
        },
        "item": {
          "id": "13c469c9-9336-4d01-bc7e-8cd82d4d7277",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2010291a-a587-4e89-9dcf-fb2fac4ef017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ea5107-dd91-4db4-903f-bd0a26e32d19",
        "cursor": {
          "ref": "c48e059c-1103-42e8-b7b0-78581bdd1c59",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2200969f-58d9-4cc0-b0f1-01916d8b2c32"
        },
        "item": {
          "id": "00ea5107-dd91-4db4-903f-bd0a26e32d19",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "15c985b1-5c40-4dce-beec-1576b8005645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a412f1-f7b9-4816-8bbd-d2ddd8671b97",
        "cursor": {
          "ref": "b47fa5dc-fa4a-4640-9108-00201b744ec8",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "53f186ff-d1f4-4906-aa37-047dd16947a4"
        },
        "item": {
          "id": "d7a412f1-f7b9-4816-8bbd-d2ddd8671b97",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "41befc0c-b510-4ac6-87d4-5ea4607eca59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14491346-59cf-42f5-9fe9-1533d3287848",
        "cursor": {
          "ref": "ae806d31-db00-4f7c-a792-65b19004fdab",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2bf61cdf-5abc-41bb-a263-43d88f7171f4"
        },
        "item": {
          "id": "14491346-59cf-42f5-9fe9-1533d3287848",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ccf60094-d6ef-450e-a2d9-06517302b5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b851f3-5435-40c5-a3be-bd9c9033b8ab",
        "cursor": {
          "ref": "9be3c541-3329-4246-8db6-02e8596ff598",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d26269f6-2915-4104-b626-2887677b1058"
        },
        "item": {
          "id": "b9b851f3-5435-40c5-a3be-bd9c9033b8ab",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3368e6e4-ae40-43dc-bf10-7c212793d98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1de7c9-51a6-4a90-b6d8-48239ea8a062",
        "cursor": {
          "ref": "247a47ae-c13c-4846-beaf-c4243bab875d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b0676b57-8757-43d0-9860-9f0f5a83469a"
        },
        "item": {
          "id": "1d1de7c9-51a6-4a90-b6d8-48239ea8a062",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1f520284-e151-4762-9fbd-1bd86eeba16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19702bd-d2fa-4dce-9bc7-aa2aaee97732",
        "cursor": {
          "ref": "15010d23-61c6-4676-8573-5267ce4b84d2",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "93e64402-5246-4c97-8479-dbe5a379e3b1"
        },
        "item": {
          "id": "e19702bd-d2fa-4dce-9bc7-aa2aaee97732",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5750f4a5-a88e-4d01-9384-acc3f2e6774b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733fc67b-d72d-4489-8ccf-79259600607d",
        "cursor": {
          "ref": "748992d9-f8f6-4256-a714-9067bed6957b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1784ecc3-1755-4edc-8b43-1e0dced72c4a"
        },
        "item": {
          "id": "733fc67b-d72d-4489-8ccf-79259600607d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b422c7da-4483-40cb-90d8-ffd24d6199e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563c21f0-dd56-4fb8-a310-811868d92a42",
        "cursor": {
          "ref": "f1443d4e-9fc7-49bd-9b7d-10d916bc1fe2",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fd8d6f50-e710-415b-b289-6b80609c3e75"
        },
        "item": {
          "id": "563c21f0-dd56-4fb8-a310-811868d92a42",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e28736d3-7929-4e51-a242-6ee15a30aef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08ec01d-ad0a-4fdc-a6a9-ea6120f2fa8b",
        "cursor": {
          "ref": "b73f3e12-72f6-4845-91e4-5f393971f7f3",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e5d9f4c8-cffb-49cf-ba16-99bc420b3ce9"
        },
        "item": {
          "id": "d08ec01d-ad0a-4fdc-a6a9-ea6120f2fa8b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ed02e7e5-ae97-41a4-b653-5d80003a0f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82da0c0-70da-464f-a671-46d2f80f5b5f",
        "cursor": {
          "ref": "dee62bba-3a22-4fa4-9d89-1b9ef56f77fb",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d4faf20f-dc02-4e82-9ac7-96819cb113c9"
        },
        "item": {
          "id": "f82da0c0-70da-464f-a671-46d2f80f5b5f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1fd30a13-3c71-4942-8bce-8d1d976a48f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d12b5ca-beec-48c6-b6f6-dbb4957ae6a9",
        "cursor": {
          "ref": "c98a3367-9d6a-4519-8a3e-0eac6681b0bc",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b8f7ec5a-02d5-42f4-bbe8-c3283eb531ac"
        },
        "item": {
          "id": "3d12b5ca-beec-48c6-b6f6-dbb4957ae6a9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "63732441-37d2-471c-86a3-42281aed712e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105ff3b6-10ad-4966-8679-1ee97f803097",
        "cursor": {
          "ref": "cc7a9d72-7019-4129-ba88-385b3562c591",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1e910ef2-3e93-4d1d-99f4-e21b07d4f659"
        },
        "item": {
          "id": "105ff3b6-10ad-4966-8679-1ee97f803097",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "df84d7fa-d385-41c0-8b1f-b409747f9d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0d516c-25a4-447a-a821-c395a58dda2e",
        "cursor": {
          "ref": "b4414188-2040-4ef4-ac15-2ac566980567",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8f26ade6-c9e3-45ae-989b-0cdf776adfee"
        },
        "item": {
          "id": "9c0d516c-25a4-447a-a821-c395a58dda2e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dcb295fd-5cdf-476c-a1be-55860c57b509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d03c1d-12f8-4b55-a8c4-145dc06b2bc9",
        "cursor": {
          "ref": "0fee2a21-2340-4267-a052-6d9deef364da",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "05203781-096a-4a72-954a-24c8868afeb9"
        },
        "item": {
          "id": "02d03c1d-12f8-4b55-a8c4-145dc06b2bc9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2cb3cdcd-bc69-440b-a72e-2603db1db8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4677f3-ea40-464b-90fc-8792bf4e0c34",
        "cursor": {
          "ref": "9b0804d1-2ae5-47b1-9f5c-dbf0a5532f31",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "642d557f-954e-4ca0-9ef2-cf5d3e9dd04f"
        },
        "item": {
          "id": "5b4677f3-ea40-464b-90fc-8792bf4e0c34",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "80fcff2c-1613-43a5-862a-bb6a6c0f483f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fdfb5f-dcff-419c-af51-c103d38bfa18",
        "cursor": {
          "ref": "8968f836-41d6-4907-8d38-063da35f6eee",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d679ae01-50fa-40af-9b90-9330af9de87f"
        },
        "item": {
          "id": "e1fdfb5f-dcff-419c-af51-c103d38bfa18",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "81202530-6273-4306-bdc2-9c3bd73851a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28b2938-5826-40b2-aa74-02449b33b431",
        "cursor": {
          "ref": "589f0f6c-3654-4306-bbcc-501fa482b153",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "12035f58-34ec-4a72-8abc-ebca53a33f78"
        },
        "item": {
          "id": "e28b2938-5826-40b2-aa74-02449b33b431",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b7e1f744-1242-448f-8598-78dcf7909e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ae71bd-7ee1-43dd-92c5-05aaf40a09b7",
        "cursor": {
          "ref": "fac81eb6-a734-4312-9af9-841a07362987",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b78abd2e-87e0-4840-a2c1-c13bc6297179"
        },
        "item": {
          "id": "33ae71bd-7ee1-43dd-92c5-05aaf40a09b7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fcf0902c-1fec-416b-bac6-cb3838959969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8becdab0-e9ab-416b-a304-ecd3e17311be",
        "cursor": {
          "ref": "187ad608-a39a-4c76-b4e7-ded89326cf61",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b84729b6-a577-48ec-bef4-748cfe2b8400"
        },
        "item": {
          "id": "8becdab0-e9ab-416b-a304-ecd3e17311be",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9f581bf9-6c41-4b15-b10c-25274b865042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6241002-a84c-49fe-9f0b-7d1ffd3b085c",
        "cursor": {
          "ref": "75d19adf-a0c7-430e-9d7a-06069316d7bc",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5807b65c-fc1b-4ae7-a99a-142b81045edd"
        },
        "item": {
          "id": "c6241002-a84c-49fe-9f0b-7d1ffd3b085c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c9bdd58a-da38-4173-97f5-2e69917cf950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ddb1d6-2e17-4f89-ba6d-aae6dca65419",
        "cursor": {
          "ref": "a3df2360-35f7-491b-be69-f64bc793adf0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6f03d777-7e52-46bd-8ea5-e1c29aa9cb24"
        },
        "item": {
          "id": "d9ddb1d6-2e17-4f89-ba6d-aae6dca65419",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f19394c5-7cb1-434c-ae7d-8db9c3b9baa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26163f6-e48c-42cf-af8d-b524f8a069b2",
        "cursor": {
          "ref": "4d05a796-953a-4489-a06f-f2ac2215e789",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a476685e-53d0-4fc7-8869-9fa2fd90144b"
        },
        "item": {
          "id": "a26163f6-e48c-42cf-af8d-b524f8a069b2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3e1c3db7-a310-4bd8-9d74-f295aae81b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8eaf3a-0e3c-481a-91db-dfc02694436c",
        "cursor": {
          "ref": "77ff765f-085d-4cd8-a772-ad6890b11e42",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "664d42e3-d6c1-4373-93e7-7c108a4aa18b"
        },
        "item": {
          "id": "6e8eaf3a-0e3c-481a-91db-dfc02694436c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "10d8f3b8-e23f-4a6a-b1c0-8f61ca466517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33998ea4-476e-4f01-8ee9-a30124124ec6",
        "cursor": {
          "ref": "ffc91e53-ee19-4ae3-b96a-30fc3d066a59",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fdc36b7d-8199-490a-bf5e-54494c39c9f5"
        },
        "item": {
          "id": "33998ea4-476e-4f01-8ee9-a30124124ec6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8f6dfe63-2763-4fd5-ad8b-7929754d05cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5027ed2f-5c97-4e9f-b9d9-fa3a61912af1",
        "cursor": {
          "ref": "63fe5347-01ba-4cdc-a8e6-c78e7c72b5ad",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e6bb2754-7296-458f-9b1b-6d22df8f76e0"
        },
        "item": {
          "id": "5027ed2f-5c97-4e9f-b9d9-fa3a61912af1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e49cbf5b-7cb5-4076-9beb-1559bcd0ad4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4b0435-dc2e-4390-a292-261701be6b2e",
        "cursor": {
          "ref": "5c7679e4-5139-4c8e-b0c1-f903b5713b94",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "426c95c0-4b97-4b26-a0d2-d932523c060b"
        },
        "item": {
          "id": "7c4b0435-dc2e-4390-a292-261701be6b2e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "13c76b81-2632-4bf7-8972-54787869187c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c441933e-da83-438f-886a-fa5fc8112df0",
        "cursor": {
          "ref": "ffce8f19-0445-40b3-b4f9-d072d79a16be",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8eb7c659-2ef2-4699-912c-5ad79b56e538"
        },
        "item": {
          "id": "c441933e-da83-438f-886a-fa5fc8112df0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9129e941-284d-4ca6-a843-1f4f481196be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42d869c-6404-44d5-9dd0-32097bafa2c1",
        "cursor": {
          "ref": "d06915dc-dd34-4176-8d7b-342d59b65f09",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "05ee3b8c-34ae-445a-a443-ce64776e0f95"
        },
        "item": {
          "id": "b42d869c-6404-44d5-9dd0-32097bafa2c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e7ce4f6f-9cf8-480b-82f2-116f24e588e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee6ed7a-c0ae-4fe7-a7dc-70711a491333",
        "cursor": {
          "ref": "18ec2000-054a-4893-946c-3cd0aefd3c7c",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "860ab97f-5b7c-4219-ad74-2a41d951db28"
        },
        "item": {
          "id": "eee6ed7a-c0ae-4fe7-a7dc-70711a491333",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d6dbf196-324f-4ba1-aba3-88123940a0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd2a9e6-2fde-4add-b1d1-6cc6741e9a40",
        "cursor": {
          "ref": "deb247cd-9649-4810-88d7-6d305d082b4a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ec9c99f6-e3a8-44d8-99cd-33738d379d39"
        },
        "item": {
          "id": "ecd2a9e6-2fde-4add-b1d1-6cc6741e9a40",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f20d9aa6-d551-400b-b87d-d935f0fdd449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26be5a5f-9a50-42e9-b594-4af277319e9d",
        "cursor": {
          "ref": "19163ca6-f49f-4a4b-9318-0e89d37f975d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c9892c0f-d23f-4a0f-a563-a2e22d4f1550"
        },
        "item": {
          "id": "26be5a5f-9a50-42e9-b594-4af277319e9d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "81d70b5d-ff4d-4588-a59c-057f7b0e22d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f4c15a-cc9c-4806-a434-923302b45a85",
        "cursor": {
          "ref": "4164ffcc-4972-47e5-9f06-35059590f085",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1782eebd-f482-4b2c-81fa-356bdc9e2f90"
        },
        "item": {
          "id": "a5f4c15a-cc9c-4806-a434-923302b45a85",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e59d93ee-65ce-4498-9612-171e5066b8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e47c62-edd8-471c-9353-b5ae3c455d95",
        "cursor": {
          "ref": "6bb2f5d2-b987-4f74-930c-de46dae35a45",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1ba313ec-1393-49ff-a726-e564e27094cc"
        },
        "item": {
          "id": "15e47c62-edd8-471c-9353-b5ae3c455d95",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3462cfc2-24d3-4381-91a8-560cd92b2e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ebb2e0-fc11-46f6-a420-0cae08fd10cc",
        "cursor": {
          "ref": "a9e1d40a-800e-4f32-8b2c-fa4dd07bca4f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9df5cf80-6db3-424b-b243-a7cba6898a97"
        },
        "item": {
          "id": "d1ebb2e0-fc11-46f6-a420-0cae08fd10cc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4315ac76-3abe-4957-a47f-f58df04ef32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de2012c-0ba8-41d8-8a07-e6974d2d1405",
        "cursor": {
          "ref": "76432a26-c9e9-412d-a43e-32880213189e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a977b264-90cb-4231-97b9-0010f777bab9"
        },
        "item": {
          "id": "0de2012c-0ba8-41d8-8a07-e6974d2d1405",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "94f90839-d2b8-4a07-8025-50c4b30def48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fb471e-a2ec-43c3-a51e-9332d492edf4",
        "cursor": {
          "ref": "0fe91fb8-8181-4ada-8029-34b14454dae8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7e769e31-fd33-402a-8e3e-654a948aaa74"
        },
        "item": {
          "id": "a2fb471e-a2ec-43c3-a51e-9332d492edf4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ff175596-2a98-4bb9-97f9-b7d184b6d06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8e5dfb-cc3d-4c32-94c3-a18d306234c9",
        "cursor": {
          "ref": "64c337ca-a4e2-48d3-92cf-97109792fea1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5b8a06e5-7999-4a2f-b9ae-e704a0978dbf"
        },
        "item": {
          "id": "0e8e5dfb-cc3d-4c32-94c3-a18d306234c9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3e01d8b6-3cf7-4e34-9f20-95b0281277ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95b5687-3ad3-4704-be40-df138801d3b6",
        "cursor": {
          "ref": "04be6195-c56a-44bf-b3a3-c20192c2a705",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "979d8199-85d6-4648-b4f8-75739e1a3b8e"
        },
        "item": {
          "id": "e95b5687-3ad3-4704-be40-df138801d3b6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a12b2926-8141-4e0a-8060-56b1d566b380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e000ae2-55b8-44b5-be94-64c5e5bab10b",
        "cursor": {
          "ref": "a94b566a-4175-4aef-af18-7247bac198dc",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "439765d1-8ed6-4d72-8c77-f248e0b0d0ba"
        },
        "item": {
          "id": "2e000ae2-55b8-44b5-be94-64c5e5bab10b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b4ac7121-776a-4293-bb0a-5e01049fe347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddc65de-38d1-4d16-a341-b652cfbe0392",
        "cursor": {
          "ref": "bbcf43a2-a4ed-4544-bdee-71b5e32704aa",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "371a6671-ff2b-481c-b7fa-b2ac0dd95081"
        },
        "item": {
          "id": "dddc65de-38d1-4d16-a341-b652cfbe0392",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "af2075c4-cfa5-402a-97ea-33557bab6a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442b9604-4b12-4a70-b4f9-157ad9003615",
        "cursor": {
          "ref": "7d52956f-2ffc-44c9-95e2-ee619f367b7a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "29df5325-7bd6-4ad6-b685-c5bb7747155a"
        },
        "item": {
          "id": "442b9604-4b12-4a70-b4f9-157ad9003615",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f746c928-f406-49ae-bd71-dcc483ea2d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3511fe5-8aba-49ce-ad56-d254f18b507c",
        "cursor": {
          "ref": "268a1309-c627-4bbd-8945-23662d05db89",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "42851456-0aa5-4f52-b85f-24650a286610"
        },
        "item": {
          "id": "b3511fe5-8aba-49ce-ad56-d254f18b507c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "552a220e-52fd-4954-8e3c-3ac7af9e3b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d090b9-7abc-4977-b840-f368d6667257",
        "cursor": {
          "ref": "3abe3809-fdd6-48db-9cdf-640c38299a34",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6dc208f3-896b-4e0f-8324-dec8ef486285"
        },
        "item": {
          "id": "d1d090b9-7abc-4977-b840-f368d6667257",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9bfab2ed-6338-4341-91e6-c31b7a1e772e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d48ea16-cae3-4716-8ed5-6d6b6f922149",
        "cursor": {
          "ref": "44017860-2001-49f7-857b-0b739320ea63",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "043099c8-bfbc-4637-a326-9df12d4c2a5b"
        },
        "item": {
          "id": "5d48ea16-cae3-4716-8ed5-6d6b6f922149",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9be4b704-588e-4ea3-8a91-66cf9330f428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06202484-b437-420c-954a-1150906beb27",
        "cursor": {
          "ref": "c64e88ca-a2b4-44ee-9a02-8d9d13f6d41b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "49eef7ea-56f0-44ca-b75f-02440537c442"
        },
        "item": {
          "id": "06202484-b437-420c-954a-1150906beb27",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "05a6f024-70c7-423b-acf1-18ee168bbb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20213eb5-e637-4faf-893a-5f397e10aaa2",
        "cursor": {
          "ref": "67e72b99-31c3-40c1-91b4-55b5473ad8f2",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "73fe9d82-c7d4-4ef0-ad6e-1a27bd5a87b6"
        },
        "item": {
          "id": "20213eb5-e637-4faf-893a-5f397e10aaa2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d3c57643-ae76-452b-a905-438e9efe4540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acdf0fe-73c2-427d-9d94-a32fc3976ef0",
        "cursor": {
          "ref": "60e514ef-3741-464e-8446-e8268beeeda0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "09db88cb-3a01-487b-967d-09ecec4bc4f4"
        },
        "item": {
          "id": "1acdf0fe-73c2-427d-9d94-a32fc3976ef0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cc421454-70de-49ef-a160-7d7c7e3af7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8c58ba-7e16-4efa-9d2d-5d5e2d1a58e1",
        "cursor": {
          "ref": "ea93ed29-f0fc-49f8-8645-ebaf9097ca34",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "da54455a-1ee7-4791-9e1d-e7af02329b6d"
        },
        "item": {
          "id": "0b8c58ba-7e16-4efa-9d2d-5d5e2d1a58e1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "34be2ccf-74a7-4823-bc72-f5183e4a5014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1aa4e60-7adf-4b6e-9304-4de876fe7a40",
        "cursor": {
          "ref": "ca4595fd-e599-40b6-a4ac-539a13562889",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "39c407eb-5c88-43bb-a1b7-85bef10e86dc"
        },
        "item": {
          "id": "a1aa4e60-7adf-4b6e-9304-4de876fe7a40",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d2cb7d3d-7764-409b-9c94-72805f5d5753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2447748c-1edc-40dc-ad7a-809c509d1ccc",
        "cursor": {
          "ref": "0bb34f97-470d-4ee7-ade0-f2155d928a55",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b66530bb-00bb-4821-8787-30ac7e4ae9b8"
        },
        "item": {
          "id": "2447748c-1edc-40dc-ad7a-809c509d1ccc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3d0d4e1d-8c0a-484d-b33b-ae6271fa4d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2886991c-4063-444a-a2ca-9fb82208de65",
        "cursor": {
          "ref": "05e6ed66-50c0-4132-b329-f6a04c50741c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5e906780-7b1b-461d-b05b-458331c23883"
        },
        "item": {
          "id": "2886991c-4063-444a-a2ca-9fb82208de65",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d8f098db-cf02-4954-9efb-7ac8ad6700c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ff538f-90dd-4acb-a9fc-80197ea3442d",
        "cursor": {
          "ref": "987cf875-8159-4624-8858-5d24e523afe3",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2f4f01c6-bdaf-4fb7-84d6-d0970c4b6afd"
        },
        "item": {
          "id": "f7ff538f-90dd-4acb-a9fc-80197ea3442d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "34867686-9a0c-4690-b209-de6553bcb260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f92d6c-dc35-4044-9af0-ce22ed98530a",
        "cursor": {
          "ref": "34210dda-e9df-4484-8e4b-ce3ef0a97f54",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "edb03836-9942-4402-b860-ae3d0b021642"
        },
        "item": {
          "id": "f4f92d6c-dc35-4044-9af0-ce22ed98530a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2ceb82cc-2b1d-4129-b79f-0c2aa350d0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e30db84-c6f0-4f23-b02c-11ed18355ed5",
        "cursor": {
          "ref": "e86725f0-7407-4d9f-9ece-a0d8cfe26407",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3fcb9a55-9b68-41e8-b658-c1eca232a9b8"
        },
        "item": {
          "id": "0e30db84-c6f0-4f23-b02c-11ed18355ed5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "503ef688-dced-410f-8d35-aafa1609f521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18da0188-5b47-462e-88f5-5391b6639f92",
        "cursor": {
          "ref": "75d414d9-65d4-478e-84de-b3767c39b6d7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "54148f5b-1383-4201-affc-c0e19d6c2c4a"
        },
        "item": {
          "id": "18da0188-5b47-462e-88f5-5391b6639f92",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ccae84b8-ae09-4b13-a58f-2cc173004374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0af3ef-40be-4134-9dcc-e3eb7a04b320",
        "cursor": {
          "ref": "f23c631c-8902-46a8-b474-ee3e0f10e70d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1a504c92-852d-4d0d-bd53-5f0189b27cd6"
        },
        "item": {
          "id": "7f0af3ef-40be-4134-9dcc-e3eb7a04b320",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1debc518-5d16-4052-802f-b8ca61a7fa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9466d8-ca3e-4197-a4ff-4d0b979d8c79",
        "cursor": {
          "ref": "b96c4d45-7a97-41df-ae5b-646a0651719b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7a492800-ac5f-4dc3-88c3-bd20879b52b4"
        },
        "item": {
          "id": "6c9466d8-ca3e-4197-a4ff-4d0b979d8c79",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ec68a585-a8a1-4372-a4aa-0506ddb2251e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24dde22-cf0e-4e6e-84c0-1a07237e8d8d",
        "cursor": {
          "ref": "cd0897e1-7111-4c53-99ac-6bd7a19d4e7b",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "db0c9cec-b383-4fdb-b817-d4bb9cf3ee8e"
        },
        "item": {
          "id": "b24dde22-cf0e-4e6e-84c0-1a07237e8d8d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c401bbcf-1393-4061-a37b-60c40da971d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d6d540-ef47-455b-b831-a62aaf105243",
        "cursor": {
          "ref": "26e973f1-8e3b-4f91-a7c5-33a156a7f300",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7ec34b9b-6544-4694-b82d-0f0969c9ea92"
        },
        "item": {
          "id": "60d6d540-ef47-455b-b831-a62aaf105243",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "584ef3fd-f2d9-4e0d-952f-4eae4f9cdfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94379fab-409f-46cb-80e1-ae02ab8de045",
        "cursor": {
          "ref": "b5c16dc9-4c2a-42ac-ac2c-2f5dfbccea4f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c3ac9824-678f-4a7b-afab-1c71036a9f3f"
        },
        "item": {
          "id": "94379fab-409f-46cb-80e1-ae02ab8de045",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3e0bbcfd-6ebf-4e22-a6d2-cf24e5fb2ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c621ca-a77f-4bd2-b4bb-e9dca1a6bb73",
        "cursor": {
          "ref": "af683dab-4586-4fdf-8df3-f3fea10c0918",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "15b022d7-7143-483e-a458-b2bb30e750fd"
        },
        "item": {
          "id": "13c621ca-a77f-4bd2-b4bb-e9dca1a6bb73",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c8cfd449-6de1-4448-a143-b47fcf48d67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff70911c-77be-4071-8640-4562ebbbd128",
        "cursor": {
          "ref": "d54d536f-44f1-4ebf-a1df-550d7452f94d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "de51ce13-8764-4153-b3d3-b190a38ff9aa"
        },
        "item": {
          "id": "ff70911c-77be-4071-8640-4562ebbbd128",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1c848b65-751d-4e5e-965d-4f8bd3a5988e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51061296-73b3-4fb2-8ec2-260470479e09",
        "cursor": {
          "ref": "fe187ae0-7149-43c7-8278-c246604f20fd",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5f55f4e9-cf90-4568-8b2f-11fea55a43eb"
        },
        "item": {
          "id": "51061296-73b3-4fb2-8ec2-260470479e09",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6ae3c51b-d211-49c5-9e26-b0533f50fac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6fe45f-9aaa-464c-bb86-537add4dc70f",
        "cursor": {
          "ref": "07fbc004-add1-4778-b7f6-dbe8d0ac6b28",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "90e2d803-4edc-4146-acff-464760d6a869"
        },
        "item": {
          "id": "5e6fe45f-9aaa-464c-bb86-537add4dc70f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c6df3350-9daf-46fb-be32-d1f64371cc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "77dcc287-a161-4da8-8adc-e9de97a7126e",
        "cursor": {
          "ref": "9c98ac4a-2c5a-4399-8fa6-c45cf7240276",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9035ddd7-ef20-4392-b238-3a0eae114ee7"
        },
        "item": {
          "id": "77dcc287-a161-4da8-8adc-e9de97a7126e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4f3cc1ce-4fc0-451c-ae1d-e9e5597445c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7223c7db-fbfb-4c59-b05f-ab1651d320c2",
        "cursor": {
          "ref": "d380606e-c422-4077-b93b-d4ff7d35977d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2b6affbe-b1e6-40e2-b8ba-f3b7dfa5e363"
        },
        "item": {
          "id": "7223c7db-fbfb-4c59-b05f-ab1651d320c2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1430a2c2-52e3-489e-87cf-3926c5ac9335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "bcb47376-3bdf-4589-bdb1-174d14d1e0e4",
        "cursor": {
          "ref": "24ef3d38-17a2-49a8-abdd-62d8809b5df4",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0178a812-de2c-4618-a758-5a98fb3ab9d8"
        },
        "item": {
          "id": "bcb47376-3bdf-4589-bdb1-174d14d1e0e4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "88c4448e-5b63-4bf9-aebd-405b84aeeca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5def3cd0-a614-40e4-b4a9-76e431e6ebe5",
        "cursor": {
          "ref": "914a77cd-041e-4db4-a8d3-b403fce0c80f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0413bc26-9be2-4483-ba81-7e36d6848847"
        },
        "item": {
          "id": "5def3cd0-a614-40e4-b4a9-76e431e6ebe5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5d9b250d-a937-4f1b-b88f-5889c7cac8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b16a828d-dc15-4fa3-a478-b606e61ee86c",
        "cursor": {
          "ref": "efea7d9c-858e-493a-a544-91e65eae070f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "20c7ab2a-74c1-4b24-a3e3-654f71749645"
        },
        "item": {
          "id": "b16a828d-dc15-4fa3-a478-b606e61ee86c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "72ce8d68-25f2-44d8-9f1c-aed05b80c504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f421cb18-0ae5-46d1-9e90-233578c290ad",
        "cursor": {
          "ref": "cfc496fe-20ee-44de-91a3-72082c189f4b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0f298731-96a0-4301-a233-87fd6c4347f8"
        },
        "item": {
          "id": "f421cb18-0ae5-46d1-9e90-233578c290ad",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d69399bb-125a-42e1-8c82-eafea4c2f89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c2d43611-5bc9-47f4-8ef0-74b161750c53",
        "cursor": {
          "ref": "275c9019-d6ec-4ea8-9855-fa8c94b3f51a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3cc3f569-1e47-4061-9ae6-6fd6f647f56d"
        },
        "item": {
          "id": "c2d43611-5bc9-47f4-8ef0-74b161750c53",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4673bb35-2c25-4d6c-b1dc-4c298783d848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2cb109-9681-43f2-bb3e-cad2dccc7543",
        "cursor": {
          "ref": "9dfb1ae4-6fc2-4716-85c1-6c3ca7d2df20",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bc8006dc-f0c3-4d49-baa3-11cec04bf24f"
        },
        "item": {
          "id": "ae2cb109-9681-43f2-bb3e-cad2dccc7543",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c0568e71-93a7-4377-b0c6-7c32c1289217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f0930f-b2d0-4267-99e2-11aa1023cdca",
        "cursor": {
          "ref": "30628869-9a1f-4e22-a6cc-b94c4df9effe",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9840f751-a56c-4e23-bac3-9b0eb040098b"
        },
        "item": {
          "id": "11f0930f-b2d0-4267-99e2-11aa1023cdca",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "901943b2-25fd-42cf-adc1-ba46ec1abf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf9b344-b842-4894-b4bf-e33c06045c4f",
        "cursor": {
          "ref": "c168e783-233b-4ff5-87a1-6c896f0b7cb8",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fbfe0c44-ab06-4477-bbbb-5fc0c2dad010"
        },
        "item": {
          "id": "caf9b344-b842-4894-b4bf-e33c06045c4f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "18e3cd03-ef58-462c-8ee7-0d5c3a2826cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a35e99-bf22-44a1-9454-a3c672e2d832",
        "cursor": {
          "ref": "465a2e86-471d-4043-b935-80cb7a86ff8c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "85a7badc-0b71-4ea2-9f1b-404fdb530f9c"
        },
        "item": {
          "id": "84a35e99-bf22-44a1-9454-a3c672e2d832",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "674f7412-8a42-47a3-9b29-6d718f79e71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c2571f-817d-487b-9cc7-8a0bbe4b85b3",
        "cursor": {
          "ref": "e9db09cd-9f94-4bda-b78e-4f7998a4c70e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "20442d30-2c12-4721-9e90-ea0561d867f3"
        },
        "item": {
          "id": "28c2571f-817d-487b-9cc7-8a0bbe4b85b3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7b22cf73-f13a-4ec3-bb5e-65749627cd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc14485-ceda-4528-8df6-d7d21c857a1b",
        "cursor": {
          "ref": "0f02b9ec-428c-4efb-928c-458e4ac8ac5c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "55f1a742-8ca0-48d4-b0e8-1aa7aabe287f"
        },
        "item": {
          "id": "1fc14485-ceda-4528-8df6-d7d21c857a1b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6041658f-a98d-4e45-b434-73ad6b1e5cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377ec8c7-d53b-409d-a56b-b839d3e6f633",
        "cursor": {
          "ref": "91e0ce21-c868-45ef-a943-509a8b83ba61",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a5708428-df19-4bb1-8fa2-c5de9322c768"
        },
        "item": {
          "id": "377ec8c7-d53b-409d-a56b-b839d3e6f633",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "47864137-17f9-4ec1-9388-fad95f86fe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8727fdb0-df49-4bc6-9ee3-fc586a368af5",
        "cursor": {
          "ref": "c0437eae-b3e3-4b74-959a-3e14656bd150",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0d4d41a4-bb38-4f00-80c2-ac9e88be93ec"
        },
        "item": {
          "id": "8727fdb0-df49-4bc6-9ee3-fc586a368af5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7668f83c-3adc-4f63-a6a9-0718b9af4702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c37f49b-56e5-4764-a447-3f6183ce4304",
        "cursor": {
          "ref": "32dc4552-ace2-4d2e-b6f5-fe7d5160f106",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "04e9e6a8-7fbe-49a6-84c4-8317442b34c0"
        },
        "item": {
          "id": "1c37f49b-56e5-4764-a447-3f6183ce4304",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4b3471f4-3208-4f52-bc01-3aeaf32d42b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838dc5a3-2812-47b8-b7fd-8ebf083a926f",
        "cursor": {
          "ref": "0a74e5b7-f501-4ccb-90a3-22e4627deb73",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f9eb938d-7cc7-451c-93d6-d1ce6d7da994"
        },
        "item": {
          "id": "838dc5a3-2812-47b8-b7fd-8ebf083a926f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "43f7ae9e-f973-4ea5-99cc-26aa71d486cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90b2da9-a8a6-4777-861a-67185e98201d",
        "cursor": {
          "ref": "b640cf9f-1e45-454f-b862-017aa3bca2da",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "39fb9bc3-ef25-4d7c-bce2-0474946ba7f4"
        },
        "item": {
          "id": "d90b2da9-a8a6-4777-861a-67185e98201d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9d312668-659f-4344-94b3-780bc92ec1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f7d2cd-775c-4875-9222-732c020624e2",
        "cursor": {
          "ref": "9c263fd0-3eca-4dcb-b5a7-d9c2a74de5bd",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ba048520-3085-4836-8847-08324263b631"
        },
        "item": {
          "id": "b2f7d2cd-775c-4875-9222-732c020624e2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f2965760-172f-4e94-8260-01831ade6383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b037cba-cf41-4182-8184-a0312c1a1644",
        "cursor": {
          "ref": "b0111da9-21f8-41df-a949-ca172a9228d5",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "18b652a1-d2f5-4d82-8b1d-863c8d5f5497"
        },
        "item": {
          "id": "8b037cba-cf41-4182-8184-a0312c1a1644",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "40d092ef-f041-4ada-a07a-3a56d52b4d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c7f21e-f962-4a38-b79e-424dcaf2a936",
        "cursor": {
          "ref": "7a51c67c-498a-4929-8d91-e581b8339da7",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d2e0d85c-d284-4c8d-b2a7-4d919980f91a"
        },
        "item": {
          "id": "74c7f21e-f962-4a38-b79e-424dcaf2a936",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "77faaa2f-a53f-481c-b699-6a559afeba17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0350491-0690-4f94-93f6-c3a6969e303d",
        "cursor": {
          "ref": "570db9d9-c3f9-45b2-9e57-c7a6619da1ca",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7b3ee8ee-27d7-40b1-a23c-f1c2eccd61be"
        },
        "item": {
          "id": "a0350491-0690-4f94-93f6-c3a6969e303d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "587e2f30-25d3-4fbe-a4d8-40d23be62ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ec8fd9-c6a6-47a0-a68e-05979eb84d95",
        "cursor": {
          "ref": "b63a191f-7530-4f39-a295-fd083aa7882e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f5301f03-d7c6-47c0-aea1-4ddcd4bdfdd5"
        },
        "item": {
          "id": "95ec8fd9-c6a6-47a0-a68e-05979eb84d95",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "86ebe966-1199-4e75-932d-aab445855ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400c39cb-c2cf-4ab2-85cd-d6461351a037",
        "cursor": {
          "ref": "5c96b20d-05b8-4be1-9feb-c32792f20e73",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b188d4e6-5204-445d-a9c8-c934d350689c"
        },
        "item": {
          "id": "400c39cb-c2cf-4ab2-85cd-d6461351a037",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c59e1ad3-c4cf-47ae-b937-e496deaeec7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0939a55-b8ea-4226-8e0d-43e6829b62f4",
        "cursor": {
          "ref": "ec2169f5-9b3d-4158-ad3a-8cd47e0217a0",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "53b321c5-4250-4e93-b529-d093586b7402"
        },
        "item": {
          "id": "d0939a55-b8ea-4226-8e0d-43e6829b62f4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3dd9ae7a-e341-4427-8b6c-c5d03aaa6f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d710965-9a22-4e0a-8a0a-cba6cf4b8280",
        "cursor": {
          "ref": "c1ea5f03-e050-4d87-b282-1677f72c61d3",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "90cc834c-49f8-452e-b819-d8af12f042a4"
        },
        "item": {
          "id": "3d710965-9a22-4e0a-8a0a-cba6cf4b8280",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b968abd5-54cd-4c22-a466-8fbe37e13574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740bf6d3-981c-450a-b2da-6e6546f7bcab",
        "cursor": {
          "ref": "520444d0-6707-4f33-b039-7b3bbaf4b576",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1e849dee-724e-4056-aae8-03ec13de389a"
        },
        "item": {
          "id": "740bf6d3-981c-450a-b2da-6e6546f7bcab",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dbeada9d-a25a-4f97-b6ae-a7fb13cf7eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb18325-1803-49e4-af65-996352ee7768",
        "cursor": {
          "ref": "65740cfe-883d-411f-8435-fa8918da4e52",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1447447a-3597-4a98-8e30-c1ebca87001d"
        },
        "item": {
          "id": "1cb18325-1803-49e4-af65-996352ee7768",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "40a98843-781b-4b0f-9825-d3380ebba37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f35572-72fc-4900-8d2c-6668dc6bed46",
        "cursor": {
          "ref": "8ae03bc8-0370-442b-ad6f-f31874af2629",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3102dc0e-1d51-4c97-b8bd-a2898e1529fb"
        },
        "item": {
          "id": "76f35572-72fc-4900-8d2c-6668dc6bed46",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a3f88ad7-5830-4bda-b3ce-d69c058b510c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212b234e-b25b-4017-9467-a688b3786191",
        "cursor": {
          "ref": "c32985be-fe16-4969-8bd9-4f67b6336fc9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a9664bc4-3b63-4557-93c6-3ca2155282ca"
        },
        "item": {
          "id": "212b234e-b25b-4017-9467-a688b3786191",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0497e201-7f77-40e8-b852-b2de117f8fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6fa718-4f86-47cb-ad07-b343b591f2bb",
        "cursor": {
          "ref": "6ed37a84-a6cd-4d0a-8268-a24ad9392140",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5882f29e-4d3c-4a89-965b-6788fb1de77a"
        },
        "item": {
          "id": "8a6fa718-4f86-47cb-ad07-b343b591f2bb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dd44a7c8-991f-4177-b65e-b5513a924950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afef2bf1-061f-4a73-86bc-5c825de4869a",
        "cursor": {
          "ref": "29d32e53-e924-41e5-9215-d71802a59a4e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c0ddca4e-8d6c-4a4a-999a-8cc1023dd942"
        },
        "item": {
          "id": "afef2bf1-061f-4a73-86bc-5c825de4869a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8f7bb251-79a5-4183-997f-d8b13168c9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3221c0f-f617-4033-a520-92babbd9134d",
        "cursor": {
          "ref": "d77d22b9-a0f0-4e57-84b1-2dce2f484afd",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "09df9a1b-6055-425e-942f-a481ae66d7bf"
        },
        "item": {
          "id": "a3221c0f-f617-4033-a520-92babbd9134d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b3581520-efa9-4966-9d55-72b23781b9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980e4c37-ac93-4f19-966e-8b6a4429a2dd",
        "cursor": {
          "ref": "6ac34798-5af8-4c76-81f2-e377b618fb37",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "076dd31f-3baf-4afb-89c0-241c763e97cf"
        },
        "item": {
          "id": "980e4c37-ac93-4f19-966e-8b6a4429a2dd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ec8e2aac-2fa0-48a9-9758-ec0122b31a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfe286c-c32d-4ecd-b923-0ee9b4a1a05a",
        "cursor": {
          "ref": "5764d4e6-1f76-4f9e-a1f5-c659eb8596e9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "57759314-66ce-4178-be33-ea0c52451038"
        },
        "item": {
          "id": "4cfe286c-c32d-4ecd-b923-0ee9b4a1a05a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "883f7aed-5840-4506-bf8a-2c4a94de537c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff3c187-aff4-42e8-a5e0-6db736b9ce22",
        "cursor": {
          "ref": "625f7839-5d79-44d7-b597-5722ba8ea852",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2e11e5b4-91ca-48cc-ad5d-3a21b976f640"
        },
        "item": {
          "id": "fff3c187-aff4-42e8-a5e0-6db736b9ce22",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "31d59e5c-16d1-4e15-9872-e4b89d1928eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f95f923-ca9e-4a46-9c16-6d774ce89b7d",
        "cursor": {
          "ref": "9c585265-434b-4f89-b035-3d2872f77b0c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7a7033b7-15c6-4aa0-9fe1-9aa8dc6c8c70"
        },
        "item": {
          "id": "9f95f923-ca9e-4a46-9c16-6d774ce89b7d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9ebd5ed2-0916-4b82-90ed-1ae18fda1f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d5f266-50ef-4c35-8460-75fd813514bb",
        "cursor": {
          "ref": "ff3545a4-99b0-48c9-8ef7-54f879a0d6fd",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "318ba316-2338-4e48-b40e-767c2dd29f38"
        },
        "item": {
          "id": "e7d5f266-50ef-4c35-8460-75fd813514bb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b31e9f50-86dd-4fd2-945f-182a4b04abde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4c6b04-1e58-4ce8-b06a-b7e2549ca84f",
        "cursor": {
          "ref": "2da00a75-6c60-4e63-a8bc-8f800df136cb",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "753cce3b-e33e-4a22-8fef-b14d3d82197b"
        },
        "item": {
          "id": "0a4c6b04-1e58-4ce8-b06a-b7e2549ca84f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "47439ea0-5dc1-409a-bc36-0e3dfa36e9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b02a36c-89db-4b90-8d57-45e370319c65",
        "cursor": {
          "ref": "440bcabc-c40b-460e-bb0e-d98d16b48736",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "758303b2-9b1e-48f0-b61c-f81e8a0c6d50"
        },
        "item": {
          "id": "9b02a36c-89db-4b90-8d57-45e370319c65",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1adbf608-9916-4743-8f39-001f1ce6e030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdbb4e6-4b71-47ce-bf74-240c4e5478f2",
        "cursor": {
          "ref": "6ca5c950-0557-4027-a8f6-a867ca63f5ad",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7049ae6c-3f7f-40b9-8dc0-0bbb1c97b9e5"
        },
        "item": {
          "id": "7fdbb4e6-4b71-47ce-bf74-240c4e5478f2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d71caf9d-4dbf-416d-9d0e-9066c3793913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b981dbe3-4114-4489-ad88-024968ce0969",
        "cursor": {
          "ref": "bd1e8d54-4472-477f-baf2-5d413514787d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c37bc5aa-11ea-46b4-9901-6b3de1a6e51a"
        },
        "item": {
          "id": "b981dbe3-4114-4489-ad88-024968ce0969",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1f1ce343-43a8-4307-9663-a2449e8d10fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770e7104-c4a3-4da6-845d-5b9c275878ea",
        "cursor": {
          "ref": "ca1114ea-1948-4575-9d8b-adae721498af",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "42899a58-110f-4e55-ab6a-d49af2dc8ca0"
        },
        "item": {
          "id": "770e7104-c4a3-4da6-845d-5b9c275878ea",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b1b0e338-7288-4859-b44b-46249791ee72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee67a18-806b-4c81-a571-d8d9d8c0e16a",
        "cursor": {
          "ref": "e91f774e-119f-4c64-82c6-6db514589adf",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ab16786e-02fe-4cf6-af36-a0faec7f04f8"
        },
        "item": {
          "id": "2ee67a18-806b-4c81-a571-d8d9d8c0e16a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bd0128fb-095e-41bc-8e70-730ae55f6d14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d046e1-5cd0-4844-a233-ea1dbbb8ccee",
        "cursor": {
          "ref": "9b79eda5-55d4-4974-850b-250ba66bc17a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "058c9ee2-52d2-43e8-b2a7-5446467edcd3"
        },
        "item": {
          "id": "02d046e1-5cd0-4844-a233-ea1dbbb8ccee",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5e75faed-c73a-439d-b2f2-c3c775b8d6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dadf51-df31-447d-8682-e762dba8cc1a",
        "cursor": {
          "ref": "8b43c9ca-2664-45d8-b1c0-92674c0e1fbd",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0830d3e2-d5ab-4068-a454-b6a3c4dac4b7"
        },
        "item": {
          "id": "c1dadf51-df31-447d-8682-e762dba8cc1a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "df49f151-8bb6-4274-9fa9-1a7b8eda6e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79783280-bdff-4ee7-9eff-adf97ebe5cc4",
        "cursor": {
          "ref": "a5b97e00-2a08-4eec-a06f-8ee707397eac",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "89f888e2-3b34-40bc-87f3-dab4a5b17bce"
        },
        "item": {
          "id": "79783280-bdff-4ee7-9eff-adf97ebe5cc4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6c283861-2817-44e8-a38c-6bada5357b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a76787f-244d-4c43-8c6c-6ddb3fc5ffe2",
        "cursor": {
          "ref": "89004ead-fef8-45fb-81e6-9c57d0c7cacb",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9777c025-1ba9-4f51-abbe-e3157d535b66"
        },
        "item": {
          "id": "0a76787f-244d-4c43-8c6c-6ddb3fc5ffe2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "61210d4a-6003-4245-9469-1fdd642de53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75d357c-5fc2-41dc-ba8a-4460e3b4efcd",
        "cursor": {
          "ref": "f1e96eb8-54b9-41d4-807b-43bd4ae358ae",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8a7adceb-0b85-4647-8132-e0696684c35f"
        },
        "item": {
          "id": "d75d357c-5fc2-41dc-ba8a-4460e3b4efcd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c7079f5c-a9f2-43a9-859c-bbd1670c81f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a7ba33-b9fa-4bf3-9ff9-acbad78e02c7",
        "cursor": {
          "ref": "9e4f5b34-36d1-4a4c-b0e5-0d73b61a3339",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "207a6eb0-e46f-48e5-9159-c4920ffe86df"
        },
        "item": {
          "id": "e5a7ba33-b9fa-4bf3-9ff9-acbad78e02c7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "daf893c6-a738-41a5-b28b-6af85089a537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f54f52-d02a-464e-a35e-20d01c3d30ec",
        "cursor": {
          "ref": "59525091-0fd1-4464-a5a1-ef38b7b07168",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ecc20a88-75b5-4325-a965-bbc27bfa7e27"
        },
        "item": {
          "id": "65f54f52-d02a-464e-a35e-20d01c3d30ec",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c92ffefc-1599-48b2-993b-be3e2a6dfe86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af7b5a5-765b-4315-b060-284f48a0f091",
        "cursor": {
          "ref": "8e6eb2b3-96f3-44b3-b801-3cf129ee8da4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f118da0c-9c48-48f2-bc7f-4f218e79af47"
        },
        "item": {
          "id": "9af7b5a5-765b-4315-b060-284f48a0f091",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e97954e9-2f80-4b20-bcbb-e8efda4e5a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc05b27f-a3b0-4deb-98fd-761655eb61c1",
        "cursor": {
          "ref": "b821f03a-a6e8-4485-a173-605b66ea9342",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "75d03f77-689a-4a41-9328-f073fb35ba26"
        },
        "item": {
          "id": "dc05b27f-a3b0-4deb-98fd-761655eb61c1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "111e8fc0-959a-4aec-8a97-09262dcfead9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a19282-8716-40f9-a3d8-2569aad08777",
        "cursor": {
          "ref": "2c1b57cb-9ee1-4bfa-a0fb-6c8758c7a49c",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bef21402-dff1-4624-9a18-b5d520dcaac9"
        },
        "item": {
          "id": "21a19282-8716-40f9-a3d8-2569aad08777",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "28686542-03b3-458d-a491-8fd6a57eceb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db92b2e5-151c-4d4c-92c9-44193d83c119",
        "cursor": {
          "ref": "f8639d8a-e5d0-4314-9775-03d96db8328e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ec3d6666-7f13-4ab6-99f6-f51c27cc9590"
        },
        "item": {
          "id": "db92b2e5-151c-4d4c-92c9-44193d83c119",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "288eebfe-9ae1-4e8b-9b75-a6262d8b97e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6595523-cd44-4deb-9ecd-b0d3578e65c0",
        "cursor": {
          "ref": "501b5f97-7e52-482b-abbd-65b2fb262517",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "79788350-7358-4336-994d-1992a824850b"
        },
        "item": {
          "id": "b6595523-cd44-4deb-9ecd-b0d3578e65c0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c53fbef6-922e-41ef-95c0-ab28e6053c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7341e713-0a21-41ba-9734-a471ead8935f",
        "cursor": {
          "ref": "804e21de-c26b-41f2-9e43-d5cdb4d081f2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e3da69e1-3e0e-4ede-9118-1209ef6fa364"
        },
        "item": {
          "id": "7341e713-0a21-41ba-9734-a471ead8935f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "707dea88-647f-4fd3-8419-5d05a6cd1359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92e8e31-16e2-455d-bb0f-a8a0b5a6744f",
        "cursor": {
          "ref": "cefbc0de-929a-4aad-a06f-58f66d979c8d",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c2ebe5b0-48e2-4c37-a7a0-90ebed7c6d24"
        },
        "item": {
          "id": "b92e8e31-16e2-455d-bb0f-a8a0b5a6744f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b9b6fdd6-1266-4da9-af3b-120ed93a018e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d877b71-31d0-4360-a9d9-7c3116c8239e",
        "cursor": {
          "ref": "3abe8aa2-84d9-4efe-9fbc-9a345bbba4e0",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4a821d79-2fe9-4f02-bdf7-83cd42b6b572"
        },
        "item": {
          "id": "2d877b71-31d0-4360-a9d9-7c3116c8239e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "91cb38db-11bd-4118-895d-0b87b7fa9ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0a5e58-a175-4747-bf0b-710f812bdd40",
        "cursor": {
          "ref": "efd88d9a-1784-47cd-a1f7-e8ff868c4bb3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ec89b9ba-abe3-41be-a1cc-3daf49c712ad"
        },
        "item": {
          "id": "3e0a5e58-a175-4747-bf0b-710f812bdd40",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d637f1e1-0bb4-431c-ab8e-cc6616c36ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09da9e16-00fa-4000-8c28-5b9689b32a46",
        "cursor": {
          "ref": "b07898ad-e95c-4a09-a25c-ab9c30a93a34",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c8be2f3f-dd86-400d-b0da-8dbfd0b060ee"
        },
        "item": {
          "id": "09da9e16-00fa-4000-8c28-5b9689b32a46",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9fa68d0a-0845-4724-b07a-6319177db568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa63078-c296-4498-a18b-f73c4df67d8a",
        "cursor": {
          "ref": "df2022e3-4f3f-46c6-8efd-d7841b8876d2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e009e031-7b0b-4494-9732-e15704628213"
        },
        "item": {
          "id": "2aa63078-c296-4498-a18b-f73c4df67d8a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e24f9d3a-fc9c-4525-9676-33829b5dffc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de644fec-83a0-4872-b1fb-f08f0c812d09",
        "cursor": {
          "ref": "8cc2b409-2e28-4777-aebe-11ba6062e58e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e6a10cd2-b54a-48cf-b92a-2f1f7b3dcb7c"
        },
        "item": {
          "id": "de644fec-83a0-4872-b1fb-f08f0c812d09",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c6cd5e0f-098d-48bd-abde-852c49735549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27d42e9-a242-4de7-bc3b-f0c4f37a4d27",
        "cursor": {
          "ref": "3c80a82c-3163-4312-b7b0-e69815a0dcfb",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "aff8e6f0-c415-45a5-a509-a024d6fda554"
        },
        "item": {
          "id": "a27d42e9-a242-4de7-bc3b-f0c4f37a4d27",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7cf4e049-de72-4589-a1c8-af5828349a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5487ada9-8019-47cd-b009-be8269775f3c",
        "cursor": {
          "ref": "a557d8a5-72dd-4e44-850f-34b3a34203e8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "33192668-7371-4b88-881e-a923a0cd40dc"
        },
        "item": {
          "id": "5487ada9-8019-47cd-b009-be8269775f3c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "506cce13-5d41-4dde-bf04-1ab9fe1ad778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0626075d-cf85-47c2-9992-6f4814629d54",
        "cursor": {
          "ref": "1ec44005-c9c8-480b-9ade-c287ccfd106f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cfe543a2-0c91-4586-b49a-25581f3bc1d8"
        },
        "item": {
          "id": "0626075d-cf85-47c2-9992-6f4814629d54",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "13299e94-6377-4a7b-a2d5-0984cc91891f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e458f1-194a-4216-9fb3-655e4d362db9",
        "cursor": {
          "ref": "57d6d504-29d8-43f7-98b0-133d05fcf1ca",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8857ca14-436c-4109-b72e-540bed99c4c3"
        },
        "item": {
          "id": "b9e458f1-194a-4216-9fb3-655e4d362db9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e4c8d155-c9cb-4fc6-bbc3-a9ed913a1c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4917c3-b422-4369-9310-4ab2afafcb95",
        "cursor": {
          "ref": "510e3481-469d-4a60-a7df-1a7d992ff3bd",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "51fef238-c606-4d9d-8a1e-3611568c0c8d"
        },
        "item": {
          "id": "dc4917c3-b422-4369-9310-4ab2afafcb95",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "92e48211-13f1-445f-9a31-16e9b97b5251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e3c54c-af7d-4866-8503-04421cf248d1",
        "cursor": {
          "ref": "0a002b13-9163-4682-9191-bbc08050a8ca",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "40ddb643-c980-4ecd-9de4-f65fafcf57f9"
        },
        "item": {
          "id": "d9e3c54c-af7d-4866-8503-04421cf248d1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "398171d1-a562-4b55-ac63-1f99fe5ce094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1592f2a9-8088-448d-b2d6-f2953096c56f",
        "cursor": {
          "ref": "f8c16e67-833e-4410-92d4-45907c516819",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "92d82145-154f-406a-a99e-4ba85ee48473"
        },
        "item": {
          "id": "1592f2a9-8088-448d-b2d6-f2953096c56f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d482ad9b-442d-4797-a20c-a4d8c06f6a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5978be-4aad-42a1-a21f-e9d74c84844a",
        "cursor": {
          "ref": "12030d4c-3d98-4f2c-af61-8616d17f6792",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "63931fd4-5b52-4385-a677-44789831a6c1"
        },
        "item": {
          "id": "5a5978be-4aad-42a1-a21f-e9d74c84844a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2a747c8c-3dbc-44fc-9a15-1bdbd3193b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93e50d5-1024-4b97-87e9-fd03e386a160",
        "cursor": {
          "ref": "b86a89f2-d5e9-4a07-a213-c39919058463",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dd0644be-de00-4000-97bb-996a34ceb0d7"
        },
        "item": {
          "id": "d93e50d5-1024-4b97-87e9-fd03e386a160",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b528eb41-71cb-4eb2-b0f0-a2fa6308293d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b814e1a-f876-4fe1-8d63-76ffd453171d",
        "cursor": {
          "ref": "d2045727-4752-41a7-9bdb-5fbcda0172ef",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "96c90b4a-954c-4354-86bb-29c266e795c7"
        },
        "item": {
          "id": "0b814e1a-f876-4fe1-8d63-76ffd453171d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c86f3e13-cd6a-4d66-8bc1-13cd3c80fc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064e9396-5825-49d9-96b3-f0c944a8ebe5",
        "cursor": {
          "ref": "88bf70ca-48d5-47f1-87da-c96c73e653f0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "499d33e3-63a8-484b-87b3-1963ff5b0ea2"
        },
        "item": {
          "id": "064e9396-5825-49d9-96b3-f0c944a8ebe5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "68f85ba1-4e6f-45be-9768-3027d7b6b642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b653303-f4ee-4ad6-9508-e76505655644",
        "cursor": {
          "ref": "ef112bd7-85da-4735-b05a-0f6d9f5a0291",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e116e811-43c9-439b-9f86-1dd7f5ce2c72"
        },
        "item": {
          "id": "3b653303-f4ee-4ad6-9508-e76505655644",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "87d101e6-96af-4aa4-b391-d6bed7bf3815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8403c51c-f67e-43a4-8ab9-383a632c00da",
        "cursor": {
          "ref": "c486cbec-2f27-4a6d-9e8d-93513e337565",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a2de9968-5657-4906-9e47-86a81500a770"
        },
        "item": {
          "id": "8403c51c-f67e-43a4-8ab9-383a632c00da",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "30c9a19f-6b63-48b6-b005-3156322c1f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf4dbe8-bfc1-4654-914d-0f5b73f7b386",
        "cursor": {
          "ref": "cd560616-036a-47f6-a197-3bb0dba4fc0e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "93e33109-9861-4e12-9283-3f68c8bd5488"
        },
        "item": {
          "id": "5cf4dbe8-bfc1-4654-914d-0f5b73f7b386",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "07b3dbf5-8fae-466d-b37a-fe5d314b140d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76de3fb5-22ed-4193-88af-164dc7127d64",
        "cursor": {
          "ref": "4ef50613-0ed4-4439-a67a-1eae7df4547f",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "955d2199-e467-4b1b-9d1c-02bbf3167102"
        },
        "item": {
          "id": "76de3fb5-22ed-4193-88af-164dc7127d64",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "17855f68-0771-4f53-918c-2ce641dc5c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcd6cf9-0f1b-4c12-8cf2-88ac121d5356",
        "cursor": {
          "ref": "33fbc293-5d63-4814-8cd1-3c72f076ebeb",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3d6866ac-c5d5-451f-9c69-6124c02f22a0"
        },
        "item": {
          "id": "4bcd6cf9-0f1b-4c12-8cf2-88ac121d5356",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ff6c918a-079b-451a-83e9-9c9d244a5eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8746fd1f-b560-4d8c-82fb-6e2afaeaab58",
        "cursor": {
          "ref": "b6af3f08-cfb6-4bab-ae18-cbdc5d39acae",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "88dc4ef8-152f-42a8-a744-73f336913386"
        },
        "item": {
          "id": "8746fd1f-b560-4d8c-82fb-6e2afaeaab58",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "766ed33d-0fa5-4a33-82f3-bd0b21ea18cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfd4f32-1523-4b16-9760-dc2f3e6895ce",
        "cursor": {
          "ref": "e0221a52-84ef-4455-b779-e492eabd92fb",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8f05d34a-862b-437c-8271-1187463d1922"
        },
        "item": {
          "id": "2cfd4f32-1523-4b16-9760-dc2f3e6895ce",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8132261a-3dc8-4e42-82c9-10b430f62091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecc0fe5-48ba-434d-a4dc-d04d01e1b3cd",
        "cursor": {
          "ref": "29ba48ab-fde4-48b5-a636-a95e807f4f40",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "16e9c06d-daac-4b28-b99a-4bde0e3f8ac1"
        },
        "item": {
          "id": "eecc0fe5-48ba-434d-a4dc-d04d01e1b3cd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "302f000e-6be4-403b-9a07-773beca86e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbdf619-42a6-4a95-9e1a-b94b339e0673",
        "cursor": {
          "ref": "326de7f5-da18-403e-832d-45fba5b25bf6",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d5acdd6f-7b84-4667-bb90-479e7624dcd6"
        },
        "item": {
          "id": "2bbdf619-42a6-4a95-9e1a-b94b339e0673",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "98f02c7b-0527-48e5-b13b-9780c6e73172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3d271e-f578-410d-bff0-7d9929d9dc68",
        "cursor": {
          "ref": "7747bb78-0c93-4fc2-ade9-4f217fc7805f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "998c0235-489f-402e-abf0-b13222556e94"
        },
        "item": {
          "id": "2c3d271e-f578-410d-bff0-7d9929d9dc68",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b601f70b-f02f-4597-8aa9-f4ce71dd2635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde8782d-b2c9-41c4-916d-13b0f4f49ec7",
        "cursor": {
          "ref": "0e326a4b-bdd9-4928-ba49-ea08c47292ff",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ae2ac283-0ae4-437b-9ace-0462a2254e52"
        },
        "item": {
          "id": "dde8782d-b2c9-41c4-916d-13b0f4f49ec7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "560dc133-ef8c-4f86-afcb-ca95cfe2082e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ec96ea-7fdb-408e-ae4f-4eceaf231e86",
        "cursor": {
          "ref": "a3c06566-e963-47a1-9a08-13c34a93dbd7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0f28f5ce-4b65-458c-8149-6318b5664484"
        },
        "item": {
          "id": "30ec96ea-7fdb-408e-ae4f-4eceaf231e86",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d4145418-d7b1-4cff-bff0-e016de3e0011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdece7d-2723-456d-b9fc-b7c8eb9e4aa1",
        "cursor": {
          "ref": "a6232743-842f-4420-93e8-f54cc28edf3c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f1d858a6-b042-4d70-9f9f-22774bd54767"
        },
        "item": {
          "id": "ebdece7d-2723-456d-b9fc-b7c8eb9e4aa1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "342174e7-44db-4742-b5b6-4ef1c4a17052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7568ea37-5395-4ef6-ba9f-920512f271e7",
        "cursor": {
          "ref": "ead0d0e2-20ab-499e-83e2-4db6d439ded8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8c916f97-0054-4b88-9fbe-53f3029a3dbd"
        },
        "item": {
          "id": "7568ea37-5395-4ef6-ba9f-920512f271e7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7ecca3e8-1e19-4c57-9dbd-17da5c62d20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf47089-b75c-45f4-bd46-a7a4cd0deb78",
        "cursor": {
          "ref": "5abbad6b-1d89-44c7-901e-ebbec2d2a4c6",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e70c14dc-a627-45cf-93f9-0869a891e07c"
        },
        "item": {
          "id": "7bf47089-b75c-45f4-bd46-a7a4cd0deb78",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3b2e9684-7748-4f04-b92c-a2adc3d9d1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e335f850-e78e-41f0-9a90-4ab7781eb6f3",
        "cursor": {
          "ref": "4989ca63-a09e-4c4f-90f5-76ff76cdd37d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8bb9dad1-7de5-47f7-802f-c71ddf297cb4"
        },
        "item": {
          "id": "e335f850-e78e-41f0-9a90-4ab7781eb6f3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "09ea9067-7ee7-41cf-b1a9-593f2d73e2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce24628a-d194-4fca-ba29-ea18642ca49d",
        "cursor": {
          "ref": "9514b756-07ee-4812-901e-fdb72a79cd06",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5772057f-d412-478e-ae28-be7907476f96"
        },
        "item": {
          "id": "ce24628a-d194-4fca-ba29-ea18642ca49d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7f43770e-ea14-4e2d-8fc5-436cc3ade024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb9861b-cfe9-4a93-82c1-fada8a664781",
        "cursor": {
          "ref": "431d0bdc-828e-43f0-af83-e0b8b50e482a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "82b04c32-7823-484d-b5ed-a5c4520c1540"
        },
        "item": {
          "id": "2fb9861b-cfe9-4a93-82c1-fada8a664781",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a880b6b6-abcd-4fa3-9253-8d5cffd88133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3270324c-5ab1-410d-a9ab-8612c03fbbce",
        "cursor": {
          "ref": "c87cc222-e664-488f-b9a5-3f8d0a243237",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4f768a21-a439-4f2e-ba92-aa30f96302ac"
        },
        "item": {
          "id": "3270324c-5ab1-410d-a9ab-8612c03fbbce",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2eddfd51-e66a-4725-ae73-b2fa920ffa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c096ef3-6fde-4044-ae1f-1ee896d5c888",
        "cursor": {
          "ref": "90dfbe8d-5988-49f8-98b6-7f498dd7e59b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1e2be3db-e91f-4b9e-ae02-3c300f42c209"
        },
        "item": {
          "id": "3c096ef3-6fde-4044-ae1f-1ee896d5c888",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "68a195fb-1f1e-448d-8658-4092d49cb76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92098af-d7f6-43b1-93c1-d5ee29c1ce2f",
        "cursor": {
          "ref": "0251ac93-75af-4995-99ed-e9bfe26174fe",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7a9a98fc-ce33-4c2e-905d-965f77b3f1c1"
        },
        "item": {
          "id": "a92098af-d7f6-43b1-93c1-d5ee29c1ce2f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d9eb4ec1-6aa8-4b53-bcc0-03fc1c3cedfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6854cd42-dafa-45ac-9ef6-4178875641cd",
        "cursor": {
          "ref": "0fb4c5d5-ae99-4d98-ba85-6bffae69fd90",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "589ef664-f46d-4710-9608-12bbb5fd4649"
        },
        "item": {
          "id": "6854cd42-dafa-45ac-9ef6-4178875641cd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b2da40d8-8f4e-48dc-b58d-b9f21446a9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d363c16-0340-48a2-b54c-7a0d95763eff",
        "cursor": {
          "ref": "98403d81-8a5a-4538-bf38-cd22e0e22e0f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2b5242a6-4bd7-4fa0-baa7-abe211618d20"
        },
        "item": {
          "id": "3d363c16-0340-48a2-b54c-7a0d95763eff",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6796effe-39d4-4aed-a9b5-38d4e411592e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0071e3-b2b8-4c3c-a0b6-4fd59b216344",
        "cursor": {
          "ref": "ddd066c4-3ce3-49c9-9f99-afbfcceeb1c4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7fb37856-f7cb-4afc-ab7c-320cc64b54a3"
        },
        "item": {
          "id": "5c0071e3-b2b8-4c3c-a0b6-4fd59b216344",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "215a2b1d-3c1e-4852-ade6-06f804f060df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c505cc8-b85f-428f-9669-a4afeba2e79b",
        "cursor": {
          "ref": "4e040f73-a127-4f22-9ffb-82dfc3116c0a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "50f3b92a-96d3-400c-9303-042c9e3950c6"
        },
        "item": {
          "id": "2c505cc8-b85f-428f-9669-a4afeba2e79b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5aa2d65f-3982-4f79-a418-2550a283f935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab110577-1f62-4f70-9a0b-5a3e17742967",
        "cursor": {
          "ref": "b8ecbf90-81ec-4509-80f5-18e834ce2aab",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e6c4fcc8-01e8-4151-a55b-754afb6a7339"
        },
        "item": {
          "id": "ab110577-1f62-4f70-9a0b-5a3e17742967",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ad0b7ce3-317a-4111-89b0-adb459f3be8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6498dc4-3fe2-4ecd-8eb1-1f34f1536c4c",
        "cursor": {
          "ref": "1b7664cc-1768-4be3-a87b-b5ae1932cc69",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ca8059e2-c840-4157-ad47-d6293c0fee38"
        },
        "item": {
          "id": "b6498dc4-3fe2-4ecd-8eb1-1f34f1536c4c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a6cac133-14ef-4779-8f0c-3a0bfbde6b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8713a2-5b8c-4327-833a-b7057272e0c2",
        "cursor": {
          "ref": "df1a1cad-82bf-4d14-adf1-9453b1d7b38f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "854c24b7-d82d-41be-9e2c-386c57f24115"
        },
        "item": {
          "id": "5e8713a2-5b8c-4327-833a-b7057272e0c2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d56609db-188b-4fcd-b2b6-c146fabbc1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a5577d-b282-4e99-8f27-bfd4d1f97f77",
        "cursor": {
          "ref": "9253561a-765c-428b-8771-158af4abc685",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7a1e3d89-15cb-42ce-94e2-fd5b71ead56b"
        },
        "item": {
          "id": "52a5577d-b282-4e99-8f27-bfd4d1f97f77",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6b370244-a61d-4ed5-8d17-575e913a8a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddda8698-68d0-4020-9b2a-d07ae8caa8a9",
        "cursor": {
          "ref": "d540a796-c135-44f6-b58c-edd0fa60f64b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0cbf44d0-1111-4f9d-b743-9e8e1da66bed"
        },
        "item": {
          "id": "ddda8698-68d0-4020-9b2a-d07ae8caa8a9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "08eb37c6-b230-4836-b011-59118dd7ad53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0f44b2-bee9-4b5f-878c-87c538a446e9",
        "cursor": {
          "ref": "ad0e7371-ec4a-4a10-965f-4ba64a4cab72",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f891d6fc-05f0-43dd-9dfc-cee17655c53c"
        },
        "item": {
          "id": "ea0f44b2-bee9-4b5f-878c-87c538a446e9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "207e682c-1978-40bf-aff6-1dfc217bd622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82060ff-f628-47c2-b9d2-e7a580711c4a",
        "cursor": {
          "ref": "e55d74ac-db98-432f-bfe9-5c9343f2413c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3a98ab26-8896-48dd-8425-3c2c4f004c30"
        },
        "item": {
          "id": "a82060ff-f628-47c2-b9d2-e7a580711c4a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fda76bbb-0bae-472a-86b5-07eb3f90e906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e785a7-c64a-4296-b2a0-2d2d396ac927",
        "cursor": {
          "ref": "84252869-c9d4-4737-98a3-1779d37243cf",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bae19c41-689b-4e6b-8dda-bd8620a6bde1"
        },
        "item": {
          "id": "27e785a7-c64a-4296-b2a0-2d2d396ac927",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "309b3db0-a893-4eec-a2d4-659f9070035a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57312dd-3454-4e04-96e1-ad506f16301f",
        "cursor": {
          "ref": "49a6fc88-d1da-4a57-b835-a12fe1b86315",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "854c0cbf-65c6-40d4-aee5-e7b7f88b028a"
        },
        "item": {
          "id": "f57312dd-3454-4e04-96e1-ad506f16301f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3a6451e3-6f26-4830-a8b9-fb5d9a5c68c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94253505-4179-478c-9dbf-a866fc4f2aa1",
        "cursor": {
          "ref": "02a4ea5c-fe70-4cdd-905a-101c73f1614e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "796d470e-0c53-4605-99ba-98972f2e56ec"
        },
        "item": {
          "id": "94253505-4179-478c-9dbf-a866fc4f2aa1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2ec3ce9a-cb4b-470b-8d71-f3aea99ca3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53c42d2-cd7d-4603-8a39-3319b5fd5306",
        "cursor": {
          "ref": "da6c730a-3297-4749-8d6f-bdb3317d6b37",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a1143499-f5e2-45e5-9dc8-a3e9fc3a39de"
        },
        "item": {
          "id": "e53c42d2-cd7d-4603-8a39-3319b5fd5306",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ec350392-995e-4c7a-838b-20aca61f7307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a0003c-b394-4732-accf-69f9438153e7",
        "cursor": {
          "ref": "e2031780-02a4-4ff0-acd8-625acccd14b1",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "411e9a3f-3e54-484c-bb75-bf401093c138"
        },
        "item": {
          "id": "20a0003c-b394-4732-accf-69f9438153e7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1036727c-0fe2-4822-87ed-e8863ceed6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f38a5c-cb26-47c8-a82a-03f1160e3ee3",
        "cursor": {
          "ref": "0fe5aaa1-ee2a-45bb-878d-208adc9b23a4",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0eef7637-15de-4c48-8b6c-3822dde4757d"
        },
        "item": {
          "id": "f2f38a5c-cb26-47c8-a82a-03f1160e3ee3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "83f9563c-3fba-4210-8170-9d220784a7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ab5dfb-d923-4816-b3a0-1c15d48e8565",
        "cursor": {
          "ref": "83d260af-b752-478d-b466-a8088fe6a515",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ef2c8f63-9ded-46f0-9c36-38fad878876c"
        },
        "item": {
          "id": "c0ab5dfb-d923-4816-b3a0-1c15d48e8565",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "32415a8f-c31e-492b-8ce2-f860dfdb1eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b87695d-42af-4d2c-a6ff-12c10e382a74",
        "cursor": {
          "ref": "f0a06f49-7fbc-4579-b812-4ede924f200c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0d9fd2da-b7d1-4679-a1fc-afdf1d60af64"
        },
        "item": {
          "id": "9b87695d-42af-4d2c-a6ff-12c10e382a74",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "45b49065-0bbe-4810-a3d1-c4544918aaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2107e87-23dd-4be5-97a9-940c99783ce4",
        "cursor": {
          "ref": "056d2a72-4aac-4398-ac9f-ae329ab37b17",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a8aa1286-c57b-48ef-b434-e7c6394e2ffa"
        },
        "item": {
          "id": "d2107e87-23dd-4be5-97a9-940c99783ce4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c5d27d8d-a2e9-49a3-b535-a552c2e881e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab1ab8d-44f2-4274-9b35-76545b57d226",
        "cursor": {
          "ref": "c603a193-f89f-449e-a690-3bfac03935ba",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4bd5ba67-1c0c-4c1e-bc5c-9041ee5dd5bb"
        },
        "item": {
          "id": "bab1ab8d-44f2-4274-9b35-76545b57d226",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "becb73df-2680-45a0-b1b2-f712edbc0f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139cb094-74b7-42bb-a3a1-ca81c4b21976",
        "cursor": {
          "ref": "3dea1613-ed84-4f38-aebb-c12e7732f273",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "880a0ecd-da7c-4ed2-a71d-31193eb40ffe"
        },
        "item": {
          "id": "139cb094-74b7-42bb-a3a1-ca81c4b21976",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8fef17eb-5cea-4538-b748-c8071652fe4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b470e4db-552c-4704-bd2f-8aca4764e336",
        "cursor": {
          "ref": "85dbf115-df38-4702-8a99-84b409613720",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b66db97a-e135-4c05-acb4-9a3d19bd4cd2"
        },
        "item": {
          "id": "b470e4db-552c-4704-bd2f-8aca4764e336",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "796e1e24-106d-4b61-9ae3-9a404e33fbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624d158e-4181-4f90-90ef-cf778030e8ce",
        "cursor": {
          "ref": "0ebcb3d2-a873-439c-8b2f-a6844380683e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6da70232-5df0-4af1-8286-8690c40a2dec"
        },
        "item": {
          "id": "624d158e-4181-4f90-90ef-cf778030e8ce",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c7cc24d6-a989-4a29-949d-548e00670cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8193fab1-62ed-4ace-95bd-e1ae1e47de1e",
        "cursor": {
          "ref": "4ff7dc11-3a11-4e1f-80e0-be4876f30f01",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "680fef1b-957c-47b6-b658-209943f13aba"
        },
        "item": {
          "id": "8193fab1-62ed-4ace-95bd-e1ae1e47de1e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "76f51847-9e11-41c7-b4ea-6b0619e6e976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83eae9d1-e7b3-4d3e-a089-e089237ec1c5",
        "cursor": {
          "ref": "a1666b13-3a12-4d0a-922f-ef307060c76e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f7d1b0cb-2b8f-4f4c-a2a9-d527dcb31bd3"
        },
        "item": {
          "id": "83eae9d1-e7b3-4d3e-a089-e089237ec1c5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0831ea82-510b-4ff4-8883-5163ac715a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f632de-27ea-48a4-a9f9-c4ad7c11f133",
        "cursor": {
          "ref": "6675c1d0-cc88-4833-b4de-984259d3ab01",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f96d98d6-af6a-42cd-a879-411de22d2f8c"
        },
        "item": {
          "id": "e4f632de-27ea-48a4-a9f9-c4ad7c11f133",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0bff785f-ec5d-4a61-ac6c-4d7fa09ad70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb248019-15eb-494e-9658-26163187617a",
        "cursor": {
          "ref": "47bb1dad-b83b-47f3-96dc-1f5bc7720f1c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2185d419-0187-43ac-9e1f-2432f71acd15"
        },
        "item": {
          "id": "cb248019-15eb-494e-9658-26163187617a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "242a1e12-3aec-46bd-9e0b-f50b89750ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db3c97f-bfbc-4576-a93c-d8db7f91e7f8",
        "cursor": {
          "ref": "cc3c06f0-e185-403e-8e5b-60b3c39cdc72",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "94ca61e0-449c-449f-b61a-91e24bf7e5b5"
        },
        "item": {
          "id": "8db3c97f-bfbc-4576-a93c-d8db7f91e7f8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e0a09604-0393-4cf5-b9e5-41a68ce872fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69467418-d38b-4e40-8025-91a3af235115",
        "cursor": {
          "ref": "8ce08ae6-f3a3-4b50-ae6b-36aab2d8ecf5",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fcfcdc07-25a1-4cb6-9e7c-ea1db4aba879"
        },
        "item": {
          "id": "69467418-d38b-4e40-8025-91a3af235115",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a69d4c27-9242-4570-a3ca-97db50e8beef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f4e6f7-1e07-4fda-ba73-981a1f1999ba",
        "cursor": {
          "ref": "cf280738-8404-45f4-bdb9-9d866c3a668b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b12cebfe-c7a8-480e-8425-f9b82edb230b"
        },
        "item": {
          "id": "f7f4e6f7-1e07-4fda-ba73-981a1f1999ba",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ab0293bf-0de6-4de0-b596-4edc8306b398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55e568b-dbcd-44b1-a6b6-21bcf656a86d",
        "cursor": {
          "ref": "006412f6-7e5e-4cd6-b1c9-b5d488ce8e51",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3c783b9a-c9b7-4156-887c-df18aa009930"
        },
        "item": {
          "id": "a55e568b-dbcd-44b1-a6b6-21bcf656a86d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c5acc26c-5453-4184-b048-2f7504c77056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b584abe9-d19d-4949-ad37-8a22f8d08cf9",
        "cursor": {
          "ref": "a6f8b4e8-8129-4658-80d4-5655deed0660",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "79228fe4-f59c-4966-baab-2eaacdc257a8"
        },
        "item": {
          "id": "b584abe9-d19d-4949-ad37-8a22f8d08cf9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bb855635-228b-41b8-ab2f-b4ff73f0ef92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e699a6-bd25-476a-aa46-3bc15ce41a47",
        "cursor": {
          "ref": "3ff9d4ea-e8cc-4551-90bc-517cba8da6d8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fcd446b7-eb7e-4633-adcc-8b326bb5ffab"
        },
        "item": {
          "id": "13e699a6-bd25-476a-aa46-3bc15ce41a47",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "73ff5df0-8d2c-4212-8e15-67eeb0076fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca873290-ff70-47fc-90e1-d1338409bf7f",
        "cursor": {
          "ref": "dede7465-e9fa-4a0f-905d-bdae011ba874",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c5514c8b-b8e2-486d-9d14-a588a3989ad9"
        },
        "item": {
          "id": "ca873290-ff70-47fc-90e1-d1338409bf7f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dfa3365f-a601-48fd-ae81-c3b256edf702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0bd363-4b65-4b6e-8413-0bb4a95248f4",
        "cursor": {
          "ref": "3bdc1ad2-217f-4a0d-bd51-367bce850713",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "42e6a997-3db9-4c7f-90ab-c50626cfc871"
        },
        "item": {
          "id": "8e0bd363-4b65-4b6e-8413-0bb4a95248f4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4f05f26f-8c89-4148-aeab-e9e7568dbd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e69c5c6-a8c9-48fa-adaf-43e9ec4d8578",
        "cursor": {
          "ref": "80495b06-2d49-49ef-b041-ac47010effc9",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c0c7fb9e-02c3-47d4-b1ce-4d21c2ff41f9"
        },
        "item": {
          "id": "4e69c5c6-a8c9-48fa-adaf-43e9ec4d8578",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f0e65928-3c4d-4c0e-8381-e9b835401bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2e25bd-8f2e-46ed-b1e4-48d5d047fd7e",
        "cursor": {
          "ref": "ac2c72d6-cccd-4648-b29e-6c14b7c2d2b1",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "679074cc-d6af-4ad4-a91e-4fa11c21ec84"
        },
        "item": {
          "id": "bb2e25bd-8f2e-46ed-b1e4-48d5d047fd7e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "de6bdb95-3563-4b07-b2aa-4158001f8c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db46d5d-1968-4390-bc92-dac14b584f0c",
        "cursor": {
          "ref": "a602703c-b4b4-44c1-9079-dcc4c2c89dd6",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1735eefe-ad18-4ff9-82b6-91f9ed98fa87"
        },
        "item": {
          "id": "2db46d5d-1968-4390-bc92-dac14b584f0c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a51f5d68-0837-4727-bdba-219a6e2539c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cad9b58-7791-41e2-8bf7-e93544fe36b7",
        "cursor": {
          "ref": "f09374c9-0991-4357-b4bf-0a94725b3892",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d3768259-e9e7-45da-88cd-25ee807633a7"
        },
        "item": {
          "id": "0cad9b58-7791-41e2-8bf7-e93544fe36b7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "856dc50b-bbe2-4444-8367-0540b7151f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe180fa-747b-40df-8c19-2eb19541b02b",
        "cursor": {
          "ref": "e4726cf3-1716-49b8-bb13-2c7c9cccd662",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0c396e7e-e146-4ce7-b41e-21b800abb46c"
        },
        "item": {
          "id": "3fe180fa-747b-40df-8c19-2eb19541b02b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "595c53e2-22f4-49c3-91cf-d8f42361af27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a69242-c917-4da2-a9aa-03790b26840b",
        "cursor": {
          "ref": "810164fc-1ff4-42dc-b620-cf5ec89e90f1",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "772a1a56-fa56-4cc8-9800-12241ffbcb52"
        },
        "item": {
          "id": "57a69242-c917-4da2-a9aa-03790b26840b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "32882dee-4fce-4035-ae13-d9ebcf7f36d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38682b3d-4e2c-4134-81d9-b0776d1a0c69",
        "cursor": {
          "ref": "1f12d3dd-33f8-466d-a529-dd560569ebf1",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f67926dc-b549-432d-bfa6-6f9d451a6f14"
        },
        "item": {
          "id": "38682b3d-4e2c-4134-81d9-b0776d1a0c69",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ed0b7ba1-0ba2-4e1c-a419-81bd4a195064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c2fbd7-7d16-4882-b8c5-9e8e9f04e349",
        "cursor": {
          "ref": "a8cc7b9b-4d48-42f3-adb8-7d2685122e27",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "15b31608-b4e6-4f5f-90a1-1fd8fb1db091"
        },
        "item": {
          "id": "44c2fbd7-7d16-4882-b8c5-9e8e9f04e349",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3a1af566-55dc-4e7f-8d37-531e70881c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6190e2-02a9-4636-a387-b749219e2d23",
        "cursor": {
          "ref": "8eb297dc-c782-4f47-a32f-62fe6d7c6f13",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "01ef7115-8302-4219-a8c7-856df92ad52b"
        },
        "item": {
          "id": "db6190e2-02a9-4636-a387-b749219e2d23",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "83c8c744-8922-4a34-b235-22b2292d436d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b774b4-5be6-4e38-bbb2-fbcf0ff98e6f",
        "cursor": {
          "ref": "ab27d714-0318-4bf4-964a-ea6db2322156",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1723ab51-714e-4a57-8332-157c423c24df"
        },
        "item": {
          "id": "f8b774b4-5be6-4e38-bbb2-fbcf0ff98e6f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5959b681-377d-4d12-9ac0-0eef084d2b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74968801-5b58-4ff0-989f-2e7493022832",
        "cursor": {
          "ref": "ab5bd7cc-f189-4fd6-a790-6ffe8ebaec4f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "03eab459-b5ee-4b7a-b56c-63ee62db5de6"
        },
        "item": {
          "id": "74968801-5b58-4ff0-989f-2e7493022832",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "80b5ae3d-b72c-4fb2-a7d8-a4588c17582a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f934065-b522-4fcb-b625-3777ef613148",
        "cursor": {
          "ref": "45088bcd-7deb-484c-8509-33e588b1230a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5d1da265-116c-4fba-8151-6b782b42528c"
        },
        "item": {
          "id": "8f934065-b522-4fcb-b625-3777ef613148",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7e25c55c-1b7f-4b8c-a92d-39c235381c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "9029cfbd-a5c7-498b-b949-68623972b5d8",
        "cursor": {
          "ref": "c5ae328b-7bdc-4c74-88e7-27157df9298e",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8f635fcb-e229-409d-a5b1-d6853d02723a"
        },
        "item": {
          "id": "9029cfbd-a5c7-498b-b949-68623972b5d8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "93ff62bd-10ef-45cd-bd22-486e9d5de5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "e93e483c-d6c3-46de-9fc2-dcdb3207de16",
        "cursor": {
          "ref": "238282b3-c748-45e0-9d80-9a1411c17afe",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "02411088-edd9-4166-b133-d5fa3ac457f2"
        },
        "item": {
          "id": "e93e483c-d6c3-46de-9fc2-dcdb3207de16",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "24956a80-6f23-4de1-92c3-da5061b260b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "b19472ad-0394-4b47-b414-35a946043596",
        "cursor": {
          "ref": "f482745a-e62d-46a4-87ed-2020dc8dff7c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "92f47f71-b086-4205-816c-4d586738fed4"
        },
        "item": {
          "id": "b19472ad-0394-4b47-b414-35a946043596",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "70b6de5b-cbd0-4abc-acf3-3c73c0db6dfb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19472ad-0394-4b47-b414-35a946043596",
        "cursor": {
          "ref": "f482745a-e62d-46a4-87ed-2020dc8dff7c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "92f47f71-b086-4205-816c-4d586738fed4"
        },
        "item": {
          "id": "b19472ad-0394-4b47-b414-35a946043596",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "70b6de5b-cbd0-4abc-acf3-3c73c0db6dfb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90cad9c-3d2e-4d1e-b8ec-ec4ef9b992d9",
        "cursor": {
          "ref": "4e94cd12-ca96-4208-84bf-12b02f8fba9f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9c5336c2-f09e-4496-bb77-a73ed39eaf10"
        },
        "item": {
          "id": "b90cad9c-3d2e-4d1e-b8ec-ec4ef9b992d9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "77d206e2-6642-475c-a006-a1e9885f86ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab92dbf-5fe7-4034-9213-6fd210902576",
        "cursor": {
          "ref": "6e777288-7d2d-482d-bd35-adaf8719f5a2",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d5f42a09-c1f7-47b6-a6be-4c1b557afbb8"
        },
        "item": {
          "id": "1ab92dbf-5fe7-4034-9213-6fd210902576",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5db9384f-d9d3-4011-bfd6-9ef3ecba884d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}