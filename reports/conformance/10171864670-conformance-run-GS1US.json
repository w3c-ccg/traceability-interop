{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "74641dc5-3524-4c0a-9551-a7eb4691f7a0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a1f25c9b-6cab-4f9c-8227-4eef0402c9e8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59d5d57c-06df-4ac1-997b-1620c58a864a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f1fb3062-6b82-4832-91a7-8da14a7b2deb"
                }
              }
            ]
          },
          {
            "id": "0621cd26-ff8b-4214-9559-0128c09e56be",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8be5e8e-b037-4950-bc33-b17c9f96d11a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9909c47b-ac27-41b3-a54c-710609f7da58"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f59662d2-4dfc-4234-89c4-aa1f7edddaa2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7395a27e-7198-436e-8414-cff0d36b6258",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c00a3e8-7336-481b-988f-5b7b5afc4f81",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42550d55-25aa-49f4-ad3b-84c7132581d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a86dc0c2-8c2f-4aa5-801a-c831969a2bb6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14f478e4-3cee-48eb-abca-e98b5a91d70c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e886806c-7143-41fe-9fb8-27d6e46be28f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e70ee904-d3fa-484e-9253-49186a1e91c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0daa2193-108d-405e-8f2a-ff5679eb2cd8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "019a1178-4af8-40c1-a56d-44489e9258f7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c28a1b78-b683-41b8-ad0c-f0294777818a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14137a9e-23b1-409e-bebf-6925832c3de2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37a489ac-829b-4930-a193-eb629097d380"
            }
          }
        ]
      },
      {
        "id": "48f6f922-07da-47c3-8ea0-eb7496ea89e3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fbefc554-97fd-4b3b-9f24-30d3c0bc1b01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0eab5e9d-ae9e-4057-976b-e4b99f0f08ff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8378244-2cc8-4e28-ab08-972e6e5fc361",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae656be-65d3-4686-9f17-e8f0c14c110a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba1434e4-b511-485a-a29d-f7eba4172e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de66d17a-1182-49b6-a2e0-1ca473d6c30b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48e6bbe-9333-4645-9144-a873da77f8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f639abc-a948-4df9-bb83-286a09e490d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bfe0b1-b588-4bf9-9511-708aa1ca9256",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc1a8b0-48fb-4d77-9810-ef4033d1631b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24b52e2d-99f1-4882-be3d-f6b0a6c8abc4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "743042ab-0ce4-47d5-bb77-435362c6470f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6734bfdf-14c6-4978-a524-c46ac3537940",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a196047-258f-4ccd-854c-6b805e8ad8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eedcd606-23b2-4ea8-95e1-d6888b154507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e86b93-f229-4f88-af63-e12d70e8cbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d877d0ed-2b71-40ef-91d0-7c610b2d2db6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "59ee4146-941d-4733-a835-757c6ac57483",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12a3c37a-debd-4718-8a55-f8a10b49b237",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c043afa-2e76-4915-9f21-57229fe25a58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "160440e6-f993-459c-938a-08fd8ffc92cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "759984c1-e6fc-45d1-a0e4-ff3102e4d011",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b4217023-e6ab-43d9-b080-83a7678ad0df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5148f917-36e5-4f85-b98e-7946cc361197",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21f0e85c-2604-4649-a557-7d742426a4db"
            }
          }
        ]
      },
      {
        "id": "4711ee9e-ce9a-419c-9125-a42e14686a9f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fa19527b-19ea-4678-b36c-55aaa101a4b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53d5ba5b-d64a-41c2-89cf-c8146900656d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "420ee207-6526-4a19-9f31-bb81e5d01571",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860b6a21-db86-4b7f-a696-c4fd305a494a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef74cd53-cca8-4c8a-ae78-2cad52d0e64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba62c54-33f5-4479-a4c3-d90dacbaa42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5eec7bad-1e7b-49e3-8622-cd7fc8c455de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57ace5f-e03d-4d1b-a2bb-1948b7d12834",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b8c096-482d-4836-a45e-d331420b05cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa645ae-53ed-42fa-9b3f-1cd4ed62ce87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b928b2e-d22b-4952-9627-192572ee64aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2cb9bf5-0fc0-4149-b276-0d9c118a0b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded1b628-d1ee-47fe-aec3-969b8a18552d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fccfaf-7571-41d5-8f61-b90423f6b41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9002bf-992f-486d-a765-fef829f9f770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85636411-c777-44a9-b5ba-3090a7ce40b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea5162c3-b1da-42e9-8f99-f1cc236edae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15118d6f-a335-4e99-958e-09ff1c76d474",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62b63a9-594c-46a6-91d4-7b47d6791bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c66a285-d10b-492f-aa37-bbc67a5527a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395c458a-c38c-4b83-8f7e-7c03be27742a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77e6842e-3c40-416a-8368-6a06e3c9c227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3701946-3bf6-470b-86df-018c27e31a2c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315d5f06-8606-4006-b7fd-37af0fddf598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29584738-f961-44da-9f63-ac5f2c2643f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086cc0a9-c941-4909-8b7d-270dd2a5c5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65edc22f-c835-4156-94ee-8ee241170123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d96437-7934-4003-abd4-ebc955a1ec10",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef878eb-588e-453e-929c-55344932017c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d14d7ef-1e4b-415f-8564-655d8e33b8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32e9214-5a0f-4600-8142-de5b102b3b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03f1d124-4017-465c-825a-e30207c875db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eeedba-b203-4b25-8aaf-97c40fc43679",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708f7fd7-0940-46bd-af01-1aadd1d6d777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6532906-b910-4dd3-8fc5-389d8c68a107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71129190-3926-4208-bfd7-5b19ac39edb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0f21611-cbf8-4ffe-b7c6-0136bd5a62f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e30e7c-cf7d-4e15-97de-747ca07fb47d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c15b97-5930-45a1-940c-83526cb66e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0d82ad-164c-461c-ae79-e39e424b6e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc49ef9-c5dc-4f2d-bbc4-17edb4e7874a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "361b11f7-a349-40c1-8d24-cec989b2e7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1818f994-8894-48be-8bb5-a24e085ddb7a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed78369-7d73-44b3-ab62-3ac33bb960b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8ce46f-4656-43a8-b0c1-80ba610b5aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055504cf-e365-4170-9823-52076508fba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bfeffff-dd98-467e-97cd-ff4cc84ef069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501a0cad-aa7d-4a5c-bd53-c9b97052ec21",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc479872-0eaf-48b7-9a5f-21eff7c6e852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6567f069-05eb-4805-9629-32150e73a38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a9fe33-683c-48f7-b3c3-2e639f01d084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "130f87dd-2fd1-4b11-aecc-9469fe1917d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b8571e-69cb-4717-a8bf-64527414dece",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23c31cd-a9f1-4251-9475-f18988d25764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012b41da-d6c4-45ac-b1ff-e1272f3d2d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df737119-1db4-417f-9246-b194f5178e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd966a99-5960-48a0-bc69-c5ead259e673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab72ef5-0d14-42e3-a1c3-d5e8b46d6e42",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e1a9a4-d1fe-41b4-bc3f-cc81561e04ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b69857-e088-4baa-a8a2-0d79bafd0e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73af3d5a-0022-4352-920a-31ff37aa1c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a08d0a3-bd3f-47f8-9b3f-5b1b6567c8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c27fd5-f7a0-48b4-9547-7ff03c6b57a6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb38117-826f-4445-b9cd-f614b6119344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8ae9a2-67d4-46eb-8e4e-414b4bac6bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24bda6a-64c4-417b-9bc7-4463d1d43f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "247890ea-0584-41f4-87f4-ae1f2a4defed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe7e241-02e1-46cf-8bf3-99f1133e8869",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335a167f-f8f5-4867-af0d-6afd027e0ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f3c29c-04eb-46f5-b06f-a163fb406b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51df5a6-c3bd-47a9-874c-57862414283e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a92da43b-0f89-4d38-b225-a83ec3b68903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4695904f-5643-4b18-9964-9f713e7b839a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb18c92-8e6e-49d0-a3a1-cb37d9e6bdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e86546-c719-4d46-a504-e136b0389063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2596a14-a174-48b0-8739-dd3739b4ff2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "633f1589-d17b-4584-bed9-92a7db7c8750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30538893-c350-41d0-aa06-caf83aa4f079",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c99320f-7f60-4feb-ac53-e79ad8345457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a06e40-7ddf-483f-b9fb-8200d1081e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9adf594f-22c8-4bcf-a6c7-a481839b6477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64156f58-f664-4cc6-a032-f3e3f4725ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de995035-311c-486a-af34-8bb095cca116",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cf8fc4-4b00-4259-a210-369f0b8af14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef7b2f0-0a79-4ef0-92b9-424700824c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7221b9c4-9e2f-4415-ba32-2f2db7152415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c6e2374-8fe6-40a0-9d05-612490765c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972b8028-3e40-4243-9f56-ae8c5af8ec5e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efde75aa-2c35-430c-bea4-5258e57c8985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0242b81e-283c-445f-b3a1-adb26b8d4170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e4a55e-5972-41d9-b990-66f6df62cb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7681fb18-229e-42ce-8e10-94da243dae0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dba111-0025-40de-848a-dd11391b9c7f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2f7bcf-17c3-4ec7-9148-8d1fa2fcc3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6eae5dc-6b33-4830-a8d7-5e05d348e6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0670871f-dd2a-4161-984e-93548f5be86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "889194af-6e3e-4a9d-9c48-7198e651410c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3197c0b3-5b23-48bb-9cff-2f39a099410c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afd2072-b925-4378-b17e-173c15e809e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d28d6b-cbfe-4614-a9d8-c649dddb6e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a9743f-1521-40ea-ab8c-45277b6a17b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b41623f3-b38d-4857-b2f1-8096ed2ee266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0179b9-087b-4628-b115-3107e154e29f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a816cc84-f597-44d9-86fd-c4414254210c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e103f02-b31e-42a7-b12d-d265e97a5d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda8de9f-8562-485f-83e2-e162e7acd863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "373a36fc-ff4f-4cf9-a83d-e87f73e9a666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ada7088-3fe2-4d3d-8cc4-99b1bd530e57",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9576654c-c992-4c0e-b0cb-0b997855b9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b37977-48ac-41fc-ad73-357c67fb389c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51578c79-92b6-4d86-93c7-4ea6f5773a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4ba57e-2dd8-4b5e-83c6-4752e5a7281d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b82578-5739-479e-8555-935093635b83",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3a3aaf-537a-411d-af43-c0ee6494dea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4658a72-65b0-46e0-8961-7ef501ba4779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5ed585-356c-4f0d-8346-3073da4cffd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1534713d-e820-4f6d-9039-a830d4d8525b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423046b9-3ae1-4f01-9933-fb2e31234252",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69666b8-0421-4423-b3d8-b1338351f01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c45740-ca90-415e-a8bc-600317065877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458ade8c-2dca-4306-8291-119bf6939a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7a3388-a648-47ea-bbf6-0751b21f956c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ce24d6-55b0-4b2c-9f0d-729b98e952b0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f48ad4-c2ad-4f0c-815f-2c7cc7e96371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ee978f-f188-4fd1-a525-c73206e593ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddeb17e0-7933-4c5d-bd87-c0ddebaa7c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce03c502-d27d-48ea-ac6d-a748fb33aa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f007c9-a8a9-4d90-8b34-d50c8ce818fa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d1975d-41e3-4a3f-9e3c-754354542837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b575649-77ad-44da-9dbb-5e0625f27c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c243c3-e4a0-4d90-a584-c67c00088ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95883b70-9947-4b63-8867-22ffbefa6b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5817c3-eafc-4698-85f3-bcb0a3aace24",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41c82ca-bdd2-4e1f-8d27-a1372c5f921d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03456af2-27ff-4f0a-9d13-5bb3b750e537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe7173a-609e-4489-bc32-f6b48249ab51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "abc20fc5-8386-4ec9-9609-476203961552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b936315-aaf9-45de-aed0-09ba751f6973",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfd0ada-bf16-4f6c-b799-37d1f8f16ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5925870b-89a2-494d-95d1-3df75e4973ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6089a44-d4da-4982-9142-4167252807c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9adcb883-c5da-4dd7-ae63-69f288f1a67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f653ef-c060-49eb-9946-e225fd37b4a4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb4f395-110e-49ea-a253-2f8873898012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9225fa-e28b-49d0-90a6-a653bcdbcb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce32718-e590-4f07-bddb-e8cf367ab433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20fdb431-e008-46b7-a26d-9f2c2460569b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0139f15d-1c93-4e6b-ad06-8d6bc0128ab0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4ee5ab-357d-4c3d-8698-362382d1a936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d485cc88-ce76-428b-8e00-f9ba007b9619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74409a21-2440-44a6-a025-42e1ce3a886e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "729b2266-c77f-4ecd-ac4f-0cbc9daa86e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bf74b6-ad41-44d3-a085-d91b448fea28",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eef0da3-81bd-489e-bcfe-a8673c90140a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f198c74d-3daa-4dee-9910-b108358f1906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d74db1-c42d-41df-9eec-9b271b6c33ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9741a25-718c-4370-88da-6760521d4b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58678293-7a47-488c-a2e9-acfc074f5b11",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a12a8c-38ef-4ef2-95b3-46a4234c3c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fdf6f1-b21b-4074-9d82-9596cfcede30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea59426-7b94-40b3-bdf7-4ff2b78744f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "962efba7-5d04-4b66-a93a-e9220d754511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8884540c-df6a-4389-aef9-db1491a272c5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283b7373-fc65-4940-8055-afc8ff48347b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b17f7d-ac5f-44b8-b2ef-641d95707abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7860ee-ede1-48d6-9bbb-869616ae93dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7e76f8-4dbd-4aba-8be2-1c315e7ed465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148066e7-4f40-4501-a887-398d9eb482e3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f04b76c-e186-4619-9fed-6de237c02c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc2666b-1511-4461-979f-1d46492e1037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e009a5-2f85-4a5f-9e81-8f1dcb684e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7515ad9-4ffa-4a75-83ab-fd967d149f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789fa04f-bf76-457a-8706-0d063dc32527",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467788cf-e4a2-4107-9b98-d550a3b3217e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e22d32-f87b-4770-bd9e-b22dfe4be33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effcf376-ad26-4e98-ab9a-7522131fc273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0b12b594-879e-43ee-81ab-ca45a21b6f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888b4fa1-ba75-4336-8957-21c4172c3809",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e3af03-0db1-4b3b-85f5-be1a2a7509b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdb0cd23-3d43-4dc6-98af-5ad347d31fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6a1880-30a6-4133-b472-c785254247eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de740848-95bd-40ab-a129-0084a4a39808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056b49bc-f7e9-44b8-80ae-97f4147b85cd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ef1ff9-e274-4615-be48-9620f6e91f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805cbeec-64cd-456e-be26-d54fa01adbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7a4db2-7afc-46ed-90a6-5c037f61585c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a62715c-b7b5-4905-9ee2-fe4a6cea771e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14188cf-3163-49b0-be5b-82c993dad28f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca917ed7-3902-413b-9706-0a046439cfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7be4590-d1b3-402e-a59c-c330a82b0a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16d018e-b41e-41ea-99e0-2be35b9e89a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "05f75eb1-0a2f-4e8d-9236-bd2721ddf690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97139e7-6ca7-4d09-960e-04d81715967c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3748db-5db4-4120-9edc-ebb5172fae21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b886d43-61de-4255-9f68-0edb3d53209f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28410122-98cd-45f7-a974-a2496782cb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd691cf-6d76-438b-8a87-98d4169b7823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7908b96-3172-42d0-bfb1-6b8f827389f8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c1007f-e459-4636-a5bc-ac1ebbc2ac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e2c91f-3811-4fa8-ba08-829d10f58fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4d9269-631d-4bce-8046-3d9f9874c6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e14f25a-9736-4bd8-acdf-f6910185b18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122abd32-ba95-41c2-8bb9-8cdbca11e92f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa571f8-c68e-47dd-ac3f-f292415a857c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640175f4-bf53-4980-8555-3bb2a13eaed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0040a186-714c-470d-9c86-c46aa8756164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "915399fa-62de-4379-b4ef-512b66064cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0f8601-dcda-400b-b8a1-f446ecc81c0e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06582cf1-4ae9-47de-b8e7-70acd25f81e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041db84a-4cf8-43d0-ab3d-edfba0659c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a415794-5326-4d79-95a2-744babb785ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ffac41b6-a823-4962-a206-d0c048bbf45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865f2b32-bfa7-472c-a140-6b867e46c9fe",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7bac9e-d0ae-4596-bfe7-9d11d9e41a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2459094-1694-4051-b5a7-1e5ba992b706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bceb96b6-a032-4811-9fe2-a4819a9972a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0d6fb7-90bb-4515-91ee-b96627e85ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df13c8fd-a8b0-450e-a307-6dfd371367b8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7d9d90-2360-444a-9e29-c490b22d669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d2983a-d771-4721-a92c-8ce0a55fa580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc4d80a-97ca-4e93-b220-e525bb91e980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "64896221-af94-43c2-9c7d-d33662d7d2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520e1ae2-ff2d-4e28-b13c-acfbf7a2cacc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5eda4f-dfb1-4cfd-b94a-195edbcf9049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e56cd5-d607-4da5-8396-5d36990410e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d05b18-f41f-4f43-aebd-9cfdedd43ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de336500-92db-47d9-9407-fae39d1fc3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd19d6c6-c71d-4c12-9ccb-e02ea2850816",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee61185e-7a49-4d42-abaa-7385de9e4eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1564d1a9-fbfa-455e-a0c3-21cf2bdc208e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94dcc80-7ef5-4421-8f54-0615d6597590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29cf76a4-8fe0-4763-a165-6765aba9ef42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14bc948-ac31-4d12-98ad-e74351d17c68",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b16d671-34f0-4fe8-b6f6-9893754690be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f37174-c563-42d9-8270-699081c6cef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a33402-3031-4724-b7d1-83529140a266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f04c7010-0dda-4c4f-b372-a2aebb55c348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a855ca-882f-4468-abbf-6c259efc2a51",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a088fbc-f559-4e4c-ad6a-67ec54c17382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c237208-53aa-467d-bf12-2f9ecfc53afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac4cb7d-b5fc-4bb5-844e-60755415c3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efede61c-88fc-4af5-80e6-6ec513646297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1603aaaf-5e71-4fba-8322-263ee97a4043",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2d9bd7-2668-4725-a3b6-0d6ed07a9771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b812a1-72a9-4e2a-8893-1b7cd4592234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1127b9-f3da-418a-a674-ba71152a4fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7c7c4f-a862-4b94-b434-fc08802e1390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780cc048-3d1d-4606-8a69-0a3b014fd85e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c434860-0ae0-4188-b2bf-a5b51d14f7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39cefb05-0e16-4f2c-8757-ef173852581d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c558d5f8-f564-4118-89ad-4c7ee6bb7302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ded9ef0a-5919-49d6-a30d-300d5401858c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e7be93-5451-445c-8f9b-758a1d403667",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b08d2d-3ff7-4077-a1e6-5d59a65b05ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce420d94-c0e9-42e9-9c43-ba03648cad48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4fd8a1-a993-4ce8-bf28-388b57333210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b133201a-8bde-408c-9b3d-2820dbddbc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1636a648-c23e-42e6-818b-0bb14b761d29",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c306bc5-ca6f-4f59-baf5-294c1491e896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2061db4b-ee9a-4040-aec7-b5bc944c286c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040e531c-dd6b-4d24-b6ea-d64bb3d6d5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f97bad0b-7973-4ebc-9ed5-73d19aca1677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f082cde-91e5-40a7-b218-f79744c71330",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99ec28d-a0f4-4353-90e4-37f49a972b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a61713-0bd5-47c2-a206-1235b3e34893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e224fa16-3a19-4121-8bf1-45173369e14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b329d4f-e15a-4c49-b5a8-6afca0a32556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2112cd-f5a4-45e4-bebf-7e0fb24954b2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab6fabc-d392-43bc-8801-0f4dafd302d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d872a1-564a-4761-b4f3-f9c285dae058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d2306f-4ac9-4f82-9f27-d037c3f2ebc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd0e356-0d5a-4572-a900-b84ef07552bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a38bb9-084a-4981-99ab-50d8c7226fe8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4912bc6f-b677-4783-aafd-f9134116228c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5dc2adc-e455-49e9-b5fa-536e597ac076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2adc33-e117-4f89-9c6f-f3e01a963b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15c62e2e-0ca4-452a-b0d8-5f68ecee2bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b0c98b-39f3-4e53-a22c-6b06a5d3c925",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797c1dce-c920-43da-a306-227e4b2f52b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acad27f-696e-4655-8861-58278c72f137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f4b80b-08d3-461f-abe5-b7598eb838d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4628b68d-f091-4bdb-8d9c-b9689ef07de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b06d13-fd82-44fa-b632-777fa3e953eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57dfa574-68f2-4293-b2a8-fea40532ced1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f3e3bb-12cd-4bb9-bd8a-4d16b03c11a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873908ab-046f-4601-b24f-a2da5c113105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d47f5103-6b79-4bb4-832e-e659ec068c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e85f20-5a62-4a31-9ac2-5c959dab85a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe8b628-6dba-4e95-869a-6cb51dcf75d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a3aaa6-3e01-4aeb-b66d-f5e5aa34e05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5c4ec4-2837-4c4d-b2b1-7b7efd1485e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "46e7f5c7-6b38-4cfb-ac17-5aba3b966a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223661d4-59df-41ad-88a9-4b356133c2bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49836a07-f27f-4dd6-a630-260b50a27ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07786c7-21d4-4d9e-9c81-93222619dea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477686a2-c69f-415b-980f-5f43ce1d4f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecc16e2-d0f5-451c-86e1-8d043c02b708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5c97c6-a9ce-4073-a51b-2068c5d15b01",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bf717c-dd58-47e2-ba6c-5dcee0e6e46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b1d525-aa03-4ea4-8fb8-22edf384ddc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42491339-0811-421c-95a8-165f96e64cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ead1265-1091-4469-89be-4dc191ca2c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2153de35-755b-4471-9c9a-824d280f5a68",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92800976-fd9d-4881-8570-08693419d523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7c5be7-7ee5-4b56-bdcf-776051fb4121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc47307c-56bc-47ab-97a1-b8bd887b52db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "764feaa8-544d-4518-8285-f0674523babf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d55cc5f-cd35-4e0d-8190-269bc3af2ec6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9ddb53-ea01-4da9-ad3c-95a329ad1623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66203b2-57ae-4483-8174-c27fb291a72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e71d212-5c71-4765-871b-9a20c780782c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ea75ba-510a-4268-aaac-f5d191b99491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188e4883-5ad5-4ca3-9840-a4a5c52e7b22",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3866234-6f77-4d84-acb4-7c51a9cb78e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c715b3b-dc32-4fe7-8319-57a8b9ee6a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2481a29f-1e0a-4368-b717-97caed120660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b5c2b0-2c1a-41fb-a7de-89d3ab5237df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f49f3a-e70a-4484-8935-184c42c2067a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cfe582-5830-4c50-84a9-dfc6d5a9f499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6fc517-ba15-49fb-8116-b1710abcf224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfc77a5-74de-4469-84be-3a7eff93a45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbaef885-fbb9-4031-837b-cb476ca3af78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2ca9fa-e805-4f3b-885e-e6c3fb8fa5c2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0f6c03-99c1-4317-bb07-90231111aaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c63d40-1f30-45d5-8b7d-abcf1985dc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc82a89-b317-4a87-92d1-5cb2e103b130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f31a3c-13e8-4e63-82a6-5283d5bddfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b4e06d-fd46-43a3-9b0c-4cea08a5f7c5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb825b9a-24f8-459f-adc0-c4d5d7642afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c39f891-3cf8-43cf-b6b8-a7a8a61a1d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7e1d2a-51dd-4278-9127-d1ff849f99fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2345af-e996-440e-80ce-99c70f34dc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc010c4d-bf4a-4461-8834-84acfe9d3f6e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27df5077-28a1-4f03-9f7d-7f6f84634ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d1d6e5-6fac-4adc-b3a3-1bdbb247d408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79b2eb0-8fce-4ef8-9899-140962fc44d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f5e60d-684b-4a25-80a7-9a9435e0f533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de34dfa-6146-4a75-953b-d8ef67d24cf2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85f4080-b73b-4104-a8d3-b380aa20ccd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f4c3fd-d47e-4f15-b0df-a396a8678724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59656249-fa90-423d-9bd9-510f0a0d59f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34b655f-0473-41c0-ac02-988e785c12d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d480f5c-13ec-4de2-8c61-03f01e5f29d6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852a1261-45af-4650-a2f5-c6927ee25f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a289d6e-6d18-4c3f-b28c-7ef3ff22f445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61c30a0-892d-41ea-94c3-dd28fd2c6770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67104cfe-dd57-4c9d-9eea-d9d046ed5c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b55dc4-723d-4039-a75f-6ae9999baa3f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cff3b8-a771-48a2-a2e9-36a1439c2c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2c37fd-c5f2-4ad1-8610-8a85fc634569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a804654-6b2f-43d7-b0dc-9b93237dd0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c825ca34-0210-4dae-9ec7-befd009ffaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c674131f-d474-44e5-907c-e6235e1b22f0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346f31d7-aac8-47b0-816d-56ba25672be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb8f539-9317-47cb-883a-0523878bee1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed9bea0-3369-48fd-8666-0cfbcc2a7b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d70ff932-6d36-4751-9a28-03f2db99ca71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69f86a7-d48c-4edf-8dcf-2557fd2f551d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80936ca7-5aa6-4ccf-823b-6bb7c031b94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22efde31-6121-414f-9b9b-47b217bea4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74021ca8-2e1d-4d47-b567-3c5c426ea071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9356cffd-db04-4866-80de-20a193edab91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928078bd-76d9-4ee5-90fa-77aedc85e5d6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139a65e5-84c7-48b7-b51e-b615a6d9b561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de1e5ec-389c-410e-9a56-15a8f2e10f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e35293-0482-42f9-b77d-bd69b6dbf83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c02e5b97-2af2-4d80-9c24-1a0c5cc50dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb0b9dc-d956-441f-aad9-7366cffeda0b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b203e969-f659-4a26-9054-0a90b6106e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee82234-21a5-4b48-9ffc-0df62f0aa319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100cbf2b-bb1f-4ee4-91fe-25c9096960ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9a3e34-c10b-47d7-bfe5-96fce28bca3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0794106-89c7-4220-a3c9-84aa03fe3efc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1d4ceb-25c2-4bc9-a9fc-c8b51b59a43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10a533d-185d-4211-a508-eedd7702041a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cacf180-dce2-4580-a9d7-a7734168bed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71219b8f-600b-4d0c-81db-78b10a7aba57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d41b50-bc6e-4344-8da0-79f74fd8b2e1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7737656a-274a-4f82-9309-018a5f92f8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b27a870-8462-4d8d-973d-5e2bfa56b917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb3cbf5-65e3-41cc-ba41-0c131fcdda96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16fc7085-8fe1-415d-97b9-cb8ebef27415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b46ec61-ad74-419d-af17-ad2e9f0760cd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27af931-0a28-4863-ae66-73386e6f5021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e3331b-b9bb-4671-963a-611cda1b2fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7fa041-6cd8-424e-9a77-4ea92dfd802a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "930f34bc-6b50-43af-9e9e-f7e489b96bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629f8f6b-bdc7-4b0c-b51b-36209de26fad",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4fbf5e-d94a-4481-b69f-044cc35850bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e12b747-1e57-4a2e-a554-eac17af28086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467686b4-b0d0-4623-a2b3-fe4a3461e4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d0d278-548c-434b-b68a-75c6a671c4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46297b47-4fed-46bc-adf7-9306bffbc7c1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eddf6f-2b75-42d4-bb90-cfa283601405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8389df33-650d-4262-b88c-8be2b3517c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d76763-d00a-46fe-aefa-28b1ffe56085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "245df4ca-131a-4266-adda-bc0870711067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33ad8ab-3999-43f0-99bf-24dceda4fc1a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0160e6-d15a-4651-94ab-0844bd20d734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603631a8-d5fd-428b-b010-59a2fb53245a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d76b28-636d-4464-99ca-54b64c5508d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86e3637a-e70a-43e2-90af-b1dea8b4808e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faad6a9f-acf6-436d-ba4b-e090c2bb35e2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd7aca4-6dbe-482e-a48e-5c36a44222b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b023ff-8c4f-4cb0-8520-228208555b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ed74e0-33ce-4bfb-ab80-83cfdd4f0ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "64d56501-cbdc-4888-84f0-0dccead342e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75c14a4-e437-4fc2-a584-bc53cf24918c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36747936-3d88-4ee2-96df-7a9b420b641a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db664110-c6df-4b6e-9ab9-5a7669a98da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932eeaa0-d1d5-4105-8f53-2cdca556764b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbc5f97-670b-4f69-8667-76c3de6f7ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f620b9-db66-4a07-bf09-6098464a5ee8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c86693-e083-4327-bb1e-a6e47d6cf1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f65ab3-1fda-4fa8-9301-b21e9d3d176d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7eafcd-0986-4fd6-bd05-3be0bdbebad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13267965-9669-4e55-9c7e-de50e823cc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a247878-940f-43a2-bc15-4c0db80fc879",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae897fb-5ed4-4792-9bf9-d674ed4df69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e073c9f7-1b69-4b7e-94aa-cbcf14eb8e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfa70cf-414d-4a4b-94d4-3b61bc7d9313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bebfefa-63b5-4e8d-a045-b104fa3cab47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee7630f-f23f-4c4e-a3a6-94a514caf590",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3783d0-5934-4eb8-a89b-02d617d32532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d45a3d-a16a-4962-8610-48ccaa35811a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2e6e4b-a224-4fe9-8db1-1a0a89eb5f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef16bc9f-a439-4ce4-893b-b440de96287a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df484328-598c-4532-8a95-1ecd1c278128",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94e9ed3-6e5a-4f81-8fca-614321beea4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef65cb2-2b91-4b25-8c6b-330d7ff7b16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35eed3b-83bf-469f-af63-a3339bca464a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc00810-9600-484d-8ae3-4f631c97618c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20ffe2f-f11f-4942-8046-f375d30fcdbc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadc3e54-d9f7-4355-a94d-6e8532367745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7e9ea6-0670-4e7e-be24-e59ff5658c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee758ef0-0efd-4324-a34f-d5100ffd8a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "42b5ad2e-bebf-4955-ab31-f09a97fc4d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e6fea2-23b4-4890-b906-20af9c9a0a69",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f36296e-bb3f-4b02-8424-5a215caf9937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae4ca86-b88b-46f3-927a-2a456f3b4994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7bd6dc-b2c3-47d8-a9e9-9aee5024577d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dac2806f-232a-48ae-b855-5653f44f884f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44ff1e3-44d8-44c6-a9d7-0419db0a410e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a48e66-a0e0-4b0e-abbb-26384c1681a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce57a13-727e-4434-80ab-d4a38f75b1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcca34e8-4dc1-4fed-b598-041c17b31977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6196e7f8-04d1-43b1-8b34-b1824a227164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5148d4-128d-46b5-a2ff-d8b1e703023f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9dbec9-276f-4a6d-a1a0-64d5aaf553cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c8afe8-b574-47df-97da-54434ebb8f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f1dc71-83c3-41cc-a25e-9d39d5c2e981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a508543-82e8-4cc5-9c46-f7e1cfa68677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec32d5a8-7ef4-442d-8db2-2fb3c3a94380",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ab4547-377f-434c-96ff-b568484ed94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1115436-597a-46d3-a8a7-ae69c6a2b5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14652e78-c5b6-42c0-9076-2ace89dfd0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "88ee09d9-84c9-458b-adfc-9b764d491118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423e02a1-e83f-49f1-ba69-ae5412e31154",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fa063f-b0b6-4d5c-92e5-1edbd5549a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dbf7438c-285e-48b4-a7ea-cced4b9b8e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae495906-ec0f-417d-8444-b99e83f9508f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "503cb36b-b705-4fa1-955b-a7defc2f9923"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "63f95590-6304-41a0-bc00-bd9377c2fa09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3c77a27-8397-447d-9e3e-ebc19c4dde33",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672022bc-2e62-49da-b4ed-a3f46dad9c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bd52856-96f5-426c-a7ca-b97b0567c5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f02e7d-dbc9-492a-bff3-972eeef4a93e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c817c87-d254-44e4-972d-968d299c89b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13491281-c683-42ce-bca7-3620f6db5b5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d01ce473-664f-4d3a-b214-aebc442fde29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7410f5bb-1039-4c66-8dc3-1358c7489b35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0051fa1b-a44b-4a3c-9e41-b7fea0a7c9f3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7e6bb03-76e5-4f4a-b9dd-637208efdff0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13c51242-f4a8-43a9-a7cd-7648be4f45af"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "46cbfc94-6bdf-42c0-844d-bf4ba6bc13db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a2f6fac-1660-4750-8656-58a99cf0fe1a"
                }
              }
            ]
          },
          {
            "id": "8e4dfe16-6884-4db4-9fa7-4b1592d9b32e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2eaf6ec0-f5c4-45d6-83f3-eee5b48768da",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1804ec5d-e30a-4f3c-ac1a-07501cba882a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08cb9de-dd31-47d4-914b-19839838a1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9bfd9a8b-e8d6-4547-bbab-1efaf1141ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1598b0f-32d0-49b8-8623-17afeff03adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb5ee48-b2aa-4be2-acf6-868b842ec2d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a952dd78-ffea-4e45-ad0f-3f19ae0c054d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d87e1823-7f40-4dfe-af76-58291ed92685",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd2ff83e-4eba-470b-b56a-9630c7a8f0bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e94fb832-ac3a-4061-84df-29b48b80debf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e8f83efd-4c19-46ca-ac60-c4eef0a96cd6"
                    }
                  }
                ]
              },
              {
                "id": "9ec45d35-b997-4de0-9b92-583e573cbd21",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0356a930-dcc0-4ba5-9ecf-60c1894adec5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "766f8b4f-3532-40ea-9da2-055676ea87ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7fd2749-c1f4-481f-aa3e-bb1f7cc39462",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cdad3195-e513-43a5-8c3e-3e029ae60635"
                    }
                  }
                ]
              },
              {
                "id": "7180de4b-359d-4f3d-a43e-e83a53918c98",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b058790c-404f-45ac-8926-a279b09bc0cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c19cd53-687c-414c-ae09-55be9da7f677"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2059a4a8-5269-4cef-b271-7fa6a319eb3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "737ec19d-a0c8-48a9-a64a-1a315caac820"
                    }
                  }
                ]
              },
              {
                "id": "f07e12e6-1a47-4aa4-9df5-04e6ccb80825",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74517111-4749-4987-b512-05495f3abbe7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ca232d1-e63c-4c7c-b54d-3bc8ee5863b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ff6a26d-d53c-40d2-9712-e4748aab8d6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6a5cf788-e6d8-4e42-b6c9-a7dc402fe431"
                    }
                  }
                ]
              },
              {
                "id": "ec5a7568-eea6-440c-8c93-ee16da27c4f7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcb305bc-36d8-4b38-be56-12492bacfc0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "011f399f-3482-4481-bdc8-df27e87d5d24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e55a57f0-3b45-449a-ae6e-3930021a2f56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "98c7b821-38e6-4ac8-be73-ac4f8e9f2043"
                    }
                  }
                ]
              },
              {
                "id": "8e514fd8-cd6c-41e1-89e6-61e51ba8210e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23da314c-9a27-482f-93b9-1baf9e24809f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff9324b5-ac74-45ca-9120-f98678ea2ca9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecc60780-a63d-4c3e-a627-97e78228288c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df7f0691-8eb9-4a75-940e-3948386ea05e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "53011806-1317-4829-a634-f41a609569d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c5f10b4-e632-42dc-977d-11ce6389ea39"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8747ddeb-c8d3-4019-b4b9-1c184084a3a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c54b55ad-7351-419c-aa97-65d68aea7f75"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b74db966-3226-4abc-8629-000a1d9b7fd5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "544b8b04-f31e-417e-8042-19b817699327"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e470e332-e4b8-4b6b-9bee-dc56a6ee86a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5db71694-a459-4b87-96b9-4833e49072db"
            }
          }
        ]
      },
      {
        "id": "0822edfe-162c-4da9-b9fd-b6d0ec03276d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9c115561-6eeb-4ed2-913f-b2d17fe46393",
            "name": "Negative Testing",
            "item": [
              {
                "id": "659be37f-4cec-490a-b700-a88bec8d734a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d3fd7ca-354b-4f77-9ab5-b421441838a4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cab8118-c777-4294-b687-9ae84a354d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344b661d-58af-4052-befc-3eed433c48a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdd9300-f606-4d57-9204-7728c937daec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "64c4fa0b-69d2-4879-bc1e-a88f384179e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584c6b92-350a-49f6-8f21-c9031245b1c4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66894f4-326d-426f-83e3-023b5486ce2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85778f5-fb89-49e9-b8d9-a2de9c638b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ccf7f1-99ba-4459-9600-13ab5a504fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1057c9-fab9-46a7-9e4d-59aec826a1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729d7d3b-ea42-4c62-b1fe-4ea4265f446f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffd9753-2ea0-4c20-bc96-790fdd9231e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59ca986-cb22-44b2-b573-e7db3adbdfdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8835fb2a-441e-4f58-b8e3-276881e8b726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2e8cd1-9146-42b1-8f61-a6764ac51bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d074639-e877-4373-800a-c6572fd8e8c0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5cd28f-7d04-446f-b947-a3209d6b17fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e778a4-b253-4806-995d-bda9b493ed91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fac098-5820-4000-9f63-46cb52e48c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e93190-8757-4b7b-b1b6-6a7c8a0fe957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8959641-4373-40e7-b50e-a68deae3a650",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9595e768-7fe8-4d5f-b998-753a1e1108ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a043dd-2f7b-43a7-abbb-5fa6a28dd413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8c67bd-02e6-4100-9111-d2c7878d77cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7e1541-e0f6-41a3-9d41-494e0c1eb9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34eb478b-17a4-44c8-ba0b-395b373931bf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870d946f-80a3-442c-a4e8-a3364e8ce681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769baa31-1c09-4ffa-b8f8-a69c7088e2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aba631b-0c03-448a-b970-88077fd7ba35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f61228d-c97d-4871-9566-5603e1f50593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a64b1b-3e11-454c-9bea-f3ed241856aa",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f587f9bc-cdd5-4776-a4af-869000ed5d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eee2470-98fc-4972-911e-cee506f20b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c314318-f00a-464e-b0d9-a5aa97e92104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b23cc54-eb67-40f3-b998-ce4cb93dc8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b318c8-ef2f-4d18-aaec-05d3e52c57b3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf539f8d-cb32-4303-9e72-106b98632623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5689de10-8578-4082-9a65-23a59b585790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9267b994-fbd9-4e97-8417-edeb00c9c0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f92c228d-13d6-44c5-8b74-fa04ee1141bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d357d7-cccb-4fc2-86a4-70955f7105ec",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54eea25-cb7d-4168-91f2-042bc7553c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d977a5-4d9b-4789-b08c-a97e425e6131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29812e2-e06c-42d9-b376-925701ae4b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4db932b2-4c30-4178-888c-63b2e94a20b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3dcdc7-8913-4d8e-8c63-e0c3ce450457",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5661fa4f-0f32-42e1-8406-7665195bbf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be963c34-de75-4219-aa89-26ee2fbf3a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d526fa27-0362-486f-bc9d-ae6f2e22e923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b50341-7c26-477a-b2f6-b23cf9cd130b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37fdca1-554d-4dfd-9764-d182443a303c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e39686b-d117-44a3-878a-376c27995229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70279c89-d342-41b8-8b9a-0718b0c0b67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b68b5bd-4c3f-47b9-87b9-3da3c0f9639b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c95b90-6ed9-4c75-9369-740b43ab0312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5b3999-55ac-44a5-b81d-abde0bc5be59",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1963e63e-8742-4cf3-8c6d-40114982d9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be28ffe-b187-4a3b-a563-90e0ee5739af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31afee25-dcc7-4fe0-9675-f03692f7fb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f55b14fd-f98a-43df-a1d1-bd145cb4fce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53a1a80-1d43-4ae5-9037-17f08c7bdad7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c4bdba-2dad-492c-b8fa-65f813224c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6be7f4-411a-48f4-bdd3-002a869fb505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82817e2e-abe2-413f-ac41-87df87cd636d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc353af7-b5aa-40d8-919b-7397e9d22add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7656317-4135-4580-901a-c1c73956338e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7831a55-5e45-41b8-aa73-d6b81174783f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbb2ce1-5953-4376-8829-75441e5e7e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1c7120-1f6c-405b-b4e3-3df67356466c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5aee1c8-fa2b-44e6-b688-dadd8b7f4a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50058c7-7587-458a-9f58-5736a6d85675",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac1a0c4-ed84-4ee5-ae41-ddc3266f1f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342d89ac-f2ff-4b8c-94f2-dc370c411cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a88afe-7cda-4e41-9eb0-511037fce028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f585c7d0-4eb1-492e-8e6f-d4e5361ee6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe9539e-0526-4879-880a-eef01abcde31",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02abada5-14b8-44a8-9f5b-5068fe34c249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70e6708-f535-4dc3-ba57-f6f9862cccab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a057f9-75a6-4d01-9901-7ee07d8f47bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd4ea62-546d-4bbd-9e9d-5eefbd667a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2229d596-624c-47ce-9df9-226ae616c06a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e35369-2d7e-4baa-b415-c4f2c1f92c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbda6451-5e75-404c-9c3b-75291c4c879c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6e32fc-7a81-4174-b5de-e5df0ac305cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9df8b5e-4e01-4d6a-94cf-bd16e2296bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d03f200-8fd5-44e4-b593-585d68b8fb51",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea83e80-1cad-4484-9c02-e8af188fe14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e21078b-7742-42a6-8ccd-19bdc9c636f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc46b3e-8d1a-4ad4-a304-e387bc4462e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bba3dbf-a55f-467b-911a-b5d22cd1617c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e500bb-ed47-4d71-89f6-0d377f3d62c3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febfa2b0-dfa8-4519-8f74-9ba1e596a1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7f735f-736e-4bd0-a21b-e7988a3b79db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc41d63-5ead-4ace-b87a-d9bd5726bab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "256911b7-e8bc-4651-8ca1-ef722aac1cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051d9013-3a3a-43ff-986d-11a111f7412b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9a236a-ef0e-4518-8cb5-a1035d9f3873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4f634a-f93b-459d-b62c-ebae5d32983a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88f862b-89a7-4e30-a070-a89a4abbe031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a209114-dfc8-4f6c-b953-b07e66f0c3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d20b5d-b5a3-47c0-b5c2-902fdb56026e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bae8ab-db70-4ea7-bfe3-26b8e3d746c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d9b49e-62bc-4cf6-a8a0-cbf6d61b3ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07be49a2-c19b-4fb4-865e-9442629f4c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb51b3ee-e181-40ef-ba11-5d8a55fcf73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eae5d3-ac2c-445e-adc5-27df7e0f027d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8b7489-5923-4d72-ac15-49ed3ec320a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3711be2-1ca9-4be8-8e7f-7e7ba2ef3cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450fd2b8-c132-49d4-8231-14d3989b8c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d95ac1-3674-4d2a-8595-23851957e12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a991bd-e064-4b62-a0f7-85b48640ac9d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a90a8c-5b13-46e7-909a-9e16dd06b1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcca832-5237-49fc-be07-0d137ccccecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce74498-516e-4334-a3e3-607ceeb81dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3752471e-afe5-41df-bc19-73c64596b170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc40f5f-d151-4dce-a40d-c78538ceeba4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed2f838-a69c-4f28-9660-b58b8744a78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09142480-34c7-447f-bd6e-3a808c03fdf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7392c740-4949-4fa9-adea-6f7c2e0d45d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "654aa3a2-0c9e-4191-9374-fca1cb1399a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50040ff9-edfd-44dc-9e4a-e3e6e9f9d9d7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70270c13-eee6-42a2-84e0-4e6b2fac7619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f457715-be80-46d3-8d0b-17347e56bf5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd44b1b-8158-4eea-a71b-f583b7bd26f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef273e3d-e0e8-435e-80f0-1b1706c9dc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d3f3ee-f2cc-43df-9f65-32286921f1c5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dac192c-0c63-4b73-97fe-22e3026a7428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a591a80-c475-463a-8de0-a226d280e17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c7dd5e-9ac4-4f27-aa6d-e128f2e28892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf74058-80b1-44d9-be8f-5b659595ef4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b7a117-93fb-4960-90dd-7337fe0b5a69",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac55e04-1ea0-4d10-86b1-1b0ff8d53a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53484602-5b38-413c-b427-c9dc1ef7912d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8ebb74-f16b-4926-865a-0fb44c03af6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "409327f3-961e-45a3-9321-83fc38ad0a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661ed241-325d-4f16-8576-9aa098a33ccf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4ad2c5-0549-4eea-a522-381e9e152884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7b7c73-584e-413a-b9c7-389ab15f7f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4467ab35-4ea3-4dbd-88ef-c8af9716bf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd32455f-251f-4a2e-ada4-394edc4f31fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b953ba14-18c1-4b6d-a168-e904cf4fa513",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e90c2da-919f-4486-bca9-3fbe05ca4eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977520ec-3a8b-4d5d-b3c3-6694c2072315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57f1e37-683d-42f2-89ce-477a42d87720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cbfdd8-a00f-43ad-86f0-77b678f71f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273e52dd-8c39-4b99-b84d-599dda1fa51c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c025718f-3d7d-4dce-952e-f23a7652d103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ee32d1-3fff-4999-b6ef-fb993e3174c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5521e225-dd15-44f3-bc61-831af1a5366d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d425837-3c4d-4ccb-b77d-602c6f219ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3806270-c3bf-4f2a-bd0b-9682ea800749",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fa5d36-5b4c-4707-8db9-dfae1302c74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c468b9a-3552-48fe-9c44-06cc9ab162ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8a0ed9-2975-47d4-ad8a-377d5ec8ce42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce304e91-6e1a-4414-9705-d858c7f50aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c23876-4d7d-42b6-9676-47906dd3133c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9c0a56-fcc6-4743-a88b-79764c46904c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02940db9-e033-477d-89e1-ec08ed2c68ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0899f19-1a77-44f2-a1e9-92ecb2e17a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e75c426-fd01-4579-96af-ab4143b431fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13eadf1-747f-44ec-9c51-0d84b85ecd20",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be52cf34-32a3-4f7e-b9d1-77cacd4d67b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c188fe-8708-4f66-84f6-0abd2e84a09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9737ea-641c-4acf-973b-ff26cd3f5176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbb6221-0668-41c9-be9c-ee313413fe89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3729da-9d15-4406-af09-a7b33ec5075b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7a3989-45d4-4dc0-b073-edf1cd7d68f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67b0999-8acc-47de-a1be-1d0cdd6262ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a631f1e-e0f1-4fc0-9da1-a365fdbac412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "250d74f9-6a75-47c1-a853-10df5b0b79dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3edea7f-ad8b-4179-be72-067cbcafd88e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2646414-f519-401e-ae09-6a06cd8caa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4526484a-9399-43e7-9ca4-80c42b9b7ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2964f610-7344-4564-9cdd-6068f1a5ae9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd58d73-b853-4baa-8edd-c3016cf3a8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0d8cd3-e4ce-484e-af2d-12a19d148194",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb45bbf-91d6-4abd-8dd6-51738cf4f4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e9552a-e83b-452d-af6c-d84d5cb9108e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200d3521-6c33-4e14-a2b6-b833643a583b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d47a4181-35c7-4fc0-a1c2-cb694dbbd980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9183c749-e9d2-4538-ba05-60ea8cfb4bc1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83492cc9-0fab-475a-b5ac-5e285e1a5ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f60e87b-3a77-4423-a8aa-7abc855bf3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ab77f4-7254-4c33-9b4c-56c2bcd01ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5a743b-2769-47a0-8551-c7a2aa25f3f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3b943f57-8405-4b60-aa2f-bc3325018641",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64090c82-718f-4192-babe-1b7b54fb7fa6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b33a00-8b45-4763-a843-d27740feb88a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5a7c0b-4461-49d5-ae2f-981d4b225ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28e0cee-66de-4fc1-b30a-524c209856fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c296e01c-495b-436e-8cf1-eda78e4030ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cad61f56-263e-4580-89ec-5db7c7f25424",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7599ac0e-dc09-4a18-8b94-0d8d762d011a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a671231-68c4-41b5-9ee8-0d38a5015fe6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aa648f6-00ae-4c9b-8652-7d14948828c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4ecaca8-b33b-4383-9c80-42ff73e10b0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50d4de8d-4078-4697-9e0d-0810f28bc8b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cc547b1-7097-4118-a92d-7685739d93de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64bb7e65-bd66-4ef9-b71d-889df9f630c9"
            }
          }
        ]
      },
      {
        "id": "0c1713d6-e7e4-4611-91bf-22a9ce670aac",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0ca2b642-3eda-44d5-b6bc-666617d7d28a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fac4519d-c78e-4de3-a00f-e288e8f86e8d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc47ca99-2c1e-40b2-ac5a-851c0bdeb22a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1444d131-69a1-4fcf-85ab-e16af509e91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db014d75-9e23-44ea-ad8b-9349ea243eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b5abbf-9ce1-4981-93e8-00a460f282c2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d892ec3b-47db-4488-ab17-8e9f1cb2b39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7201191d-a1fb-4e8e-b8c0-d080bec52477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6293484-c08b-4b24-b06f-753e94b9b6a8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8995bcc2-7377-4f60-b6a9-213fa1c1c3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95461c1-5d71-4daf-bad5-e3fe6e085dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4484c722-19a6-4d84-ab7a-12663a639797",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597f70a1-9b23-48a9-9008-87f7c9ccb5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d99b859-791f-43a3-b396-ef09fe7e5d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8027874c-4c7a-434d-b66c-f527290bd87a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5337d05c-4709-4e6a-88c4-a71704853c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d003be-4135-420e-840f-e9661a3f797c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3277db0-f5ac-4865-bcbe-6374514f9f17",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b285b7-ba4f-4fc2-89a8-094d47af7567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3f5289-0088-46f5-a6de-fd41d1eb4317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d9321d-5e0f-407a-bce2-5c0cfdca8458",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9542f48e-49a5-401d-9803-f53aa299a27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8326488e-866a-4752-8f9c-e2c34f07aaea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b50b412-45dd-4e02-abd9-783d0fd342a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc0f6a7-3a09-4b4e-ac8c-4dd1b03e8e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d99777-ea96-4827-bda1-5261282f45da",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1be8fd4-4799-4389-83b4-dde83f93dfb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6df7c2-2312-4649-ab91-9c28a156e3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785e5441-81f8-4b94-8aae-e44fc3d46448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6710fd-eda5-4811-b0f7-4e54fb771807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c398f06-c9c8-400d-93c6-46d174b82341",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c30ad2-fa89-4f27-8d73-f39d2ae15760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1635c033-22f2-4876-81fe-2ae5159c7576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91033a2e-4c8b-4565-b0b2-03c01f2fe972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467bbf6b-65be-404d-b364-514fcfb45dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7848d7-3f98-492e-82bc-7e0723a8a570",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b211c50b-f442-42da-bd15-05b6046c166f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b25c748a-edf0-4448-af8e-f5355aed434b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24923783-f185-422b-b285-0aa794d8f145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd6d764-64b3-483a-983c-3284d4f92ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22216183-7772-4421-8909-b03a86a7a4f3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df8aacf-3526-49c3-931a-ea60b7b646e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4795c3d5-889f-4e4e-96c6-bd028825d1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29609134-13b5-454f-b48d-55c413c723cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a76a4a-9639-42e4-9c5e-732b3b94e87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad2f291-354f-47a0-8258-e51afee34983",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3571360e-6d49-46a5-b16d-19413df03c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b70fc33-380e-4e8f-ab96-1c33fb7d2a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8f4193-7de7-4ec5-a82a-19b32cba0afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a50e6bf-1902-4397-b8b4-e169d2fbc854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c8bb08-1221-4c3d-b96a-2399a9d0fdc9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6bc62b-6039-4d4f-8133-d2545688a276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ce5073a-b39f-4869-a240-a583079231a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba69412-bc0c-42ff-a418-a709f38b2152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b21fd79-ffb5-4f8e-8804-6e5e15782065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e11b5d-ed2b-468b-8def-fa198aa8bcad",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce96d25a-7787-4ba7-990b-ad8c0234a965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b34be3bf-755b-45cb-ad60-00bb063f68ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f75aafc-3f51-4c4f-90b5-f6a823e7efad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11409075-e2e4-493f-8494-06681f4ab6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b632d9c8-bbb4-4e13-9b3e-d63d8cdf777a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bd2bf8-4d8e-484a-8d78-6b59535f1900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69abdba3-862c-4459-b7d5-5861f558832e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ebced4-3645-4799-9c56-45702a4edda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abae22f9-ed8c-4f7f-ae72-3f25874331fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95684bc8-6173-4731-96a5-665bdf64d029",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502224c5-502e-4fe7-9608-a14822f544b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d233813a-9849-4f4c-a3d4-daecfc66c4af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fe972c-5167-4184-b3f6-973917a8207e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27faa9a2-51c4-4254-870a-69f9369d1c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8334dc33-bbd1-4f0b-a956-a6d53e27360f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe26f4d0-a9c4-4c8b-9dd8-e2b7e562da6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7811ba-5361-4c86-8642-67a3b4242571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da28cbef-97ca-46ad-8807-50285f848be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245ec766-9d94-4f3d-8eed-05650f622b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1d9894-87a4-4961-926f-12f380d04467",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f350857-4ea3-4b7c-b1b5-28fd82dbb613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403c29f9-0c2a-4393-9904-778c9e3d3886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9327ac0b-4734-46f1-9dca-1d282bed6b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea47061-40fa-4060-8845-53444998cbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bac6e54-f515-40d1-aed1-6a17c48a1de8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfaf08c0-dbb6-451a-8c06-705fae5d00ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c79e33-3380-46cb-9d0e-89441166a1fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcd3a0d-2908-45a8-a386-e40293834125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c65865-e556-4512-9a6b-602b7baec5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73710918-cb18-417e-8b35-2821f2858dfe",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6962036-28e8-49e8-9e57-ceea16bf1022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9874da3-efa4-4a0f-b3e8-c154040b8f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05a98b6-f160-4f2f-ba12-4596f04f0925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5e5994-2b07-4877-98eb-611e01e068f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212209ab-d3ee-44a4-98ef-7d1598897dff",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07772a26-c5f5-48d2-94d3-5f2ae1ece620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5adb526e-a892-4adc-bd4a-6bbb2f6bbadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bb1f91-5277-424f-96f5-868f95b40d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccf02bf-f021-4739-82fa-bbbfc1d45a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd6903b-bf67-4bac-b18f-160f2188c8a2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f889ee8b-ec79-4724-9bc5-b32788631877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1604e6ac-4c40-46bb-85b4-a8c7c2000109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20331d0c-3ee9-43b6-ab1c-52af45333e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5f0112-4323-4628-856b-3f0fa49817d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d78eae-1513-4674-aadf-87c9e2090a1a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8e43c8-d4fc-4b05-b014-246c6bb7d26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e39df1a-435d-46fb-97f9-d9499e55598d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062eddef-01b9-41db-b30b-cd21fefddb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1426db7f-0396-4a66-98f1-3ca40186e0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10bab31-3706-4391-9f0f-b46c6ff66a00",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb2c37c-fa2b-4604-b16c-109e3db7fb62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f791a15-cc2b-4c6c-b492-c484d3d5ece0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d46993-40c5-4cff-b64e-fc822a62c721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf222fb-513a-4c08-8250-6189adf83f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698206ff-4626-412f-af06-4f66aaccad41",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2dfa2a-da48-4e1a-8ae6-07be5f31420e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1d7149-bb36-4ef9-bad8-38a2a27228d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2c275f-3132-4401-9465-80a94bbfea0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d77a1c-fb68-4904-909a-fa66a9b405f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cbbb61-5cb6-477c-9ada-b884906cc366",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbfa932-9684-4231-815e-77009ca378db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62d93e1b-cd07-4d36-abd2-941a53f91a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6902b5ec-d138-4d25-9ac8-58ed4ba8093a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1454c0e-b20a-4886-8a7f-3c7dcf3b3856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac7f2b0-eb26-4940-8620-1369c5d0439c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c627ce-52fe-4f7a-a49b-d8270c91c075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d100eda-5614-4adc-a407-9e84972d1a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6e0b48-b451-4f9e-a7e6-af48603ca405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eeffc84-a9d5-4770-968f-18614c66de24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db701903-9a67-4f33-b4ae-eea86b4036b5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb37b7e4-ce51-4b88-ab19-a1fff8f1bdc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7a8985-5e91-4815-a754-e5bce38ed434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361d4768-9dd5-4e30-b4c9-f64466cc365d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0336f183-b9c2-49d2-a77d-f471a5c3210e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a527f4ae-3fb3-4996-9e99-1786ef3aaacc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b06cf7c-abce-4041-9b2a-c344cf3dda4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dad90266-0a78-4033-8bb1-995f555ed5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1abbc7b-add4-47b3-81b9-e3ddfa5a7cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c448bac-f4a1-47bb-bfc6-60e2255557bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3bcd57-7c77-4515-abbc-be3e106ba5dc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bf51b7-8838-4dd6-8f9d-418e6f0788e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2b6e156-5062-4979-955f-c2d34a4f5378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7406de86-5b9a-49c6-a67d-3313f99ebb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72314ceb-2698-4028-86fd-032377683dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a90ebd9-5428-4fb2-ac63-3b232d4b367e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d28faa-fb85-4670-839f-50c8d839b3c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f28cb105-912e-4674-b753-b932c80dd232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "801d4cc6-bbd8-4076-82c4-51f3f8b186dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c4c8cc-ffe5-4dab-9c9b-5f6edf080c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7bcd44-1d20-448b-86f1-261f23471c49",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68549fc-1bdd-49a5-990a-b61be349d3af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b430a4a4-6bf5-4e81-a8ec-84a49f979be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76aa049e-ecb5-4084-a5b4-043916d0f8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7eade82-ef97-4eb7-84cf-276b94c4b44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e812dc53-264d-4ee6-be0e-1f0343c1a1cb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74b14e7-2cba-4d0d-ae4d-fce92cba6bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ae7f610-1e4f-4c6d-b158-a6b39b1d3f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16819d29-aee0-47b8-b00c-7ba84abaf5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66dcb702-5869-4668-bea7-d3527d93f7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8959b99-7676-4e7e-b8a3-b74ab963798c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5455891-eac7-4b06-9616-683b0a31419d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25cd6847-66c7-4dee-8168-4967a6ce26b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20df5258-88ae-4513-af2e-c656cc1c0dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab60a53-21d9-43b8-a0ac-7bf70472dc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f96827-bf78-47db-af3d-a36c03aec2b1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d449d561-acaa-4e0e-abc2-8d82536342db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebd8d5b-5eb0-4e6d-9485-b1b135243fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4d2e02-c4b3-41d0-a86e-39a2d69c0f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c51aa0-752f-49e1-b162-02bcf8613490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bee5263-049e-48d7-8777-5c7087a8f7e9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ae61a7-8ea2-4244-a5b2-c9aac7d63089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5ed78b-06db-4199-b9b7-6133c88b4ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466f0b24-2850-47c9-87e9-711c5659e356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffeb08f-c131-479b-a71e-0f94bd5f3efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce8861d-d185-4dfb-a97a-3cab63c26869",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d1769c-f23b-42a5-ada4-404372903c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f504929-4894-45a8-b28a-e80790c3d246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6382bf-ef86-4418-9302-5a55e87303aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858a5694-29b8-448d-8bcb-bd7cdbe0e718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60a8126-2914-44e2-9a8a-b26c4af620be",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d1a2af-4c65-4743-a2be-6229136cfc7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cb3554-5238-485b-a514-7ab7e6361328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a727376-6fea-4b82-91fb-bd68431f9c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67e2109-7d86-4450-9da5-1f3e8866577b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec856934-b938-4a1e-8f0e-eed05f36a2e9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c39b76-45c2-45a6-8968-9749caccec48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8f6972-4828-4806-be16-feb585ed2481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6266aacb-c9ee-4315-8afc-c640ca9231a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b8b9e9-2ddb-44ba-be1d-99bc6f9c2bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23a00fd-5cd1-40a8-8659-6fb225d64d6c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e44ee0-fb45-44b8-840f-429549e0a732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1d84c4-b821-4521-acc0-24dc26e9db1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d145351c-e4b5-4712-a3a1-017f885c5677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cbe467-7481-4d45-82ae-7429f387ebd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a9f8b6-5b5c-4bb5-a01a-b1c37eeba6e3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5a8d09-e222-4201-aa0b-48bf66a7e7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9a2fe6-c3e6-4316-9b89-26c8deeacd92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1215cc27-6d8a-4dca-adab-ad9ac4d8e695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c74332-cb1f-44c4-abcf-bb879d9aa6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c61b493-2ccf-4717-a28b-9b2a541d2a5f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f1b809-645f-4ecd-a33c-98bdb7c74e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7b30e3-7604-4b2c-b5d5-870a99c38bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cc7372-a508-465b-8278-4db4e999bb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd3a9f4-ac56-4c5b-aa05-324e5eb50caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2aaa4c-9b25-4a8c-bee2-08d69c659062",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f60d256-4cee-4730-97cd-92c371a65fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f36861c-4cdb-4870-a54f-176f249de863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049953ab-d227-4c4f-8d14-1d92849e1ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d24f1b7-aa34-4cf9-8dbc-a50e3954ac46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f4c1bf-82c0-461a-a39d-1b3f9b9be93b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9a2e60-f05c-4fc4-b689-f994d817e0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae05e540-8018-43cf-99e4-ca9ec88ac7c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e7b0a9-b256-4802-ba96-f0e41f935787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6db07c2-931f-4833-a85f-277adee1cd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc59724-2bb9-4ed5-945f-f3d35d06521b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78946ae5-86e6-42f4-a916-9cf0dde86011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee7020f-3209-4d8d-bccc-077713d39288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11fb27f-d8d8-4977-b5a1-2d04491737b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c18ad9a-d5c9-4723-8344-39c282da1441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ebc7fe-3c30-407c-b4c4-2e4b65b81985",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66255b1b-4281-4bee-82fb-c0aca811742e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a83dfc8-9c48-4b05-841f-661bfa671e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6440f3-1f86-4058-8999-f51c5218a995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94da509-a1ca-4697-94dd-5bde12ebd8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef54fc0-4012-4875-a8a7-1f36e8671553",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6ca930-fb14-48a4-890d-b1c1ca974aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2961a941-59cc-45e9-bc99-da4e0f08343c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6963b8d7-101e-495f-987e-bbe842dd141c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535b395d-bfcd-4176-b5fb-f037d19813a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f80678-e146-4228-8896-6b48016e3636",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8581d7e-e34f-4e26-90b3-5978536bd24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6e34b4-28b6-4ad1-98e4-0cfb2e66f1a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21cf2df-a721-40f1-82f6-ab0a4f2e1b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df7233d-a332-4d6f-b158-74eec6a31489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ffe9d0-e305-4a0e-a06d-035db6aa0c3b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f65f440-df6a-47cb-87fe-f68ab426f06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ef09d6-432d-4140-88bd-3497c9f22240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69d6ef4-ce35-421e-acbe-d122aa156488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116f2d81-f6d4-4625-a7b8-c14fb8eea254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513105bd-50e0-44c2-aece-17af28162d13",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16ea7ed-605e-4d05-930b-2a92a9e6cbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd31eb35-03d0-4e3b-9037-bac2683a86e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ce637b-8642-4a45-b0b1-4983a19fe15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a77976-e456-4fe4-a14c-856afe771d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9c4f03-6eef-4b5c-b056-d5c1e2fb95c0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3fddab-9fc8-414c-861a-93fdc4b7cdb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caba90d4-6679-41aa-ad1c-46a16c687871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed60863d-d76b-4f4e-a355-e9093f51b36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875136df-2429-434e-b827-e76dd2b93278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b288d5d-9fcf-48b3-bee9-001a007782b8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261d1fda-20a4-48e1-9156-70d3b02931e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fce87f9-2a84-41e8-8e41-4ca5b71cd8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a949917-a1ea-4b7e-90db-b46e9c782175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0caef3f9-3930-4557-ab09-e7083b006d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92aaf50-b300-4994-a031-d537257a9e99",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a837f0b6-7ee2-4970-b370-d6c76818308e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c662abe9-fde5-4d86-85e9-ad4685578173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c473f3-de36-4ffa-9ef1-5b24d9c1f761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b2527f-ebac-4076-b46a-124022e6c9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae73c68-0c0f-4ffc-8491-12aa2b17eeee",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f888f3ff-fff3-402f-8c58-cf5bb2120f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93a7094-3ad2-4acd-acb5-0045c322fd05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87652b1-cf0b-4bc3-ae2a-611a9b398ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7cf7725-220b-4e7e-ba10-b9edbe8030b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cafe7e-adac-4cc3-af39-8a6e93776181",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c6bc24-f9d7-429c-99c5-0fe4eea3f73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfb0d28-80b0-46db-ab44-29ad2da830c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3841798f-fa12-4e4e-b154-0adedd03c0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa00047-68f5-4893-a6ee-69be3e8cb7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd328f4-5066-4ce2-9037-fdb8f49ebdb8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8126857e-7977-4d3f-8c39-164aa4fce7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096aa1a3-064f-40cd-896b-d9207febbb05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1abfaa1-daf3-48db-86eb-0330e8313443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "defe87a6-6fa5-4c07-aee5-2986a634aaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9197bb78-2482-452f-a4b6-d48e22808dea",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232b9067-1d09-4a07-819b-855fa13d8432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc73e849-f82f-40b2-b9bc-556f16904502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b73c4e-e5ca-4382-a7aa-43a9106cb920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293440d8-5e8f-4ae4-9789-f4e1902aa248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce4d1db-1c2e-465e-a31a-6e99cb6eaccb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5c5eb5-2387-4e23-96b8-12cf2a47609a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f23837e-eec7-430a-950f-8d16c0daa6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8368be48-f528-4bed-8718-d191fa231e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be15ced7-9f6f-4f4a-b65c-7ee7e3d33548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12367236-b372-47fe-a998-b4d4437c5b85",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aa21aa-5ef6-4925-b127-05f50754b9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca327e3-e433-4884-bfae-e0ea3d856e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05bffaf-264a-4bab-800a-e89934cc08e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d43c5c-18dd-4040-b866-0304d3814171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b37df85-a7d6-4b66-a4bd-95c51eaccb21",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2359b9-1f0f-4366-a5b9-e63d58b27b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1834c49d-882c-441c-b120-e8dfa69c25a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff2a843-de6a-4b9d-b789-7077a60bc2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ce0918-8f6d-4af9-a4fd-0f1d3f59bc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831687ee-14e9-4e5f-b0ee-a59a29c1e62b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ec25ad-f675-46d4-8ce6-fc5649eae3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab69acb-bec0-40f7-b1b8-e41722748a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842a7589-5e81-4af2-9364-09cf3c2880a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661d4ab5-b16d-4be5-9ab3-a6c3d4e8bfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce198b7b-74a0-4d85-a37d-3fb50d1ce16e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205b5694-45f8-4a3f-9649-2f50f21ab386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357d7c82-da07-46e9-8055-f8b97f5f105d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b3690d-315c-41a0-8fdc-47f090cac23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b17b06-9631-4345-b68e-029e99a33840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a89494-ea67-4239-bb32-e8a2000b3630",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46a1244-aba9-4577-bbab-0e3f871ebd7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8136bb-33d5-4b56-b3f1-c945a96c98ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecffddc-5d5c-42a2-ab18-b850e5914230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f4813f-5eb9-49bd-ab49-69ed28397e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6bdcd9-e751-4a32-aab6-a560f234aeee",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbaab273-4c9a-4476-bf7f-a32271f8c86f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dca3fac-04d4-4727-838d-1105f8d13f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d43a3a-412a-4c0f-a6f6-fabbe897b11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089c5e9e-af4f-460e-bc2a-9cf306a3de9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca99cdb-d536-432a-9603-46d0bf5a8af4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc442d50-231c-4331-8041-ac4739e5e4ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb456c8e-7d33-4b8b-b016-2b726f55ac7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768af542-d8fd-41b7-b800-0e6b23bba821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b28ec9e-56cb-4d65-b4f2-4fb0019e05d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14bb33c-742c-40e2-bc0c-835f2e3964d8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74346a5a-4c19-4077-93e7-4b0cb2e50838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c3a5d4-27d4-4b05-a009-c277837e5c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d402d6-d518-4085-9791-61ee93a60d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af33eb4-235d-4a52-bbc3-0b2d69c87512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0f7edd-10e8-45ea-883d-133e8d78ca80",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351b510a-7375-447c-92e0-bfdbf1da3861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0be9408-0ce0-4ae1-a395-ee37af8960cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fecdeda-c421-46fa-9515-a1a2bafcb7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d167214-7a82-4cb1-9c65-2268bb74e99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd0c8d0-30cf-4b2c-9cff-6b7044f968ac",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a0c640-48f6-4c4f-b083-a3dac7d8e1c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f4afca-32fc-444a-b506-8502de9c2564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c9e54c-9c4f-47e5-ae28-6c9741f4fecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa51cc7a-61b5-4b3a-9328-7abd9b0d0088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec22f53-83da-4aa2-88b9-4baf56b54739",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c3c76a-d639-44e6-b419-d56be186d8da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3420cadd-b5da-42dd-9d84-778916b31a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2600aafc-8a05-4a80-bd81-4bebed129d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a1a318-1cff-4cdc-b821-28acd7ea3d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf68cd7-5177-422c-a93d-85e800e8c0c3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145d4b57-7770-42da-bf44-3822f3185c99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6feb554-0ad0-4269-a538-ce8d88907b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc842c9a-4034-4c6b-9eaf-18d7332e2203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e00337-b350-4c54-9449-8246d43ec649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3a87bf-0c38-426d-863c-aac53bd8f44e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245987a5-dbc7-4e1b-9191-9244373ac86e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed60ae5d-1ebb-4d45-87ec-985cd2dcc5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2be6a3-2d28-4659-bb90-b4911da08299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a36fd5a-667d-423c-87fe-caaa1eff7e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723e3051-185d-4da3-a6af-e7ba7c85d593",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25063f9-0629-4933-a6ae-8c2e19a7876b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ce82184-70ff-40ee-993f-33c01ee217eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90cf641-89be-42ad-b0f0-a11730804181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4243f4b9-2e75-4f78-9c3d-80ed077acb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c343af5-0d6c-4c19-88fc-bb26894208b9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71591696-e24d-4da8-a407-218b78ed6ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df30c2da-6737-48ab-8c88-dd8d4e6d3341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7eab0c4-30ff-4b96-a4f8-b0c5dd16b15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0cfbcb-dd71-43d0-83f3-c0dd7d8d440b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b63d78-10fe-47cb-9cf8-7ce99f057d9b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4574ae80-c395-453b-a6ef-c01ad4e7d062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ffc6a21-010a-46d5-9f98-c272e2d2de69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1fd80e-9f34-460a-8190-51d2b9030e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251129d4-5004-4849-9065-484858af6d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0f89be-7476-44f4-a521-81fcdb83c4ad",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f135a6-4c98-4dd8-bfd1-43c2659568a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3a27f5a-c9e5-4a52-b8d9-9b1ae9b46bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7008a1d1-584a-4612-955d-2d12639f7586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2153dc4a-ad84-44b5-b2a7-7abad2288c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4548986-268f-431f-b9d1-cadd8fe9f4d4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e77d530-936b-4af7-bfd0-66ccb98353d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80989f67-cc67-42b9-9e58-30d9cef4edbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1e12d3-cb71-4954-a7a6-214c44ef0f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fbe63e-0255-4b49-9f8b-a48aa9f94c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0a0db7-e4bf-43df-a647-b8a57180af18",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e6a28b-0c35-4544-b60f-03e89f8f8c73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02b028ba-1b19-4abc-b5f8-59e9e202f6cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f7c3da-93c5-47a0-b5d9-b245a92b2038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6337113d-d9e5-475a-a6ad-a5e24dc0d891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6c4723-c8a9-428f-bc16-127b2a3b3684",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db3dd5c-e1da-4fa9-a1bd-322be1b1a718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5fede70-ea53-4ec1-85d7-a7ce50a10e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8304561e-d734-4a0d-906f-9109b12a2300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244ee7fc-b7c4-4d9b-baf6-e656d1b75a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdb36e7-e15a-4c37-b249-6a0001eedb61",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ec9eaa-650c-42d3-bbd8-ba4902dd9d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c072f881-1b2a-4ece-8d17-3873a6aa36a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24f52d8-9783-4de4-beca-64cc59a0cb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c689f4-d330-4d65-b96d-f6146e057df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d34a517-d623-49a6-8807-46cbc7f9e944",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10155d8-fb74-4b92-b69a-13741228ef34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e76fe317-c0e8-43a3-8c74-a79e9c0a2b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2435b35-00a5-4002-b027-78592e4c819c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2697064a-658e-43d0-8d1c-fa9b7c50ee5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21707e7-9ae6-4461-8950-e2f814dbf83b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd36f78-36ca-4aab-a4d0-1996ac098f7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5553b392-08c4-4486-86ad-125ed3255101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d1200a-8be2-41d4-8845-312b0a1759a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8d2ddd-f008-47c6-8074-7fef590bd2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47d25d6-23d1-4698-b8fe-f2a421a89688",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea07402c-9f39-4123-b18c-916b1ff11a0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6778ac45-d3ef-4d37-bda9-7481de64dc94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d91b197-e68d-4634-990f-aa758bb3828c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ac88c1-a5c9-44da-822e-16a3f339ac22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7339733b-0e76-44f8-84a0-bcc2bb149043",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe20384e-3ccf-4bc0-9002-1dc74d8bdb13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d922998-151e-425c-b078-e33dc7f1203c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68b6b6f-bc15-4624-aefe-9b982382d5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be88438c-02ed-40b3-8de3-3afef2724ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd1d5b3-077d-4ad8-876d-6e5f80a579b1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925edcf4-1c44-4695-babf-adb46d28be03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c85b3ec-569a-46f3-9d1f-d79a358d38a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8eb903-4348-4b2c-9ad0-959abc70c6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8560e07-ff5c-438c-9246-c6fa34e2b621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53585766-32af-4100-83cc-f35dfcdee9a1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a722caa-57a6-4b4b-9b61-772cdf7886df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9d627a9-043f-48f1-bdbe-e1595d446c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6f92e2-87db-4fd2-8824-eaee401dd16c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b972d1dc-d635-46d2-be34-9b901baad5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c70648-5a27-456c-8fc5-df326dd39c64",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56373422-0b1d-427e-a42f-6124e17c24be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9f77f02-b5e1-4d90-b17a-70395809b339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d83604c-7a1c-462f-916b-b6285bba46e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249652cd-763b-454d-aaf1-be9070a52a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79772b1f-9064-430e-b64e-b8e2bb2ad3c5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740b4cbc-3e74-4f8d-af23-5c46d9271d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc3cecfd-ed7f-42af-bbff-7132322dc61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5cef41-ab62-4238-9b4d-35a0e89655a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7dedfca-bbcb-459c-98a2-64dc8c98f34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed5eb51-3e77-4d2e-b651-e6621b09891d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd07435-eb8b-4373-94e0-481c1f002f9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "212e2fc5-4f38-445a-82e0-34493a9e7ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8bdbc2-4d0f-4c60-9227-fba2e806ec71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9ad1f0-19fc-4b30-8bfa-9e684bb35eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a626e433-1802-44a5-b8c3-e08ac2b78633",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca7765a-1984-4cd5-887e-637049fcf6bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17e8847f-d27a-4c4f-9b95-fffc2db7e5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb98eaf-5a85-45d0-ba4f-4a5b325f4570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887ce373-48b0-47fa-a747-ecc380753fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba304c5c-171a-413a-8335-d9502ca7f46d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1736432-f3d2-466a-93d0-d760b235e8c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7623b81d-29ac-4985-9298-954e13c14e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a04b80d-082e-49d9-857b-0448a91fd141",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7060876f-c6e8-485a-b521-c48f7c1e884e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2364b114-87dc-465b-9dc3-2e842aff3516",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91ea779-5b51-4cc3-a4c6-08f965fbfe2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fe06174-fe01-4702-9f0b-81faea7f2268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9d5153-25a2-4c7d-b03d-50fbe10a9bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae600199-b969-41b2-9906-ce50afb5decd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6102226e-87e3-474b-b1ea-b82e4bf872d0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e57a90-d659-4bd0-b1c8-7e2d3dc4d22f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "779d61b4-422f-4398-9c75-f94cb3cbe0ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cf26f7-98b7-418e-bbf9-cf51749a962e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe7657a-9c46-49dd-8aab-4d06a87817a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a4de47-d6cf-4794-995b-d32893eaca4b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c1d712-3171-4690-aa73-2ac2beceaa41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60087971-9286-467e-9f77-acbe4fd020b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c448f98f-faa7-4225-9534-0db7163e3fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa14ff0-088b-499f-961a-9161eedb9581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b378a6ce-d44a-4364-83ca-9bef258eecd5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca16355-8b9c-46f7-a73e-0f45ad802e05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c55b4d3c-d6a5-447a-b251-dd1e278d7683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfd5f70-2c22-487f-9c31-55a73b04f7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16cf57f-771b-4743-929b-363e9e0fa0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620ac119-daf4-499b-88a9-7d28f7a4627c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651990fb-15fe-440c-b0be-fde096621494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6350f331-383e-4d3d-aacb-2ae7592d2696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16a10a6-2c02-48e3-8d3a-6ffe0c3af2e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e336aac0-3f68-47dd-88c7-91d23f8037e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71294bb7-6279-4303-a1f8-4a384ed62f22",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4681716e-d069-49db-96e3-3c2c91737984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbb7fdb2-7c36-4ef2-a44f-b1dbe6de8115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a23ca3-662e-413b-8816-27480787fd9d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fec294-f077-400b-aa28-d6c494fdc867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb83e254-cea9-4fa2-811e-401ed2c24db5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d865940-a81a-4106-a9dc-df0c99daeb53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e36196a9-d1af-463d-a666-bdd359831bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bd6849-08d6-4e97-a126-9ca44f018e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484450e1-0c94-4208-af23-2bbd899d88bc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "659e29b2-6f43-4409-913b-f8efeb367635",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05f406d8-a1ba-4af7-97b6-d08bb74ef6a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d143929c-db67-4043-bdf6-b9b23ed00a64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d422893-e2ac-49ae-81f8-9404c034880a"
                    }
                  }
                ]
              },
              {
                "id": "5f60b3a0-00d7-42ec-9716-c5a529a3512a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a111175-c491-4e50-9554-afb6e7549a6e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2136af78-9678-46be-a39b-d0b462587fd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0861ac11-b223-4776-8d35-4580d9ef0bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb320734-c82e-43a2-8095-2ccce34ecbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d4ea9f3-be5d-4434-a0d9-af09b8a5fb7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d56818c-7836-4b7e-800d-f3de7c90d5f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ceea9962-f027-41d4-bc90-17c9476fdc18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "935a33b3-e157-4712-976a-eba445bfb558",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad8c9381-3f66-4339-9ad2-1732005f5749"
                    }
                  }
                ]
              },
              {
                "id": "08f5c82c-5f0d-4ec7-977a-8b0687318681",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "929620bb-20c8-4995-9b3f-bae543f9a5cb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6719ab06-8e02-4f99-ab8b-f681c13b4ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9ed7fe80-2385-4337-ab2d-8456d25d09f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6540e20c-d734-4e47-972e-e58005e45814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0ac6dc-ef05-44ff-ac73-8e779e160d72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b79437d0-2ae9-4153-9352-e4f3f5543949",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7bd3d750-627a-4009-aac1-68553ef309ad",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "949ba9e1-3686-4df1-b486-99943db6bbd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "412cdc1e-dda4-4ff0-a863-49f8affb0ebd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2a7acdd-a944-4475-bebb-c08db27bdeb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adbc0485-afeb-4570-8b0e-8c419fc0c03a"
                    }
                  }
                ]
              },
              {
                "id": "a5ea4253-f487-4fab-91af-fe213a8297d2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a928a82-4f9a-4a2a-9bae-208c82b7b549",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e2e6a35c-13f8-421d-affb-c4eb1932a37d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b45923c-4cb4-4b57-a1e8-713c63a8e303",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ad8f326-deb4-4e33-b9ad-2bdfb685892b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92707fb8-0887-4ddf-88f7-2cf68b1b3685",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2320d6a1-67b7-4db6-8c41-70f00ca86528"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e55da14-48ad-455a-a036-972cbf08bab1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98e5d53e-4837-4e52-931f-c69a04dd501c"
            }
          }
        ]
      },
      {
        "id": "e0e96a4a-999f-470a-a328-dd378b87af67",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "173d98ef-31cc-4289-93a6-2645a3e1a1e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8819de8d-f0e0-400c-af1d-f87b3307ba16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f84ee4d7-3ea8-434c-91aa-093783936878",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424b21f9-1130-4a86-a84f-e9f12c1a8d21",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b6f6b2c8-32fa-4e10-91ce-5f0ed1ca4709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebae994c-3803-4825-982e-1bec8bc1847d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7c3546e-ce3e-4233-a975-645510e4c0a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a6aaaeb-dea2-42d8-a00d-088c6d1e26eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78452e3c-11da-46f1-a357-ae119605e1f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f43931f5-3e4c-4455-9e16-6aa6ef8939cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "570b8b52-61dd-4afd-bda3-62e003153b13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3324d359-1c33-49cd-9187-5d29f38b8702",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a1dc1557-7afa-499d-b16d-831561e4ccc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce035cb4-167a-4715-9e9f-f75dcf9dcd10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16ae9d9e-af0d-420e-8f3b-ea163df4933d"
            }
          }
        ]
      },
      {
        "id": "5e109c3a-1792-4918-a831-df8eb2748b74",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d99e646a-75d9-4fc2-b4c1-da6f236c9f78",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cb42a73-4f88-428f-b87f-4bff517ee706",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b6aafa7f-3302-4e01-bba3-2d655f1ba037",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f06ae8e-93d6-4fa3-939f-123e8fab1876",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de5ed327-c71b-4e71-8533-58ddd23a6360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc26777-efc8-4675-936b-b9ed13d7fe5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75d15219-bf27-47ad-ba69-b0deb8d9aad3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cc7bdff-0054-42f1-ac81-72c6ca55a3df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "082d034e-af6e-430f-ac95-9c756f66edf2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "272d158e-fe6f-4d83-8db3-bf34a8d3bcac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea05349d-c0b7-4c87-aff1-c37f8d057c58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a88b67c-e26a-4a54-bea5-97e388d35311",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "708f4401-3ee9-4f7f-abaa-b1c7960813e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a552144-b2b9-4083-8287-2ae972b5eb7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d45261b-f411-4604-95a3-be28eece3573"
            }
          }
        ]
      },
      {
        "id": "455c0cfa-62e7-448a-b679-6e5fdd73a78b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4da969ff-c19d-4afc-9680-1f8339cd847a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b9fd0f7-0e81-4491-805a-4085917f3f4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44f5adc5-0f03-439d-99a7-a7d3b9184b3a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e9e73e-2a20-4532-b6a5-d50a70fdf95e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07af2882-4e7d-4465-9329-fd0b2431bc4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab42c67-4100-4ccb-877a-b2c90545d588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d33c726d-6118-4bc4-be6f-f65603b54174"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcea6224-8207-4c53-b32f-4179d9254d09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8db4955-61ed-4def-879a-8b6e9c1483fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d9cb6e1-e532-4183-993a-844ea7adcb3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0160c94-de47-4f7c-af7c-d9eeafc20a16"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecf1c122-acf2-44c9-9b2c-1309073a8f50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "539904b2-79a2-4567-aa07-d9b5060c864f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf292796-98aa-4e90-924f-476fd5bf2e77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cacc0867-c132-429e-80ec-b58e4b45fdce"
            }
          }
        ]
      },
      {
        "id": "e53b43aa-14b2-4f35-983f-d117145ead8e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13c8fc23-ba99-4d6f-9573-71c15d881a6e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efd0f014-d795-4803-a617-c6c314bb2586",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9fee8c96-38e3-4358-a485-8f03bffbb618",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8246c008-3bda-4fd5-ae50-3ef958a1dcc0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fce4f31c-c1e5-42b9-81f7-32aec87683f2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 101.75396825396828,
      "responseMin": 4,
      "responseMax": 10337,
      "responseSd": 709.1573659119039,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722385988974,
      "completed": 1722386022748
    },
    "executions": [
      {
        "id": "a1f25c9b-6cab-4f9c-8227-4eef0402c9e8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cda472c5-ea86-4ba1-9ae2-5a63013ef6a5",
          "httpRequestId": "be8ee3ed-d21b-4677-b43c-480a5db52829"
        },
        "item": {
          "id": "a1f25c9b-6cab-4f9c-8227-4eef0402c9e8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8fae81ea-fe69-49bb-ae6b-98b188897a69",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "0621cd26-ff8b-4214-9559-0128c09e56be",
        "cursor": {
          "ref": "8c2c8fc8-1fd7-444f-885d-05f49c7c9d7a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cd851c71-b159-4141-a15b-6282efd60140"
        },
        "item": {
          "id": "0621cd26-ff8b-4214-9559-0128c09e56be",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f9029681-f16a-414c-b44a-8493b22bd623",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "7c00a3e8-7336-481b-988f-5b7b5afc4f81",
        "cursor": {
          "ref": "8cb855fc-d383-470d-bafc-cffe4116d226",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "486a73ab-99b4-49a2-b326-e986ae0660c1"
        },
        "item": {
          "id": "7c00a3e8-7336-481b-988f-5b7b5afc4f81",
          "name": "did_json"
        },
        "response": {
          "id": "6bc4d176-365d-43c5-8f0f-76734ba78975",
          "status": "OK",
          "code": 200,
          "responseTime": 257,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8378244-2cc8-4e28-ab08-972e6e5fc361",
        "cursor": {
          "ref": "702a0b7a-67ff-4ba0-b964-8101e267a29b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "53e1c5c3-30a9-4084-acc8-7b48fe208c8a"
        },
        "item": {
          "id": "d8378244-2cc8-4e28-ab08-972e6e5fc361",
          "name": "did:invalid"
        },
        "response": {
          "id": "d400fc89-df53-453b-8c10-50f58ce016c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1503,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8378244-2cc8-4e28-ab08-972e6e5fc361",
        "cursor": {
          "ref": "702a0b7a-67ff-4ba0-b964-8101e267a29b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "53e1c5c3-30a9-4084-acc8-7b48fe208c8a"
        },
        "item": {
          "id": "d8378244-2cc8-4e28-ab08-972e6e5fc361",
          "name": "did:invalid"
        },
        "response": {
          "id": "d400fc89-df53-453b-8c10-50f58ce016c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1503,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de66d17a-1182-49b6-a2e0-1ca473d6c30b",
        "cursor": {
          "ref": "5cd1686f-6367-4be5-9e84-675af897eaf2",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d6113986-5a87-481c-a75b-0db0c04c1029"
        },
        "item": {
          "id": "de66d17a-1182-49b6-a2e0-1ca473d6c30b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2a467d0e-2707-493b-aacd-3e7641c056bb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bfe0b1-b588-4bf9-9511-708aa1ca9256",
        "cursor": {
          "ref": "ed8aaa6f-a9f5-4ef0-b0b4-d5d5c0c384d0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0e76d210-94dc-44b9-a54c-af1a5b8d970a"
        },
        "item": {
          "id": "b4bfe0b1-b588-4bf9-9511-708aa1ca9256",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "81b48be1-f035-45e8-aed8-3d0d596a8010",
          "status": "Not Found",
          "code": 404,
          "responseTime": 202,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6734bfdf-14c6-4978-a524-c46ac3537940",
        "cursor": {
          "ref": "4bb1c4c9-e4e8-421a-ab9a-5c6c45c25bf8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "33797373-0387-4053-9d85-c9bddc6cc91b"
        },
        "item": {
          "id": "6734bfdf-14c6-4978-a524-c46ac3537940",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0bd45546-2fc9-45d0-8443-91a1297a855f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a3c37a-debd-4718-8a55-f8a10b49b237",
        "cursor": {
          "ref": "ef6bb655-fcaf-4471-b68d-86e84d5553bd",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a23b63be-f562-49b0-b996-3f26856b4777"
        },
        "item": {
          "id": "12a3c37a-debd-4718-8a55-f8a10b49b237",
          "name": "identifiers"
        },
        "response": {
          "id": "b371a9cd-cfae-4345-9927-0c920f3bbf40",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420ee207-6526-4a19-9f31-bb81e5d01571",
        "cursor": {
          "ref": "5e52be4e-fe7d-40d2-8d89-fdc078eadfa4",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a0332178-4a88-463d-a4bc-bd92b3b672fb"
        },
        "item": {
          "id": "420ee207-6526-4a19-9f31-bb81e5d01571",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "287a7807-fd50-4289-b528-37a968f204c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57ace5f-e03d-4d1b-a2bb-1948b7d12834",
        "cursor": {
          "ref": "fe9d3ee6-f160-4e15-b6f9-54a652afa9df",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "12c8afa9-90ce-49a3-b6f5-a20446ee27b8"
        },
        "item": {
          "id": "f57ace5f-e03d-4d1b-a2bb-1948b7d12834",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "255d7b41-b434-4df7-a859-ed7edb0582e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded1b628-d1ee-47fe-aec3-969b8a18552d",
        "cursor": {
          "ref": "d9e2ce43-1a8d-459a-96dd-65404e4ae170",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "eb449833-d0dc-419b-9f5e-a43b578d184c"
        },
        "item": {
          "id": "ded1b628-d1ee-47fe-aec3-969b8a18552d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6e5baed1-3b9c-4ad0-bb74-ebd2746cb538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15118d6f-a335-4e99-958e-09ff1c76d474",
        "cursor": {
          "ref": "1d88ae36-8c07-4052-8ffb-725f79676e88",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1d863aac-2425-487e-81de-4f8e45a2aa67"
        },
        "item": {
          "id": "15118d6f-a335-4e99-958e-09ff1c76d474",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9da508f0-af87-45c8-8d89-64fdefeb7b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3701946-3bf6-470b-86df-018c27e31a2c",
        "cursor": {
          "ref": "ad5013af-aa0d-4391-89b6-f3c334756c4b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4c01e01e-dd9a-4453-8bc0-5f5f86460767"
        },
        "item": {
          "id": "f3701946-3bf6-470b-86df-018c27e31a2c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1c11e98e-107a-4e71-9371-b0cbd908d9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d96437-7934-4003-abd4-ebc955a1ec10",
        "cursor": {
          "ref": "923071a5-a925-4bb9-8ac9-3a8b6bc2ef0f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2bf8cb73-172a-4588-8801-4ec7fb496350"
        },
        "item": {
          "id": "16d96437-7934-4003-abd4-ebc955a1ec10",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d91e5d91-2f60-4f27-a4f8-7350aea386d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eeedba-b203-4b25-8aaf-97c40fc43679",
        "cursor": {
          "ref": "5855bfc7-3c2b-4f5b-b0ca-7f0ea8471c3a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "66c931c3-0783-4a15-b960-47cef61caaa4"
        },
        "item": {
          "id": "05eeedba-b203-4b25-8aaf-97c40fc43679",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f7d5fd1d-27ce-4f33-9ca5-a2d2743b2583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e30e7c-cf7d-4e15-97de-747ca07fb47d",
        "cursor": {
          "ref": "15d444f7-245e-4fc7-addb-afc8882bb125",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "390966b7-4a7a-4fc9-9cc2-dbdc9961a024"
        },
        "item": {
          "id": "43e30e7c-cf7d-4e15-97de-747ca07fb47d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "05a6f584-6a67-487d-b5ab-2f979e125c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1818f994-8894-48be-8bb5-a24e085ddb7a",
        "cursor": {
          "ref": "09e6ad7e-ae2d-4d6c-a71d-a096798b708c",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "76510d0c-8535-4a57-89bb-242321972bbe"
        },
        "item": {
          "id": "1818f994-8894-48be-8bb5-a24e085ddb7a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "650731e6-7ae0-42e5-af41-b32fe70851ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501a0cad-aa7d-4a5c-bd53-c9b97052ec21",
        "cursor": {
          "ref": "734adff9-3434-4409-b26b-a09566b4ec71",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "70a0bc34-48c9-4ce9-8384-0aba5843b6c8"
        },
        "item": {
          "id": "501a0cad-aa7d-4a5c-bd53-c9b97052ec21",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9c849c04-261a-438c-a93e-9cfa77541ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b8571e-69cb-4717-a8bf-64527414dece",
        "cursor": {
          "ref": "72ec839a-20cd-479a-a547-d31f835bd619",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bc59c348-847a-49e8-a358-5a279f257cc6"
        },
        "item": {
          "id": "02b8571e-69cb-4717-a8bf-64527414dece",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3b88b4bc-c1e1-48b1-b596-3f26348467c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab72ef5-0d14-42e3-a1c3-d5e8b46d6e42",
        "cursor": {
          "ref": "d724f2fc-e7ff-4e2f-af65-e58e08983c81",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b2f7d729-d372-42e1-9867-08b6b60580fc"
        },
        "item": {
          "id": "9ab72ef5-0d14-42e3-a1c3-d5e8b46d6e42",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ba3d05eb-26a9-487b-ae71-add74bbd13bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c27fd5-f7a0-48b4-9547-7ff03c6b57a6",
        "cursor": {
          "ref": "1e8f5dc1-ccd3-4bd5-943a-c5c5f5d7bbba",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fc32592e-715b-4662-b2a2-6f3342606c4f"
        },
        "item": {
          "id": "c0c27fd5-f7a0-48b4-9547-7ff03c6b57a6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e5f5c14c-4dcb-4f02-87e3-d9a6b8fb3650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe7e241-02e1-46cf-8bf3-99f1133e8869",
        "cursor": {
          "ref": "436a47da-4ba7-4d65-ab31-f5d8d3dd6b02",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "27d627dc-19f7-4ba5-9323-569480a8653d"
        },
        "item": {
          "id": "1fe7e241-02e1-46cf-8bf3-99f1133e8869",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "06c6bb48-28ff-4eac-b873-efdde13fa210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4695904f-5643-4b18-9964-9f713e7b839a",
        "cursor": {
          "ref": "023035f3-0e79-4fbf-adb7-83c53572ac2b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2f4c4008-7f8f-4028-b549-224c84aeb257"
        },
        "item": {
          "id": "4695904f-5643-4b18-9964-9f713e7b839a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "622398b6-6db6-4134-bd4c-e0707f827a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30538893-c350-41d0-aa06-caf83aa4f079",
        "cursor": {
          "ref": "f4701d96-eaef-4307-8317-35659491dc3e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cbf82075-bb87-431e-bc37-6a5f5e2035ff"
        },
        "item": {
          "id": "30538893-c350-41d0-aa06-caf83aa4f079",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dc7589d8-4569-44a8-b298-8d21c747ec25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de995035-311c-486a-af34-8bb095cca116",
        "cursor": {
          "ref": "90d4c35f-7848-40e3-b934-994a92c6ae46",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "74515e1b-2fef-48d4-82ab-b4c733c0a067"
        },
        "item": {
          "id": "de995035-311c-486a-af34-8bb095cca116",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "558f2989-6c72-47e1-8eb8-b2f28c57003a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972b8028-3e40-4243-9f56-ae8c5af8ec5e",
        "cursor": {
          "ref": "e5af32c1-330b-44cd-a965-ab16dd965f95",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b367924e-3ffa-47f6-89a4-ebe55583ab92"
        },
        "item": {
          "id": "972b8028-3e40-4243-9f56-ae8c5af8ec5e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "39849c1b-c0e7-4723-aa0f-bf21d5324c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dba111-0025-40de-848a-dd11391b9c7f",
        "cursor": {
          "ref": "c4e0d815-797e-4381-ae8e-734a8a847402",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "13ee18a8-ed5c-4937-a234-49e086975702"
        },
        "item": {
          "id": "f0dba111-0025-40de-848a-dd11391b9c7f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "071c9d02-5423-4684-801e-c20d2d0cb461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3197c0b3-5b23-48bb-9cff-2f39a099410c",
        "cursor": {
          "ref": "780cfa4b-d069-458a-a31c-36cf9b7bc834",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d76474d3-14e2-4afa-a278-ad6a33604179"
        },
        "item": {
          "id": "3197c0b3-5b23-48bb-9cff-2f39a099410c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0357eba9-08c7-4fb3-8ce6-a2a248a5a53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0179b9-087b-4628-b115-3107e154e29f",
        "cursor": {
          "ref": "6e6f6c89-f947-4191-bb67-93fb566f48a6",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e14129bb-fa4d-4beb-aa62-ca4a415a7817"
        },
        "item": {
          "id": "3a0179b9-087b-4628-b115-3107e154e29f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3200b6d4-5ad4-4c77-85a8-ca34c811cc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ada7088-3fe2-4d3d-8cc4-99b1bd530e57",
        "cursor": {
          "ref": "329f91b7-af6a-4c38-a99e-908df0b2073c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fdc4dd1b-d009-4742-a0e0-e283f49aab31"
        },
        "item": {
          "id": "1ada7088-3fe2-4d3d-8cc4-99b1bd530e57",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "aecd17a5-2ad0-4946-9738-a052c1ec8c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b82578-5739-479e-8555-935093635b83",
        "cursor": {
          "ref": "1cc94d9f-5f75-4b0a-a549-580fe7ac835f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f60dd3e3-f816-46e3-bc1b-252f94dbe034"
        },
        "item": {
          "id": "f7b82578-5739-479e-8555-935093635b83",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ffb944b4-3fe1-45dc-8d0e-16d2d2ce9bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423046b9-3ae1-4f01-9933-fb2e31234252",
        "cursor": {
          "ref": "10d3a1da-b4c4-4d5d-a81d-1de06f208f22",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1b6ec4e5-e25f-495d-b668-d21240718b4c"
        },
        "item": {
          "id": "423046b9-3ae1-4f01-9933-fb2e31234252",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1921bb86-03d8-462b-b1f9-610d79d06517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ce24d6-55b0-4b2c-9f0d-729b98e952b0",
        "cursor": {
          "ref": "80dffcda-5cac-4c69-89e6-0d83e54c39d6",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1ec984bb-44cb-40d6-b20c-07994e810797"
        },
        "item": {
          "id": "09ce24d6-55b0-4b2c-9f0d-729b98e952b0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c6f549ff-dad7-4752-882d-0a8f0ebe28dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f007c9-a8a9-4d90-8b34-d50c8ce818fa",
        "cursor": {
          "ref": "8e7167da-e5a8-40ab-90ca-ebc68951ac9c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9bca555d-085a-4768-b102-0db65540c544"
        },
        "item": {
          "id": "c0f007c9-a8a9-4d90-8b34-d50c8ce818fa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f6236a42-7c09-4572-a2de-283ed8b8b7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5817c3-eafc-4698-85f3-bcb0a3aace24",
        "cursor": {
          "ref": "828bc9e8-1079-482d-8271-4dfb8d829634",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "11237969-5223-4a03-b263-c0767ec11177"
        },
        "item": {
          "id": "1f5817c3-eafc-4698-85f3-bcb0a3aace24",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "df603f31-94f3-44de-9e10-ce94ba384ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b936315-aaf9-45de-aed0-09ba751f6973",
        "cursor": {
          "ref": "75df2429-0841-425d-ac4c-6fc0828ae47d",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "47d9e5f8-9a6c-4c9f-84c8-fd736c933872"
        },
        "item": {
          "id": "9b936315-aaf9-45de-aed0-09ba751f6973",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cd72a4e7-b0eb-4c53-ab4e-445d07e4b2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f653ef-c060-49eb-9946-e225fd37b4a4",
        "cursor": {
          "ref": "30b42421-b969-4889-9e91-7acda71565bd",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "63ce2746-c463-48b6-9ce2-0275a26d069c"
        },
        "item": {
          "id": "29f653ef-c060-49eb-9946-e225fd37b4a4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f947ae55-fd79-4032-b0b5-b6ab6d0a1809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0139f15d-1c93-4e6b-ad06-8d6bc0128ab0",
        "cursor": {
          "ref": "f6459e5b-cbf7-490c-878b-384c1dbb2d82",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c7ea9385-095e-4894-a9a4-d5c3417564fd"
        },
        "item": {
          "id": "0139f15d-1c93-4e6b-ad06-8d6bc0128ab0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "663a1a71-fc02-4640-9216-efb52f18c069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bf74b6-ad41-44d3-a085-d91b448fea28",
        "cursor": {
          "ref": "b7b8333b-6b92-403e-9ba6-9b05231a5ff7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b7273c52-84b3-4ac9-a87d-1168fac8a479"
        },
        "item": {
          "id": "a9bf74b6-ad41-44d3-a085-d91b448fea28",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7f0343a0-855a-44df-8026-d1ef52491f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58678293-7a47-488c-a2e9-acfc074f5b11",
        "cursor": {
          "ref": "39dc0db9-7528-414f-84ea-fff92e929c8c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a948d450-6e09-4905-bc1f-81ec1b7e7d2e"
        },
        "item": {
          "id": "58678293-7a47-488c-a2e9-acfc074f5b11",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d2b8ac83-1d0a-4ab0-8714-32a40ad448e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8884540c-df6a-4389-aef9-db1491a272c5",
        "cursor": {
          "ref": "c5c6f84e-929b-44f0-b326-ced9575dedff",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b07df219-652d-4a1f-a465-0dd2850e9157"
        },
        "item": {
          "id": "8884540c-df6a-4389-aef9-db1491a272c5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "67213076-ae1c-480a-85f7-b8822ae15fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148066e7-4f40-4501-a887-398d9eb482e3",
        "cursor": {
          "ref": "643ff4be-5b92-449d-ae53-b460663ff975",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "741236c6-969e-44ea-b907-57d95ce7791d"
        },
        "item": {
          "id": "148066e7-4f40-4501-a887-398d9eb482e3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3ebad20c-f678-43a0-9338-d912eaa7bf79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789fa04f-bf76-457a-8706-0d063dc32527",
        "cursor": {
          "ref": "64732b88-6497-4ac5-9187-98fa65656337",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2d10a939-ae13-4df8-b8f1-3e9589a2b906"
        },
        "item": {
          "id": "789fa04f-bf76-457a-8706-0d063dc32527",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "db48ff6f-7b6a-4fc5-93ee-e5873003e379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888b4fa1-ba75-4336-8957-21c4172c3809",
        "cursor": {
          "ref": "4e812444-6a99-4785-947a-80d4daf887b7",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "755e02f4-6043-4614-ae96-9422e166365d"
        },
        "item": {
          "id": "888b4fa1-ba75-4336-8957-21c4172c3809",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "795f0b8c-3141-4f90-b357-2d79d775ed66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056b49bc-f7e9-44b8-80ae-97f4147b85cd",
        "cursor": {
          "ref": "c86e0bef-975f-46ee-9a2a-4f1528f63d2b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "42dc1f98-d4b9-4536-bc90-5ff37286896a"
        },
        "item": {
          "id": "056b49bc-f7e9-44b8-80ae-97f4147b85cd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "462fc5c4-9908-4a0c-af16-7c04256df1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14188cf-3163-49b0-be5b-82c993dad28f",
        "cursor": {
          "ref": "052df90c-8b4e-42ed-ab72-ee4a5db3faf7",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e6cf27cd-0dc7-4b97-b96a-8b3d1ff21078"
        },
        "item": {
          "id": "f14188cf-3163-49b0-be5b-82c993dad28f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a4b0df22-7179-4591-be6f-05d727387836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97139e7-6ca7-4d09-960e-04d81715967c",
        "cursor": {
          "ref": "9409f449-3311-42bf-88b2-721c8cb1b1fc",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3fa07f96-9427-4de6-997d-7b22b0b5d531"
        },
        "item": {
          "id": "e97139e7-6ca7-4d09-960e-04d81715967c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3a5ba304-9b53-4c43-a328-3a125f5373d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7908b96-3172-42d0-bfb1-6b8f827389f8",
        "cursor": {
          "ref": "bb76955b-ea54-433c-bdb5-e5f1c334dd0a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4639838b-f082-4b78-9826-692366061bbb"
        },
        "item": {
          "id": "c7908b96-3172-42d0-bfb1-6b8f827389f8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e87bc429-c9cc-46c0-92fd-57a0fe639ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122abd32-ba95-41c2-8bb9-8cdbca11e92f",
        "cursor": {
          "ref": "b13f5858-ecea-485e-adae-b56efe304b4a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f9601cb0-172d-4a21-8148-623b2d5537f1"
        },
        "item": {
          "id": "122abd32-ba95-41c2-8bb9-8cdbca11e92f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "35067328-a565-4862-a226-c463b1a9a31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0f8601-dcda-400b-b8a1-f446ecc81c0e",
        "cursor": {
          "ref": "be75494c-072b-4bfe-8b83-74ff1ec732bd",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c7fbeba9-fa87-483f-9c54-1aeab870b618"
        },
        "item": {
          "id": "fa0f8601-dcda-400b-b8a1-f446ecc81c0e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c7793b94-eff1-4488-867b-9e88fe6814cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865f2b32-bfa7-472c-a140-6b867e46c9fe",
        "cursor": {
          "ref": "100e1fec-2c87-497f-840d-014126deec71",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "580ef9e8-0a1e-48e4-8379-e1bd8eda3cd5"
        },
        "item": {
          "id": "865f2b32-bfa7-472c-a140-6b867e46c9fe",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "589691a6-0e3d-49fc-847b-234f5614c905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df13c8fd-a8b0-450e-a307-6dfd371367b8",
        "cursor": {
          "ref": "2f3c6457-0b80-401b-b84d-ba346d6f8b5d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "edb017c7-6c35-4052-8b09-858056e3ce25"
        },
        "item": {
          "id": "df13c8fd-a8b0-450e-a307-6dfd371367b8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "33a65ecd-a57a-48c6-a4fa-eba7b9e6d33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520e1ae2-ff2d-4e28-b13c-acfbf7a2cacc",
        "cursor": {
          "ref": "b93f2319-5d6d-428b-88e0-b8ea243af9a1",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c1feed42-00c8-4994-a1de-f326bb738f36"
        },
        "item": {
          "id": "520e1ae2-ff2d-4e28-b13c-acfbf7a2cacc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2e3a20bf-fde8-4eee-96cf-cf908c343345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd19d6c6-c71d-4c12-9ccb-e02ea2850816",
        "cursor": {
          "ref": "28482491-a363-4ee4-8ef1-73135f84aebc",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6df8959d-6dd0-4260-abf3-2999294b4f50"
        },
        "item": {
          "id": "bd19d6c6-c71d-4c12-9ccb-e02ea2850816",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "95e63444-6ee1-4dfb-946f-f772385154bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14bc948-ac31-4d12-98ad-e74351d17c68",
        "cursor": {
          "ref": "22013a30-f226-4cb2-abd5-1a9b9210a2af",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "12f9cc92-432d-443a-a6d5-b9768b133f09"
        },
        "item": {
          "id": "b14bc948-ac31-4d12-98ad-e74351d17c68",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "de59cc74-a856-41b4-9de9-daa38702436b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a855ca-882f-4468-abbf-6c259efc2a51",
        "cursor": {
          "ref": "b0f495a4-21cd-4671-927a-314d4a2bdda0",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5519e37c-6313-4ff3-99f1-7724ace8cbb8"
        },
        "item": {
          "id": "a8a855ca-882f-4468-abbf-6c259efc2a51",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a080e64b-c881-4960-903e-2ee4d39be8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1603aaaf-5e71-4fba-8322-263ee97a4043",
        "cursor": {
          "ref": "5d9d9c51-99d9-4179-a005-25006997decf",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9273a371-0bb7-4447-9762-3ace9890a413"
        },
        "item": {
          "id": "1603aaaf-5e71-4fba-8322-263ee97a4043",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5358518c-df82-4951-91bf-80c8221feced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780cc048-3d1d-4606-8a69-0a3b014fd85e",
        "cursor": {
          "ref": "c0f6071f-3031-49c0-a82b-d01625debc1f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "86cd9107-1b03-44e4-a77b-a3b3e6fd7de9"
        },
        "item": {
          "id": "780cc048-3d1d-4606-8a69-0a3b014fd85e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3001362c-c9c1-4535-900c-4c9f26cf47d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e7be93-5451-445c-8f9b-758a1d403667",
        "cursor": {
          "ref": "81853574-8f49-4508-b91c-6cd8a2a38781",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3047a7c3-8567-42b0-9136-928d0a108168"
        },
        "item": {
          "id": "28e7be93-5451-445c-8f9b-758a1d403667",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bb865cb2-aebb-4933-8d42-cba641939228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1636a648-c23e-42e6-818b-0bb14b761d29",
        "cursor": {
          "ref": "e88c3e6d-4084-42d9-8c33-0aef6c9c30bc",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6727b2e8-a93a-4f2c-a9fe-81314d116a7f"
        },
        "item": {
          "id": "1636a648-c23e-42e6-818b-0bb14b761d29",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ad1c8a4d-3698-4696-9f3f-75b66e550b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f082cde-91e5-40a7-b218-f79744c71330",
        "cursor": {
          "ref": "bb6c13a2-b644-47de-b762-5bfe40b33b4d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "72bd0043-0edd-4b2e-9340-290955df5bdf"
        },
        "item": {
          "id": "9f082cde-91e5-40a7-b218-f79744c71330",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "15994f86-9ccc-440c-be05-8beb7ceb910a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2112cd-f5a4-45e4-bebf-7e0fb24954b2",
        "cursor": {
          "ref": "013f1ced-4647-4b28-a866-53932e270ba5",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "142f1e0b-7016-4834-9ed8-468e7d3605ad"
        },
        "item": {
          "id": "3f2112cd-f5a4-45e4-bebf-7e0fb24954b2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a620035a-1c09-4245-afd4-aa703418ddb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a38bb9-084a-4981-99ab-50d8c7226fe8",
        "cursor": {
          "ref": "a50990b9-17b2-4d66-958a-e218922e443d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "def5bfbd-2c24-46ee-891d-e87386977d27"
        },
        "item": {
          "id": "02a38bb9-084a-4981-99ab-50d8c7226fe8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3a880ea8-156a-4656-9b55-1a5e794ca5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b0c98b-39f3-4e53-a22c-6b06a5d3c925",
        "cursor": {
          "ref": "4d6dcf31-49b2-484c-9811-aa13fb50198d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "76dc03f1-abbb-430e-a51a-d5a949b820b7"
        },
        "item": {
          "id": "51b0c98b-39f3-4e53-a22c-6b06a5d3c925",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c5690702-39ba-46db-a4a1-bf6fd53de3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b06d13-fd82-44fa-b632-777fa3e953eb",
        "cursor": {
          "ref": "adddb446-aa8b-484b-a121-f53c292b27f6",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f5511bda-39e9-48c8-a9fc-51cd42fe076c"
        },
        "item": {
          "id": "13b06d13-fd82-44fa-b632-777fa3e953eb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "805f4401-43bd-4974-a381-2e28138ced16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e85f20-5a62-4a31-9ac2-5c959dab85a8",
        "cursor": {
          "ref": "668a323f-a323-4a12-92cb-120981aabfcf",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b02de26a-51b6-4f42-9f45-c64ea0f83062"
        },
        "item": {
          "id": "00e85f20-5a62-4a31-9ac2-5c959dab85a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "44c78ccd-ec82-4c27-964c-82ad9f46afe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223661d4-59df-41ad-88a9-4b356133c2bf",
        "cursor": {
          "ref": "59e79429-58a6-4253-9d23-d486903688c5",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5bb69d8e-6431-4755-99b8-65fd1b1c351d"
        },
        "item": {
          "id": "223661d4-59df-41ad-88a9-4b356133c2bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b5708e67-8110-4d00-adfa-3a71c339f4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5c97c6-a9ce-4073-a51b-2068c5d15b01",
        "cursor": {
          "ref": "39e34bf8-fc08-415c-9716-0f491035cb76",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b430c2aa-9f41-44dc-95ef-6fa7e9dd7f25"
        },
        "item": {
          "id": "1f5c97c6-a9ce-4073-a51b-2068c5d15b01",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6120b80f-5639-46eb-b333-65c42f9fca69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2153de35-755b-4471-9c9a-824d280f5a68",
        "cursor": {
          "ref": "8d475fda-916d-4253-a3b3-eda6bd88569c",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9064f079-b354-429b-8968-9db8b7ccdb23"
        },
        "item": {
          "id": "2153de35-755b-4471-9c9a-824d280f5a68",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c1bdae07-ecf4-45c1-815f-f1b1e5993568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d55cc5f-cd35-4e0d-8190-269bc3af2ec6",
        "cursor": {
          "ref": "54a54673-a6d4-451b-a50d-4caf2c3b1b11",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "554d1f42-0e95-42df-bce0-703c42740d32"
        },
        "item": {
          "id": "6d55cc5f-cd35-4e0d-8190-269bc3af2ec6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "af265f0f-e0ea-4d63-a399-b70e9fbabccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188e4883-5ad5-4ca3-9840-a4a5c52e7b22",
        "cursor": {
          "ref": "99340166-0229-4cb7-a7ac-cee53211e333",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "945054ec-e109-4060-83ae-16fd8071ab1e"
        },
        "item": {
          "id": "188e4883-5ad5-4ca3-9840-a4a5c52e7b22",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1276fec9-c0d4-4e3a-a973-9199aa080092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f49f3a-e70a-4484-8935-184c42c2067a",
        "cursor": {
          "ref": "8d4e255b-cfda-4333-9feb-7066a25aa771",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e9404abf-89e3-42b1-bfcd-270c54b253d5"
        },
        "item": {
          "id": "a2f49f3a-e70a-4484-8935-184c42c2067a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "119b7f7f-3558-4bab-b8c4-3faf5787dd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2ca9fa-e805-4f3b-885e-e6c3fb8fa5c2",
        "cursor": {
          "ref": "7a8a3ef8-3909-420e-a4eb-e059aaa2a33e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "58739e4b-51ae-47e6-9b05-cd629e37ecb2"
        },
        "item": {
          "id": "3a2ca9fa-e805-4f3b-885e-e6c3fb8fa5c2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2ff837c4-4eaa-4065-a4a4-c583cab70c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b4e06d-fd46-43a3-9b0c-4cea08a5f7c5",
        "cursor": {
          "ref": "36c570ed-a554-4017-ac0e-d6368a142d36",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9639b790-bd7a-407b-8f7c-a8aab82aaafb"
        },
        "item": {
          "id": "21b4e06d-fd46-43a3-9b0c-4cea08a5f7c5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "37d1608b-172c-4833-9400-f8ab47b39875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc010c4d-bf4a-4461-8834-84acfe9d3f6e",
        "cursor": {
          "ref": "bb9c7dcd-0459-4c45-b2cc-61163e6938a4",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3c59ffcd-885e-43b0-8277-79c7d1dbea82"
        },
        "item": {
          "id": "dc010c4d-bf4a-4461-8834-84acfe9d3f6e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5c7b8c91-ea6e-4c42-9068-297d409b2d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de34dfa-6146-4a75-953b-d8ef67d24cf2",
        "cursor": {
          "ref": "1b363ba6-a1a6-4904-8f8f-ca1bf031d930",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ee688d87-0955-4493-934f-a0f71d363d4f"
        },
        "item": {
          "id": "8de34dfa-6146-4a75-953b-d8ef67d24cf2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "549739da-0582-48c6-bc03-8231fffd8885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d480f5c-13ec-4de2-8c61-03f01e5f29d6",
        "cursor": {
          "ref": "98166b8b-6321-4d52-b8bf-0e97391881bc",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "47955081-b958-4f30-a0be-1e290fe1d306"
        },
        "item": {
          "id": "8d480f5c-13ec-4de2-8c61-03f01e5f29d6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0be74ee2-aa04-4fc9-b6a9-e610261501ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b55dc4-723d-4039-a75f-6ae9999baa3f",
        "cursor": {
          "ref": "9abed33c-cca4-4766-b62a-e25d2934c697",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8cbd933a-9383-4fc8-98c0-8e406528d9bd"
        },
        "item": {
          "id": "f7b55dc4-723d-4039-a75f-6ae9999baa3f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "768e06e7-3074-4788-9fbc-936c329720fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c674131f-d474-44e5-907c-e6235e1b22f0",
        "cursor": {
          "ref": "3c634a23-8ec3-4dcb-a0c8-2fdf1402a96a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ae31989f-f2d3-42ed-b9e4-0e2489917bac"
        },
        "item": {
          "id": "c674131f-d474-44e5-907c-e6235e1b22f0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c8578901-c801-4c7b-879c-ae9ed6074e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69f86a7-d48c-4edf-8dcf-2557fd2f551d",
        "cursor": {
          "ref": "2587b4d5-189e-4946-886b-ce8015de6fa7",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b1eca387-7b15-44c8-9c74-d578e1cc3032"
        },
        "item": {
          "id": "e69f86a7-d48c-4edf-8dcf-2557fd2f551d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "78f7dbdc-c9d7-4cea-aec1-5a9da14217d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928078bd-76d9-4ee5-90fa-77aedc85e5d6",
        "cursor": {
          "ref": "4e645ea4-4f32-4989-ad8f-a60745beba1d",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "11d546f5-39f2-4608-b964-05223153b5b4"
        },
        "item": {
          "id": "928078bd-76d9-4ee5-90fa-77aedc85e5d6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f06aa7eb-2651-43e7-af39-0f9a6bf30fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb0b9dc-d956-441f-aad9-7366cffeda0b",
        "cursor": {
          "ref": "9b39c7b5-329b-4f56-b2c7-41f9441fd1dd",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "84828f28-fa1b-4ccb-9187-7682d43d8a22"
        },
        "item": {
          "id": "0cb0b9dc-d956-441f-aad9-7366cffeda0b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "851b0a34-4153-4b82-bda9-403f2eb7189b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0794106-89c7-4220-a3c9-84aa03fe3efc",
        "cursor": {
          "ref": "9dbe757d-4513-41c1-9d4e-a7bbf853b974",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e18b3f93-a00a-453a-9a63-6fd1f1e246d4"
        },
        "item": {
          "id": "b0794106-89c7-4220-a3c9-84aa03fe3efc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ef6636ee-8ddc-45df-88f1-a2690d8c0973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d41b50-bc6e-4344-8da0-79f74fd8b2e1",
        "cursor": {
          "ref": "c824f3fe-fbfb-4c6b-8096-e425b8c45126",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "eebf2bcb-03d0-44f2-bb60-1fdd09002faf"
        },
        "item": {
          "id": "e5d41b50-bc6e-4344-8da0-79f74fd8b2e1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e796ea0b-6008-4536-928c-219206e5a543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b46ec61-ad74-419d-af17-ad2e9f0760cd",
        "cursor": {
          "ref": "741980d7-e094-4586-935d-aaafe37f6bc1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f14fb9ec-22c6-463c-9a1e-a88ea55350bf"
        },
        "item": {
          "id": "5b46ec61-ad74-419d-af17-ad2e9f0760cd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "20f70b5d-6f3c-4cc9-9f2c-05a8fc6e812a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629f8f6b-bdc7-4b0c-b51b-36209de26fad",
        "cursor": {
          "ref": "3134f446-7f2d-4bc4-9496-63aa063d645f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bba2f18e-34dd-419a-bffa-70208645ecd4"
        },
        "item": {
          "id": "629f8f6b-bdc7-4b0c-b51b-36209de26fad",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "33be1c9e-4ce0-4101-b6cc-dc1b7a3bdd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46297b47-4fed-46bc-adf7-9306bffbc7c1",
        "cursor": {
          "ref": "7b77f301-1066-4ba3-a900-19045611e7e6",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3e2e2354-e7d4-40c3-ac09-9442faa722f2"
        },
        "item": {
          "id": "46297b47-4fed-46bc-adf7-9306bffbc7c1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "eb211c93-bb3b-4d41-8c15-280cd901102f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33ad8ab-3999-43f0-99bf-24dceda4fc1a",
        "cursor": {
          "ref": "f93d3a04-ec97-48d3-a69d-16f476d00b8a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "35719f23-d5aa-4f43-92a5-5f022c0fc20a"
        },
        "item": {
          "id": "c33ad8ab-3999-43f0-99bf-24dceda4fc1a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dab15320-3c7d-4d15-a4a6-091d967b9424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faad6a9f-acf6-436d-ba4b-e090c2bb35e2",
        "cursor": {
          "ref": "afec2d9b-2e24-4bbb-b10e-272923235492",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5ad68e0c-b972-49f3-882d-b5389cd78719"
        },
        "item": {
          "id": "faad6a9f-acf6-436d-ba4b-e090c2bb35e2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6189b54f-8878-412d-8afa-7de82a6db1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75c14a4-e437-4fc2-a584-bc53cf24918c",
        "cursor": {
          "ref": "8c6c7abf-b85c-45fb-9ecc-c9bac93d1808",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c72f411b-a939-4ebe-b4a2-d5e692b000e3"
        },
        "item": {
          "id": "d75c14a4-e437-4fc2-a584-bc53cf24918c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3053c6ea-6e79-4a4a-b434-29b4ab48449b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f620b9-db66-4a07-bf09-6098464a5ee8",
        "cursor": {
          "ref": "63b31232-764b-4140-9c69-da697f615996",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c65c47a0-a29c-405b-bc0e-71e82a382702"
        },
        "item": {
          "id": "26f620b9-db66-4a07-bf09-6098464a5ee8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b2ce9e82-18e6-4cf0-a401-9be4fa1458a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a247878-940f-43a2-bc15-4c0db80fc879",
        "cursor": {
          "ref": "a67897c3-2e99-4235-98eb-e5065d586680",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3f148cdb-9f54-4897-9f75-667a568128da"
        },
        "item": {
          "id": "1a247878-940f-43a2-bc15-4c0db80fc879",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dfc53c21-35b1-48f1-9940-0376905b6a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee7630f-f23f-4c4e-a3a6-94a514caf590",
        "cursor": {
          "ref": "b841e444-793f-4195-87ed-17c8a4670128",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2514f0b1-0312-4ac1-8356-ffce65bf9f8e"
        },
        "item": {
          "id": "aee7630f-f23f-4c4e-a3a6-94a514caf590",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f631dca4-f42d-4219-90da-53c1cadedd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df484328-598c-4532-8a95-1ecd1c278128",
        "cursor": {
          "ref": "b94278d8-62ac-42b2-9556-7cd176898a16",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "785d6cb7-7f96-43de-a10d-6dbef2f2c831"
        },
        "item": {
          "id": "df484328-598c-4532-8a95-1ecd1c278128",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6906e4e3-ef39-4643-b651-504965182716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20ffe2f-f11f-4942-8046-f375d30fcdbc",
        "cursor": {
          "ref": "5f177a74-f460-441f-a5ea-bcd9e6dc6572",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "025df684-1181-48f6-b538-4342c4a9dd16"
        },
        "item": {
          "id": "a20ffe2f-f11f-4942-8046-f375d30fcdbc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "57e0ace9-d320-4e01-b147-d2d5fc73611a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e6fea2-23b4-4890-b906-20af9c9a0a69",
        "cursor": {
          "ref": "afa55e73-a372-4f1d-8789-8860a0614097",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "37328d47-836c-4a1e-9861-22265c791435"
        },
        "item": {
          "id": "a6e6fea2-23b4-4890-b906-20af9c9a0a69",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9931454c-b65f-4140-ace0-858eca37c657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44ff1e3-44d8-44c6-a9d7-0419db0a410e",
        "cursor": {
          "ref": "bd5a456e-cf45-4537-a538-ec20b47b4d0f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "292b05bc-ac52-4238-8bc0-6288fd5b24f5"
        },
        "item": {
          "id": "f44ff1e3-44d8-44c6-a9d7-0419db0a410e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "56c3a6ee-10ee-45f4-87cc-71d40cc87232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5148d4-128d-46b5-a2ff-d8b1e703023f",
        "cursor": {
          "ref": "a2216eec-00de-4609-8ee5-03e91ad2afe6",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "857b508b-f53e-48e1-80ff-403c613eddef"
        },
        "item": {
          "id": "9a5148d4-128d-46b5-a2ff-d8b1e703023f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "274da4e8-c129-4dd7-a6e4-23f8af61f952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec32d5a8-7ef4-442d-8db2-2fb3c3a94380",
        "cursor": {
          "ref": "944ddb21-6c30-4911-b140-0a969cb0d9ab",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "517d907c-658a-4de2-b403-4a3d54362a2f"
        },
        "item": {
          "id": "ec32d5a8-7ef4-442d-8db2-2fb3c3a94380",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "95580511-ea8a-4ab5-a2fe-b6606549599e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423e02a1-e83f-49f1-ba69-ae5412e31154",
        "cursor": {
          "ref": "687507d2-f42d-4e38-a2c7-d19aa99c2de2",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "463b7584-a847-484c-8edf-656a7f2380aa"
        },
        "item": {
          "id": "423e02a1-e83f-49f1-ba69-ae5412e31154",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "12d28727-da99-45e0-9f22-c04809df88db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c77a27-8397-447d-9e3e-ebc19c4dde33",
        "cursor": {
          "ref": "5366d43e-b213-47a2-b7ec-005fd4e9ada8",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b0e1a41c-f567-48db-9969-44e8ba20a227"
        },
        "item": {
          "id": "d3c77a27-8397-447d-9e3e-ebc19c4dde33",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "66253ee8-e7ff-4ca1-bf3d-0001f5dbf319",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1804ec5d-e30a-4f3c-ac1a-07501cba882a",
        "cursor": {
          "ref": "f2f17a80-e000-4999-9588-f6f8ca12bcfa",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "01ae31be-5af0-4900-95f5-1848fbf5af7e"
        },
        "item": {
          "id": "1804ec5d-e30a-4f3c-ac1a-07501cba882a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9a76a83e-5c9b-4354-b52b-c49ef6412619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a952dd78-ffea-4e45-ad0f-3f19ae0c054d",
        "cursor": {
          "ref": "7bc16de0-9f37-4434-a6f9-716b325286e1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1395cf04-c3f0-4654-bb7d-2f0d8d3956bf"
        },
        "item": {
          "id": "a952dd78-ffea-4e45-ad0f-3f19ae0c054d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1f3d20b9-8f89-4f7a-92f0-03ed541b49d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9ec45d35-b997-4de0-9b92-583e573cbd21",
        "cursor": {
          "ref": "d303ec6d-7a8c-4faf-bcf9-6f0c89e758ae",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "005adb09-cb65-4f4a-87b5-973dc9481fb6"
        },
        "item": {
          "id": "9ec45d35-b997-4de0-9b92-583e573cbd21",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "87bfec50-73fd-4138-a72a-7d95d6fb9b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7180de4b-359d-4f3d-a43e-e83a53918c98",
        "cursor": {
          "ref": "a05869f5-0639-4226-81d3-a16a80583601",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "34388a1d-413c-4f8e-acf6-9bbf31dec486"
        },
        "item": {
          "id": "7180de4b-359d-4f3d-a43e-e83a53918c98",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fb703e66-ad8d-4995-851c-85472bbd6ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f07e12e6-1a47-4aa4-9df5-04e6ccb80825",
        "cursor": {
          "ref": "baee80d0-5e2f-42f8-8b4f-9d4773ecc109",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dc3ab423-9f12-4ee4-93f5-2006658f656e"
        },
        "item": {
          "id": "f07e12e6-1a47-4aa4-9df5-04e6ccb80825",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "71cd14d4-00d0-4fae-bd18-fdc7a2f643cd",
          "status": "Created",
          "code": 201,
          "responseTime": 10337,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5a7568-eea6-440c-8c93-ee16da27c4f7",
        "cursor": {
          "ref": "5f06d02f-38df-4c74-a998-ff45fc82e57a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0c66f0d0-e1f8-4901-bd62-0ca2f63b7500"
        },
        "item": {
          "id": "ec5a7568-eea6-440c-8c93-ee16da27c4f7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dcd97c79-52f4-4e6a-8650-f422f2ff461c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8e514fd8-cd6c-41e1-89e6-61e51ba8210e",
        "cursor": {
          "ref": "8d1d1147-cca8-4114-b942-7522a45c43b1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9a85e268-a4f6-43bc-80d0-75fb36f10a79"
        },
        "item": {
          "id": "8e514fd8-cd6c-41e1-89e6-61e51ba8210e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "604a9698-6cc3-411c-9ea3-580f33167dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6d3fd7ca-354b-4f77-9ab5-b421441838a4",
        "cursor": {
          "ref": "a264ba90-4ed9-49ad-ad06-0db90c9a743b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "57008217-ec66-4dd5-abff-fbe2eeb2b289"
        },
        "item": {
          "id": "6d3fd7ca-354b-4f77-9ab5-b421441838a4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8d02dc0f-733e-421d-8103-25fef7dc56aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584c6b92-350a-49f6-8f21-c9031245b1c4",
        "cursor": {
          "ref": "9cca56c4-70c9-4faf-885f-45be26dd0a46",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f184ab94-2385-4d62-b9e3-a76de660ac0d"
        },
        "item": {
          "id": "584c6b92-350a-49f6-8f21-c9031245b1c4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b9a4de6b-11d8-4716-b695-b43795b53726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729d7d3b-ea42-4c62-b1fe-4ea4265f446f",
        "cursor": {
          "ref": "87105bde-645a-4a23-817b-e1f7776cdc61",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "624249ab-6950-4dc7-817e-4fa79f6b46a7"
        },
        "item": {
          "id": "729d7d3b-ea42-4c62-b1fe-4ea4265f446f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "18abb8cc-8809-4fdb-ada5-6171bae884f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d074639-e877-4373-800a-c6572fd8e8c0",
        "cursor": {
          "ref": "3a53012d-5e67-46b3-a55c-51d82d0968c9",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2f52afe4-ddd6-4a9d-a2ed-b525be164237"
        },
        "item": {
          "id": "2d074639-e877-4373-800a-c6572fd8e8c0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f55fe318-c207-450b-b02b-94e0b397607a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8959641-4373-40e7-b50e-a68deae3a650",
        "cursor": {
          "ref": "f481dead-1772-41e6-b0ce-fa2982af333d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ef238556-10ae-4555-b6ed-697cd36a9117"
        },
        "item": {
          "id": "c8959641-4373-40e7-b50e-a68deae3a650",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0585dd62-e67f-45c5-8e5c-46bec18ce3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34eb478b-17a4-44c8-ba0b-395b373931bf",
        "cursor": {
          "ref": "871fef42-41cf-4e4d-af30-9db6dfbdf8fe",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "157a6307-380c-4ec3-9a3c-39d05fd8fd90"
        },
        "item": {
          "id": "34eb478b-17a4-44c8-ba0b-395b373931bf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e9c7c23b-1f6f-480d-84e1-642f872dd97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a64b1b-3e11-454c-9bea-f3ed241856aa",
        "cursor": {
          "ref": "e8abe636-bca4-426a-bd32-788671dba5d5",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2bf232f4-fc41-4e03-88ce-ccbcebb58703"
        },
        "item": {
          "id": "18a64b1b-3e11-454c-9bea-f3ed241856aa",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "934715f0-551f-4457-900e-eaa9f73503fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b318c8-ef2f-4d18-aaec-05d3e52c57b3",
        "cursor": {
          "ref": "e1a097e4-6966-40b8-848b-a1d608c9502a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5be5ccc0-d581-4c97-8561-ac2c3ab47f39"
        },
        "item": {
          "id": "b9b318c8-ef2f-4d18-aaec-05d3e52c57b3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e431a038-78c4-4c95-8d83-83f2b6db2bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d357d7-cccb-4fc2-86a4-70955f7105ec",
        "cursor": {
          "ref": "0afcbc62-71c4-45cf-8b59-935de05ff55b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e05e5193-1457-4b12-b497-f0b5f4501cd3"
        },
        "item": {
          "id": "93d357d7-cccb-4fc2-86a4-70955f7105ec",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "78e011ce-0969-46a3-b656-1ca94f5e3716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3dcdc7-8913-4d8e-8c63-e0c3ce450457",
        "cursor": {
          "ref": "637660d8-675a-4c7d-98e6-d105d9055ab1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e5022a21-4d0c-4452-a208-8df82163212a"
        },
        "item": {
          "id": "ee3dcdc7-8913-4d8e-8c63-e0c3ce450457",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3470a4c5-f9bf-43e6-b7e6-c9a69e4dd847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37fdca1-554d-4dfd-9764-d182443a303c",
        "cursor": {
          "ref": "39f0e41c-49b0-4ce7-b728-bcda613de493",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "06663852-81fe-4b25-aa2e-765bb36f3d64"
        },
        "item": {
          "id": "d37fdca1-554d-4dfd-9764-d182443a303c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e5d1cc39-394d-49fe-8a40-19d98d8269ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5b3999-55ac-44a5-b81d-abde0bc5be59",
        "cursor": {
          "ref": "b68defe1-3ca0-4abd-97fc-912dc2e2af69",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d639ccf2-6cb1-43bb-a0de-40fb853cc9dc"
        },
        "item": {
          "id": "fc5b3999-55ac-44a5-b81d-abde0bc5be59",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2a6410e6-88b1-4561-a56e-6da1a7dc53dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53a1a80-1d43-4ae5-9037-17f08c7bdad7",
        "cursor": {
          "ref": "2457d8bc-58da-4bb2-a134-109c491d6383",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0d51d45d-42b2-47d3-879a-6b37e3e82202"
        },
        "item": {
          "id": "a53a1a80-1d43-4ae5-9037-17f08c7bdad7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6f058294-911d-452c-b695-cfa46ab8411e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7656317-4135-4580-901a-c1c73956338e",
        "cursor": {
          "ref": "740e3fd7-b0bd-4e4a-8635-a7ed165c0faf",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c9f5cb6f-b6a0-4c8f-8b10-9eed49330d18"
        },
        "item": {
          "id": "d7656317-4135-4580-901a-c1c73956338e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "af0fe0e7-824a-47d3-ba31-0a2b4b2cbba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50058c7-7587-458a-9f58-5736a6d85675",
        "cursor": {
          "ref": "7272d1cb-ce9c-4915-a18b-74df827871d9",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e45b4ab1-0f76-4e23-b97d-bdd580aa9a45"
        },
        "item": {
          "id": "c50058c7-7587-458a-9f58-5736a6d85675",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "843359b8-492d-4bcd-abcb-4d981aae9355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe9539e-0526-4879-880a-eef01abcde31",
        "cursor": {
          "ref": "5acde319-1bbb-4019-9f8d-d70c755fc767",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "121c9103-1150-42df-8fc3-be1ecd698a08"
        },
        "item": {
          "id": "ebe9539e-0526-4879-880a-eef01abcde31",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dfbc60c4-bc65-41d1-b2f5-b5a20faa4e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2229d596-624c-47ce-9df9-226ae616c06a",
        "cursor": {
          "ref": "c1010809-3406-4486-aba7-c63bf1e272a8",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9a2b547b-efa2-4622-a380-2aaf5168d295"
        },
        "item": {
          "id": "2229d596-624c-47ce-9df9-226ae616c06a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "42e9b07c-f3b6-4a3b-bf31-0f435a68831b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "0d03f200-8fd5-44e4-b593-585d68b8fb51",
        "cursor": {
          "ref": "ef6f147f-19d4-4470-8705-044fd6e839f8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d00651a5-76d2-464b-982d-493c8eed2ae6"
        },
        "item": {
          "id": "0d03f200-8fd5-44e4-b593-585d68b8fb51",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c6622519-0fbb-41f3-8bf8-77723bc640c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e500bb-ed47-4d71-89f6-0d377f3d62c3",
        "cursor": {
          "ref": "8b2ea4ef-f7bf-4571-97aa-46ab1d475268",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ef6bc13f-17ef-4fe8-bfd9-dcbe094d34ab"
        },
        "item": {
          "id": "71e500bb-ed47-4d71-89f6-0d377f3d62c3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fbab865c-7850-407c-a080-b708018c3186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051d9013-3a3a-43ff-986d-11a111f7412b",
        "cursor": {
          "ref": "a4d46726-6d3b-4bd2-ae7c-eeeaa2b1cc9a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fbf72d70-74d4-48f9-ae26-fb70b4ed8cf5"
        },
        "item": {
          "id": "051d9013-3a3a-43ff-986d-11a111f7412b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "10b4a0e1-9d4c-48d7-bd4a-bc58a4a8c069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d20b5d-b5a3-47c0-b5c2-902fdb56026e",
        "cursor": {
          "ref": "4a4f5d93-196f-4c6d-9918-d8b55e22081d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "99d73960-dba9-4f1c-89b3-bad4d3e28ef1"
        },
        "item": {
          "id": "a8d20b5d-b5a3-47c0-b5c2-902fdb56026e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c244cfbc-c8c9-4372-90fd-2e18c5c75f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eae5d3-ac2c-445e-adc5-27df7e0f027d",
        "cursor": {
          "ref": "95a21416-b126-42a7-b6ef-b04a056840c1",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e5373bde-0d6b-42b2-a9e7-738b31d7ea6d"
        },
        "item": {
          "id": "d6eae5d3-ac2c-445e-adc5-27df7e0f027d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6bcb4e83-6119-4eb9-b4bb-cb049fc9f65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a991bd-e064-4b62-a0f7-85b48640ac9d",
        "cursor": {
          "ref": "279454b8-ad95-4db5-a2b0-726a9848efe2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fe598299-83ca-486e-9c6b-eb5f5d677074"
        },
        "item": {
          "id": "a4a991bd-e064-4b62-a0f7-85b48640ac9d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fbeb38be-7bba-4eab-b1d8-8cc81297090c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc40f5f-d151-4dce-a40d-c78538ceeba4",
        "cursor": {
          "ref": "4b088c37-d8bb-4a9a-be87-2bcdb238f94d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "41ea090e-9980-4dde-9d4c-9e86a0266bca"
        },
        "item": {
          "id": "fcc40f5f-d151-4dce-a40d-c78538ceeba4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cee8cccb-b9eb-4ae7-9ca6-ed529d80eacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50040ff9-edfd-44dc-9e4a-e3e6e9f9d9d7",
        "cursor": {
          "ref": "4fa627b8-fbbc-4c51-aedf-9bc9c04a2ecf",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f253ed2c-2e89-46b8-bfc1-f613f002c7a8"
        },
        "item": {
          "id": "50040ff9-edfd-44dc-9e4a-e3e6e9f9d9d7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b1632a18-7dab-41f1-ba9e-b21acee98cdd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "42d3f3ee-f2cc-43df-9f65-32286921f1c5",
        "cursor": {
          "ref": "a58ebbce-1e3e-4a23-8483-600eaceb6bb8",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7ac851e2-bff1-4c4a-b19b-5db588a3b3fb"
        },
        "item": {
          "id": "42d3f3ee-f2cc-43df-9f65-32286921f1c5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "93590a6f-4ef7-4222-a984-0780addeeaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b7a117-93fb-4960-90dd-7337fe0b5a69",
        "cursor": {
          "ref": "e75d3f14-4aa8-4518-bca9-a907d253f676",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a1e0c21e-e89a-477a-bc8a-d8cd83ed1c72"
        },
        "item": {
          "id": "34b7a117-93fb-4960-90dd-7337fe0b5a69",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "90fe8ce9-a068-477d-9938-0f773a7ba3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661ed241-325d-4f16-8576-9aa098a33ccf",
        "cursor": {
          "ref": "a5c0b760-4cce-4c7e-b878-131031cd2dee",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b5c003ba-c492-4fa1-b3c5-72fd46e0f7d4"
        },
        "item": {
          "id": "661ed241-325d-4f16-8576-9aa098a33ccf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ea5c406a-50d8-4ee9-8bf9-90a954d312ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b953ba14-18c1-4b6d-a168-e904cf4fa513",
        "cursor": {
          "ref": "e5a8e5e2-1744-4361-9ebb-3fc4a83430e5",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "90c9ce7c-0213-4724-bec9-07c8477763c3"
        },
        "item": {
          "id": "b953ba14-18c1-4b6d-a168-e904cf4fa513",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fdbb10d8-ae03-4853-8ff6-647b45aed3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273e52dd-8c39-4b99-b84d-599dda1fa51c",
        "cursor": {
          "ref": "70b88867-cee6-457c-85d0-8498b0dfba08",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d1569ec2-08ab-45e1-bcac-ea9562fb137a"
        },
        "item": {
          "id": "273e52dd-8c39-4b99-b84d-599dda1fa51c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "aff660ea-d234-4452-a6f1-4fb8adb04907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3806270-c3bf-4f2a-bd0b-9682ea800749",
        "cursor": {
          "ref": "088e1b16-dca7-4590-a4ba-4b4d76a9d635",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ffd70d5f-65d1-4ebf-9995-a58fc18836ec"
        },
        "item": {
          "id": "b3806270-c3bf-4f2a-bd0b-9682ea800749",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "99683f24-d2d4-4b3b-a4e0-b53549eb2163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c23876-4d7d-42b6-9676-47906dd3133c",
        "cursor": {
          "ref": "b33a891a-7739-49ac-ae3b-5807cef8edef",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "eb1d93c1-a66b-4f5e-82bd-5f99141b0873"
        },
        "item": {
          "id": "e9c23876-4d7d-42b6-9676-47906dd3133c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dd4ff1ba-04a3-4b9c-ad6e-d8f3745fa537",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f13eadf1-747f-44ec-9c51-0d84b85ecd20",
        "cursor": {
          "ref": "d26b6b7c-de33-442d-99be-ba46f61e6fac",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dbcc55ae-69ac-4988-97da-b09b769ea104"
        },
        "item": {
          "id": "f13eadf1-747f-44ec-9c51-0d84b85ecd20",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "86b832df-c76f-4650-a469-a12f439b017f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "5e3729da-9d15-4406-af09-a7b33ec5075b",
        "cursor": {
          "ref": "500c4508-36a6-4265-8b75-488291cb59c1",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bc7141e3-c856-45d1-b7cb-f0588d38e995"
        },
        "item": {
          "id": "5e3729da-9d15-4406-af09-a7b33ec5075b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "69a878c3-e047-4a03-8337-fcd5b2814710",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "f3edea7f-ad8b-4179-be72-067cbcafd88e",
        "cursor": {
          "ref": "5f981247-1ef4-4850-9e68-6a5010e366ed",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5d241b48-15bb-4c64-90ef-3223b8a61ad4"
        },
        "item": {
          "id": "f3edea7f-ad8b-4179-be72-067cbcafd88e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c2df46bc-bf2b-4882-a7af-dc1382794301",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "9b0d8cd3-e4ce-484e-af2d-12a19d148194",
        "cursor": {
          "ref": "28959697-9884-4675-9a07-06a22f9d26cb",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "77b74f0a-a449-4399-9c7e-cc0833ded814"
        },
        "item": {
          "id": "9b0d8cd3-e4ce-484e-af2d-12a19d148194",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "19b1c3f7-a151-47c6-8962-528336f946ed",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "9183c749-e9d2-4538-ba05-60ea8cfb4bc1",
        "cursor": {
          "ref": "bef9599a-06f0-4ded-8554-96a348cf2214",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1595494b-4365-43a2-93f4-7f57e62f06a5"
        },
        "item": {
          "id": "9183c749-e9d2-4538-ba05-60ea8cfb4bc1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "035b539b-1ab0-403d-9f62-b5813c912205",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "64090c82-718f-4192-babe-1b7b54fb7fa6",
        "cursor": {
          "ref": "94c4999a-f5c1-486d-941c-541fa40d2fa9",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a6a985ad-ae01-44b5-8baf-3a2845c27355"
        },
        "item": {
          "id": "64090c82-718f-4192-babe-1b7b54fb7fa6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "98e81ae2-4749-405f-9bee-7f2ed3f5da87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc47ca99-2c1e-40b2-ac5a-851c0bdeb22a",
        "cursor": {
          "ref": "2c4d0287-8b61-4059-9068-d626f8e12a3f",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "033e1429-dd96-4236-8a30-0839bfcd9bc9"
        },
        "item": {
          "id": "cc47ca99-2c1e-40b2-ac5a-851c0bdeb22a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "07c7978f-7257-4cae-927e-be0534f53700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b5abbf-9ce1-4981-93e8-00a460f282c2",
        "cursor": {
          "ref": "d842b2d6-9766-4944-b5b6-cb732766e334",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e4c19ec8-d14d-4d2b-abc3-4270aa7353b6"
        },
        "item": {
          "id": "37b5abbf-9ce1-4981-93e8-00a460f282c2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "83d03d51-9f67-4d16-91ce-a52ac6cce452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6293484-c08b-4b24-b06f-753e94b9b6a8",
        "cursor": {
          "ref": "90f1cf0d-044b-4758-87bd-0a7b2568a9a6",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "732d8f50-08d0-4753-b894-953d3eb04da0"
        },
        "item": {
          "id": "d6293484-c08b-4b24-b06f-753e94b9b6a8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1efdbd93-d325-4259-a201-348d4cb10f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4484c722-19a6-4d84-ab7a-12663a639797",
        "cursor": {
          "ref": "31a284a7-46c0-4310-b8da-3e8b158944ca",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6a9de7bd-2884-49c9-8a85-e6fd8f10cf21"
        },
        "item": {
          "id": "4484c722-19a6-4d84-ab7a-12663a639797",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fb79eecc-a702-4ba2-acf1-14fc320cbf6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8027874c-4c7a-434d-b66c-f527290bd87a",
        "cursor": {
          "ref": "2c2ee15d-efde-4efe-8dbf-6ad853ce5d86",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f7b3bc56-b0e5-4a7c-8193-f0e5c5d26141"
        },
        "item": {
          "id": "8027874c-4c7a-434d-b66c-f527290bd87a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1cad68a4-25fb-43cc-ad12-e3de03cfe11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3277db0-f5ac-4865-bcbe-6374514f9f17",
        "cursor": {
          "ref": "f3e28521-2772-40c9-b9a1-1493f72101b1",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f8c9c6f6-39b7-47a0-b593-449ca3278697"
        },
        "item": {
          "id": "c3277db0-f5ac-4865-bcbe-6374514f9f17",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e7e3f863-7c5e-4de9-b9d6-767c2c6b218a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d9321d-5e0f-407a-bce2-5c0cfdca8458",
        "cursor": {
          "ref": "b5c72ddc-02df-401d-9471-e131966a3282",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "91b3ad52-8578-465b-ba86-a2a4bde02701"
        },
        "item": {
          "id": "18d9321d-5e0f-407a-bce2-5c0cfdca8458",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fbff6d02-bb36-4a21-b88b-e76d8fc61e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d99777-ea96-4827-bda1-5261282f45da",
        "cursor": {
          "ref": "95622a62-d400-4f1d-b083-8b7b49aee663",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c4e75fdc-ab86-42e8-92b8-531cfb3e450e"
        },
        "item": {
          "id": "05d99777-ea96-4827-bda1-5261282f45da",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5526137e-1a17-4971-b952-c7e2fc50d0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c398f06-c9c8-400d-93c6-46d174b82341",
        "cursor": {
          "ref": "60f27c7b-c6e0-4989-b911-4b3c6b399e56",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "42126560-1d22-420e-8283-1c42e5a86b42"
        },
        "item": {
          "id": "1c398f06-c9c8-400d-93c6-46d174b82341",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "61480b46-2636-492d-9774-f37fc0c44865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7848d7-3f98-492e-82bc-7e0723a8a570",
        "cursor": {
          "ref": "fb93fb31-544a-4144-8958-2b5e8334afa8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "65a619aa-9d77-4299-a436-f3d92237d928"
        },
        "item": {
          "id": "6e7848d7-3f98-492e-82bc-7e0723a8a570",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "667151e0-ec23-4d52-a014-09b1606232e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22216183-7772-4421-8909-b03a86a7a4f3",
        "cursor": {
          "ref": "acdf07ce-c128-494f-8f66-8acf7f09d59f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7181af11-3968-4532-96ca-ac65c9e99952"
        },
        "item": {
          "id": "22216183-7772-4421-8909-b03a86a7a4f3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6b932f1d-be94-4784-b676-d1c9fde89357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad2f291-354f-47a0-8258-e51afee34983",
        "cursor": {
          "ref": "862c5008-40ce-4a84-a9a2-610a73966a5b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "06a8e25e-4e89-4abb-a495-7b103b994551"
        },
        "item": {
          "id": "5ad2f291-354f-47a0-8258-e51afee34983",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "62e09131-f0b5-47ea-ba9f-2908860a3810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c8bb08-1221-4c3d-b96a-2399a9d0fdc9",
        "cursor": {
          "ref": "6401a843-37bb-4c67-8d4b-50bf6b29561f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "efc8a092-e828-45f0-b7be-8d8b010fc3c3"
        },
        "item": {
          "id": "67c8bb08-1221-4c3d-b96a-2399a9d0fdc9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b0b683c7-482d-4112-9878-f25862a00624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e11b5d-ed2b-468b-8def-fa198aa8bcad",
        "cursor": {
          "ref": "85797b64-a873-416d-9d99-3a551be23b8e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2de38bc0-a371-48fd-9fac-cf83b36e6040"
        },
        "item": {
          "id": "47e11b5d-ed2b-468b-8def-fa198aa8bcad",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "36a92df3-03cf-4046-911c-39276b6eaec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b632d9c8-bbb4-4e13-9b3e-d63d8cdf777a",
        "cursor": {
          "ref": "bf15220e-f31e-4f9c-a566-6c4f90c59655",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "22bc8b78-1358-49fc-bbee-bd141b92966d"
        },
        "item": {
          "id": "b632d9c8-bbb4-4e13-9b3e-d63d8cdf777a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7fd3920c-87ea-4979-80bd-43fa7b5b7e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95684bc8-6173-4731-96a5-665bdf64d029",
        "cursor": {
          "ref": "653b7b1a-a8b7-4f48-b0a6-0779bc7b5f76",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3fb4359d-13fb-41aa-84dd-db12f02120ec"
        },
        "item": {
          "id": "95684bc8-6173-4731-96a5-665bdf64d029",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "aab97a7b-6413-401b-86c4-e794beab9c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8334dc33-bbd1-4f0b-a956-a6d53e27360f",
        "cursor": {
          "ref": "5a9158a1-5887-436b-adef-1d0be2aa4587",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1e6f087f-0257-4ac9-826d-9ec8c6db8ec9"
        },
        "item": {
          "id": "8334dc33-bbd1-4f0b-a956-a6d53e27360f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c4586730-9636-4e82-a991-39cfaeea4d39",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "fb1d9894-87a4-4961-926f-12f380d04467",
        "cursor": {
          "ref": "71f0a22b-97cd-41d7-ab42-f4b508013477",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "39f3cc7b-a1a8-4dfe-bc4c-9c2baf157f0c"
        },
        "item": {
          "id": "fb1d9894-87a4-4961-926f-12f380d04467",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fef5272d-fbe5-44f1-8d5b-a1b2020db470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bac6e54-f515-40d1-aed1-6a17c48a1de8",
        "cursor": {
          "ref": "e62eaad7-81e1-447d-8772-15bc7e56e1e7",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "de2b83e3-c956-43c0-8f52-acb7277717b3"
        },
        "item": {
          "id": "2bac6e54-f515-40d1-aed1-6a17c48a1de8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bd5721ab-7a86-4a78-8d05-a97fa4db692e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73710918-cb18-417e-8b35-2821f2858dfe",
        "cursor": {
          "ref": "dc5cbf46-2012-4ad9-b389-451c27001cc0",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5245a0e6-e876-416f-95dd-1ebec90ec37c"
        },
        "item": {
          "id": "73710918-cb18-417e-8b35-2821f2858dfe",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a2b0240c-02dc-4a9b-b2eb-8c37e614a15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212209ab-d3ee-44a4-98ef-7d1598897dff",
        "cursor": {
          "ref": "56a5edc5-8155-48f5-a6d6-9624ff531212",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "37f1a747-bbc2-403c-a344-1009d989c162"
        },
        "item": {
          "id": "212209ab-d3ee-44a4-98ef-7d1598897dff",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bb9c11c9-cd88-490f-9144-e1bf571f3449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd6903b-bf67-4bac-b18f-160f2188c8a2",
        "cursor": {
          "ref": "45ec7652-8183-4829-a8d0-0081586e5cb5",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6a0163a7-bd5e-4304-a9f0-67f0584ca673"
        },
        "item": {
          "id": "bdd6903b-bf67-4bac-b18f-160f2188c8a2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2f9eb306-e305-4fa7-8503-ca467b2ce31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d78eae-1513-4674-aadf-87c9e2090a1a",
        "cursor": {
          "ref": "aa12efc3-941e-4e78-a290-3c9a721cbbb6",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f5a88db6-2a5f-4a1c-a3ef-b5a3a92302b1"
        },
        "item": {
          "id": "13d78eae-1513-4674-aadf-87c9e2090a1a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c224f17f-c65f-4a82-847a-bf76030bb306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10bab31-3706-4391-9f0f-b46c6ff66a00",
        "cursor": {
          "ref": "4cc02ffa-6b06-4e0a-af15-ad4c12806ac0",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5c1c588c-33d2-45e0-b113-ab52159f4761"
        },
        "item": {
          "id": "b10bab31-3706-4391-9f0f-b46c6ff66a00",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ba8c1a33-bd1d-443b-b8a5-969b31d74d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698206ff-4626-412f-af06-4f66aaccad41",
        "cursor": {
          "ref": "f09fd769-50d1-4ce8-b31d-1215cf7dba61",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "577f60a7-04e7-4c5f-871e-66f40e35923b"
        },
        "item": {
          "id": "698206ff-4626-412f-af06-4f66aaccad41",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "15886a03-cb72-40f1-8335-0f5b9dc33c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cbbb61-5cb6-477c-9ada-b884906cc366",
        "cursor": {
          "ref": "f2132eda-8539-4ac1-aa42-14a2f1254019",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cdf4e71c-25da-4dc4-aaf2-6a2ea3442bce"
        },
        "item": {
          "id": "29cbbb61-5cb6-477c-9ada-b884906cc366",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fd95340e-306d-40ed-b0ae-59cb83748492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac7f2b0-eb26-4940-8620-1369c5d0439c",
        "cursor": {
          "ref": "a69da722-634e-44f2-af5b-bc3e06d06cf2",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6556a2ce-d1a8-485a-85a5-18849a81087f"
        },
        "item": {
          "id": "2ac7f2b0-eb26-4940-8620-1369c5d0439c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "059a5018-7d03-47c1-9148-e91f6e489ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db701903-9a67-4f33-b4ae-eea86b4036b5",
        "cursor": {
          "ref": "fc0267b2-224a-4914-9f59-8c8eece75612",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e4d3a534-78a3-4655-8819-85014a30a680"
        },
        "item": {
          "id": "db701903-9a67-4f33-b4ae-eea86b4036b5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a0d45a74-9e9e-455f-ad1b-f00394476af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a527f4ae-3fb3-4996-9e99-1786ef3aaacc",
        "cursor": {
          "ref": "4c87c667-d6f6-4f8d-917e-c1a1fab07284",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9411c19f-0624-49de-971d-9eb39c9c93cf"
        },
        "item": {
          "id": "a527f4ae-3fb3-4996-9e99-1786ef3aaacc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4ab96940-b92b-4049-93ee-a92242851447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3bcd57-7c77-4515-abbc-be3e106ba5dc",
        "cursor": {
          "ref": "2f9f7d27-8909-4cb2-9935-7303b6b203ba",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1fabbfe5-38bc-4167-b1ce-360fd3204a8f"
        },
        "item": {
          "id": "ec3bcd57-7c77-4515-abbc-be3e106ba5dc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "45314307-59b0-4831-950f-d4e0736e9aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a90ebd9-5428-4fb2-ac63-3b232d4b367e",
        "cursor": {
          "ref": "c0f1aef5-3711-4026-8a96-d1267f5691f4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4562526a-fb5c-4a79-b600-d7112e6df85c"
        },
        "item": {
          "id": "4a90ebd9-5428-4fb2-ac63-3b232d4b367e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8de0066e-3e8d-428e-a6de-02db1e1f34f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7bcd44-1d20-448b-86f1-261f23471c49",
        "cursor": {
          "ref": "7a3cf612-741c-4a32-8e6d-85ea31d5dfb9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c52306e1-2fbd-402f-9d57-ff841494c295"
        },
        "item": {
          "id": "ca7bcd44-1d20-448b-86f1-261f23471c49",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d6bdc9ad-96e7-4557-8533-c62d23f0bca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e812dc53-264d-4ee6-be0e-1f0343c1a1cb",
        "cursor": {
          "ref": "76229cbe-4bbd-43db-beb3-7b8899efca61",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9153ddfd-39fe-4a6c-bfad-bf77ef881d33"
        },
        "item": {
          "id": "e812dc53-264d-4ee6-be0e-1f0343c1a1cb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "40a2417c-26bd-45eb-a71c-c41c455218fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8959b99-7676-4e7e-b8a3-b74ab963798c",
        "cursor": {
          "ref": "ea027b3a-33aa-4f17-8937-163dfe458916",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3a154368-dd4b-445c-8f47-95bb36eea988"
        },
        "item": {
          "id": "f8959b99-7676-4e7e-b8a3-b74ab963798c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "213543ee-84ef-48e0-bd4c-e2fbd99f71cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f96827-bf78-47db-af3d-a36c03aec2b1",
        "cursor": {
          "ref": "67b598a6-021b-4ad6-aa3f-072042954929",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "907da77c-aacc-4da9-959c-b94a995c31de"
        },
        "item": {
          "id": "64f96827-bf78-47db-af3d-a36c03aec2b1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "faaf84e7-de23-406e-8fbe-07a401894a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bee5263-049e-48d7-8777-5c7087a8f7e9",
        "cursor": {
          "ref": "cfee0480-aaf8-4c77-b1e4-5bde7658432a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7a01e1c2-72fe-49f8-81db-e628c89620bf"
        },
        "item": {
          "id": "0bee5263-049e-48d7-8777-5c7087a8f7e9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bc5b1d32-a8e8-43d2-a643-7f77326e0209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce8861d-d185-4dfb-a97a-3cab63c26869",
        "cursor": {
          "ref": "d33dd518-538b-4600-b756-599730f7c987",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "375338ae-8931-46d6-a968-53dcf307bc02"
        },
        "item": {
          "id": "8ce8861d-d185-4dfb-a97a-3cab63c26869",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "147e0034-363b-4b1a-b66b-8a0dcc2ad52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60a8126-2914-44e2-9a8a-b26c4af620be",
        "cursor": {
          "ref": "6da8dbbe-f35f-4cd1-bad5-7b3229002af2",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8a5a4bdf-df31-48ee-9b3e-76d18115b951"
        },
        "item": {
          "id": "d60a8126-2914-44e2-9a8a-b26c4af620be",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a093ebc7-9c14-4a9c-a3e7-a6a5f4dfc927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec856934-b938-4a1e-8f0e-eed05f36a2e9",
        "cursor": {
          "ref": "832e8370-6e90-405d-bcc3-cff292f8cb34",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "540eca7d-3e6c-4637-8592-8b3bcfdfddd4"
        },
        "item": {
          "id": "ec856934-b938-4a1e-8f0e-eed05f36a2e9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d0458fef-074c-4d69-ac30-7ed53d8fbdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23a00fd-5cd1-40a8-8659-6fb225d64d6c",
        "cursor": {
          "ref": "571c7158-0e8a-40b8-b4c0-d4a9bcb8abba",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "94d2ee12-e365-49e3-a83e-dbc9afe5e394"
        },
        "item": {
          "id": "a23a00fd-5cd1-40a8-8659-6fb225d64d6c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "631f9624-955e-442a-aa55-2bb4f4678a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a9f8b6-5b5c-4bb5-a01a-b1c37eeba6e3",
        "cursor": {
          "ref": "bc6dd8c1-6d0a-4b47-83f6-fb5de19ba3cc",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a373fb30-31bf-45ed-91fd-bc6b2f928baa"
        },
        "item": {
          "id": "38a9f8b6-5b5c-4bb5-a01a-b1c37eeba6e3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e88c005b-8288-4278-98be-c02ef0380426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c61b493-2ccf-4717-a28b-9b2a541d2a5f",
        "cursor": {
          "ref": "a7430e78-bebd-49f6-9cbb-ec3ee3969be1",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cff10b74-e3ae-4861-a42c-4ef3a5cdd667"
        },
        "item": {
          "id": "5c61b493-2ccf-4717-a28b-9b2a541d2a5f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "647675d1-337a-47b9-84b3-c23dd133d9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2aaa4c-9b25-4a8c-bee2-08d69c659062",
        "cursor": {
          "ref": "a40728c4-b33c-4db4-96c3-747c465f4c70",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e1b0b90a-7c7d-4bde-ba51-55c7cea59f29"
        },
        "item": {
          "id": "6e2aaa4c-9b25-4a8c-bee2-08d69c659062",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b7c46746-e836-4bdc-a41c-878a3e60b4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f4c1bf-82c0-461a-a39d-1b3f9b9be93b",
        "cursor": {
          "ref": "d1d8ae67-808d-40b5-92ca-2bdd6edc55cd",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "415c901c-2238-49c6-b677-c540bad54de9"
        },
        "item": {
          "id": "96f4c1bf-82c0-461a-a39d-1b3f9b9be93b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1c0c7694-9518-4c94-911b-1818244d7be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc59724-2bb9-4ed5-945f-f3d35d06521b",
        "cursor": {
          "ref": "1f10ceee-fa00-417c-b6d8-b4304a464c0d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5a103ae2-1cd5-409a-a2cc-e90eabc67727"
        },
        "item": {
          "id": "4cc59724-2bb9-4ed5-945f-f3d35d06521b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d9ae534d-6d02-47a1-9525-e07221bbfcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ebc7fe-3c30-407c-b4c4-2e4b65b81985",
        "cursor": {
          "ref": "75cfb950-fb41-45ac-be39-483f9a91cd2a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9975beb9-0ae7-4633-8f11-1ab0b39f9923"
        },
        "item": {
          "id": "33ebc7fe-3c30-407c-b4c4-2e4b65b81985",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8b9e56fd-c4e7-4405-8122-f8350db03669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef54fc0-4012-4875-a8a7-1f36e8671553",
        "cursor": {
          "ref": "2d691400-10c3-46f8-b28d-ce6c6981306a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b9e5681c-30ba-4168-8d45-286351cfb92e"
        },
        "item": {
          "id": "5ef54fc0-4012-4875-a8a7-1f36e8671553",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "07e92e51-2105-4dcf-ab67-7ac51b25dce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f80678-e146-4228-8896-6b48016e3636",
        "cursor": {
          "ref": "0042af1b-3035-4d7b-87b3-53f69f4d0ac4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e48a6164-33ee-47bc-b2b1-eeb155c8a370"
        },
        "item": {
          "id": "32f80678-e146-4228-8896-6b48016e3636",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4e98f5cc-30ea-4289-a986-34ae1d350f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ffe9d0-e305-4a0e-a06d-035db6aa0c3b",
        "cursor": {
          "ref": "ba5676f6-946e-4da9-85ba-2c0c3f9c1281",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9698703c-6bc9-4789-b0df-a93bdfee5b3a"
        },
        "item": {
          "id": "e4ffe9d0-e305-4a0e-a06d-035db6aa0c3b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6c385925-3aff-471d-9c4f-bc98e8ece630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513105bd-50e0-44c2-aece-17af28162d13",
        "cursor": {
          "ref": "267b3de5-813f-4792-9ac3-d5fee8307535",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0785d605-a6ae-4295-a65e-af4f9b969350"
        },
        "item": {
          "id": "513105bd-50e0-44c2-aece-17af28162d13",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "83228019-6cad-4d4b-b533-cf90dec5aaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9c4f03-6eef-4b5c-b056-d5c1e2fb95c0",
        "cursor": {
          "ref": "94355288-4c67-457b-963d-2158598544e5",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "71c6c99d-b296-4e11-86c7-05dd06f781c3"
        },
        "item": {
          "id": "be9c4f03-6eef-4b5c-b056-d5c1e2fb95c0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bf484f5d-e819-44ce-8140-acc65ee36faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b288d5d-9fcf-48b3-bee9-001a007782b8",
        "cursor": {
          "ref": "d67b7590-a132-4661-a660-5f669fb617c9",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "90be73f6-0452-4ba3-87f4-a662421bbe4c"
        },
        "item": {
          "id": "9b288d5d-9fcf-48b3-bee9-001a007782b8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cab9e049-2fc9-4774-873c-6b1c239c30db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92aaf50-b300-4994-a031-d537257a9e99",
        "cursor": {
          "ref": "023244c0-7253-4d78-8420-fc6afb1dc192",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "aa1f1e3e-0751-4470-aa67-2fb1436ac1f8"
        },
        "item": {
          "id": "e92aaf50-b300-4994-a031-d537257a9e99",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "de453304-7bbe-4400-ae87-837916152b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae73c68-0c0f-4ffc-8491-12aa2b17eeee",
        "cursor": {
          "ref": "d2894963-f8b5-49c6-8187-94c9ee3e0a63",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a27d88ca-3533-4a0b-b6cd-de6057524194"
        },
        "item": {
          "id": "3ae73c68-0c0f-4ffc-8491-12aa2b17eeee",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e6a600d9-738f-4bfc-af45-f12fb5f1851f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cafe7e-adac-4cc3-af39-8a6e93776181",
        "cursor": {
          "ref": "7bfb4f31-2fda-4a3b-a373-dc1ee3743e31",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7364b8d9-4753-4f45-bcb3-8500c806675e"
        },
        "item": {
          "id": "41cafe7e-adac-4cc3-af39-8a6e93776181",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2e46ce0a-f214-4010-9479-3bcfac8a76bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd328f4-5066-4ce2-9037-fdb8f49ebdb8",
        "cursor": {
          "ref": "8c0f178c-4f2f-4058-bd35-bbb2895c908b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1e0918b5-dda0-44c3-82ea-f8bbec481f4d"
        },
        "item": {
          "id": "fdd328f4-5066-4ce2-9037-fdb8f49ebdb8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "689a9c6f-7609-43e6-bf80-d707ce3e87d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9197bb78-2482-452f-a4b6-d48e22808dea",
        "cursor": {
          "ref": "209516a4-e23f-44dc-a82a-5fc019b74847",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "534a412c-be86-44d8-abb9-bab233b11afe"
        },
        "item": {
          "id": "9197bb78-2482-452f-a4b6-d48e22808dea",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fa10392b-f045-41d5-8b0f-40dbf4d6ef8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce4d1db-1c2e-465e-a31a-6e99cb6eaccb",
        "cursor": {
          "ref": "e4090c94-afa6-4491-945a-30e0a74664ac",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "62a15a8a-77e8-4951-9d97-f5491c695e0c"
        },
        "item": {
          "id": "cce4d1db-1c2e-465e-a31a-6e99cb6eaccb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6dbea7b0-f6fd-4969-9ad9-7b95e8826bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12367236-b372-47fe-a998-b4d4437c5b85",
        "cursor": {
          "ref": "f726a0a8-d750-4770-9268-9477a93527a7",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e4048b71-60ef-4ba8-bd1d-b60f8e8dc6a7"
        },
        "item": {
          "id": "12367236-b372-47fe-a998-b4d4437c5b85",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c394adfe-1f52-4835-9344-24848c0d5046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b37df85-a7d6-4b66-a4bd-95c51eaccb21",
        "cursor": {
          "ref": "28e24ab6-df4d-4f55-85c5-870461fd84a1",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3933874f-fbb1-48f5-988d-a74a16cc7162"
        },
        "item": {
          "id": "3b37df85-a7d6-4b66-a4bd-95c51eaccb21",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3d827979-046d-49c6-bc45-774f6363dc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831687ee-14e9-4e5f-b0ee-a59a29c1e62b",
        "cursor": {
          "ref": "e4b4dbcb-a881-4bb3-86a9-b36a7947c916",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a52a68b4-06f7-447f-954a-9fc311408066"
        },
        "item": {
          "id": "831687ee-14e9-4e5f-b0ee-a59a29c1e62b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "950e4fe7-3795-4382-bf3f-594356306cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce198b7b-74a0-4d85-a37d-3fb50d1ce16e",
        "cursor": {
          "ref": "1b8af8f4-18ae-4770-91a3-d6f3538b3f7f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3f309eb5-b9d8-4219-aa24-a85ce84af33d"
        },
        "item": {
          "id": "ce198b7b-74a0-4d85-a37d-3fb50d1ce16e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a503654c-ac73-48b3-9808-6d2a85238ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a89494-ea67-4239-bb32-e8a2000b3630",
        "cursor": {
          "ref": "139df73a-9d8f-47fd-8b18-5ea8e505e73b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ae89f6ca-df95-4ab8-8fdd-9e8152e01316"
        },
        "item": {
          "id": "a5a89494-ea67-4239-bb32-e8a2000b3630",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2b9e62a1-4cfb-45f6-883e-9c8fda143bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6bdcd9-e751-4a32-aab6-a560f234aeee",
        "cursor": {
          "ref": "6c94d20b-0989-4e96-a0b8-0c5311470014",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7b87158e-f9b6-4684-b91d-2730f920c246"
        },
        "item": {
          "id": "ed6bdcd9-e751-4a32-aab6-a560f234aeee",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "25822f3e-52e5-4002-b2fa-db0156b0f1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca99cdb-d536-432a-9603-46d0bf5a8af4",
        "cursor": {
          "ref": "ecc211c6-2da1-4aeb-85d5-63686e28f747",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a788bd20-1b04-4bc9-9914-218cb025f4f8"
        },
        "item": {
          "id": "5ca99cdb-d536-432a-9603-46d0bf5a8af4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "44915397-086e-4108-b6ec-80830a8e7bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14bb33c-742c-40e2-bc0c-835f2e3964d8",
        "cursor": {
          "ref": "b06211f3-3922-4073-924e-551e764ba387",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3a9c7489-d72d-4b2d-91f7-03ac36b1c056"
        },
        "item": {
          "id": "d14bb33c-742c-40e2-bc0c-835f2e3964d8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bca33649-5cfd-4ade-bdd5-4c00b7987eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0f7edd-10e8-45ea-883d-133e8d78ca80",
        "cursor": {
          "ref": "4ec79ce7-47d2-4b2f-8e0c-df38e7feac95",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e257d5e4-6dd3-412c-b353-6d841c19f6ab"
        },
        "item": {
          "id": "2b0f7edd-10e8-45ea-883d-133e8d78ca80",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6340ad72-d3d0-48c5-8107-2552bdb64766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd0c8d0-30cf-4b2c-9cff-6b7044f968ac",
        "cursor": {
          "ref": "46bda7ba-2710-47ef-9966-23bf9fd4941e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "860ef5b1-4815-4b45-81be-5ad0eb14a8c6"
        },
        "item": {
          "id": "6fd0c8d0-30cf-4b2c-9cff-6b7044f968ac",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0bd7f2f8-4719-49c3-bfae-ea4c2a209c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec22f53-83da-4aa2-88b9-4baf56b54739",
        "cursor": {
          "ref": "277f8416-61ce-4d71-9fd4-b9b494788965",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "adffac5c-4998-4a46-a387-0572551184f7"
        },
        "item": {
          "id": "0ec22f53-83da-4aa2-88b9-4baf56b54739",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1f85a965-0643-4b2d-8572-a37253fb7a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf68cd7-5177-422c-a93d-85e800e8c0c3",
        "cursor": {
          "ref": "a120571f-dcca-45c8-98bc-92b7204b3372",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "06c436a3-633a-4466-a855-2989b3919af0"
        },
        "item": {
          "id": "fcf68cd7-5177-422c-a93d-85e800e8c0c3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bc9bcc89-ce77-41d1-8be5-8608c68633a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3a87bf-0c38-426d-863c-aac53bd8f44e",
        "cursor": {
          "ref": "7750f901-e79a-479c-b969-7cc5bdbf3684",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b8eecb0f-36ff-48e7-a158-4471c218c5af"
        },
        "item": {
          "id": "be3a87bf-0c38-426d-863c-aac53bd8f44e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7681c3f5-98ee-40f0-97cb-324ec46349ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723e3051-185d-4da3-a6af-e7ba7c85d593",
        "cursor": {
          "ref": "3a4f5dfa-6f95-45b1-8f75-cd5b34051210",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "272157c4-7b5e-42b8-9b1a-6f5a9033231d"
        },
        "item": {
          "id": "723e3051-185d-4da3-a6af-e7ba7c85d593",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bd4436d6-513b-4f00-abed-c0424fed5ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c343af5-0d6c-4c19-88fc-bb26894208b9",
        "cursor": {
          "ref": "c758147f-f275-4738-861b-ce0a0a121936",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c2bf5fbe-106c-465e-a5c6-60614360d283"
        },
        "item": {
          "id": "7c343af5-0d6c-4c19-88fc-bb26894208b9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2cd3fee1-23ac-45b9-9802-9664b1c89c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b63d78-10fe-47cb-9cf8-7ce99f057d9b",
        "cursor": {
          "ref": "0b5e9111-7d24-4555-a774-b8f8e194d262",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "83734b24-918c-4f1d-85f7-8b8fa4230d66"
        },
        "item": {
          "id": "32b63d78-10fe-47cb-9cf8-7ce99f057d9b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1ecd5f61-7acb-4ad0-8a9d-0a6d0918c033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0f89be-7476-44f4-a521-81fcdb83c4ad",
        "cursor": {
          "ref": "aee648a1-586a-4097-bd31-869375a56dbb",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "008ecf19-108a-4441-801d-b0bedbfbf1d5"
        },
        "item": {
          "id": "bd0f89be-7476-44f4-a521-81fcdb83c4ad",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "eba3fd55-7311-46aa-b574-e66464c227eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4548986-268f-431f-b9d1-cadd8fe9f4d4",
        "cursor": {
          "ref": "8c08dd56-29af-4b79-bb88-149c07dd17a7",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "26f0d07e-7c2b-421e-9d6f-0cf63a476b78"
        },
        "item": {
          "id": "d4548986-268f-431f-b9d1-cadd8fe9f4d4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d9454c4b-9000-492e-b7eb-565d679e9f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0a0db7-e4bf-43df-a647-b8a57180af18",
        "cursor": {
          "ref": "ec485476-9fcb-48c6-9b59-4770c3a5b3c0",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8d9f4807-6dd3-4dde-99b9-97ac0b9ed3b5"
        },
        "item": {
          "id": "3e0a0db7-e4bf-43df-a647-b8a57180af18",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a06acac4-ea65-454c-8469-985780086d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6c4723-c8a9-428f-bc16-127b2a3b3684",
        "cursor": {
          "ref": "59881942-dd47-45ed-96a9-927a461bbcf2",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9514bd6f-5439-49e7-9c03-870c05e42d26"
        },
        "item": {
          "id": "be6c4723-c8a9-428f-bc16-127b2a3b3684",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6c6723ff-c62c-4fb3-aa01-a8e0e067ba8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdb36e7-e15a-4c37-b249-6a0001eedb61",
        "cursor": {
          "ref": "90cc4dc0-42f2-4863-b486-31f3c272fbc1",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "15ed38e6-7040-4a38-88f8-6ea3238a099f"
        },
        "item": {
          "id": "0fdb36e7-e15a-4c37-b249-6a0001eedb61",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a765eb5a-7830-4013-8a89-baf4d6d1e57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d34a517-d623-49a6-8807-46cbc7f9e944",
        "cursor": {
          "ref": "a8037047-302d-459e-9168-e21b6c14b090",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d65da353-2992-47ef-a891-571fe75453ce"
        },
        "item": {
          "id": "3d34a517-d623-49a6-8807-46cbc7f9e944",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f10315b1-b2b3-4d0a-b80d-ee139f7ae269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21707e7-9ae6-4461-8950-e2f814dbf83b",
        "cursor": {
          "ref": "9549d582-074c-4209-8e95-bebe85838d5d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e729d22f-8bf0-4aa0-9db1-b0af7c9f6a70"
        },
        "item": {
          "id": "b21707e7-9ae6-4461-8950-e2f814dbf83b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4d30be54-d2ea-4804-8df9-be27771e8e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47d25d6-23d1-4698-b8fe-f2a421a89688",
        "cursor": {
          "ref": "822d6bed-76b8-4627-a14f-cd82e44ee149",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4b814cf0-4796-4676-8fe0-d289d26dc496"
        },
        "item": {
          "id": "c47d25d6-23d1-4698-b8fe-f2a421a89688",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a7b9ef39-d006-400d-8814-080b3a968bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7339733b-0e76-44f8-84a0-bcc2bb149043",
        "cursor": {
          "ref": "53bcedbe-74e1-4721-80d6-7a04ebe08758",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "344a5536-6555-4953-9256-111c18d1b7e6"
        },
        "item": {
          "id": "7339733b-0e76-44f8-84a0-bcc2bb149043",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "045e5e66-3877-4a5b-b1e7-c33f7c471d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd1d5b3-077d-4ad8-876d-6e5f80a579b1",
        "cursor": {
          "ref": "57c40f80-c13e-4cab-aac5-47ec7d270bbe",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "42c35d14-eea5-4e1a-9451-5f2bfb873620"
        },
        "item": {
          "id": "6cd1d5b3-077d-4ad8-876d-6e5f80a579b1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "08a1669f-8b78-4af0-8222-5822ad045e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53585766-32af-4100-83cc-f35dfcdee9a1",
        "cursor": {
          "ref": "35647417-2fce-4cff-b565-64ac135607f4",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "617ad29d-67e5-4149-b4d6-3a06bab7724e"
        },
        "item": {
          "id": "53585766-32af-4100-83cc-f35dfcdee9a1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a49ac011-fb18-463e-b9a9-cac7107c04b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c70648-5a27-456c-8fc5-df326dd39c64",
        "cursor": {
          "ref": "619714a1-c5ce-4169-ade0-57a0749503f0",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "318d1126-24d0-48ec-a4c5-a6b71e86eb4f"
        },
        "item": {
          "id": "81c70648-5a27-456c-8fc5-df326dd39c64",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "66af777e-5d27-4867-b0f3-f3154f3f3e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79772b1f-9064-430e-b64e-b8e2bb2ad3c5",
        "cursor": {
          "ref": "6ba8dd5b-b8f3-4246-abe6-ab66e5d5d466",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a2af99af-aad1-4e41-9572-06180c413c41"
        },
        "item": {
          "id": "79772b1f-9064-430e-b64e-b8e2bb2ad3c5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e610020a-53ea-45cc-9535-3fd331d25bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed5eb51-3e77-4d2e-b651-e6621b09891d",
        "cursor": {
          "ref": "fa549aad-7729-4e6e-810c-aac65763c669",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b6d95894-a31d-4a97-ada6-900e764f59b9"
        },
        "item": {
          "id": "5ed5eb51-3e77-4d2e-b651-e6621b09891d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c741b11a-51f3-483d-bd6a-e25c373effbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a626e433-1802-44a5-b8c3-e08ac2b78633",
        "cursor": {
          "ref": "49afd075-b1b9-4f68-befc-fc879ad536c4",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "63a75a09-bf6b-4767-a168-d2b3a75672d2"
        },
        "item": {
          "id": "a626e433-1802-44a5-b8c3-e08ac2b78633",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c5ad2e26-1454-4e76-bab0-73002806d4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba304c5c-171a-413a-8335-d9502ca7f46d",
        "cursor": {
          "ref": "dacf386e-e1e2-47d6-ac1e-790d8d142611",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "295e2670-07da-4b92-a6ec-3b9a30ff9e7a"
        },
        "item": {
          "id": "ba304c5c-171a-413a-8335-d9502ca7f46d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "83f662c5-3dff-4206-9980-571851ed6d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2364b114-87dc-465b-9dc3-2e842aff3516",
        "cursor": {
          "ref": "470b8dc2-4463-4d47-b2a2-386e7e857f91",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8472dbe8-98e1-4c52-98a3-6eb58be4562a"
        },
        "item": {
          "id": "2364b114-87dc-465b-9dc3-2e842aff3516",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e2742f62-8a7b-46f6-b59e-71216793d8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6102226e-87e3-474b-b1ea-b82e4bf872d0",
        "cursor": {
          "ref": "0465d2dd-6ec6-4b37-b249-e67a56e6b14f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e9e64d91-0a7d-48a7-9ad6-7cf20b661bb8"
        },
        "item": {
          "id": "6102226e-87e3-474b-b1ea-b82e4bf872d0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ad48a121-4e6e-41c6-a019-f3a67cacd36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a4de47-d6cf-4794-995b-d32893eaca4b",
        "cursor": {
          "ref": "b11f3cd1-6789-456a-86bd-f10eeb44dbfb",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a9da4c7a-abac-4ee6-940b-782559fad274"
        },
        "item": {
          "id": "c6a4de47-d6cf-4794-995b-d32893eaca4b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0655cd1c-a643-4d9d-bd36-53301eff4488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b378a6ce-d44a-4364-83ca-9bef258eecd5",
        "cursor": {
          "ref": "42b99ee6-d11e-4475-9d6d-c040ed3040ac",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "87fd845b-62fb-446c-9aa8-516a5e8cc54f"
        },
        "item": {
          "id": "b378a6ce-d44a-4364-83ca-9bef258eecd5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8104ce84-9630-41c5-8954-98e375e91f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620ac119-daf4-499b-88a9-7d28f7a4627c",
        "cursor": {
          "ref": "26da58ca-8d79-403b-8068-67a66d6dfa35",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "600ff00e-6bb8-45e8-99e7-a954240df716"
        },
        "item": {
          "id": "620ac119-daf4-499b-88a9-7d28f7a4627c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4634ec10-2136-429a-842f-25f37fff81d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71294bb7-6279-4303-a1f8-4a384ed62f22",
        "cursor": {
          "ref": "8285b232-7564-4b3a-ad2b-afd9681afcfe",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4b3dc9d3-2098-4436-a1a8-24f13cfe189f"
        },
        "item": {
          "id": "71294bb7-6279-4303-a1f8-4a384ed62f22",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2b8e087c-e0b6-4d37-843c-ae29b293bfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb83e254-cea9-4fa2-811e-401ed2c24db5",
        "cursor": {
          "ref": "8dbc1f42-b166-4da8-bd62-6b659099a653",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "06e87585-84e8-49a5-b865-ba771aa401fa"
        },
        "item": {
          "id": "fb83e254-cea9-4fa2-811e-401ed2c24db5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b81eeffb-ad63-41b0-9083-c66481f91ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a111175-c491-4e50-9554-afb6e7549a6e",
        "cursor": {
          "ref": "b8fe816a-39b1-4ca3-b181-fbcd3f6ee3fd",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "57cc081c-986c-4b43-81b5-e934742539b6"
        },
        "item": {
          "id": "9a111175-c491-4e50-9554-afb6e7549a6e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d6dfc0cf-74eb-4e55-aa93-f27a5dacbc85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 17,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929620bb-20c8-4995-9b3f-bae543f9a5cb",
        "cursor": {
          "ref": "fac674b1-9b24-4ca8-9e38-95bda610ec50",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bf7f1fb6-4f3f-4322-9bdf-4e163e31383d"
        },
        "item": {
          "id": "929620bb-20c8-4995-9b3f-bae543f9a5cb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9753b2ee-c7aa-4f91-85a5-bf25a40e9623",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd3d750-627a-4009-aac1-68553ef309ad",
        "cursor": {
          "ref": "1ee9bd5b-db62-4c65-a481-74666127ad4f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8e511a13-6604-49b5-9a6c-c156908348ee"
        },
        "item": {
          "id": "7bd3d750-627a-4009-aac1-68553ef309ad",
          "name": "credentials_verify"
        },
        "response": {
          "id": "94290917-9693-4559-bd8d-13323cd5a9c0",
          "status": "OK",
          "code": 200,
          "responseTime": 2331,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ea4253-f487-4fab-91af-fe213a8297d2",
        "cursor": {
          "ref": "13ba3d02-713d-4451-91e2-af497537def6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9f604d6c-9341-4b1a-a3c4-1c75fc51f2da"
        },
        "item": {
          "id": "a5ea4253-f487-4fab-91af-fe213a8297d2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7c2035e5-d38c-4323-8d06-5ee6c2d11def",
          "status": "OK",
          "code": 200,
          "responseTime": 2421,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84ee4d7-3ea8-434c-91aa-093783936878",
        "cursor": {
          "ref": "5d74f8b8-1cf8-468c-9a82-af12304ad399",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9a13f854-c9ca-42d2-87fc-b8a34ad57505"
        },
        "item": {
          "id": "f84ee4d7-3ea8-434c-91aa-093783936878",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8663788c-4671-4f05-b11e-aeb909b6a322",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84ee4d7-3ea8-434c-91aa-093783936878",
        "cursor": {
          "ref": "5d74f8b8-1cf8-468c-9a82-af12304ad399",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9a13f854-c9ca-42d2-87fc-b8a34ad57505"
        },
        "item": {
          "id": "f84ee4d7-3ea8-434c-91aa-093783936878",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8663788c-4671-4f05-b11e-aeb909b6a322",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6aafa7f-3302-4e01-bba3-2d655f1ba037",
        "cursor": {
          "ref": "8972930f-b704-4907-9a27-5ad7386ca478",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ec5ac93f-184a-4fb3-8669-7323a76f5224"
        },
        "item": {
          "id": "b6aafa7f-3302-4e01-bba3-2d655f1ba037",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d280a7a5-d1db-4d1e-bc5b-9c380306d9a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f5adc5-0f03-439d-99a7-a7d3b9184b3a",
        "cursor": {
          "ref": "a5266ed1-a894-493a-9b77-f336c2e80017",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7f77aa10-1547-46e5-98fa-66823fcbb8a6"
        },
        "item": {
          "id": "44f5adc5-0f03-439d-99a7-a7d3b9184b3a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "09add00d-b973-4540-bfb9-1a565623d4be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}