{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "69f0c649-0560-40ca-8d38-9d0e311376cf",
        "name": "Clear Cache",
        "item": [
          {
            "id": "87f5f040-6ee6-4ffd-810b-818f31eb1e3f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9edc8d1-e273-4df0-b5be-67605ad310c6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "98f14fb1-a1eb-4d4a-bdc6-9dc21bcfa94e"
                }
              }
            ]
          },
          {
            "id": "2acf25d8-13fc-4f96-99b8-2647ef0a97a0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f8123172-0b34-4bfc-8521-0a5ce437b941",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fdc73ccb-0d75-4da6-ae57-47dad87873ca"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "462923cd-fda7-4602-8acc-79ea6f500f0f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "87e1bbaf-9fdc-47cd-83b5-6091654be00a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "08abdf8c-1a10-4322-8662-7940ef6992c7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba301f47-4589-4549-9eae-c202da847351",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "941d8a77-2811-40b6-902b-da50aafd4eb3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d412ca8-a218-4582-9002-11cc0506decd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9935ab10-056b-4808-bdef-16a5a1d62126"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9b8e616b-2dad-4bdd-9f5c-22652651d454",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79245184-111f-4ee0-8d64-15a7ef619f3a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70efbdc2-4f5d-466b-ae0a-b1cc112435e1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "80f5579f-3c33-4f96-a3bc-fee5652b3d9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "258f318a-2650-436a-913a-063bafccd157",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f4714a4-f2e5-46c3-b585-6680fc82557d"
            }
          }
        ]
      },
      {
        "id": "c0699c68-3c9f-4df4-851b-d6a6586265ca",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "35d34a71-6e65-45c4-8555-d6cddb2bb241",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d58d40f-a6d4-4ed5-9478-cd2af5524a00",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "84bc285b-d3f6-44d6-b85c-4131e2d00520",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa04fd7-c632-48e7-900d-05fb14d7e4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60bbbf23-928c-45da-8a5d-419a4d86cb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d05242-3f02-4fc4-87ee-2a1a38f4c7f2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e1fcdf-52e4-4866-911f-aee15c27c36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "945e6c20-2715-49e3-b694-67156c5d6d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf10f26d-e085-4899-a634-270c94361ccb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e44965-512b-4f49-b0e4-6709df43616d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "546783fd-e926-4c99-be6d-82ca1c065f6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f187caf-22a9-4daf-93d6-0b2af7ab98c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04ab6425-798d-417b-972c-c56fedf54324",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5b5a49-eb5d-448c-bb96-bd3d3ae17f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0182bf1a-9351-4763-86d3-fed6d6d001fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa64e5f4-2dfa-4f81-a871-b765504cb16f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5aeca48-2ed6-4057-90cb-d1b29c821463"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "72aaf189-93d3-4ccc-adda-81e572503382",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1ecea31f-cbcd-4fbb-8209-5d38ebf5df38",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "daa64318-ad44-4127-a523-34e10c5427d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "93c68745-b0aa-4b29-b059-59cfc645eb2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "223df191-8322-4baa-a0c0-069ee21762e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bd62d50e-a5ab-4a64-ab67-24a2dd182b25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5cae811-6f22-45fc-a7c6-0bf654f146ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf8db217-ecb8-4c1e-89e1-34ec64f4d2aa"
            }
          }
        ]
      },
      {
        "id": "37325c62-7c9e-4ef2-81ac-85379d0185b7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3c29729e-cee5-4ad1-beed-019f1547921e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "231d1c48-5263-4abd-b7ed-4b1861aba226",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f029d639-0294-4b45-8e0a-ca1ec69dac96",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d179cf-42d6-48c4-b36a-f7951039667e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f9ec3c-e741-4ded-b64a-f32e876ac6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000f94ac-9992-404e-b646-3b762f58c940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a64f14c-db5f-4aa8-bd1e-a24cedd6cf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92eb7d48-111e-40fb-99a2-2b3a2dbd3148",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d545fdb8-4baf-4bd2-99cd-4154fd56e9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fad1b5-b69c-4b98-bc0b-42d4bd2e33a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2f9453-9e79-4837-a6f1-c2d1bee5712a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd88936d-a5b4-4a4f-917a-fb71f88c2c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774cf5b7-a0da-45c6-a103-2d0baee28307",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eeac295-8ef0-4c02-b4dd-1e93e9610ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02429b1f-0bf4-4628-b479-1301daa2bd7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85577d80-ff2e-49c4-ab4b-c89e6fc3ce02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d489e955-9f75-4da4-b58b-95d0b7486a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4e956d-4422-4fad-8fea-4ad39153e54b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508b839b-b59b-4878-abba-ffbcacd6b21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80f4d05-df83-49b5-bca6-6543ffcd5191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33c81a4-488b-4cae-8d06-01b705c4a775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb004367-6b77-4276-a7fd-2bcc18c77573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45440ff6-dc31-44a2-b870-10d5bdf536d5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfc4fae-68bd-4999-a67b-f129432a519a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6169bd8-7685-4fc1-a702-00ad3d4af0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8faba1-e1a5-4e58-9632-be9475fd1b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cb81c7f-fb7f-4780-bb1e-ffe60009259f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843b36b2-3bd0-4fdd-ac51-9498d3c4a915",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b999bb-7d3d-447f-84fa-a95de5961853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0448cac-14be-47ae-b8b7-e5f958ae0de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d4a01b-75d7-498b-b232-c94532c7e7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61f0bbb5-38ca-4596-a8b2-c514f06bbe1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f9f4cf-f38f-4a6b-956a-c83fd555256d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfd4162-b513-494d-a6fc-a8a281d0f201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa6376e-ba40-4e0a-9192-d29d277d3161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27719438-4350-4e70-bed5-731bf4f85d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afa1ada1-b293-4f4f-82e9-e9547939545a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d918c5-8bca-4624-8803-7546a24cf6fb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715f838c-fb07-4ad5-b739-1f0b4509e8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee24fed2-c56f-4eed-b47f-db75fe4af3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a5c7ed-4f66-4a03-9675-3feb0eaa3945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dda01cc5-0824-4c05-957a-b5072562ebac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18778380-972b-4467-9f5e-443e2c947d84",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1aa027-a9ca-426e-80ee-84f0bb9ef741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8204c82-b70f-47e9-b451-f7b63e562d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821f3d1c-123f-4f9c-a391-dae91ebbb556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61bbd59b-1f76-4807-b49f-bcbdcc972dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e68b81d-eedc-4c15-938d-b3b1b62611e3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6413de82-5de6-4cc1-bafc-e9961c14a661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd7d69b-1e4f-43b7-8582-c30db7f8229a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f67450b-df28-4dd9-bf74-e584d266b758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "040d3dbe-98ef-4e35-85c0-477de20df187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f014360-3954-4888-8e66-fc20b9c452d9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76821a22-5f33-4386-84bf-22383e738737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12dcc152-7bdb-46b4-9287-fbefe03951b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d7f28b-4330-4096-83b5-7f84804a1d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59ffa323-3f7f-4fc8-8b94-f59036fd0320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6140776d-8507-420d-aa24-40eb9f449b56",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cd94a9-b7ea-416a-8618-18920d41836f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b651bb89-ca68-4152-9db8-8332c305be4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c52c86-ac22-428f-b2fb-625b6f598657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69570214-2bf1-4067-9c7e-3af7c1bf2cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e32219-a97b-4f23-adc9-8cca7425b373",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0de315-95a3-4110-985b-915ffc0c02f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee556e5a-4f93-4093-8d04-0ae3e1de5401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62e708a-4a8e-4148-bc20-b3bf2b6aa2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36fd8d02-861a-4f2c-b84b-a76aedb4cb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733fd87c-7276-4bad-a3b4-e2b5f8cdd712",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceba611b-a476-4536-a579-591c1f7308fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50d9808-5cb7-4d93-a6f4-f6ac7ffc1e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1c4175-bce9-4a10-9b6f-72b62d7579e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10f1163b-f4b8-4f00-975b-b382fc925ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafff8bd-fad5-4976-90b1-5bd1ed971975",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a0c536-a97a-48b6-a6b6-6e21d6949b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fbdf70-fd8f-4d99-9572-2469afc744af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abb6eb1-9678-4b69-889c-b2696ef4b9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b09f93c5-7e2e-4592-bcc9-cb7c58732b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0e5fc4-9f57-4e6a-8093-2a26bc1897bf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7fa244-c561-463f-b22c-dae8a438cc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1e7470-a401-4b2f-905a-a863021ddc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198a5241-68c9-4764-b73a-fe7ab6673da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "403979c7-9e61-4440-b3b5-53a151df5e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923fa9d8-b0cf-4b2e-92ac-910a18540faa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86b2efe-144a-4a37-bf80-947156e20eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b7a130-d5c5-49f1-be00-fb34409446c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3840bc-8cbb-4c5a-8ad4-eed5b282298d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "252ecb04-56a6-4df1-af4b-d2509a4fa56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1956d6-573b-4ed1-a137-a858bffd76fb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbc41a1-b4cb-4ce7-8cb3-9a58e1bb2a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53193216-272a-48c0-be6c-cbf7ecf8708d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd5f174-f646-48df-82da-7c0993cbac31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "85552bf5-1a13-48b1-bee1-3db1f2f67670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cd4767-72fe-40cc-b3cd-303478549071",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3d9dbe-b3de-41c4-954c-febdb5fb2331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628fcd6a-5697-4b48-b700-2ff2836a2ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe1381f-b605-4b63-8574-e0165190a801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aea9c31d-172c-4876-bb04-87e332713b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413cef65-917f-4302-86f4-01a8f02e8e26",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f4f7c0-387f-4efc-8660-bd0f8c1d4659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1900c92-1143-4999-904e-21a5b50a1839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154c702c-d4d1-48e8-985a-787ee4cd3886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2152d18a-e035-4d80-aaba-1601e52461f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3924ee4-e928-438d-ad7a-83723173b982",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7ad0f4-a71b-4ab5-b66e-61a02a108959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99e3342-f529-4407-bbf5-fc9cf37afffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7d9233-bdea-4ba0-bc50-2ab920770da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26e78882-e886-429f-84a5-2b95da3e01a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb5a11d-02ef-4d1f-b41c-17d47fbc1c73",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fec184e-a586-4cda-b3fd-df31500775b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4037b8-223a-4176-b71a-8691b240ff48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf5d5da-d17f-45b1-a08d-dbdb6b5af159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99283afb-7f8c-44eb-a6a1-6edde773041f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778fe930-61e2-4b1b-8b16-4402a808309e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f70c2b-16ac-48c0-a794-5667b7e5cd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3a33f1-79fd-478f-bc0f-3dfd567412ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47712fe-a603-460f-8495-9b1efa661995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f176d28-d695-432d-a438-e0ff589b8c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f47b3e-2e15-4b61-ba0f-976d610c0da9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cc8daf-af20-46eb-95fd-278e9d10467c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e60b9c-aa55-4cdf-946b-946ecb17c1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9fc1ca-4809-472e-9f72-e60006e5d198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "161ec1a0-fec9-4e75-95c2-552d97527ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef85970d-de77-40ec-b7d1-2427cccfb67f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadc9493-680a-45a4-84ef-bdfd0df6c75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5f3cee-5cb1-4d40-9630-636df59e40df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9adf4c60-aa84-4a68-8a59-79f7519e2f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e043ff55-9717-4135-87b6-8285c7aea588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b41c7ae-02c6-4eff-8671-79b98df60c09",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419889f1-3939-4a25-9f24-dce19933fb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b8c017-4631-49dd-8d9e-60f2e160162d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ccaf45-b5d0-4ab6-9cdf-0e9d55842a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e3e55b-8c78-4cd0-bc8b-97d9cc4876c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b662e3-f8b1-4695-8c94-34f2e9686dfb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c824114c-4278-4235-81c6-6b0e5aac2ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59251217-9a0c-4821-adf1-fc1430301d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6f9511-960a-4100-a132-d1d7f9375685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75d3b691-7873-46d8-9462-bc1213bae117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92891b8c-5103-438a-b616-ca339f06cfd7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda3c319-a6ce-41f1-8312-e8ac7a81be5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3158fa-50a1-4456-888b-ac3406285a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3d34fb-5e61-481d-b25c-4075d194892c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eadf4f0b-459b-4501-920c-d3a2bac1fbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795db34f-6664-4c50-b1aa-a938e15e38ee",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81478493-8f54-4ca8-b1b4-76c41451dd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4033de8c-55cf-46e7-897e-f436eab54136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76356852-57f3-406e-b330-2c71aad40aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fea4d9bc-61db-46cc-a4e1-bd8aa2be00dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704e857c-a79a-4382-b6b9-47fdf20ddc35",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088d694b-b240-4ec7-8a33-914fd80e95cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552d5ef0-5634-47fb-b4a6-c3285101edaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c5e9e8-35db-4a3f-8fea-b3e20174a42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "054a3f12-ef12-40da-9aa7-5f9243aab6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a1e655-29a8-4feb-951c-638a9977f471",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d575bb8-02c6-4aa3-a0f1-db3168f8ebb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929b2bb1-63fd-4327-b70f-025e55b72bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d073199b-d691-4f40-898f-2bc00d6f7410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d13e6a9-a538-4882-99fc-fa750235982f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c078f9b-c0d1-441e-a4dc-43025a0fbc7b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcc438b-b5e5-4d0d-9498-b85fd195f558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a207e392-1f8d-431e-865a-11d8a91375fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623a1a57-bc24-4741-acde-6976b61652a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91413b24-b525-4380-a975-34073ad77c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e383d9ad-9ad2-448d-8ecf-1f9967d65080",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b4ac59-0500-4b4d-a247-5507c493c4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10931c9d-da22-46c2-83ad-6d8d7c616d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0da324d-8052-4e32-afdf-312d92a23002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c039f39-2df8-4c36-b1ea-61d7b5d89c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e90f79-a376-4b7d-af3e-677ecc7e1310",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b16840-f947-4fb5-a6e7-f91ad7c4ee9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a5df30-3543-412e-b1c8-4c4566881e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb573fbf-ebed-45b1-9531-d53534c3f970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "978f9c76-7841-40e2-9c96-a16567604f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f2bcc9-5e08-4bbb-a9e5-bf46f0d9e2ce",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccfd208-cc44-4158-a1b8-63b5cdbfd190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eed6fe0-baa6-43ec-a057-78c9483d1298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20c0038-f6b1-492c-984a-aaa03a1f8af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf9b8c1-813b-40f5-88b7-5f2e27ff6127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edc63d0-b9a7-4c90-bb05-7d7d74b0ed18",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567340e4-ce66-459d-a578-3f3354374dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fc52e60-868b-48c8-b995-d4d8e58e75cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc4b5d6-0771-4c62-bbfd-ef009cd9b31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c88ef7-5005-432a-ad03-1ee126cef08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cb9741-4ec4-4451-901d-cdc5cfba171a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164fabff-f594-4b0e-98b0-20515fbc2efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68dab1e0-c738-4e19-84bc-80b0a3ec354f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aaff10e-6771-41ad-a82d-d06e3012dd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ead809f-02cf-4c4f-bcff-2d6e8e6c9882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63062ee7-e76a-405d-987e-e37fd944f868",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e122bf7-bb1c-4925-8741-70dcee5ab9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2011ac88-ed49-44c8-8e34-58d3cda0ac77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36e23c8-9205-44b2-829b-45e132b3e7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1449159b-8498-4293-ab23-17ef29ad57c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebc5e4d-679a-4d12-83cd-76d2e88cc091",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716b89b9-f4b2-4eed-afff-7634c3edade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3326e2d3-e6eb-4d1f-a651-94a51bf9ef4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c6a675-959a-4c2d-abd4-376d79e8b67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a23e968-ab83-46dd-9dc7-656a59fc6a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a046364-663a-4ccb-b052-2592f85bca9c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01a2036-b872-4340-ab24-f357b2211065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfa9aac-2740-4b1d-92b9-11ab94ad5444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cd6268-b6c9-4cf0-ba6c-cca7f382a8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1a8914-7134-40c4-b0d9-5342d68540fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb53ec8-4e0c-4002-838b-a0a9b997484e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f39fc2-fd72-4004-9747-ec16dcd67ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb7589f-87a8-477d-813d-0da3f87fc43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc49c385-ebf4-4d87-93d4-34c9404bc604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "565bf1c3-3483-4f5f-9198-761da1f3047e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320ba39d-29e9-492b-89ba-fd7edb035fee",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b9459b-a0dc-4533-bf2d-2fbaa52ef7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c0797c-1bc3-4b20-8da2-67c9e522e311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a113db-0961-4117-a3dd-f9a8da08c0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4364509c-4025-431b-bab5-6dcf7afd05e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f036b936-fe97-4754-8aec-20ef5d4fb7f3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776cc7c2-0a6c-4e46-8403-97c148cbeaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960e4d5a-c3c3-46ef-91de-ed266b6ac81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c177a1f2-d447-4b20-b5fe-943e69c8a062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "623043b0-1927-4f7b-8647-40bbcfaeeb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b023b5a2-68b2-4a30-badc-d1407678af8b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f93641-7e8b-4602-84a4-178959b8d7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5483981d-4ded-45cd-8583-6ecf85c35785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99742296-d77c-4ff4-b673-af4d3f037b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb90f836-a9d9-45d0-9042-a53d1f43fea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfb0602-1a60-4081-9a85-0cc97a2386fc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265963c0-0137-48d9-8870-9b3c58d56234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24d09a4-64ee-4fe5-a4a1-f2949b9319d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b23092d-78e6-457f-9b63-8ee1d1bd050d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32d19dfe-eaab-45be-8a8c-ac676d3631b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1447938-e8c0-4e89-ae87-6e11e494a35d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631e7444-e20a-4a81-91ca-ce2d6c1cda1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b56138-82d1-4743-b224-482873b52d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e54d85-052d-4e9e-9d98-bc8363983fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4d7b6e-5da4-46d4-a1d5-94a7f022d743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f297ad-59f8-4c26-9d1c-c88a1870630d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ec0a8d-cfcb-4060-bbb8-16be3076c58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efe9783-b288-4541-bf2c-a17d1c916c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f0649e-1ffb-449f-ba20-eb4d7dfd9d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05ecef66-b334-4633-827d-9391597a84af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86a805d-1cde-4f5f-beed-12ab2ed74cd4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a05380b-de10-4fb9-818e-db22262693f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27385ee-d472-42d5-931c-6ceb498417f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24474129-93ce-4828-aafa-256b07a9fe95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4380d1-5e1f-463e-93f9-eb605b96d39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52df1cab-cdfc-4d0c-b067-2ec0a395dcec",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beef9e9c-c949-4053-93f5-781da0fa6ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7c5739-c276-430d-bfa7-b682dc128efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1a3601-5a06-4ef7-8046-277e6e61e7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31c8f9f2-447f-43e6-b12e-6137491117ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667e1ee0-2682-445b-a045-fbc783550318",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c5d007-7e1e-4d82-8da2-e21a598d7f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea098cc-dc0d-4624-a5f5-03445a1e9192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f4611b-2fb7-42a6-a409-28b2de47683d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a32d36a8-2481-42d6-bb55-4ea8073bf0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3e7a53-de50-415d-abcd-3f8c6780c134",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e787bb95-5579-4192-9c6c-5221f045eae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78bb259-f596-4382-ac48-299d17fa558f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebf7440-214c-47cc-b62a-4d3ac0e658e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "846d8e7f-3f77-4c28-816f-7d9f48d9cb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb2de29-045d-46c6-b5b6-0700dc6ea289",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c124a7-fa3a-4684-972b-bdb2890eccfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b067f33-2891-4f7c-9799-b1efb000725a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc7d232-a646-403f-82fb-d97f3593ef3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c80584e2-ea6d-4425-8ad1-4ac09a8bf5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dadefd0-1e18-4606-8633-00e85bafeed1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aaaa0a6-8ad9-4efa-a4a2-f11d63fd63c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e401212-c752-47ac-a56e-2a61d7fd23a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0afecbf-d08e-45a4-9c83-7e3f83e11530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb64355-0147-492b-a67a-200347172889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b2fb7c-9944-4161-beeb-99279f0e1a89",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9163bf0-1f8d-4489-b843-9ad4b1326648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3669ca4f-c866-4d51-8ef0-f8134df5c38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebb95cd-794d-4053-bf4f-4bb42447ccae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89de3c77-a751-4589-a380-a7a813102b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842decd3-ab5e-46ae-8728-5c8c691e8482",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43e2153-43a5-45e1-b3ed-fb616294e0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c09892-c67c-439d-ac21-0bc5f3f79c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c5c0a4-ac7a-4156-9bc7-721c44ea4e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5184d258-9e7b-49c1-a32f-5fe7c2c15d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fa3fae-b050-40ea-80e2-8cd0d5a0c4d3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7526ce-b8c7-4bd7-be6d-c1cfb884862d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c882fa8b-a606-47fd-9ce8-777c08fbddb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3096142d-14b2-4536-a912-17d8c112ab86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5906a9f6-73e5-46e7-8972-767456d22338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4f3d78-3402-4a63-8b12-e5f0ffde8c14",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fead9d19-c7c2-4799-972b-9cc0affd9851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6daf0339-3393-492c-a5e5-59b150544231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7717e4fc-fc48-40fe-9f5a-a60025e2e860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "05333740-6f54-4303-af19-9ab9673cb0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ecc597-d86f-469b-9672-2ff467679f53",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934bdddd-1bf5-4cb3-a498-19c7b1843b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9381082-48c7-4ce2-b901-398754f87a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4bd9d5-ddb3-4013-957b-e719f3f49a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "638da149-2bab-488a-9a81-67868879d4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150fa65a-7ab6-42b9-8734-df5faeff14ce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb54a4ed-0dbc-44fb-af71-e1cb8094af97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22167b9-2019-40c7-85e7-8e3d4cbe3647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee49e30-8968-4128-946b-23804e77499d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0d8bb1-acbc-44fe-b996-7de8702a10bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d0b0af-0858-4be0-82bb-4e13370d75cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ecacf2-42a6-417a-98c7-2d697a1925bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571a75e0-4a1f-417c-9ab0-8e008229a30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df235d13-16e2-4c10-ae68-f2fe651d586e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3d62ef-9574-46d0-904f-714eedfcef88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3658aa-cfe1-4351-8325-668f964505cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492ed08f-9c1d-4c43-b927-58a50d7a623c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fb409c-c137-4fae-a3bd-dece600925e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009a3014-3bd7-4701-baa0-e62a0e97346f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "507e7112-78b9-4239-9a76-fe0d185baddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211e41bb-e9d2-4999-9dd1-fb8dbf2be3a7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7ecc5a-2787-4a08-a956-0f069072f916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa1e076-69c6-40e7-9886-f7285c84c885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca9c118-8471-41cd-9dcb-1f6ce6c53369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8778d9-c8e5-4436-aaec-57e7f2f670bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4cf561-a491-486f-9793-8198982e9226",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6616cd7-0c0f-4c11-9873-44f904ed537b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67403c9-77df-4fb0-bff3-5c23a3903cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcca1df-3dfc-48db-9860-e635e1f0e93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "89d20f52-8603-46ab-b2b0-a983b999fbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d824ad3-fedb-44d9-bbf4-be4ce0d6160c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b437773f-78ba-43dc-85b7-ed6adf2e8c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1888b680-5e7e-43f2-a6b3-7685ebda0b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dc4c45-c5ec-4c1f-8a8f-6822b248c408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "349eb296-8fbf-41d7-9bfb-59a6a8cb3be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f7343b-d8ae-4d78-bb07-0e6c49326a42",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9589184-233d-4957-a076-c48aa8f334e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391eaaf4-f8b2-49f9-80f4-e6b8fdfbab8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8334a040-b4af-4514-b94f-266f3ea34064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73aded18-2b9d-49fd-931e-e61c8b188339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33562bef-773f-4a15-ae5d-7b1384956102",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfbaadc-a7b9-414c-9fee-6120269d473c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ab513e-354b-45da-b10e-4b3828538bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e3562a-fb13-4c08-a05d-52658f0efe78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c640f3-c022-40d0-a7c0-f57ea493c023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b78c445-cf0c-4d76-ad33-6873755a0076",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c35f799-da0c-4094-a241-896627f36272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31ac16b-121a-4745-933b-35214a5fe795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5f5afd-78d0-4c29-a190-3fe34cb8d266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d014ccc3-be3d-4386-b4c3-0154c44a9f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf77283f-bd1f-41c2-9176-6e89a0c138e8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5274985b-fd99-46c1-be6e-d9d6f22a7d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a72f5b2-59e0-431f-8d8d-b04fc31cb987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65410328-814c-4a20-b645-371e4fb00bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "309201aa-05b9-4e89-b0a8-78c0e6e2b3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8ac052-525f-471d-90d7-89ff910af0b9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adee10d8-0ce9-4812-b866-88017de097f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001b2a28-b904-4c9f-bf57-6ed719f3fabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb4d624-3c56-4f5b-9ad8-94ab382d2fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b59888da-ea4d-4b9e-a2a4-e776ac187e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f722275-8127-4f5b-b829-cd956ce0176b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c5efbb-ec1c-4a60-b1ba-aeca4d3c013e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8be91b2-5dbf-4bb8-90b1-757514600361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7967154-41c9-4d42-acd7-c7ded15c0ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e840ad79-5a99-4ed4-ac19-37bd0badf93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a344c573-0ba6-4555-ba7e-afeb2cf7e168",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d157725-243c-42c5-9dfe-12ddebac6efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e84b9af-ca41-4dc3-96a4-2e7f963cf06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdc83e0-cd92-4275-add9-523780b118bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be0e946d-a364-4fea-9d05-329c3a1185ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac06dfc-8040-4030-a435-4caf0639dfae",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34af14f1-7da7-4598-89f8-79452f705f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb306f0d-60a9-4fcb-b220-23914bf066cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758dfce0-bdd8-471e-9ec0-fb3df0b96fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8947eb0-7fc6-4286-b1e9-ba0e077502b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e6e747-be46-4bf2-9582-e882968e2935",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee0f244-8a11-4a4c-960a-8074d44b5b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f520e5d-4b61-4b42-9ad5-5b008482af76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5289824c-ef30-4e4e-8bc3-78d93dd74635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c714e502-006f-4a4d-bea7-3a5c0dd8c4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034299d2-39d4-4821-8ca7-6bf573c3727c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf61d194-a1fc-4d2f-b644-3c67bee29197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73eb3a53-8493-4c35-9c45-4fd58df6f210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273b1eac-56e1-4d9b-9bf8-a7fb42a1c824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6029bd43-b5e7-42da-b976-a857bd1443fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fdbd02-533b-4746-a018-828d3c079bd6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a809d021-94fe-4ddf-9ddd-be141bbab42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08d1ad3-3048-4af3-b75c-a1b8c3c6efb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404425e1-cb90-48ff-ab85-92624fa7a3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc53eba1-6be6-4be3-b548-cdd9d62281ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cca121-9163-4f5c-a8f8-a969baecf517",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ba07d8-5180-4595-86ff-64769ec355b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2cad0e-56b8-43c1-be77-92054dbb5722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020ef3bb-5a5d-4a0e-963b-3a3197993a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14a75a80-5d2b-4519-ab75-91971a14f171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085fc6df-31f7-4c77-840b-1f6f06256176",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed7aea5-f0ae-420b-af73-118fa11475d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6eb6c0-c9af-4b25-b8f8-326fbd76a923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8af49b8-dc19-429f-8969-218a75327441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32010ec0-03d5-42fc-9e6a-884192b792d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f51ba5b-9171-4ede-91f6-5d80ae09a7a3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e840b18c-92af-46fd-a775-0b2138e95dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec939dfe-8f3a-40a2-9ae7-f77f8c374486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef81d81a-8e8e-4b3f-9e7f-19de870a2b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a91ac6c-79b7-4083-885c-db7f137e24ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c439ef6c-e578-4ae6-8ae9-5a33379cf1c0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ce5495-7076-4a04-b781-42844d98fc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fc8c72-9173-4e43-8ce0-a35bb1dac7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d3ac3f-3590-476b-a260-40be0194b1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "974efc84-99e8-467c-b4f6-12cfa7008712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f329586-042f-4e1e-b0ad-471103279fe7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d04d02-53a4-4836-b8f6-849bfbe40711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea11ca70-b09a-4fc8-83f1-78814f11a85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a4b912-15ef-47a0-befd-07f7e5e8980d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a3443f-0e8d-4add-9908-67a53804fa8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a58c6e-e420-4a66-b410-5733a1a98bd4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14c9099-2a00-4fe9-ba8c-1b2e767fea7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad926c9-e1e3-4a4b-9095-78cba167bb55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bb4ff9-aef7-4c9e-bd80-cda39b6ee4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba303462-34dc-4a5e-a9d7-e422abdf514a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3eceda0-2e61-40c0-901d-f7a7ca94bd87",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe43382-307c-42cb-b8b3-9f2456bbb01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61baffb7-b6f8-4fad-ba57-645071d74d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10972002-a253-49da-ba6e-54e290513bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94940f70-88c5-405a-b711-790e3f0d8714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925da33f-9050-4745-8bc5-8a284067038b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bda3754-0737-40a3-9b82-bde596a48603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ffcb05-1868-489c-87e6-ac421d908c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71461f0f-5a17-4121-a295-60737d86800d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71e28962-fd2f-4212-888a-12050c26347b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615d1813-8541-472a-a7c8-74c221b570a7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53732ce6-317a-4daf-9c95-de8513258c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18d16ea-6f47-4897-8775-56e394216438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11580f1-7be7-4402-af9b-56f0dfecbcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "281db371-57b8-48ae-a334-c3c8c5a36911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591c2f58-4a8f-4654-9045-af4aed90fe1d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a15073-408d-48f2-bbd2-0010e0e5d280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd6ca68-17c7-4f43-bc1e-92259423ba87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35348cf-4312-440f-b5d9-bd69afc2a9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7f0cc8-9627-42d7-896e-26e6ce402e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ad33d5-97eb-4bd8-a082-376ec5081f95",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645e61fc-0343-45bb-9f9e-c7f6f0ab6557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d80388-f16e-4fd7-adfd-bce539b6dee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cf7dcf-b13f-4f01-b59d-0012b2a54664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1493460d-937f-4e36-af46-45fe8816d0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca329b9c-57ef-41cd-a5ca-8a099a7974f0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ac682e-31dd-45b4-9579-0d3804cb340a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a324e3-fc21-4e6d-bfd6-ab8e50fb76c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0061267-1979-47c1-8b40-2ca580880134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d974d5-e5be-4181-b722-b2ce16d8bc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6990c67-da8e-48ed-8139-d03ff1e7236f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356e9a05-9465-47ce-abc5-5adb55d5cbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01ce8d5-b37a-441a-9e9b-0936e091cff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a68a9c7-972e-40d7-a33a-d0a0eddb6530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b593e8a-1ec6-4734-a84e-5ee6d4dcffce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dc3516-4f5a-4c83-a830-4893a3612a26",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d478c4e-b8aa-45f7-8e26-a40f60e4c4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05133e33-c0ae-4d95-b2f6-ea50bc48a75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737f4120-4d54-4147-8f91-ec549e538eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bb8e15-d6be-4b9c-a53f-da086169a1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8010395-bd13-4eae-aa7c-5c29de3a9110",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fe04e2-1425-453d-9836-9703202d7159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede2230e-66f1-461e-be80-a19b1ecd7f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174ec333-5356-45a6-be68-9219004f7604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d09a09-24c0-4893-90fd-bbbc09ac5c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef0fa19-05cc-4fba-92a0-544c9563676b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb07d72-ece9-4bfa-8025-aab89c54dbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36cddea1-d639-46db-b7b3-39e436c5b7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b742ca4-5ff0-4044-b70e-6ed7e73509d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb6c4ec-f6dd-4321-b4ce-70ca02a28bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec79a467-c117-425a-8b94-3c2b04268455",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ed50d5-279e-4c72-86b5-0ac272076099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "44e33390-015d-46df-b5d3-d3d774a65820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479dc02e-cc52-4859-b828-068b36079141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5a8636-d4df-4de0-a7fd-76e710656ca9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6bc27237-1dc4-4bfe-913f-6ce740fb427f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00c441c3-5205-46b2-a462-8cac34ac5f42",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525607f9-4d97-470f-b0ca-80e1139f079f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b70fe69a-621a-4715-87d6-4c3098eca1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1736c11b-cf78-49f2-9f07-10b8ab30bdf6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fe8f63b-9a5e-4ab3-b9cd-bc80e18aa381"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d740613-3855-4311-ab86-bb80e78fbec3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "881cadf1-3fd4-4c15-aeab-947e17320cfe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "750af9fe-b465-4247-a048-e6cb2695733f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22776297-0b24-4be1-9e8a-3dbea9c01156"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21116d37-6359-4ac5-9822-90dae239f88f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5cef142-7f08-4174-a696-2d67c3646655"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37c40848-8531-4b55-9ed6-ff7cef547582",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8adcbaa0-67aa-4c2a-8c1b-dbd4fde9372f"
                }
              }
            ]
          },
          {
            "id": "ef664683-d27b-4027-8012-daf285b3f4d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "78e3a295-0604-47e3-bc5c-999206306f38",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b8f3f83d-9464-46fc-9752-3b4349109895",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042801b9-d3a5-46df-9b81-175201ad9422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7f712031-46ef-40fe-baf3-c92503d5a55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa667d72-6ef3-4673-9cf3-721aec07c407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcde2e5-8a15-4227-9556-8358b69cf06a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ab7f0cc-79c2-47fa-a4e5-a662537e67b5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dd4029e-54af-4f40-ab92-efce561b0b6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff46f4af-ad00-409b-bfd5-78c7d9fbdda9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "019d943c-d734-4dbf-80f9-9aef821a610c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "88f790f1-2774-4d05-ae2f-622596e25554"
                    }
                  }
                ]
              },
              {
                "id": "df29985d-3ad7-43b4-abe4-c98d65ac6ded",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2d8c0fc-6b8f-4096-88dd-d29ea3d32a25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "082aba58-1a8d-4577-b930-c95094ef7478"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f306cd8-2b2e-4c7d-9005-f2d4f9c17e1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08742d42-72d4-4592-a333-f1e6cd033ebd"
                    }
                  }
                ]
              },
              {
                "id": "50ae4f70-db59-4cd4-adcd-e190f49a357b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae8d9775-2425-4be7-9be1-b52a4a8ef1a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27a2c0ff-d606-43b5-a3c7-fe4ca9bce752"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c87d560d-d4a4-46bd-b375-bcc5319d7592",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f2052dde-4604-43ef-a327-6071284b53d0"
                    }
                  }
                ]
              },
              {
                "id": "860cf6fa-e863-487a-8465-0c12054e31ce",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f37b2c89-a446-4056-ace9-f8ac0014a4e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e43ea42-012d-447e-a608-9e4b1918509b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ffbca24-f109-43cb-8421-eaf249bc82b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f7741e98-fee5-481c-b9e3-e4891e8fbe4f"
                    }
                  }
                ]
              },
              {
                "id": "0ef9309b-5278-4ea5-ba10-9db4bfff84d0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28f60398-c684-4b57-8a1e-8d2ee8384c5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77a30121-a09a-4692-813d-924591356572"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f096192-0ad0-4246-bb72-35317c37ca51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "912977e6-7966-4ec6-a2ed-ddb1f4b59e3a"
                    }
                  }
                ]
              },
              {
                "id": "b90be3c0-2699-44ee-907d-c3e1bcdb7fd7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecab5365-c601-42a5-9200-942c9fd54db4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "296659e2-397a-4f91-b1eb-fa59d2c72982"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7ef82b3-8341-4851-9221-2e7fae8eade6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4160d9ce-4764-458b-a869-3f4af9f498fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2b59ca5-931e-4f99-b6a1-3cdad2f7f8ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4fd3450b-dc96-4297-a5d8-9003903d8d39"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "50e7f480-234e-404c-9796-1ad03381582a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f094f28e-34cd-4d25-9723-c172d7ea3fda"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d652a355-4313-40d0-b87e-429912788109",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "09dd7455-5141-499b-8738-ed1ac4fcdb66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56c27202-73fb-42f0-aea0-fd9603ce68aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e99ff2e-b3e3-43eb-b442-44f0bf688fc8"
            }
          }
        ]
      },
      {
        "id": "fff76100-9e4b-4cdb-b758-abb9e43aaee2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ff6a927d-07b7-4470-a14c-4a3b285443fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a38d2407-7038-4e5a-b211-1b85bf4f0aa9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cbe80f21-8ecc-4ded-8af8-c363a94c21ad",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba32ad4-08eb-4c48-95d8-b941511c2ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c19d75f-b80a-4f3f-97d2-d4b2b94d0978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2126189-0d4d-40dd-ba27-54db55407baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "508f13d4-0b99-4ef3-87c4-ced1d678cd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74edc21a-e7e4-4143-a4e7-09857aa2f211",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a995f10e-175f-4d85-b6ca-77270fb0ed95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6623f529-7cb0-46f0-8d3f-e3358481bfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a4171a-d855-4519-a1a2-fe5d0bc6265d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfa3fe2-88d5-4378-a161-1d6257f68d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179620d3-bf83-4b84-8adc-b9a2447d49e3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd1444d-cf72-48c1-9702-de79ff5fe381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5832e6-434e-4836-979d-13d0d9dc1648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0a5aa9-61af-4019-bda6-51c2b68c1785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "437abe62-6eb7-409f-b71f-c12cfac4a0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feed91b2-2858-44b2-8680-747b9c25abbd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0eec40-0804-48c2-8698-219ebaef9b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bc751c-9123-43f0-94d6-d61e40cd8e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424934e3-e44c-4f81-a827-de9123c60b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad5a532-f879-4321-9c38-6408f56a101f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2e569a-1002-4f19-b751-e49f8231be6d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4549f241-4efb-489f-bcb1-362b308591b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7884606a-a037-4c55-a52d-4634140cf4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67791d3-302f-4223-8838-8690c5137924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7e57b3-e6f3-4ce3-a049-726d0809746c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe798b6-5a73-42ae-95f9-12ef838672ca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48085b1c-c6ba-4655-b071-58d5d714b2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586c1bf6-207e-413d-b110-0772573aa744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e68867-5db2-4e6e-943c-ab07c31fbb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc826df-0375-4160-a05a-f3cd9817df40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6c8e92-05cb-46d1-8304-a2b940af03e7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c61955-9266-4883-ba9b-ee418cb9e957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b951bc25-7d1b-4344-950e-7079cf3dbedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5a5090-6e2e-4bbc-8796-f0fda05d5bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d0334e-9745-4f21-a290-465f80098e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53008387-6995-43d6-8105-3e0c16542e1b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c22a956-1538-405f-b44a-4a7b46488122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d324d4-957a-4558-9b8c-0cb4279ccf68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0602d122-2aa7-4802-babd-9283a6c929c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bfa87e3-9ab1-4a75-ab31-d81395d815b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1f2321-3d31-4bb1-bb56-02434284c25b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b52a118-2501-4305-9e33-d5d3cbb0e944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4768067f-e971-4f8f-9db7-b590c72eb859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43407497-98bb-4e03-a01d-7d02fc777652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4bf090-7cc6-4ad0-88e5-606837b72178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbffcee-1eec-4686-8220-1758ac08b3f3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5929ff81-b19a-4165-93e9-a99863fb650a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71a372c-9048-485c-a719-dc43b8af0e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62a0415-f64b-4fc6-833d-0d46709c2c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68dd1c60-de81-4665-9b31-d4c3bd475fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaabd98-5264-43f8-a0af-897aefcb8b19",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8914eab-75bd-4b75-87ea-f24b0db203c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be7f239-0457-4956-8ed8-fc334c1abf7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc63943-21f1-4b03-887c-43d224037b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae738e0-e7eb-4635-815e-6a1c1ccc45db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69b642a-85d1-4836-9391-3ca2c8744da0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b080bb7-02ca-4fdf-bba2-95cea9cedb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560aa0d6-07ee-4833-a98c-6de635eaf5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b16bd73-242b-46ac-ab3b-ddb8908ac813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98ec59b8-2c7e-4000-9c6c-4688a45f02e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e68057f-4e84-4a4f-a97d-ee527969b6e2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659126fa-4c29-48a7-8f99-3415a6c3b574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ca5ac4-2f7a-4fe5-9905-4faf7e1c4082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac104326-234a-46ee-a688-d935b6d14d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "842ffd89-680f-4841-889e-85cae672f735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95263fe6-f692-434d-ae1d-8f1da356f200",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6dae9a-fd41-449f-8cdd-b8be50aeb7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d779ce-0e3a-444d-a0a3-93d1ac3129e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed325a92-56b8-4fa9-80e7-cf774f70dc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "738ad4d0-7849-4104-93e8-bde6836d3546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0216f487-b57a-4578-9d65-ef63e449c93d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e8f9ba-8fff-48a7-9c8c-8684abf512ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b982668-789b-479b-b8c3-1e278086827b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ed437d-ebc5-4ed1-a487-325c8e3ca0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "56486347-2037-4f16-8745-b9603f5fd440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d4ce5e-611f-4b62-a5e8-5c741891ff07",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18afa6e1-b169-4a54-a0a5-147aeef58586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0c2f69-d9c8-4886-8dde-9d5fdfa9734b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2fa78b-2116-45f2-9c54-68a4e4fe4c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc347f8c-d042-4654-8632-33c00151c3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8671bed5-513c-435d-ae77-1506166b8b20",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4186f5e-6605-4c8a-b778-dc35f6a08b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fca0c9-9c08-4680-8651-f56dfda2c48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16eb3186-c4bd-4dfd-ab3e-3703fbcc203d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "afb22eb4-29d0-48bc-829c-632cd5292ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b10a53-24e2-4b86-8021-1a51b5d93531",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed19394-aaff-4bc2-8c3a-4e0ae1ee1293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ac0839-cc6f-42d0-b450-a9fcc9dbc80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcae744-6b9b-4a32-abd2-469845b49a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f6766a-9f06-4fcc-8f30-7b8ab8a82023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6f376d-4f21-400f-ad9a-4e0265720cab",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4fa367-07cb-46f8-a867-80ee2cc868f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbca8dc-fca7-4709-9045-d373b45840d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3808658-1d69-4294-b40e-c04b308cb321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e48420-6cfd-48b5-9508-e24f7d739c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41ad472-1a89-405e-9520-5a9d2d167350",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914c8670-139f-4e78-a501-538a7fc41e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f162ea-6117-44ad-ab17-4717efca9f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4474e6f6-950c-4faf-b050-4f2594b577c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "933409a1-ca9d-412b-97fa-6eddd29fc7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92994fc-6fa5-4a63-a7da-d74324284411",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e09ddb-11bb-4be1-b0f8-63457bfc2d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2ee1b0-62dc-493f-ad9a-333aa5883087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b6b070-cd22-4008-bfbc-3936e414b351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca22741d-466f-4a95-86a3-093e35a8a0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3d9570-8bc2-48af-bd69-6eff403c0017",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5260876-1bb1-4085-acc1-9fd48237c74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93ea782-8a2b-4b5f-9027-45681343db2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4553716a-4f69-420d-a49a-c834c6b2edc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d734e78c-b86e-4acc-8cae-595d89d56a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb1fcaf-a140-4ab1-9ab1-ce07de26b180",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aae0057-a672-4a93-a358-dc08e3ef747c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c987ab-96e6-4438-a865-855dcac6aff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41a8378-7aa1-426e-a2ba-1dbb4482579e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1562d606-a751-4138-af29-2e0d4d8e0323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fc6b84-8399-41f4-8252-a9b741f2e986",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a884c9a5-e7bd-47da-8959-04859b78c561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cefef6-7f52-45d4-81c9-fc3987400183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08868707-658a-40e8-a3c2-bf1cf8b21dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa8a82a-8fa5-4760-82f6-6b928f714fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777929a2-01f8-45e2-9c91-a0f581aec569",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad48fe51-dcdd-4b54-a7be-b75cec634d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a759f14b-17ea-4636-8c3c-57afcd01c379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f82e63-f4aa-49d5-9fe0-40c671099d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79fcf702-9b2c-43ae-a478-4d30461c6e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb0f340-5330-4645-82a1-f1a32b445e6b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af1a24e-df1d-4731-afde-461290a9d392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2d3529-014e-41cb-99ad-6ecfa7b07e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d849ef07-87af-45cb-be04-4b61824e0063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c64d3951-2487-439e-bddf-cbf465d2d7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a24578-76a4-46f6-88c7-2cb50da14c3c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f735dca-5edf-43f3-90e3-9ac04ec4df42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf656c25-a3f9-4ef8-b74c-f7ba531fe613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ab69f1-59c1-41d7-9cd8-a2c853146503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4a52a8-2630-4ffe-9db2-204c2afdbfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9515342a-3d77-4ba3-ad0a-7d6ffae57034",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7249d7-a5ce-4d22-9aef-817d56c21112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e653e5c-b7cf-45cf-b2c1-f0ea623c27ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e82b36-373d-445e-839f-f86b572b3a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b695d09-1e67-4cd5-9214-f14084b7b73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4923dd92-a680-4bd6-937e-58d3cb1281d5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2930fe7a-2295-48ce-aab8-9670ef0a1f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bec5de-5c16-4ad3-ad4a-9dd9a0e24f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9ac497-f75e-42cb-b34e-a3976a624eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abe365e8-1b65-445a-9f20-5ef28eea838a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9469808-fd87-4340-9567-e5969fa0104c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c30956d-e311-419f-a048-b70a62a9e6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2da0853-4a29-4db1-836c-31c86e86999e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6da028-43c6-42e2-a4a9-e9e4ab5db89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ac3c0a-997b-42aa-bfc6-5c78314bf804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062566cf-b88b-4665-be19-c03aabd218a4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e9d747-24f9-4ce4-9fba-b72cef8988f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febac6bb-43fb-4a0f-be07-e296f0fb9cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2873fc3-3a35-4d58-8fa2-c60031816121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebb97e3-fe7b-463d-aec8-5ed9faa92735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbdc4a8-cb15-4d25-887f-ec77a3ea6ebf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a08096-dfdf-494a-bf26-bec281c04a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6411732-2f86-45bf-aa5f-f591d610e6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05468ff9-a24d-4c03-914f-c39a558a24d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af1a1dd-6e59-4831-8f1a-7958bce27698"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "30f15953-21e4-47e3-92e7-0c39f7109676",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd1b0240-7909-4068-a17d-a18cbe0e52aa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd201b6a-6479-4234-8bd2-d152d79975bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "10bef901-d91b-4466-becb-07b06f46bfed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541ab2c9-d437-4d79-bbe7-fc36509183b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a7e827a-e7da-46d5-9638-6a091efbd56d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdcd32ea-c65b-4bdc-96e2-2ee11703095c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b811dd1-1e15-43b5-ae81-357d0b64fe2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11e13433-8281-4ac9-bbd9-27fd446b96aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43e02442-a8dc-4224-82b1-06705c65e473"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "caec39b6-9a10-49f7-b8d2-3960ba06702d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0c171c17-18be-4322-9d62-dabe38777735"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ab3bb90-3124-4cde-ae67-1f4f11ea335f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0efeac6c-45c8-4258-b9b1-10dd6a871628"
            }
          }
        ]
      },
      {
        "id": "c7228e55-21bb-47b8-90c7-d61513df3aef",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d92add37-ca1c-4e0c-92b3-1a851dfdba01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3598f1b-7ab0-46ae-8047-93013680808f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ddd9d31-4924-49b3-9a9e-e8f8ec70d31d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fb2873-2637-488b-974d-e3bac507d360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0faf8f2-0997-4c9b-b965-ab3857b541ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80f0cc6-18dc-4f81-96a7-6c4c298e6bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "90be65ef-6fb6-4d2c-a758-15100f81f0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3eb798c-2511-4c74-bb54-fb0db03233dd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0863c0e-b477-4eec-88e7-13c5f8e9df21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50ae1c0-79b7-4af9-8dc5-85490e8e5cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58c713a-a824-4632-be85-b41cfa732d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "79096d42-ad58-45f4-b1e2-cb8b63141caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3857fc6-5640-4b70-b7a1-c6dbe22b115f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b79fa42-056c-488c-b992-5971da7f2380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e79baf2-1357-4060-9a02-9160ab0b0dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80203a3a-4ac5-4140-89e7-a1378ec4007b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f5f0a0-1e74-4301-beb9-9e37c03faf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b2111c-2385-4db0-a8e8-5f9486fbabdc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb69268-f833-4740-a961-47b29d8f3404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea4dfd6-f976-47ae-ad9c-f04120304f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02087b60-0630-45a2-907b-cda9cee24c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba8f055-f324-47d3-87af-21791927530c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbf77ef-974e-4d86-bb07-1b696a6b43ad",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d53c264-db91-458c-aa83-a24dd6e93fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371f8c00-846b-4343-879e-ba30138c9152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cbf1ac-88d3-492d-a4b4-cb14935f938a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab88db3b-580f-4ec9-9234-267e3202b0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea952fc0-6da7-4e91-bc6b-dc4998274e8f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f35bdb2-47fa-442d-8e8c-2b645d2301ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d28cb3-e2ba-473d-8f00-4ff3060e75de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cee8da-2c72-4902-a654-95a8d28223c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "392c9ad7-ba31-4fa4-ac7e-00d247a42062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac471e19-8a8b-455c-9538-64d9566342d7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a660442-9127-40a6-aea9-fb6f53c4557c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb94195-a058-4bf4-9496-e18178f8aa2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacba2ce-557c-48e4-b6e9-a3e3bdfaa170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b347283-25e0-46d6-93f9-c55c2e074eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecd92f6-8ca5-462a-a827-9a2f13216959",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bddad0-92ce-4ed9-a545-236aa4308e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df92101-e82b-4cda-87bf-a1cbcac36a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e056117-a5d3-4eeb-a819-929c679c0e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "684e9cda-e75e-4bff-b462-70e24994855f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc420af9-a603-4e2c-9815-65ff0b4961db",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006f61ae-5523-45f0-93b0-b3e506a33fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65276e86-c9f2-42f9-b21a-6e1f25b00a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f71f63-f19e-4d69-b404-37a989ee49bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "894d0643-fb5f-4cf4-a9ae-5eee56bcfee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d32f1e-28c5-456c-b7b8-886d68fa2a0a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51f7213-c896-45c7-935d-807f6cb261ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4f5d24-455b-40b9-9eee-6edc5949968e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71ab4c7-f0d6-4400-bcdc-302234dfdd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14917041-79b4-4e37-8431-6eeaa9a9bd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5889bf-b9a9-4298-aa79-7e4395226386",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93512fce-63ba-4b91-9e4e-5b731f127013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f3d446-1e81-44b0-9f82-8017ff7550af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c456d0-756d-4e69-8034-508ade2e3b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7ed548-13ae-4bdf-9c76-ac4bd4742b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08685eb-3615-4ad9-bb8a-03588b276129",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec43f055-bf57-44dd-9402-3c10b179f9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb6b585-0418-4a64-89f9-c4c0107f4e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c71f4f-6af0-4015-8022-2b68ed6569c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b32528ce-945a-4564-88c7-d0dcd307207f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e2939f-cfb3-4186-b7f4-a3f905695c47",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4604e1f1-c297-447f-ad98-37652f2b7585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e8f70b-fbcc-4511-bfde-acce24923b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bffcaed-7617-4fd0-b706-0119725e09de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27becc94-933a-436c-a476-6f8f94a00417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d47dcfc-d2d3-4451-83d5-2b7d8b49f30e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7762623d-4692-4bd0-9c03-98d64236b0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4812bcb2-84bd-4c16-ab69-7157be94d700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37badfe3-b692-4739-b7aa-2938aa196644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d433a19-c28a-42fd-8058-49075c6d1cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ffaf95-104c-4ec3-8df5-0acae139601d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c28038-7b07-428b-a4dd-d74ee5350191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcc5bf4-8ac5-4739-8afb-d78b47036feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3388d6-fe79-4ee3-964f-44905e23aa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "31ab0ece-f75c-4f56-82d7-237657f4ba28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b4d423-1b96-434a-ab55-5932e1d468bf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42b95f3-a3b1-4c99-8f05-3f43d1c4a0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500cfbac-bcf6-42fa-8903-30179eea343b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ace1ce-b53a-4d8e-91c9-c36827fc630a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0b01eb-01b0-495f-9408-0b152e770c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb2671d-8dda-41c6-a543-063981e1cc37",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5576b6fd-0912-436f-9987-5f8e50d4ceaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a08e623-ac80-4824-af29-d075b08c78de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965c9b86-2592-4f4a-9a8f-d55f154171cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb7bffb-74bd-4666-af36-0da763515a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71017f43-f956-410a-99ab-8d18c67eb0a6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbaddfb3-82fb-4886-9bed-423e7698459c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870d2d7b-7644-42aa-81bb-579fd1046062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8473feb-85a0-4b62-9677-d2698bdfd297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "715b57d2-199c-4f4e-8641-9bb0a318625e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a067e9-6a60-47b4-9c36-dbe18f9b9a7f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37137934-ea79-45b9-bffc-5e79ce7713e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4b9f81-dcbf-4012-b86d-6e21c4dea13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6986ccce-e55d-4b3b-9bd3-9e95055b55c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d338f981-cf60-4a25-a255-ac31da4d8621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32adf959-9b70-49a5-a5c3-df54a7ebacc0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01848c31-e765-44e2-b162-b12066519b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560e2763-45d6-44c3-9378-c224490cfe39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ca7faa-767f-4852-8fff-bbbfd26fe4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c215b2da-a05d-4a70-bcc7-0d1ab5550790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3b307b-1bfa-4776-b515-8b3241cbd809",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39402dff-23ff-4e2f-89cf-f93fe4b67feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956a9b2f-494c-48dd-96ff-82d3d957a637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b5ba0a-bde4-4c22-bc5e-3f229d1665e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb73dc9c-3973-42ac-b861-7642d75caf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ee033c-2e81-4447-8890-3550fe9c8b01",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da9c6e4-f92c-4131-9ec2-a17737253174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbf8de3-7b40-405c-bd65-71c1876cea09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bdf1bf-f264-428c-9e50-37ae3d9368b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdf424f-02f2-4154-a33c-0819ebf6a5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02db41c-8cf5-4191-b3fc-9040589707dc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e65e2c-34d9-40fe-a945-567f59edee34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a41a2e-2107-4945-99ac-58d62f1899fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe76eefa-cc72-4d19-ae67-6c29a304ae3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce6ef1e-e32c-454e-91ce-54b9743a51dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8303509c-c3e2-4f3d-babf-7f6dae1a7b00",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c3083f-beb4-4005-8068-aac464585692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa69d36c-7168-4e65-b47d-d0d80ace63c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7b994d-264a-4e54-a8cc-c1b853634fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7d9b49-4f1d-4994-b18c-79b4b46b12a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ec9e25-8f3d-4491-96d9-5b02bf614331",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70253861-791d-4836-98f4-9ef7c2036cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1f3e0f-541b-4436-b495-05f0affa0432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8940a4d-72c7-4385-89b2-fccaf33f57d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa6e52f-5406-40fc-bf0f-3dfe82f21b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa734640-f6db-4512-b283-0e0ebc419a0d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca12a6e-cdfe-414e-bc36-40439b3a03f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4480c4e-031f-4d26-9b7b-56115fde7806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a89ce0f-2fd3-4327-806d-bfd2ccee9322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0baa45e1-75a5-4d63-96e9-4d09238ae99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd54c01-cbb0-4066-b62b-11dbb7bcceac",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b296dab3-4d08-41ee-b88f-e6b667a5ec97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983fcb85-e10e-4026-b773-24d2f6d11efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb2b90a-4201-403c-8cb7-4be217d7522e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f37b8feb-0ed2-44cd-b489-49f369d9fb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a9ae31-84ac-411e-b1e2-166221218a59",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ec00fb-a8c7-4cce-8e2b-8f3854ee5e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce46f00-57b9-4359-b7e1-bcfef87feba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ca7368-8410-41f3-98b9-fa98e96c1454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ca918d-09cd-4100-88d9-ff2bd76a5b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9496db9-c6c0-4982-a77f-17890a99b14c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad712d1a-4ded-4809-9dd5-fd7a6ac2fedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef5ee51-ff84-4432-aba4-933372f8775e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b4bad8-5777-4a20-8856-1b3f14cc5033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6a2561-c8cd-457a-bd63-b2faf4a9f4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3768206e-b4e3-4eec-92d0-88293fa63fff",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1440d8b-9ba2-4c56-b1a9-05ce106d8737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc17245e-c119-4ab1-8a1e-9662f27b2a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f5dd8c-7b26-44e2-a41b-1a9e4601745e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "477e7dde-1d11-4127-9ce6-237d3349fd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c400b6c-3571-4b74-b9ad-7e259c5da533",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305097d0-11dc-470f-af35-0fcd22f7d8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0162dc79-e73c-4193-9c7b-0085ab2dcc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8f2ddc-4a43-4098-8c36-ec37dbe1dae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3802de-00ee-49ab-a57c-6ecf1c7adddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29b2593-44ff-4c46-9365-87ad14f74f0a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2795b14-b6ea-486b-b200-2481a2216acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e873b8-8e03-4415-90eb-4be3d8e47b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bded12-86b6-469d-aa3e-f148bc6640ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cde9a107-3a3e-45c9-b4ad-7535d5193ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b12162-e84f-4fe6-ad83-0b7f9901e77e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baea348f-8f29-4ad4-9b7b-9618452ac55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d09646-09c8-4e66-b08a-5d5fe435ca0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced06fcb-d87b-4d18-a0cd-16a167cb67b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52d27bc2-a1e2-4c12-a336-ffc94b2e69d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f49a60-79ff-4058-ba62-0fc32375025c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b64c76-0a5f-4798-9f93-c39a44b5d793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3724665-22d1-4048-b945-159075a17cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319b5061-37f0-424e-9ac4-fa093dfd15f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fedcec57-ac07-4bc2-932d-b21893d8e4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cd263b-5df2-4530-bc91-71d69f9a92e3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044c5b5a-0e2e-4c82-a593-c7cec6e301fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f871011f-c4c7-441a-8de9-1fa90bde4f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5562278b-8eb6-4c45-a75d-ec94fa9089de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a82cacfb-19e2-4a6a-bc02-df43ecd3a7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc4a663-81a4-44ec-b64a-a0146811f1cd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02d1b6e-279a-47b5-88b4-9bd54adf6e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb70cdcc-b99a-457c-b804-a863ae0656e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60031031-f1b0-4381-bcf3-e49918a84e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6be5ef3a-7687-40b5-b434-66e288782d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbba417-6e09-470b-84a8-2f9cd330a37e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19be3741-40ec-419d-b939-2591285a56c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c532185-651d-411a-b4e8-1482dfcf2c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6faff6d-a5b5-47bc-8570-73211592f925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a684bae9-767f-488a-bbf3-0924265bc399"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8024b582-712e-45f4-a0b8-87af19033837",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6642c38f-39f1-4cee-8c4d-d195dc54fc96",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09a2dfb-e2ac-42d1-990f-84e1788ec12b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0f2baf-62bb-4b76-a3e6-d0e425625dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871c5ae3-614a-43a5-abd9-ad075a02364e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4852f6f-7018-4f8e-9452-d6a9e2c7c268"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c24e77f-2e87-473b-9b26-426086d639e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be449dca-197a-4d50-92cb-b64a115e0572"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c6d5c4c-d463-4c99-97ae-f20be61786cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f759ea4-4e1c-44a4-bc01-fbad995bc537"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d2c7d59-cac2-413a-9501-9610bd2a3873",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9cdb87a-fefb-4583-9d87-81ca2a6f68c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0811bce-21f2-4503-b501-0f3180d504eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21a45d30-456c-4502-b5b6-1df34be19a45"
            }
          }
        ]
      },
      {
        "id": "5dfdce3d-ddc1-4979-96ab-bc2f3e83d62d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ac823873-592c-4d2f-ac6f-ade25d018e1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40732d8d-f6f7-44c6-aa8a-4bfe9c52ba78",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7b2ebd48-9d90-4476-86d9-1d49d2ce7363",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f6cf50-a1f2-45a3-9a88-ffcbc46029cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634647ce-86eb-4c29-b690-92e2ceb7dcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa2573a-1276-4df0-bbd3-0bcc90ee20e5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faaaacd-21aa-480d-a01e-581e3c88a91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d285efc-f6be-4467-87e7-a9fb0265c423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e941f5ce-8c69-42c0-ab38-57f308c87c08",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e414d001-60ba-43e2-b8f3-2ff69bbb27f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150666ee-6380-4314-97c2-c6043fbde997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e171a06-b62c-43ac-8a3d-c59568b48d6d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b643872b-17c2-4633-bdad-37d804062b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163b14de-1cf6-41cb-b47e-1e7220f7c661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4354fbad-688f-4bbb-823e-1d34c2fea0a2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0c54f4-c145-46e7-a025-8316f8181f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b0ed12-8848-4820-bed5-8e261b77470d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c933c29d-adbb-4342-906f-c4d7af3c1bd5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2668b0-9e58-4f4c-8251-1885a40f3182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c16135-66da-427a-8648-c7e28d6703b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc983a72-87fe-4791-b463-7fd7a424a5af",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b260be-5e54-46f0-af34-93aafa2458f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5548247a-c7d8-43dc-a486-8219351d3e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c8277e-62ff-4c2c-81cf-50b496f3f7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17ce24b-9c03-4c5c-b04f-e98576992d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d965810-bdda-444b-b404-422b862fc4dd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076b11be-2cfe-46f0-bb0d-40aed7156aee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3749dc63-a594-4cea-9060-fefb57b477b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383bd180-eb25-461c-bad3-4abc93fd9754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223b1d26-54b3-43d1-baa1-eceede8db1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec7fd10-0ddf-4c6b-8fb6-7092223de66c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963561c0-bf72-4c30-a71b-381f3659562e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e10f857-99e7-4a25-8259-5260470c2feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93afad1-e06b-49e4-93a3-5316215e850f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a727a2d-c658-4449-aab6-339860281a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56510cb3-5366-4a66-ab85-98e52e75269b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858951af-6e42-4508-8bbc-0d749c532363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e15445f4-1879-4677-9d7e-d4b98dc4ed7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78771cd1-a547-43bd-9b50-114eac2aca7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc42da0-77c6-4b38-aa8a-c0a693b929c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d023b5-4b73-4e1e-babf-67a82aed768d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761d5637-1327-4d6d-ace2-2023cb82c534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2836a097-16d9-4d0f-86d0-b17b67336f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e3fa22-5826-4c77-a010-421b1552efb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faea0942-a203-4b17-a339-2f43049f8690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575db6e0-bee0-4922-9945-533bfe7f86ae",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31547f9b-85b4-44a4-8f46-e9ba10c28b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f450d8eb-9278-4b7a-b7e9-aa88dfc794a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c409cf-fafd-49c9-8019-4d34a0c8f32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a876429b-8fad-495d-83a3-af66ca1bdd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19b9ac7-fdc8-4b7c-9f7d-1ff8c50e652b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03969e9-ca0e-405b-a46f-d76f1c07fb1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9009d7b2-e1a0-413c-84f4-5d6a688cd256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4ddd3e-550e-42bf-adab-d4827736e964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf701ad-ad55-4b50-b267-f1708d474cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d777ca24-e058-4410-a67f-7e823ea573a5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbcb538-c2f2-4c9c-ba15-8768aef61cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a92484-d23b-48ed-8881-88f41575d5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcf7d14-021c-4cb5-9722-28ff56344894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff6dbb5-820c-4f2d-9827-17504fdcbf84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9670612a-b5bb-42af-bb9d-91bd5f6bb440",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3391104d-89e7-4596-9b20-2dff23d16b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "409c1981-8669-4d9c-9e13-04041d0ec6b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b97c0d-48ae-42dc-b005-cad4640f5615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c89270-25c5-482e-bee6-360f9e81927f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8658849b-a120-4475-a4d3-e169ef22110e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3993f856-3c8d-42f3-8583-1acdefb774a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e895b9af-f434-4735-99d1-9da5f332e231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cfb29f-8a37-4e71-81a5-b115c8071a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27f1b1f-f722-4eb0-9a10-4ac1061784a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744597cd-2ff2-47a7-a589-f6a87494da13",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c5b78d-8df0-4163-ae26-030874fabdba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61ae020-282a-44c2-b491-0642e23d4795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7084ae-f65d-4a8f-80b3-95926a2fbc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19bd991-c207-4974-a13a-2254d923f85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab400d8-403d-4a10-b74f-95a41c179776",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff6a10f-0604-4dbd-b9cc-f4a2736a4ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe691252-c66e-4cc4-b153-66acf4329064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6224b49b-c409-4652-8609-4dd6bd72a086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05531cc1-a253-49d7-9f9b-b0ee8a4570ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dac26d3-6383-4968-a021-2293824c9d29",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39360bcc-bd58-4bfc-b5bb-4c0e5893c001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf19ea40-fdfc-4d6b-8f89-68ddd73da700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dadd76-e268-4436-b0a0-1290985fe9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70547cc1-73dd-4f21-be08-fac5abc35c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e23e3cc-beab-498a-bf9b-c77aecff21d3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eff90dd-2338-4943-b1b1-b26cf9594257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca05326-3b4a-42ac-aca0-b77eec8afbba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a621f8-f667-45e3-a407-c75bfcaad910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc43de9-c40d-4eb2-8ffc-fda757a0837a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7c8c59-e4c8-45be-af57-c985aefa675a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4523e83b-bb65-4cdf-a9cc-e2a806e41b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1beaeec9-9339-48e2-8063-758a5b2fea02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d6c565-20e3-4976-840b-3e934f0bd626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3f6a7d-1fe8-424c-8756-fdcc3abba7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b977110a-4d59-4cef-8d6e-670a3599b564",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38665f1e-1b4f-474a-84cf-842930a932ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09bf4fe-4e6d-4f12-b13b-43b4d13fd636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b206d110-4460-44db-b536-78dafe8c4763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44db9e2-d396-42b2-b2f7-14511559c629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0225dd35-611c-4d48-be04-baa05e2bb2d2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad9855c-f9f6-4eee-91ff-fb244c456854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4f4f21-10c6-41c0-ac9b-11f38c88e81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48017715-b292-481e-a0c7-fdfe60265214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d860cc1-7440-4b3f-90bc-b18ff9734196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60be22b0-7e3a-40bf-9453-46a2636982ac",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d180a367-fb86-49b9-a8b9-ceb42459c055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "358537fd-bdad-4469-a7f8-5ce9fc8174f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f986b5-b7e6-4145-b951-95df9a540909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b48045-9291-40f9-bfff-d8e1d302803d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7914c530-25ab-4803-ad48-6bfa5704334b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fe9da2-65f3-4e55-95dc-4b0ebe0baeb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7087a96-4ff4-4937-b0a6-72b28931f09f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a945cdea-7781-4b7e-94b9-f457ec0455fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4321d098-9509-49b5-bb2d-39ebee33ef4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3811b92a-b73b-40eb-9be7-c46cd30d1266",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e771078-9fce-4976-9058-d882657379fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae60e0c4-088d-4a37-ac1b-6992df2a7e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2aff695-96a3-4866-9b6c-4fedbc1e9098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dadf6b3-7201-4bcc-a271-76ac55200e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e6dc12-cd61-4039-a189-e9ab9c9e2601",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e6664e-5e00-45d9-9955-cdbbd7ddb1c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca93b2c-2dc6-44ab-9aa1-84dfcfc3e61d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb450cc-92d5-4850-98c8-83699e688b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7bb0ad-c7f1-433e-998c-e7a9e1420685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61588820-ff40-4283-a62f-b111bad90e37",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261d5049-b1d4-4fc0-ae87-c1c27f8347ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e76f6bf-d700-410d-b933-0e3475789c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24ce122-7889-4a37-b344-5425933db71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c2cb10-397c-4f23-89f0-b737abb0deb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5147a0e3-1c6e-4040-a44d-0fe48238e5fe",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06ab2bb-e1e8-4e43-b168-614ef8ee6b77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5344f0d-a5f9-4455-b615-114c8eb3caa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12c5020-3784-4e7c-9783-fb894bb9554c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce09b35-e627-4746-8862-4a44c42ce885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2e0599-6672-43a3-85ed-387cc75b3234",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbc3a64-c274-48b5-a3f0-3e32d407eabe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9dedb37-3afc-4c5a-b6b2-34db98bd7a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23d7a79-ba7e-4db5-8c2f-620d9278927b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f19543e-5807-464c-ad2f-0b83c46ee252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53f11b1-f90e-4ebf-bc20-23e4d6cf14f4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092d74c2-78d4-4d9a-88ed-e3a2b7b638cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "134cd2df-19dc-4acc-87fe-e64e81bef923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15a04d7-ad27-4a50-84b5-0c663471f7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669ca5b3-9b45-4ba4-9c9a-a0b4cc82f305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c11194-be52-4dbe-be75-d80f4c8dd0e9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa124131-2db2-404b-a728-b63be3a08784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3fe21e2-20cf-473a-8be8-aee4957597fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f9fa9d-1281-40e8-97c6-a1657bad0fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7daa2c6a-a105-4b8e-b6fb-9c871750093d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27aa4640-d128-415f-8f36-d25941fb114f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0b56b3-5cd0-4f79-906e-f4f643fca792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e8ee026-9dbe-4599-88ad-1ed996560da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1234cd01-4256-4ef5-ad73-b778b3fbda25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52e0d29-3c6c-4160-918a-bd761e8c379d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b380085-4ef4-4853-b5ae-e011a977a9ca",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8487f0-db59-43f9-9699-dbb7a6d44c34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e64d9c9b-ae0b-4393-b5a7-9522e36182be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e325a31-b2e7-448e-bd55-4513d28448d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87c2d25-d4de-4907-bd4e-bce82cda0eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76279c8-dd13-475e-84f2-0581652c0c12",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fb793f-4b1c-472b-81c8-f04f9beef025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f732290-01a2-49a8-a199-c5e60f239f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9b50fd-e338-4acf-8aa5-7f7c3b91808a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cca217f-c178-49cd-8222-4a8353862354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd29dbc-7c0f-4bed-a9d3-86702ec0ae30",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6ce0ba-f6ae-4035-aebd-a1e59ae50a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2718199d-c56b-4a36-a947-cdd14138d338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7b4adb-5735-470d-aa2c-3e981a282d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7d8b32-2267-41fa-b068-e2db97447b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a42235-6c93-4dc0-87b9-dd345ab898a2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a7314b-24f0-4d9f-b6b8-074364935fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5763c9b-0fad-45f8-8ff9-5e3c0a567fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910824df-69fc-4cb2-96dc-eec10da63609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b69331-ddab-4ad8-ad2f-3a2dbeeff63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cb35ee-8b7e-4e55-9daa-805544159b71",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73d6223-70e7-4062-93b2-5814c5f4980f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc33ae2-231f-49c8-883a-b46f88f3066d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7954af0-5d5c-4ee8-bf21-ece4f7abacc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4271770-5802-4975-aa02-0776c40029b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3d032e-96f0-43d6-903e-5f993ba6d166",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6635d7-04b7-40bd-a11e-e4d990d4f8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a449d7ce-4d3c-40c4-824b-5faed49dae6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc1a778-a135-431c-9da9-3aabe92be611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e79b19-428a-493d-90be-0c514363a71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e586b5-9c3b-4077-96c6-bb4e8b620d0c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd5f853-3beb-4b59-9613-5916316ea58c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6156c593-e09e-4952-8af6-df58ac55c071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d9bc16-edac-441f-95ff-5a7413679955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149377cf-34aa-42e8-b369-1b1f6662fb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfa5866-9c99-480d-b8b8-93587c896962",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb094f0c-adb8-48fb-9da0-730297820cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a79b369-8cb4-4732-a1c1-1ece62bbc85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160f29a8-5148-4544-a32a-63f82c6d0b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e97326a-6bf3-4fb9-b6fa-a5ffb51dba29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4065c281-46df-4275-a5d4-5c55944dbeae",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0b392b-9444-478b-9708-4184878e2ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0138744a-da99-4507-88dd-b7e6b13586e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0502e53-1c77-4335-b0c1-26a34e41a4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bea4a0-b613-439c-9c38-2bb016cff5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd0b592-2319-4788-b277-85d2d8869d0a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570c3704-1f36-4a9c-818d-ab9049e9aabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19499a6d-56b6-48eb-9aa2-4b1a11cf665f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0af8086-6be4-401e-add6-5942e9fdb8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed7b893-758c-452c-bb3e-b74f29825830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26b2a20-6e56-44b3-bc0b-be8bf093e3ce",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ae9482-dad6-48b5-bfbe-d59a4c7b11b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3625b5f3-5348-4432-8203-1ac4ab14c497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3423dabf-648a-485c-89c4-64e920fd012d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04d0034-9842-495a-8170-a2ab63fdb8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b291b6-bbf2-4233-880f-c42b2c9585cd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5585312-e3f1-4bb1-b051-39542d5669eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14106ce-e587-442b-a63f-4b202790b080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f39762c-c9c3-4fcd-842d-7e266380b4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695ac285-cfd4-4c84-8f1c-6e50f14564a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f43a50-a017-4e73-ace9-196dad598167",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2823c0-5d5c-442d-87a8-a5243804ee7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03766309-4bae-4b04-9063-458ff8d07acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e959e6af-ddba-45dc-b2c9-e376b23f0d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646246fc-68c2-4418-a979-aaf6d14ea4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66700e2a-1402-4cad-b1b6-b69831d58c43",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f3112b-0b4b-487a-abb7-ccb03098b2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da623ce-81f1-417c-b5b3-8c5929d24221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b88b185-daf9-4fb8-92d8-7fee0bdde0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c6e9a8-852b-4d69-826c-7443f2695b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea39fc85-b562-4b06-b29f-22451d41e208",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec1715b-85a2-436b-9565-3d61e644c5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc1cc64-4c45-496d-bcad-c90599bb4818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0964fe-13da-49b6-b065-00901800943d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8a5d7b-1f44-4026-8f56-130af0cfe9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6bacf4-18d6-4615-b817-cd61e6582c2e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c5b77a-c891-4efa-b986-49d601c7d134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625d29d6-a900-4d8e-81c0-f3c4f794c732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10493672-63d3-4327-ad43-649b8167762a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e829e681-81a5-4167-aa5f-7539259bc0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa1b7d2-cd2f-436b-a942-abe9eaa347bc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a9de2b-077b-49d8-b62d-cdd04074ba67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1afdf32-35ca-431d-935f-220e7a8f12f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57ba56c-691d-45fe-bcd8-543b92898864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321e24ee-0f8b-4286-ab05-29d83bdfc67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11115f2-8a49-488a-a76b-d9a77208c2df",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e125a3b-b2cc-41e8-9fd5-76c2e2ab2625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5775b7bb-bd5e-4f73-aa65-bf0d85423e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32075939-289d-4982-abe5-950883f8076e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567875fa-2fb9-44bd-8840-3df36c53ff08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e34b377-02ec-482f-b76b-2b61c9977dec",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39d9c91-49f7-475a-851f-89a980c68518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259492d4-7350-4800-ba5d-1587f718a626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e750ab9c-1120-49ba-9501-5f3763b95472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9954d9df-2ca7-46f0-9ca0-596b959c6f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0380b43-b9bc-45e4-b85a-129380ff9300",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8440562d-3e96-49c4-ba06-62acf12755b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3fdc47-13ff-437b-b4b0-76d478183fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2913f2c5-e021-4a2b-a0bd-acb5f76f4a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3667faa4-8d25-4d7d-9ef6-59208b0bc633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e084a0c-a597-42f7-8077-c9386450e957",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fb05ac-594c-4297-9d75-58d839e822c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff603886-d876-404b-9f76-9547c3607d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e053d8d8-bb7d-4b8d-8dc4-fb69e87e3b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127c3fa7-6ef5-4a28-9861-3b876cdab7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcce7b0b-3bed-4e0d-bf56-520a18830441",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48df2d22-7d62-4d43-aec1-1a0567fc1031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2397cfd6-8f64-4c45-a949-37d666213204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6219136-ce27-42a5-9168-c7dc30326b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ce51e5-d771-4bc4-9546-40341d8dd08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c136e4dd-fd79-48b9-a784-16578321a4a9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3120924-330e-4834-af7a-8b3f75a00d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264d7412-8963-4df5-a7b3-91282665cb56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec8b6fc-d2bd-4403-8ee4-f0ea5b92fd6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b904299d-6e60-49bb-97e0-3491c8099d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951476f1-2c8c-4da6-8a28-c721162fe40f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6e337d-6c5e-44d4-a616-f5b185942147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a5f2dd-7fbe-4485-9ab1-92ac58c0264f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bba827-87a3-4369-8152-9ea05a812a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8435ac-ff5f-4b68-9cdd-df9de3a891b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830bb6c5-40ca-4e3e-b4de-07a09322fb14",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8699646-3402-432d-a3b2-92199cebd8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f87080-922d-4cfe-bba4-b54a25b16240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5407630a-4ea2-4237-b8e1-fccf14d93d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f7f00d-b305-4b20-9b33-c298cfba08d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a236940-00d3-4a0b-af06-18a36445717a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b8e641-73ef-43d6-ae82-4441ca132c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db033d67-519b-451d-98ab-43b0a1c42f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4013f6-82ce-453a-a569-90e012bcbce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b48497d-4e98-4a73-bed6-56efece87dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb82680-ceb3-4ffc-ae58-7405c306821b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200d87a6-8839-475e-9b06-e77b44906c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5c9c6c-68cd-47e8-aa46-ba5603985de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccc5de2-52e3-492a-9ca7-439fe1231a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f3b143-13d0-4368-9393-3a9b06009b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8575a163-256a-405f-b576-83fb7c3e6583",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d03889-3d8a-4c47-84b6-005d52d382f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e0a8a3-6543-4e04-8c47-57461ff2f1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947c97f9-0148-4c38-9fec-9ca60bc07fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3129326-cc40-4693-9996-db40bebe5590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5647573-bbde-4a87-8ab0-3c84ad2f843f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24170db3-fb93-47c9-aa69-000a45204b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1006460-a7d6-4e2a-bf9f-fdceee7c4f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee610b01-fe92-441a-ad12-9db42bf2279c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edc857d-2de3-4b74-80a3-0618c03c53a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b2c948-1515-4a6f-a117-381c06d30b17",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a07b39b-e2f0-4cb8-9b72-d106aa6db039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9387a86f-52ea-4caf-833a-5356a57aede3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2531e4e6-735e-497d-be6b-33123bdeab1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7ca27b-09a0-459f-85ed-51e4262efc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf22d7fb-e0d5-4f12-bc69-1cf3cf257fbd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264f9b4c-1e19-44f8-8902-b09138dfb303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2794a37a-1b48-44d4-9e0e-e1f09242614f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2f5f83-8fd8-43f1-89a3-83a0b8b21036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba866a5d-2532-4dfc-a680-7b8dba630931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470fc15c-a474-4ced-be84-7fca11842cd6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4b7afe-20fd-497a-9601-32423b06d5de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f51485-e2ce-42c7-b5a5-a7fa3c8699e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4b558b-50d3-4b0d-9377-e8ad696bfc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb717ed-4de7-41ca-82a7-7d01c324c00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dc3088-fb22-4b77-b38c-1b73dfd79fed",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e10261-6b32-4fef-a3f1-0881a19fabae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0516655b-7ea9-4dc8-ad6e-bec9329ffb98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71420870-c0b7-4820-8ef9-3148a64c7df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a161e36e-cf8e-4b03-b715-d6e7580192af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4656b3c-57bd-460e-8afd-82a226923ae0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e587b85d-4128-48f2-9810-948f7b5fba8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1478d459-c775-4d7c-a0dc-2ee8a54cd4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf680ae-e18d-4be3-8564-6d86e0cad7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958f8bb8-b154-42f3-885e-bd146d1ff325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdff6aa9-20ec-4571-8f8b-d7b9da5b7672",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76852573-2086-44e9-8cc7-2d224f23baf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1d22bf-0f24-426f-abd9-cc1e97bb6914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e8595b-ac80-48ea-8c75-986963577e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89daef25-0d5e-48d9-9023-6fb3ac1e84ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7b08e6-118d-42c5-9444-f09574cb8a1c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a1425d-8678-4c39-ba39-017d0727a81e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d73574f-7fe3-4748-873d-20eefb21fc4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385d0248-f3b8-4b1e-8e1a-b23f1a4bf81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e6f1e4-77cb-455a-8d18-f304f3ff624d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8528c0ef-f8d0-4eb5-9afe-54175b3fbf21",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45085c58-6042-4379-bd7b-35f313833063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c8c41e7-19c0-4a2d-a55f-dcec482c41e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60eacdaa-36ab-4f17-b6ab-b2efe55d1871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548edc14-83ed-43e0-a6b3-cbf163fb44ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885f3f52-bb82-409a-8bd1-d771be6fb683",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7dfe04-8ae1-4c3e-9a0b-f91a0711258b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad8b7f2c-19bc-4f6e-96d7-176317adab2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bdf996-b3bf-4881-8b5b-cc3a582d8a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ae286d-1749-4999-b425-03abc454640c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2343b01e-03c9-479e-99dd-dd26eade25cf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95a3025-a96c-4790-bb6c-0ca72a9279c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c810859-659b-46f0-84c0-93beee526fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f57850-241c-44be-a991-2be3f41021f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d7b9c5-1760-40ed-a2b6-e7634714dbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14bd896-6a57-45d2-b22f-55a5350fb1b7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19970167-5b0d-45af-b0e7-f5dbaca66141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f1668b7-8132-4fd9-bf4d-7c0724125ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1a43c5-8c7e-45cc-b1a2-7b413979cd0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a613bb8-b97b-4166-a605-9e418e892217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0d1272-b9ba-40c0-87cd-6c14b3d0efee",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2b7316-7a54-4221-be08-83f4bdbfa846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5372c98d-4e67-4c2b-8e1f-b3d73e5eb723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ef554f-6ab1-4bdb-a870-e44bbf85b09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0f6c9b-dc47-46b8-a241-507268973e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eb5c01-1056-487a-8ecc-39b119474ec1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c20129-5c4c-4ebf-94d3-926ec5fc8773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e532b39-7d92-43f9-8e88-a38ddd2c6394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c0be15-d1a9-40d2-8d14-9346bead9232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b367d892-45b6-4a22-9aa6-1a77377fec97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0ecabc-dd50-4dd4-b008-b852473d653d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6afd24-1f98-4bb0-800e-b82c5669433c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68833df3-edba-4e07-9677-facd1b74630a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeacfa85-9e1f-46c1-a0b2-787a45179660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26de5518-88f2-49ed-a016-525699032adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f082d68c-f5b3-443f-9a4e-8f3939bfadfd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207b3138-4f85-4e0a-9708-c669feb44518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "081d93b2-9d7e-4297-9445-ac9cf91c48f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ed1322-44f2-4015-9192-7e0ccc52c865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e3cd23-f3a2-4956-b108-7602c172c3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a65adc-e5f4-4507-868b-f720a71c5367",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b841f3be-b8d4-485f-b3c2-792f2c377475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20f7a358-a55b-41bb-91cf-90218ed50d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ae791b-43d2-4236-a860-cb95796086bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d14d75f-531f-4119-8870-0af42f91a9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febe7242-c122-498f-a801-63c9aaa2a6e1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57ed537-95c9-46ca-a98a-a22007e6e0bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ad04a8-3222-4ed8-806b-1f5979a51cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a75ebc-da13-4090-981e-136600a69200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff00fd4-9776-4c20-ab8a-de7809e586b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb440bb-ff79-4b33-81d9-f202692abc01",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ebc4a0-1317-49dc-a147-c52d2127f071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e51fa20-a3ff-4a60-b4e6-afced3fc00a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa78f306-4549-4051-88a9-eab6166bb9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d9b76c-e0cf-4652-81ac-e137d58a4bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c2c662-2d80-488d-955f-f4c8fabf5aac",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94efa217-092f-4ffd-9986-bf0f1d025a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b313b780-bac7-40a7-8b6d-edb5908259da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30ac4cc-0958-4de7-99f1-721f66ce1053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177ca17c-075a-44fd-a41e-51ac9dddc491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88cb892-6ae7-4bf8-bb77-bebdb8ac138c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32b5c76-9f0c-4e49-af68-77d4960344ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff97c3e5-03c0-444f-8606-cc3b91aa0674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264dd072-63f7-42bd-99b4-d206de13b878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0818837d-2ab9-4084-9583-7dd93ad45661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c614ff2-2ddd-4f2e-9edf-e023a3f9d5d7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53881d46-a07d-4ef4-8444-1e5b204d2fe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dff6779-6f0a-4ed3-a080-d6a092fc3c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c16285c-238c-4d14-b79d-fdecdc1c7693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065dd921-fc33-4408-a327-bc90c39bc8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c50e7ea-6ccf-44f3-83b6-b0e6317d04f6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1dd807-5767-483c-a80c-7fb13a2835dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14653f81-fee3-40d4-8194-db443335f629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7145a985-5246-42e4-bdb1-f4cc8153fd24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aaab7ea-3f10-4291-bb36-0f9d47c7ffb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e352081-8668-42fb-a3ea-81329a522069",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1286e1-0643-4d13-81e5-cac72db6f81d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf5afbe-edbf-4b80-97ff-129657409a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a79339c-cf8a-4b1d-9192-8f9773592f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9888c591-58bc-42e8-a733-0043c8a30aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac769e6e-170d-4ff0-80c5-d4b0a6d8e4e8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2b4f5d-2101-403f-bead-a05f95bf6df2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59c73cce-746d-4950-81bf-25ad9d1ff9d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7896bb5-36b5-4110-be64-be2bce66df99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23f958c-9708-4c0c-89f0-387fff11c9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de21152-7692-4f0b-a4af-fb3100f0229b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade49d32-c633-4d75-b5f5-53dd661712eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad1ba5dc-c2cd-4bd9-a92f-ddef3dc0c108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fbac12-f9ad-4e04-99a8-aa4e1b328481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d95df0-0bf8-4d58-a080-54131d01d952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ef48b6-d7f1-40da-877b-c94af2cae881",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c746b6-4ca5-4e6f-b209-029819d30593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cfdac00-1ff3-47ea-9b58-26f63e18f346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0232f1-5a16-4f89-816f-68af1c71a78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d220a6-bc89-42bd-961b-2bdb43036dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc664b48-ad1a-47e5-9d59-fe456796bc5b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8545b0e0-8325-4388-a65b-7f525190e47c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce717773-f0ae-47f1-8529-d31f93832ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "defcd969-79c4-4027-ab8d-709b2fa0a5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072974c0-32ff-4639-a578-142cf745378e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98ce7da-ca5f-4e92-a60c-8fe10484c5b7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd7ce10-9591-446c-8983-56ca995f9136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "551cb3d7-f50f-4fab-9a1f-dd96c3c10c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b2780e-2ef0-4801-a426-68f18365bcb4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c9f153-3b19-4932-a991-11e6f8855339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942eaf53-ce11-4af9-9606-130aa894d9cf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89d2765-5233-4019-b782-c9029a2f6b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78504bfe-cf50-4c0e-940a-ef0742b8089e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e1d23d-8a52-4f7d-96b6-701d6283dcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ea9e25-01dd-43dd-940a-6d87923ca564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75e8aa0-b97d-4cd1-99ca-cfbd4337ebd1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338c81af-35ff-4824-ba3f-bdc0f7437d0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53474ceb-4b8b-4983-b883-7ed1e27102a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b109e81c-cb74-4161-9f42-c434462a5b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59078906-0d68-4817-a794-96d3b0cd9949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b4e510-81bf-4a62-b8e7-136b0cb3fc7c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b31bec5-f277-4291-9b05-cbe598f291a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a497351b-893e-4a5b-8368-f7d6be3805c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b556803-10fe-4082-807a-4dcd3669cbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76287e34-c4f3-4bad-b886-bfaae01ed09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6b5d15-ba14-4625-9fe3-80e558c77c09",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd1c267-6da7-4a28-ba3c-efc0a179dcf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f334da65-2b99-464d-8b5b-b7424ae10155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe2985f-d7ea-456e-b2a0-6fc75c37a3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542dc72d-b75f-45a3-870e-0154ab97581a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2450daf3-1977-4dd6-b970-ee4bfdb524ac",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66a1ece-e2ae-4c19-836b-b49f58eaf462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "902d3bbe-a8ff-4bae-bde8-5058723cce3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5cbb86-1b8f-48ff-ab56-7734495e06ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98f28f9-d5a0-4a8d-8867-aa7148a51616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a1e017-8c40-49d5-aa53-4ddaa8ff47fb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddaa671a-7a9b-4e58-89e3-f41eb54c38cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be1b147f-a7b7-48bc-a16d-c5d9e55c27d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e30483-f7a8-4aac-a8b4-374102243c00",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60773aad-12ae-432c-8252-1885a1d4ebb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d08b58f-7686-4040-af38-65aa28af2c95",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f83e86c-ec75-45f2-9fea-acbb56a7bb3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fff337f-b788-48fe-a540-d3c429e7754a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670a2f31-a4b7-4bd1-970c-636720a38dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2fe9b7-bbdb-4d3b-a98e-a6f4d8e83895"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f14eca75-d232-4217-816b-ca2362595331",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59477c5e-73fc-4d3b-81c4-dc9485d4494f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "681d87ed-5b5f-4ce5-87db-4a24df536cd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2a1a83a-ef29-440f-a529-3720069ece5a"
                    }
                  }
                ]
              },
              {
                "id": "87a9d130-9af3-4065-901c-8bd3f5f302ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ac686f5-6309-4d7c-9190-84e387e34806",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27c6284-4c8d-42b6-8614-c0fd79138399",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0aeaa3af-c34a-4caa-861d-b23b8f35d1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9042633f-36b9-4e0b-a123-2533cc95e087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3f5d7e4-9062-4041-9f82-64073f7c1b89"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4215012-8027-413d-ac37-8e00da087b4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdf747d8-0051-4985-8579-93cfae6928a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ac530a6-4d2c-41a3-a595-dfd5a1eb6e41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0590e1e-b339-47f2-b1cf-f59af5279c6b"
                    }
                  }
                ]
              },
              {
                "id": "1d1da8a3-6366-4d95-8a65-aa7d3c0bef7c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "56909e15-c390-4492-94c6-c16e5dde1d39",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9a2511-e508-4e3b-b6f1-2bc02b62d54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bf453f90-5ac1-4803-8838-f055dede3fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc685ba3-b699-483e-a068-38dca1378640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdce0d5-90ab-4e24-adf2-0d68129c906e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1e0fa52b-c815-4421-9892-e4f7f78a5dc4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "153ed4c5-655d-4cfa-a751-6781c826ff24",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8fda637-627d-429e-853d-f452c6d90aa5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1610df33-2c52-4777-bb62-abbf53db5309"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de1d7cfa-5e5f-465f-bbd8-58b521733059",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bb92faf-ca15-481a-945f-a5b99f673d06"
                    }
                  }
                ]
              },
              {
                "id": "999cb381-b2a3-4858-879c-0435e635ce9e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddc75363-f2da-4e62-958c-b727e37659fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cd3abd62-f938-46fb-adfa-1e9a0293aed9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1400e724-a373-4f0f-95be-8a546892285a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76aa0bbb-97ef-4188-b74e-c9ab077cf036"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4658930a-91bb-4549-82ed-998684103ba3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a8f5c2b4-5410-49f2-a21b-384af2e8db78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4c1f44e-95f9-4d5f-911b-f77730d90886",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "066b80e2-0eab-497f-912f-19dd284f1146"
            }
          }
        ]
      },
      {
        "id": "5515b1be-9d1c-4007-9bbe-5a7f0d2c8d44",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8bdd17ee-fef5-4501-881d-68d34de0831e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ed37d38-0914-4710-9169-04c49674b874",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "487c4ea8-0b41-4c05-8cb0-22e24ddb7c31",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efe2f3f-c856-4fd2-899c-78f373b4bb66",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4c8f39c6-ca96-48f3-8738-304e977ef170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d70c7d-5ee2-4a98-954c-2c16a7729808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0f11ba7-7e51-4a30-99b2-bfaaa804ab5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "034646c5-944f-4601-a230-382b50312e83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d18b9173-d7ac-4ab0-a601-5330d1bf1765"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca98a0d5-3426-4d5a-809a-3b6da77bdd8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1903cc95-2c32-4d86-9b14-f841ec6515ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2312b8af-8008-4f8c-8e6d-5e6a02c0f59d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "209436d9-0d92-4e21-b587-e9f47a0e66d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b8383cf-b4e3-4500-835c-73d581563f4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6238e9ec-d521-4293-8736-64173aedcf10"
            }
          }
        ]
      },
      {
        "id": "3d4013e1-9139-4d0f-ba87-0750f6374dd2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "47c6c81a-9604-4fb4-977d-a608d35c2cdd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b582fe2c-4fcd-4540-a062-aa4eac38d637",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe37a0ce-f5fa-42f7-8906-0db3c125a1a0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474ec3f4-092d-4509-8258-871780422e26",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9910ea82-4f10-433b-bf8a-856a8a7e3344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f63f98e-749d-4348-bf2a-fcac9e5cad01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3627ac3b-43f6-4e2c-b1ad-0ddad399bb6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fd86b93-0133-4609-af23-767a67f7544c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b433a472-2ce7-45df-84f9-e58530156d5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75d73d6f-d16d-4455-8e0a-4bf4c9f24e29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a263c8c-8483-4fc1-a575-0cdf05d0da40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e758f15-0ff7-4523-90db-4e01b010ad7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "423c7303-ad39-45ee-9a2e-fad8f0b9e34c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b885ce40-ead5-4e7b-972a-0ed5f9b98c40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c2a727e-cf35-4f87-b23d-465fde7f2d0e"
            }
          }
        ]
      },
      {
        "id": "dad445a3-938a-43f3-b890-b14d4fefca41",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "55965ea3-0d53-4862-9686-dd494e08b659",
            "name": "Negative Testing",
            "item": [
              {
                "id": "213b9df0-a9cc-47d3-96cf-f997dc8e341c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2ffafb7-0bb1-4a52-bdb3-a313f78ec73c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0f5ee0-bf79-4c3b-a07f-b89c6654e328",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c0a4938-5c13-40b1-9a96-c488aa850e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba389391-27b8-48d8-8a60-d617a42e5932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cf7bc1f-4b67-4994-9bb4-1d2fcc4ea284"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e768a0d1-64b7-4f12-b135-0baf7e0b907b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2784a85-e826-4a09-b060-837c1d639c1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f43905f9-200c-4f55-a3ff-78b3800301ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc53db31-e00d-4af0-9d86-fd2a850b8098"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99181d37-424b-4959-be55-8cf019a932dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9ebfb11e-c5ba-441b-9b20-2f2712516499"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fe0e108-5e88-42b3-af47-4241e46f22cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bc3fa79-1e3f-4450-9f0a-92674d54dcad"
            }
          }
        ]
      },
      {
        "id": "cd8f09e7-0592-4304-b94b-57d149041514",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01d1e303-5795-4c20-979e-d9b1f8dc0d9a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddb50416-0577-41e3-84f4-ae563803f32a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4edc3e8a-f1aa-4a7a-9780-ae5a93fefd5c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6fa07b2-b0cd-4bd1-a75e-27d9c22ba58f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fab9a70-cd91-45d3-ae60-5c1aedae9a47",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 233.79298245614035,
      "responseMin": 10,
      "responseMax": 8819,
      "responseSd": 1088.1476466929419,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700267683677,
      "completed": 1700267760052
    },
    "executions": [
      {
        "id": "87f5f040-6ee6-4ffd-810b-818f31eb1e3f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "96b4065e-4b88-4f4f-8ec2-98654a312656",
          "httpRequestId": "d0ec8b0b-08c0-4a78-96bb-7ffa50f27134"
        },
        "item": {
          "id": "87f5f040-6ee6-4ffd-810b-818f31eb1e3f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3fc50cbb-8a40-44d3-8b00-3a1d6cee750f",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "2acf25d8-13fc-4f96-99b8-2647ef0a97a0",
        "cursor": {
          "ref": "a9045fe3-5168-42cf-bb4f-ad259d7deb98",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0ba4903f-c00a-4207-ba22-60fda892d5d8"
        },
        "item": {
          "id": "2acf25d8-13fc-4f96-99b8-2647ef0a97a0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a37a54c4-a923-4256-84b5-5388fc812991",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "08abdf8c-1a10-4322-8662-7940ef6992c7",
        "cursor": {
          "ref": "e987f62d-6ba7-4452-8759-48f7c019612f",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fcefe7a8-d3e8-49ad-866c-dec8e8baec34"
        },
        "item": {
          "id": "08abdf8c-1a10-4322-8662-7940ef6992c7",
          "name": "did_json"
        },
        "response": {
          "id": "57b857e9-0bd2-47b9-a438-e26ca4464b21",
          "status": "OK",
          "code": 200,
          "responseTime": 1491,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bc285b-d3f6-44d6-b85c-4131e2d00520",
        "cursor": {
          "ref": "9611e81d-c28c-4423-9a85-a399356a84d0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2e590556-471b-455d-b8ce-76afad5b2658"
        },
        "item": {
          "id": "84bc285b-d3f6-44d6-b85c-4131e2d00520",
          "name": "did:invalid"
        },
        "response": {
          "id": "9f1e1f2c-5338-4730-a422-e2567eb6a8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bc285b-d3f6-44d6-b85c-4131e2d00520",
        "cursor": {
          "ref": "9611e81d-c28c-4423-9a85-a399356a84d0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2e590556-471b-455d-b8ce-76afad5b2658"
        },
        "item": {
          "id": "84bc285b-d3f6-44d6-b85c-4131e2d00520",
          "name": "did:invalid"
        },
        "response": {
          "id": "9f1e1f2c-5338-4730-a422-e2567eb6a8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d05242-3f02-4fc4-87ee-2a1a38f4c7f2",
        "cursor": {
          "ref": "f10047c0-d25b-4b14-aee6-42b0c19e5377",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e81185e2-c6b5-48a6-b2d4-112b3a9c3d2c"
        },
        "item": {
          "id": "02d05242-3f02-4fc4-87ee-2a1a38f4c7f2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "dd2340ae-dfc6-4bcf-994c-c2f02fee3f54",
          "status": "Not Found",
          "code": 404,
          "responseTime": 115,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf10f26d-e085-4899-a634-270c94361ccb",
        "cursor": {
          "ref": "91862870-cc62-4192-9c66-61cb4f16661d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "00eaf1e6-3d69-4e1c-bc73-cdb29113b3c6"
        },
        "item": {
          "id": "bf10f26d-e085-4899-a634-270c94361ccb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6f7d2ca8-1be1-470f-b0c2-fe09140691e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ab6425-798d-417b-972c-c56fedf54324",
        "cursor": {
          "ref": "ba8e9d76-b2e0-4e16-9959-dbb99e2eca05",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4d55ac32-b1b7-4535-b2ae-e71b263a371b"
        },
        "item": {
          "id": "04ab6425-798d-417b-972c-c56fedf54324",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4da9516e-0525-4233-8222-2aaaef9e6082",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecea31f-cbcd-4fbb-8209-5d38ebf5df38",
        "cursor": {
          "ref": "bf79a768-934d-4425-95fe-601186d78349",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "36b10eac-3e07-4dbf-a52e-381c6072458a"
        },
        "item": {
          "id": "1ecea31f-cbcd-4fbb-8209-5d38ebf5df38",
          "name": "identifiers"
        },
        "response": {
          "id": "21a47ea1-a1df-493b-8f26-1d264235eafd",
          "status": "OK",
          "code": 200,
          "responseTime": 1192,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f029d639-0294-4b45-8e0a-ca1ec69dac96",
        "cursor": {
          "ref": "8af159fa-f24d-4edd-9f4b-19ea9475acc5",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c8ebe10a-f3c9-487c-b688-1181b245909b"
        },
        "item": {
          "id": "f029d639-0294-4b45-8e0a-ca1ec69dac96",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6270588e-9d5c-424d-8810-94ed26b87b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92eb7d48-111e-40fb-99a2-2b3a2dbd3148",
        "cursor": {
          "ref": "b5e0015b-daaa-4c5d-9a24-18fda65c6849",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9e6241f1-ffdc-40ea-921c-3f708503848d"
        },
        "item": {
          "id": "92eb7d48-111e-40fb-99a2-2b3a2dbd3148",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "23709e92-d6ee-45be-8b97-c8b2b91afb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774cf5b7-a0da-45c6-a103-2d0baee28307",
        "cursor": {
          "ref": "6544cfeb-ab4c-4796-a879-97646220b31d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "88181de1-8da1-4330-8071-0f8cf9cf34f7"
        },
        "item": {
          "id": "774cf5b7-a0da-45c6-a103-2d0baee28307",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7ec044e1-8bd2-4a9c-90b5-a05f21988118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4e956d-4422-4fad-8fea-4ad39153e54b",
        "cursor": {
          "ref": "3200c465-7b1f-4871-9172-3e4ebc81c111",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8458e148-45c5-4c2c-9001-33181fc1a750"
        },
        "item": {
          "id": "7d4e956d-4422-4fad-8fea-4ad39153e54b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d830a81f-1eea-4899-a5b8-45d86a1263ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45440ff6-dc31-44a2-b870-10d5bdf536d5",
        "cursor": {
          "ref": "7b24d55a-8978-475b-8579-24e4daeed694",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "06443be7-7e38-4125-8557-8bf0a30cbe33"
        },
        "item": {
          "id": "45440ff6-dc31-44a2-b870-10d5bdf536d5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8855968e-d2c3-45bc-b9fe-b999e9cad6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843b36b2-3bd0-4fdd-ac51-9498d3c4a915",
        "cursor": {
          "ref": "7a8c184e-5d21-4b36-9941-8fc60efeea9d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3b31509d-ba79-4111-88c0-0da288017f2b"
        },
        "item": {
          "id": "843b36b2-3bd0-4fdd-ac51-9498d3c4a915",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bfb7081d-d00b-462b-9d1e-1a20f799759c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f9f4cf-f38f-4a6b-956a-c83fd555256d",
        "cursor": {
          "ref": "53c92a41-d125-4f41-b29c-62c8a068c939",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fd0f40cd-d208-4efd-baa4-00623804dbec"
        },
        "item": {
          "id": "e3f9f4cf-f38f-4a6b-956a-c83fd555256d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f5046839-9389-4a60-a3f8-6c8527f05427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d918c5-8bca-4624-8803-7546a24cf6fb",
        "cursor": {
          "ref": "bf291001-b3fd-48a4-8641-7280ab460a3c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5b20a031-ca43-431d-a8e8-60a539cd3e51"
        },
        "item": {
          "id": "c3d918c5-8bca-4624-8803-7546a24cf6fb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4deabdd0-e807-4046-988b-7d8471d9fb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18778380-972b-4467-9f5e-443e2c947d84",
        "cursor": {
          "ref": "af018a6b-2202-44c0-b819-822e0be931eb",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "935d8f7b-dc60-4dad-9a33-58a0d54650bd"
        },
        "item": {
          "id": "18778380-972b-4467-9f5e-443e2c947d84",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4baecc45-9e24-45bb-84c8-f98f3ba18394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e68b81d-eedc-4c15-938d-b3b1b62611e3",
        "cursor": {
          "ref": "999103a6-708a-4a6c-b777-a51480c1d207",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "87e57b5f-1ea7-46e6-930c-33f96c88f280"
        },
        "item": {
          "id": "2e68b81d-eedc-4c15-938d-b3b1b62611e3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0876e366-0e85-4bde-b06f-64f5abea10d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f014360-3954-4888-8e66-fc20b9c452d9",
        "cursor": {
          "ref": "d32ce3a0-1254-4856-9980-ab5846e3c366",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b0b1357b-affa-4c13-ae52-691c0cebd045"
        },
        "item": {
          "id": "6f014360-3954-4888-8e66-fc20b9c452d9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b330faad-b2ae-4d52-844f-cde5c5959857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6140776d-8507-420d-aa24-40eb9f449b56",
        "cursor": {
          "ref": "00d6e017-eedc-4f6c-9683-fcac83b585d7",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f7018c91-b9aa-47c1-b36f-ce27b53809bc"
        },
        "item": {
          "id": "6140776d-8507-420d-aa24-40eb9f449b56",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "667da55f-09df-4598-847e-7e3293688b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e32219-a97b-4f23-adc9-8cca7425b373",
        "cursor": {
          "ref": "7b12d65e-b91c-4e56-a405-b18d0001637a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "79ba16d5-a3e7-4f34-9514-139f6af455de"
        },
        "item": {
          "id": "38e32219-a97b-4f23-adc9-8cca7425b373",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "749d107f-4a37-4ab7-ba0a-051c8bd9a6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733fd87c-7276-4bad-a3b4-e2b5f8cdd712",
        "cursor": {
          "ref": "afff0321-f850-48b7-a863-8588ed58b83e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bc8a1685-9779-437a-adc6-5dad00e068a1"
        },
        "item": {
          "id": "733fd87c-7276-4bad-a3b4-e2b5f8cdd712",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "66a3f49b-ab02-4e2b-9e92-0d9056e48a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafff8bd-fad5-4976-90b1-5bd1ed971975",
        "cursor": {
          "ref": "8e544366-a4a3-4c54-8d87-51c8ca6b9e27",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5fa6bde5-75fa-4fcb-b2e7-f0c892d87323"
        },
        "item": {
          "id": "cafff8bd-fad5-4976-90b1-5bd1ed971975",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8d6aede8-4f76-485d-8468-34ef7a439b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0e5fc4-9f57-4e6a-8093-2a26bc1897bf",
        "cursor": {
          "ref": "e7d64164-9d88-4aed-8f6a-8b291a0721f3",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "511bf67d-03c9-478b-9abf-e5b0b181d4a3"
        },
        "item": {
          "id": "ca0e5fc4-9f57-4e6a-8093-2a26bc1897bf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c5b92e2d-aff2-4bee-8b97-8d394eb9a26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923fa9d8-b0cf-4b2e-92ac-910a18540faa",
        "cursor": {
          "ref": "c3d99b50-c4ae-4886-835f-766bc20296b5",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "481bbf81-da62-4a50-85c3-4271acb903c2"
        },
        "item": {
          "id": "923fa9d8-b0cf-4b2e-92ac-910a18540faa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "314d4e1b-559a-4456-af20-0dc5d81e08f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1956d6-573b-4ed1-a137-a858bffd76fb",
        "cursor": {
          "ref": "db45552e-552b-4412-abff-108e2ea6d47f",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "eb3faea3-48b8-4e25-96ac-1efb7aea8542"
        },
        "item": {
          "id": "6d1956d6-573b-4ed1-a137-a858bffd76fb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ccf64080-064c-4cbe-85bb-3c4f22004e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cd4767-72fe-40cc-b3cd-303478549071",
        "cursor": {
          "ref": "d3af5ae2-1a3a-4577-bf3c-b6b6f30ace0b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fc12bd6b-a1e5-4e18-88ea-a08fb301efd3"
        },
        "item": {
          "id": "22cd4767-72fe-40cc-b3cd-303478549071",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "59de6240-afd8-4ee5-9819-f491c003daaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413cef65-917f-4302-86f4-01a8f02e8e26",
        "cursor": {
          "ref": "6d6c077d-624b-4d14-bb48-4004a2f1baa8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0627d4cf-145d-48c0-8c33-f451de7e5f87"
        },
        "item": {
          "id": "413cef65-917f-4302-86f4-01a8f02e8e26",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "69d568ef-b9a9-4b9d-9721-2c198a890221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3924ee4-e928-438d-ad7a-83723173b982",
        "cursor": {
          "ref": "01d2c88c-31d4-4aa1-808f-7f3d41d7812e",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fa4857b8-fbab-4ba4-9a21-fb1c274b0843"
        },
        "item": {
          "id": "f3924ee4-e928-438d-ad7a-83723173b982",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "355f9460-5ead-4818-8839-46549eb50c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb5a11d-02ef-4d1f-b41c-17d47fbc1c73",
        "cursor": {
          "ref": "3afd6020-48e2-41bb-bcd0-52d867dd68a2",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "24c7d2be-e313-4ea9-83d8-30a9140e6931"
        },
        "item": {
          "id": "4bb5a11d-02ef-4d1f-b41c-17d47fbc1c73",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "efce9ff4-316c-489c-8eaa-d38247430b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778fe930-61e2-4b1b-8b16-4402a808309e",
        "cursor": {
          "ref": "13603b9d-e73f-426b-920e-b78038540924",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b54157ea-5d70-444d-a1f4-834cc4ac5280"
        },
        "item": {
          "id": "778fe930-61e2-4b1b-8b16-4402a808309e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c5c94015-6b13-4286-8e0c-3819eb08d5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f47b3e-2e15-4b61-ba0f-976d610c0da9",
        "cursor": {
          "ref": "835a9fa5-b00e-4fcc-a880-71b52c21e08e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "289c5919-f6de-44df-8d35-222f966d74c8"
        },
        "item": {
          "id": "83f47b3e-2e15-4b61-ba0f-976d610c0da9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "89c46bb8-a871-4fa7-8eea-3f16aad0fe42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef85970d-de77-40ec-b7d1-2427cccfb67f",
        "cursor": {
          "ref": "38bd5f25-01c4-4445-9286-6b688cad777a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6493fe79-5a42-4067-8986-3c8a4aca5c0b"
        },
        "item": {
          "id": "ef85970d-de77-40ec-b7d1-2427cccfb67f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "55b584c4-93ee-4c80-95c9-db7119696190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b41c7ae-02c6-4eff-8671-79b98df60c09",
        "cursor": {
          "ref": "fdd5e8df-0980-48a5-b8ed-9c75d36575f9",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b7a20537-e83c-444c-ac2b-8e372319e652"
        },
        "item": {
          "id": "6b41c7ae-02c6-4eff-8671-79b98df60c09",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "40d35ea4-4df6-4ac8-b053-cde43000292b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b662e3-f8b1-4695-8c94-34f2e9686dfb",
        "cursor": {
          "ref": "eecef251-f302-4670-ac49-44c35f6b95db",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8c2f80de-4541-406f-99e9-07f3a6e20f52"
        },
        "item": {
          "id": "28b662e3-f8b1-4695-8c94-34f2e9686dfb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6971ad59-6d77-4166-bc53-e68fbb0f3bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92891b8c-5103-438a-b616-ca339f06cfd7",
        "cursor": {
          "ref": "88acbee5-04d0-4d8a-8949-4e2e7749e689",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "48404d26-19bc-4b16-8757-f4a01a30b41b"
        },
        "item": {
          "id": "92891b8c-5103-438a-b616-ca339f06cfd7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ea63e44b-7485-4e8c-9dce-f7a91528b1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795db34f-6664-4c50-b1aa-a938e15e38ee",
        "cursor": {
          "ref": "2c12fba6-174c-490f-9fd5-db203a073bae",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d7ed1863-8ac6-469c-a3cc-3ed2d801aa9f"
        },
        "item": {
          "id": "795db34f-6664-4c50-b1aa-a938e15e38ee",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3471645b-3b83-4197-9ff0-b1e6b76ab3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704e857c-a79a-4382-b6b9-47fdf20ddc35",
        "cursor": {
          "ref": "37496578-bca5-4438-a6a4-26ad6d9ddd6b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "874f3ffd-6ae7-413f-b278-9a07b65adb4c"
        },
        "item": {
          "id": "704e857c-a79a-4382-b6b9-47fdf20ddc35",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2231f2fc-8d5a-4554-bf77-71fb673a8aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a1e655-29a8-4feb-951c-638a9977f471",
        "cursor": {
          "ref": "6bdbf450-7515-4ad8-b7a7-14eb7c2bf1f8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "af860854-e873-4925-862d-c01c110d9f41"
        },
        "item": {
          "id": "12a1e655-29a8-4feb-951c-638a9977f471",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4a7026d6-fb52-4a55-90f6-4418af1ff2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c078f9b-c0d1-441e-a4dc-43025a0fbc7b",
        "cursor": {
          "ref": "c7973b21-2066-4460-802f-97b491de63f3",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "339fedf7-cdfa-45ea-b36c-17f4949bc4f3"
        },
        "item": {
          "id": "6c078f9b-c0d1-441e-a4dc-43025a0fbc7b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bab62c07-ffc2-47bc-9d86-1bd4cfe7cd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e383d9ad-9ad2-448d-8ecf-1f9967d65080",
        "cursor": {
          "ref": "4c97482b-bf59-40cb-8661-9fe50f0a0df5",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6df0e165-627f-4b2f-9ee7-8daec8691394"
        },
        "item": {
          "id": "e383d9ad-9ad2-448d-8ecf-1f9967d65080",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "015c883f-0eea-4b49-ad3a-2c5be61d1cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e90f79-a376-4b7d-af3e-677ecc7e1310",
        "cursor": {
          "ref": "ee4f9811-68ec-4334-b576-0a7ddef80077",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fd41d70b-8f59-4e12-8789-45a10510aa7d"
        },
        "item": {
          "id": "c2e90f79-a376-4b7d-af3e-677ecc7e1310",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "97ea7089-d789-4c4f-86d6-8f9d91f34439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f2bcc9-5e08-4bbb-a9e5-bf46f0d9e2ce",
        "cursor": {
          "ref": "b9af7498-a3dd-4b55-a050-7823a6bec9f2",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8748a28e-eba2-444b-86e1-b502e53a32b0"
        },
        "item": {
          "id": "88f2bcc9-5e08-4bbb-a9e5-bf46f0d9e2ce",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "76c20047-f111-479f-8313-a0a1e847a2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edc63d0-b9a7-4c90-bb05-7d7d74b0ed18",
        "cursor": {
          "ref": "02f65877-b0ba-457b-9e00-741d1f20cad3",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "93bc978f-0c24-4a31-b103-a5bf5754a757"
        },
        "item": {
          "id": "5edc63d0-b9a7-4c90-bb05-7d7d74b0ed18",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b980cea3-d389-4563-ac51-b8c89b59e26d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1418,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cb9741-4ec4-4451-901d-cdc5cfba171a",
        "cursor": {
          "ref": "ad652204-449f-42e7-8953-5813e5e117f7",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fb574c5f-f3e6-4286-90c5-f754344e07c0"
        },
        "item": {
          "id": "23cb9741-4ec4-4451-901d-cdc5cfba171a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "edb5405e-1ba4-402a-aa16-b89a6ef725bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63062ee7-e76a-405d-987e-e37fd944f868",
        "cursor": {
          "ref": "bba839ce-fe2a-41f4-9c73-4ff0e234d763",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "488a98e5-1d58-4c91-953f-4413db013216"
        },
        "item": {
          "id": "63062ee7-e76a-405d-987e-e37fd944f868",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fc9364cf-faad-4c68-a4ad-742a598dc54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebc5e4d-679a-4d12-83cd-76d2e88cc091",
        "cursor": {
          "ref": "7e048e85-8d0b-405d-860e-23dcd033ef07",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0e476ced-fb15-4871-acb2-d8dcbee6576b"
        },
        "item": {
          "id": "cebc5e4d-679a-4d12-83cd-76d2e88cc091",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "13813f78-237d-428e-b478-9e6e609e8df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a046364-663a-4ccb-b052-2592f85bca9c",
        "cursor": {
          "ref": "f77203ef-59e1-41f0-87b8-5b282202cc01",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "02571a02-3d1c-4250-a8de-365c99d60dd6"
        },
        "item": {
          "id": "3a046364-663a-4ccb-b052-2592f85bca9c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3a6ba96a-3f50-4ae2-97cc-9dbe31e6f13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb53ec8-4e0c-4002-838b-a0a9b997484e",
        "cursor": {
          "ref": "5a1455ce-7a2f-4466-adb8-4f25b8fa139c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3f407619-023b-4e15-8776-e2c866422e0f"
        },
        "item": {
          "id": "6eb53ec8-4e0c-4002-838b-a0a9b997484e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0a9dc29d-4364-456c-804c-f9e10009e9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320ba39d-29e9-492b-89ba-fd7edb035fee",
        "cursor": {
          "ref": "e216ed5a-d9da-48ba-9a6a-07fe4817f3ce",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "78ddc52e-48d6-446a-a545-ef7c31364818"
        },
        "item": {
          "id": "320ba39d-29e9-492b-89ba-fd7edb035fee",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "682fc9ed-94eb-453f-85ee-e7675f674390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f036b936-fe97-4754-8aec-20ef5d4fb7f3",
        "cursor": {
          "ref": "ed0471e3-01b7-4eda-8dc0-a498b6a34c77",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bfc92513-b9c0-4a5e-9efc-ec9088f1e610"
        },
        "item": {
          "id": "f036b936-fe97-4754-8aec-20ef5d4fb7f3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f9a3d693-fe9d-417d-bd81-346a2fd32dad",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1435,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b023b5a2-68b2-4a30-badc-d1407678af8b",
        "cursor": {
          "ref": "1e5da89a-a5db-48e5-9a74-86eebf133f5f",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4fe1756e-3e3b-4c9b-b2be-8922ff087186"
        },
        "item": {
          "id": "b023b5a2-68b2-4a30-badc-d1407678af8b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2b6ae8be-6c63-440c-a0bd-b336676c1c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfb0602-1a60-4081-9a85-0cc97a2386fc",
        "cursor": {
          "ref": "31b9c424-bc22-4aeb-a8f5-a1c2dab52e84",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2eafa16b-7034-4f72-ad5e-7c0574ce73f3"
        },
        "item": {
          "id": "7dfb0602-1a60-4081-9a85-0cc97a2386fc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "19b787b5-efc0-444e-8a40-19fcb478add7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1447938-e8c0-4e89-ae87-6e11e494a35d",
        "cursor": {
          "ref": "b0583599-b2cd-4a28-a6e5-9a498a46eaaa",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b18c84f0-6720-48f6-a291-7b08f9fad3e5"
        },
        "item": {
          "id": "f1447938-e8c0-4e89-ae87-6e11e494a35d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b15e0610-6999-4499-a121-d48d5ebe4c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f297ad-59f8-4c26-9d1c-c88a1870630d",
        "cursor": {
          "ref": "55aa9fdb-f504-49b9-bfb1-e410bbab7184",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0500f763-69c4-410c-ba05-360e619aa715"
        },
        "item": {
          "id": "a3f297ad-59f8-4c26-9d1c-c88a1870630d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "41bc14aa-3a4d-4712-99d7-8da85bbedd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86a805d-1cde-4f5f-beed-12ab2ed74cd4",
        "cursor": {
          "ref": "aa72dc3f-3109-40b5-8b0f-5c220a3c37d7",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "632a5f49-8d37-42f0-809a-ec081298b76a"
        },
        "item": {
          "id": "c86a805d-1cde-4f5f-beed-12ab2ed74cd4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2fbf71c9-41e9-4a23-aac1-f2cfebdf6d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52df1cab-cdfc-4d0c-b067-2ec0a395dcec",
        "cursor": {
          "ref": "bee602ee-19c6-4626-b81f-e8666e48cdf3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aeff5be4-683c-4941-b34a-90364e8f315c"
        },
        "item": {
          "id": "52df1cab-cdfc-4d0c-b067-2ec0a395dcec",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "88fc4aea-4c19-4807-926a-01bf4cc340f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667e1ee0-2682-445b-a045-fbc783550318",
        "cursor": {
          "ref": "0c848843-60d2-4714-afc9-e2c986874edf",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4da22370-215c-42e4-b389-c21413667d65"
        },
        "item": {
          "id": "667e1ee0-2682-445b-a045-fbc783550318",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c056e97e-1692-4d9d-b3e3-e23dd0749d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3e7a53-de50-415d-abcd-3f8c6780c134",
        "cursor": {
          "ref": "012c31d1-a046-4675-905c-2df12ffde3e2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6b7814ba-9aee-4df6-a2d6-5ce5f7117203"
        },
        "item": {
          "id": "5e3e7a53-de50-415d-abcd-3f8c6780c134",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "61a6f3c1-872f-49cd-832f-c967fc575987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb2de29-045d-46c6-b5b6-0700dc6ea289",
        "cursor": {
          "ref": "ff816787-e289-4042-82a5-aec11c5606ea",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cc8454cf-d3e9-4e41-90ef-30d0bf7e92e8"
        },
        "item": {
          "id": "cbb2de29-045d-46c6-b5b6-0700dc6ea289",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "111f3ac1-b12d-4afd-978b-586ef4220539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dadefd0-1e18-4606-8633-00e85bafeed1",
        "cursor": {
          "ref": "6f521068-e765-44d3-a9d7-19675e09750f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "194bd8ab-7576-4f43-bcba-30d012159b8f"
        },
        "item": {
          "id": "4dadefd0-1e18-4606-8633-00e85bafeed1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4c88c2a2-c1c4-45b1-8ab8-bcc1aa419338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b2fb7c-9944-4161-beeb-99279f0e1a89",
        "cursor": {
          "ref": "ce18a7ca-4b07-4027-80eb-861a8306686f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8887a8ea-bea1-4f39-9f30-f87d239d84eb"
        },
        "item": {
          "id": "48b2fb7c-9944-4161-beeb-99279f0e1a89",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "31734768-6ab1-4556-84c1-a5a8c8aa84f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842decd3-ab5e-46ae-8728-5c8c691e8482",
        "cursor": {
          "ref": "0654be68-13d1-4370-912c-63ded25b020b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6646ece2-c7c5-4468-8b2b-7632ef073478"
        },
        "item": {
          "id": "842decd3-ab5e-46ae-8728-5c8c691e8482",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3c924f9b-2202-42eb-8979-d6f02ef37f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fa3fae-b050-40ea-80e2-8cd0d5a0c4d3",
        "cursor": {
          "ref": "c112ef36-13c1-4a56-b12d-630eb4b69e0d",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9e0c01c8-db45-4266-a26b-d0d5a9ea7844"
        },
        "item": {
          "id": "a8fa3fae-b050-40ea-80e2-8cd0d5a0c4d3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dae957aa-9505-4bb6-97c4-e7b29c3eda57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4f3d78-3402-4a63-8b12-e5f0ffde8c14",
        "cursor": {
          "ref": "3355b3b0-90f1-49d8-bcf6-eae7a63791f5",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c1d7da8e-65b8-4f24-afda-d1d7dcea9a99"
        },
        "item": {
          "id": "8c4f3d78-3402-4a63-8b12-e5f0ffde8c14",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cf674cb9-ca6f-4315-bb70-c95bf34c59e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ecc597-d86f-469b-9672-2ff467679f53",
        "cursor": {
          "ref": "9a864e33-5bea-4469-81a2-fb5b59e0f50b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4f4358c5-05cb-43ed-9d3e-492d76edac90"
        },
        "item": {
          "id": "10ecc597-d86f-469b-9672-2ff467679f53",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c1d356e6-6476-4307-96d1-61e048994dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150fa65a-7ab6-42b9-8734-df5faeff14ce",
        "cursor": {
          "ref": "507ff65a-b779-4e35-a14f-1f7677c92dac",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "87adf2b6-ab73-4802-b65b-02c00b904fba"
        },
        "item": {
          "id": "150fa65a-7ab6-42b9-8734-df5faeff14ce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2b5e29b5-d94b-4a87-b285-68587aaa4672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d0b0af-0858-4be0-82bb-4e13370d75cc",
        "cursor": {
          "ref": "70cf8b3b-2bb0-419b-8f97-3771e7b936da",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6c012a81-68eb-4556-a463-958ff5f9ea86"
        },
        "item": {
          "id": "61d0b0af-0858-4be0-82bb-4e13370d75cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a6055ebe-5cb6-4cc6-835a-3693ada90752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3658aa-cfe1-4351-8325-668f964505cf",
        "cursor": {
          "ref": "fd051955-a353-4d70-a229-1fb41126336c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9aea339b-abd0-447f-98b4-2c6dc7ea561a"
        },
        "item": {
          "id": "9d3658aa-cfe1-4351-8325-668f964505cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b85adf47-6ab9-4441-a96d-0061ce5eb30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211e41bb-e9d2-4999-9dd1-fb8dbf2be3a7",
        "cursor": {
          "ref": "33a55541-4261-4fd1-bbb9-3bac30696281",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8af77114-8835-4a48-b9c7-b95712dcb684"
        },
        "item": {
          "id": "211e41bb-e9d2-4999-9dd1-fb8dbf2be3a7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "debe049c-2b9a-4a08-a91d-6094d7827512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4cf561-a491-486f-9793-8198982e9226",
        "cursor": {
          "ref": "b890e0f0-6d15-4073-96ac-367139251cde",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5a743d47-ef27-4371-974a-a08467c466e2"
        },
        "item": {
          "id": "2d4cf561-a491-486f-9793-8198982e9226",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3cad46a6-3c9a-4887-9451-777c1ad71493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d824ad3-fedb-44d9-bbf4-be4ce0d6160c",
        "cursor": {
          "ref": "96f57011-9e8b-44ec-821c-c5662d1642d3",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d167fb4f-8ba5-4ff8-806d-8b1657980c6d"
        },
        "item": {
          "id": "1d824ad3-fedb-44d9-bbf4-be4ce0d6160c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d3d2e31c-4180-4ee4-857f-04f4120e2dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f7343b-d8ae-4d78-bb07-0e6c49326a42",
        "cursor": {
          "ref": "e3c2727d-671a-4daf-92eb-82ec6a5ddf82",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "839c7090-86b0-4856-abf5-0984dbf3ed37"
        },
        "item": {
          "id": "19f7343b-d8ae-4d78-bb07-0e6c49326a42",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fc53f08f-dc38-43d3-be65-76ca8d14e7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33562bef-773f-4a15-ae5d-7b1384956102",
        "cursor": {
          "ref": "4a9354f7-009f-4b89-9d61-f04055170d94",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7c776858-d4db-47ba-b909-824e018bebc6"
        },
        "item": {
          "id": "33562bef-773f-4a15-ae5d-7b1384956102",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "397d44de-02b8-478d-9449-c6273ef983e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b78c445-cf0c-4d76-ad33-6873755a0076",
        "cursor": {
          "ref": "987e9af3-81ca-4ad2-a76d-c30fe20baede",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d19e7e87-4eb3-4340-83f6-d83923572fb9"
        },
        "item": {
          "id": "0b78c445-cf0c-4d76-ad33-6873755a0076",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8ef18017-19b3-4411-9376-f2606e6615be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf77283f-bd1f-41c2-9176-6e89a0c138e8",
        "cursor": {
          "ref": "c302d486-b0fa-4299-a9dd-a7dda223544e",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9087cc29-c5aa-4a6b-a64f-eafabd224ec9"
        },
        "item": {
          "id": "bf77283f-bd1f-41c2-9176-6e89a0c138e8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f67af6c1-37fa-46ff-88a0-231b0d0658e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8ac052-525f-471d-90d7-89ff910af0b9",
        "cursor": {
          "ref": "fb6f325d-1575-4350-a8f8-23c79ef3bfa1",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3e9a0407-0c60-4377-9a06-fd4fcb526447"
        },
        "item": {
          "id": "8f8ac052-525f-471d-90d7-89ff910af0b9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "409fe492-b452-4197-9bb0-b8ca14afc85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f722275-8127-4f5b-b829-cd956ce0176b",
        "cursor": {
          "ref": "3ce566aa-721b-4317-a40d-ead3edc45dc2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "81927d22-3e31-4b69-902a-ac4ebd9f529f"
        },
        "item": {
          "id": "5f722275-8127-4f5b-b829-cd956ce0176b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fea2fd53-dc66-46e2-b97f-e623d8bb0eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a344c573-0ba6-4555-ba7e-afeb2cf7e168",
        "cursor": {
          "ref": "57f29bde-4d9e-4e7c-9403-e485e56018a3",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5efd2c6d-369b-41d8-a879-2bb8d6051555"
        },
        "item": {
          "id": "a344c573-0ba6-4555-ba7e-afeb2cf7e168",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3088444e-0b3c-409f-8636-9b1b3f8d7ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac06dfc-8040-4030-a435-4caf0639dfae",
        "cursor": {
          "ref": "229ac4c8-54a3-4c23-88c7-4e8fd384486f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e4ba790d-0f3c-480c-97a5-b5aad74b6d30"
        },
        "item": {
          "id": "5ac06dfc-8040-4030-a435-4caf0639dfae",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a8f7a8b3-1688-476c-b2d5-f7a6f487862b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e6e747-be46-4bf2-9582-e882968e2935",
        "cursor": {
          "ref": "c7560827-8021-480b-9f81-1a9ad3445b01",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4b0fb3f1-5ca3-45ee-97ef-947a856474d5"
        },
        "item": {
          "id": "d5e6e747-be46-4bf2-9582-e882968e2935",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "891d9d42-9771-48c2-9364-e084a9fefe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034299d2-39d4-4821-8ca7-6bf573c3727c",
        "cursor": {
          "ref": "bd1eea61-c26e-4ecb-a8bc-bff15314ee57",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9000f3a8-8957-46a4-bd18-c0d14c9dcb24"
        },
        "item": {
          "id": "034299d2-39d4-4821-8ca7-6bf573c3727c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f0e59578-159f-495c-a474-a54dbfe25eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fdbd02-533b-4746-a018-828d3c079bd6",
        "cursor": {
          "ref": "940faf67-b056-4c38-ab62-1f8285f4ef5d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "60120fc5-10ab-42a0-a1b8-edb3253066f4"
        },
        "item": {
          "id": "95fdbd02-533b-4746-a018-828d3c079bd6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e9076979-62c1-41a9-9666-863e0a7279bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cca121-9163-4f5c-a8f8-a969baecf517",
        "cursor": {
          "ref": "757f4300-8558-40e8-8c37-64cc293cd8f1",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6f24f941-f879-402e-b155-2a014e81671e"
        },
        "item": {
          "id": "82cca121-9163-4f5c-a8f8-a969baecf517",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4fa2b813-2905-4828-8659-bc8ceb67a7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085fc6df-31f7-4c77-840b-1f6f06256176",
        "cursor": {
          "ref": "a563604d-760a-46e0-842d-c393976f2f06",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ca235a22-a9a0-469d-88b3-4d12911be62a"
        },
        "item": {
          "id": "085fc6df-31f7-4c77-840b-1f6f06256176",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "75e885e9-995b-413d-ac93-507881b025dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f51ba5b-9171-4ede-91f6-5d80ae09a7a3",
        "cursor": {
          "ref": "bf639a3f-0d16-4e55-bac7-739307a58159",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "537538cd-31f7-4162-99b8-4c663d0bf015"
        },
        "item": {
          "id": "1f51ba5b-9171-4ede-91f6-5d80ae09a7a3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "966830c7-1c22-4d4c-aecc-ec336d0dbf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c439ef6c-e578-4ae6-8ae9-5a33379cf1c0",
        "cursor": {
          "ref": "292b5c3a-5906-49e8-b36e-5604dd8da2cf",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f989b22d-2c87-4354-945f-8ccc8abb9be1"
        },
        "item": {
          "id": "c439ef6c-e578-4ae6-8ae9-5a33379cf1c0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4e00c62d-6136-446a-84ec-a8ba89c7c7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f329586-042f-4e1e-b0ad-471103279fe7",
        "cursor": {
          "ref": "2b91f025-2196-473e-a595-e57f16b48c0e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "242c1494-4616-4b39-a3fe-8ed7ca3513c9"
        },
        "item": {
          "id": "9f329586-042f-4e1e-b0ad-471103279fe7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1f617645-5003-4256-b5b6-0f68cb6fa30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a58c6e-e420-4a66-b410-5733a1a98bd4",
        "cursor": {
          "ref": "be3e9fdb-9ce6-4d00-818f-471f9351adeb",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "aef8cdd9-7a97-43f1-9e3b-cb080521ed54"
        },
        "item": {
          "id": "f6a58c6e-e420-4a66-b410-5733a1a98bd4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1f411739-4648-46ef-85f1-f82b31995843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3eceda0-2e61-40c0-901d-f7a7ca94bd87",
        "cursor": {
          "ref": "1fb030ad-7ab6-4447-bc99-ff82c7d8d018",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7beedc36-0be8-4dab-83e2-d929a9065051"
        },
        "item": {
          "id": "d3eceda0-2e61-40c0-901d-f7a7ca94bd87",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "481aed8b-016d-42e9-bbfc-0f01a9d6cf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925da33f-9050-4745-8bc5-8a284067038b",
        "cursor": {
          "ref": "c4ffb944-0592-4135-9132-027dc60fd629",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d99a36bc-b879-4776-bb2a-5b52f105d138"
        },
        "item": {
          "id": "925da33f-9050-4745-8bc5-8a284067038b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f95093be-efeb-4994-99b9-9afb2191c304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615d1813-8541-472a-a7c8-74c221b570a7",
        "cursor": {
          "ref": "2aea164a-e8be-4d2b-91a6-1c492af81521",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b6af0d50-d0f8-4a76-87bd-d17979362a86"
        },
        "item": {
          "id": "615d1813-8541-472a-a7c8-74c221b570a7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7d883e79-67d5-420b-9b21-0d20af53966c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591c2f58-4a8f-4654-9045-af4aed90fe1d",
        "cursor": {
          "ref": "551e64a0-306c-4498-a0a9-36766a86358b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "297a6e59-b13a-4a35-8d9e-32a296a35d8c"
        },
        "item": {
          "id": "591c2f58-4a8f-4654-9045-af4aed90fe1d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "343e7c15-7c75-4cc1-a6ec-9890704d9cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ad33d5-97eb-4bd8-a082-376ec5081f95",
        "cursor": {
          "ref": "b2cf5568-511d-4804-a105-5b6935870de7",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8c441370-1b7d-45ff-bc3d-ba31501782f5"
        },
        "item": {
          "id": "67ad33d5-97eb-4bd8-a082-376ec5081f95",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "11d7653f-9ac1-4650-86f7-05c83365fa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca329b9c-57ef-41cd-a5ca-8a099a7974f0",
        "cursor": {
          "ref": "e888fc94-1d47-4ce7-a52e-b38e944ec85a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6a07c8a7-e98f-40de-be81-3bdaa0edf433"
        },
        "item": {
          "id": "ca329b9c-57ef-41cd-a5ca-8a099a7974f0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "367df7de-a823-484b-a8ce-cca600914ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6990c67-da8e-48ed-8139-d03ff1e7236f",
        "cursor": {
          "ref": "ff14cfb4-f4a9-4527-a01e-1d4b3c0877fd",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "24632dd9-76a2-4ad9-b77e-d27eb9fdcef4"
        },
        "item": {
          "id": "f6990c67-da8e-48ed-8139-d03ff1e7236f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ca3ba576-f0ed-4d5a-9865-417a42ec2880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dc3516-4f5a-4c83-a830-4893a3612a26",
        "cursor": {
          "ref": "d2af1503-6200-4aa3-908c-e740dd2e56ca",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0fb0bddd-32c2-44a8-8831-7f970aa57029"
        },
        "item": {
          "id": "c7dc3516-4f5a-4c83-a830-4893a3612a26",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bdd99fd0-d8bf-49e0-8d54-81221e3e7010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8010395-bd13-4eae-aa7c-5c29de3a9110",
        "cursor": {
          "ref": "c63f5d31-5194-4fe1-9d1d-f758ed7f80ad",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "efc94e4e-1e53-4654-b6e2-fbf77fd2d472"
        },
        "item": {
          "id": "f8010395-bd13-4eae-aa7c-5c29de3a9110",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "47e1ccf3-c1ea-4f66-bfc1-b93d30173950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef0fa19-05cc-4fba-92a0-544c9563676b",
        "cursor": {
          "ref": "757d3b1d-fed0-4011-b33e-7f172721991d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5fed814f-b587-4fe0-a65f-dea4bb1304e2"
        },
        "item": {
          "id": "4ef0fa19-05cc-4fba-92a0-544c9563676b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "597598af-35e5-417f-b522-665e804f7224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec79a467-c117-425a-8b94-3c2b04268455",
        "cursor": {
          "ref": "570b40fe-264c-484e-a842-fa3d3039fb56",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4fafe492-4b73-4403-80fe-bd0d43141a4f"
        },
        "item": {
          "id": "ec79a467-c117-425a-8b94-3c2b04268455",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "221ef578-972d-47bf-8570-7c6515f71c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c441c3-5205-46b2-a462-8cac34ac5f42",
        "cursor": {
          "ref": "f2907fbd-92ce-4092-a5e3-9fefb5d0a52b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1beab38d-a921-4803-804c-41c72ccac81c"
        },
        "item": {
          "id": "00c441c3-5205-46b2-a462-8cac34ac5f42",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6a61e4c7-0e48-4d97-93c1-c06c810bc98a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f3f83d-9464-46fc-9752-3b4349109895",
        "cursor": {
          "ref": "7a7c8a8c-10de-4d96-8617-334f2dea713e",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fbf0754e-640b-4261-9672-e5ea306942ac"
        },
        "item": {
          "id": "b8f3f83d-9464-46fc-9752-3b4349109895",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e0f1bcc3-8eba-4664-bd97-edecc8421c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3ab7f0cc-79c2-47fa-a4e5-a662537e67b5",
        "cursor": {
          "ref": "7c73d975-3d29-4642-b63b-12eac414cfd5",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "641b2801-cd6c-4408-9ccd-8aab9f9b892b"
        },
        "item": {
          "id": "3ab7f0cc-79c2-47fa-a4e5-a662537e67b5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2125fa0b-d448-4821-a7fb-e697453697f6",
          "status": "Created",
          "code": 201,
          "responseTime": 8819,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "df29985d-3ad7-43b4-abe4-c98d65ac6ded",
        "cursor": {
          "ref": "9452b023-6245-4ccd-8128-2a8933e31bc9",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e7789b82-b221-4307-a6fa-ab1f3c4ff497"
        },
        "item": {
          "id": "df29985d-3ad7-43b4-abe4-c98d65ac6ded",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a6196ed6-390a-4565-8ed4-392054ef7cdd",
          "status": "Created",
          "code": 201,
          "responseTime": 8091,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ae4f70-db59-4cd4-adcd-e190f49a357b",
        "cursor": {
          "ref": "f4f47e88-61c1-43c0-9a6e-20698f6adfac",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2b75beb4-b71f-49b2-8aad-e8249c2a81ee"
        },
        "item": {
          "id": "50ae4f70-db59-4cd4-adcd-e190f49a357b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8f12a5f9-7bd0-498a-ade3-58242440f029",
          "status": "Created",
          "code": 201,
          "responseTime": 7904,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "860cf6fa-e863-487a-8465-0c12054e31ce",
        "cursor": {
          "ref": "b1c0238d-6c35-4686-9269-eb65c4aaabcc",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "843f191c-5760-4f9e-b501-4b68e8498444"
        },
        "item": {
          "id": "860cf6fa-e863-487a-8465-0c12054e31ce",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e94ba027-0d1d-41a7-8240-e2b75944ae33",
          "status": "Created",
          "code": 201,
          "responseTime": 8656,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef9309b-5278-4ea5-ba10-9db4bfff84d0",
        "cursor": {
          "ref": "c1112d7d-e96e-4e4a-9b72-70dff7c02135",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "255310e9-9cea-413a-bb8f-13186ee8816e"
        },
        "item": {
          "id": "0ef9309b-5278-4ea5-ba10-9db4bfff84d0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "895cdaed-c78d-4b90-a84b-ef742a1ae5d3",
          "status": "Created",
          "code": 201,
          "responseTime": 7600,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90be3c0-2699-44ee-907d-c3e1bcdb7fd7",
        "cursor": {
          "ref": "855a1fef-a508-4ff6-878c-8628469d05c1",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "579019ca-2229-49ac-9425-a79f853744bc"
        },
        "item": {
          "id": "b90be3c0-2699-44ee-907d-c3e1bcdb7fd7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c3d73c27-e85c-4146-ab35-6dd837962b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "cbe80f21-8ecc-4ded-8af8-c363a94c21ad",
        "cursor": {
          "ref": "8becab49-cc4e-4c89-95bc-1793c85119a1",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "aba332ea-7d99-491a-9e1f-6d5aa060e4f7"
        },
        "item": {
          "id": "cbe80f21-8ecc-4ded-8af8-c363a94c21ad",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "db8251cb-3a12-44fb-a484-36b5fea4e93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74edc21a-e7e4-4143-a4e7-09857aa2f211",
        "cursor": {
          "ref": "06a5f84b-d704-4904-91e4-ee50eff25aa9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8dfe1559-d6e3-4a77-b16b-70495233d7e1"
        },
        "item": {
          "id": "74edc21a-e7e4-4143-a4e7-09857aa2f211",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dbb9f1f7-c954-4c98-86a4-cb2abccb0d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179620d3-bf83-4b84-8adc-b9a2447d49e3",
        "cursor": {
          "ref": "705323de-3ada-4ceb-b596-c8904158d379",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ee0ee41f-3ea6-4d37-9824-d9d69d3e0fdb"
        },
        "item": {
          "id": "179620d3-bf83-4b84-8adc-b9a2447d49e3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "283b9b84-13f8-4f40-9336-b25f8d431c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feed91b2-2858-44b2-8680-747b9c25abbd",
        "cursor": {
          "ref": "782e40b4-d986-42bf-8cea-5ec7ab4ad38f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "675f9403-a1d6-4248-9059-5eb473986456"
        },
        "item": {
          "id": "feed91b2-2858-44b2-8680-747b9c25abbd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "81c5748f-095c-4335-9ede-051affebe3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2e569a-1002-4f19-b751-e49f8231be6d",
        "cursor": {
          "ref": "e012df11-9768-4ffb-92e9-4101ffabb0fa",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8c8dff0c-04ae-4e15-baec-3836eacd8257"
        },
        "item": {
          "id": "de2e569a-1002-4f19-b751-e49f8231be6d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "792c0b3a-010e-417e-beb5-d8f6f9b8f020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe798b6-5a73-42ae-95f9-12ef838672ca",
        "cursor": {
          "ref": "69bdfded-2178-4895-86d4-b533359150b3",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1e7ffc5e-f7d0-4ecf-931d-20b70c5a1aa7"
        },
        "item": {
          "id": "cbe798b6-5a73-42ae-95f9-12ef838672ca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "367cfebe-ec57-4f31-b379-b2c2f628521c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6c8e92-05cb-46d1-8304-a2b940af03e7",
        "cursor": {
          "ref": "5bd6038c-0839-434d-8996-cb6b3e34df13",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8fe576e0-667a-44e6-a1bd-fd6c5c9258a0"
        },
        "item": {
          "id": "ab6c8e92-05cb-46d1-8304-a2b940af03e7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d33d14de-fe57-4630-a2ae-54b9296537d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53008387-6995-43d6-8105-3e0c16542e1b",
        "cursor": {
          "ref": "1e4f601c-81cb-4772-b299-8e8e7c955e5f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8b7523e0-98e2-4b53-9a34-7b840ee965e9"
        },
        "item": {
          "id": "53008387-6995-43d6-8105-3e0c16542e1b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "046f1cf0-4712-4320-a6cb-e59cff3a5947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1f2321-3d31-4bb1-bb56-02434284c25b",
        "cursor": {
          "ref": "6580fbc9-3227-4c87-93c1-c914969cb947",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "41303ff6-d1dd-4e49-943b-381fc4d27ca6"
        },
        "item": {
          "id": "fc1f2321-3d31-4bb1-bb56-02434284c25b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "26799733-2fa8-4caa-9a51-de4a06ff45fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbffcee-1eec-4686-8220-1758ac08b3f3",
        "cursor": {
          "ref": "2e366c82-5df5-439d-933d-fa81543d6932",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d122f376-ae1f-40dc-88a3-7f09ee928798"
        },
        "item": {
          "id": "0fbffcee-1eec-4686-8220-1758ac08b3f3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2b53baaf-b7e3-4747-869a-2e1ff03a6843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaabd98-5264-43f8-a0af-897aefcb8b19",
        "cursor": {
          "ref": "56bf5020-121e-48c4-ba17-4a4d6561b038",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "561a8449-9251-4abb-b636-64a1243c470b"
        },
        "item": {
          "id": "fcaabd98-5264-43f8-a0af-897aefcb8b19",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "77bf1f2c-90bf-4429-94d9-878637f18693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69b642a-85d1-4836-9391-3ca2c8744da0",
        "cursor": {
          "ref": "6651d6a7-431b-49e9-be9e-f43c073d37cd",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ed950146-449a-41af-8f70-3e4b8aabce67"
        },
        "item": {
          "id": "b69b642a-85d1-4836-9391-3ca2c8744da0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d830441c-33c5-4cee-b204-1e6db6608ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e68057f-4e84-4a4f-a97d-ee527969b6e2",
        "cursor": {
          "ref": "7ba98ab3-b313-4e65-a586-6ee97f4ca9fa",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "12597521-e1a3-40eb-875d-e093d7f34f1e"
        },
        "item": {
          "id": "5e68057f-4e84-4a4f-a97d-ee527969b6e2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d316aaae-19f5-47f3-baed-996c2a50c257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95263fe6-f692-434d-ae1d-8f1da356f200",
        "cursor": {
          "ref": "1b746447-0b73-4712-a2eb-138f1170e9e2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2bd70c45-ff82-4636-a83b-3f8ea2e2ee83"
        },
        "item": {
          "id": "95263fe6-f692-434d-ae1d-8f1da356f200",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "76bd5d65-69f8-46ea-b038-0b403798aed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0216f487-b57a-4578-9d65-ef63e449c93d",
        "cursor": {
          "ref": "76a18b8c-3226-4230-9946-1d25c04c53aa",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6a468916-adaf-438e-8e4c-0168d496eaf7"
        },
        "item": {
          "id": "0216f487-b57a-4578-9d65-ef63e449c93d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b6ab231c-666b-41e9-95f1-6356ffaabdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d4ce5e-611f-4b62-a5e8-5c741891ff07",
        "cursor": {
          "ref": "b8b0a063-2785-4d64-a885-5d8ac505894b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7c361494-66bf-4db9-acc8-0e102014bc5a"
        },
        "item": {
          "id": "c3d4ce5e-611f-4b62-a5e8-5c741891ff07",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "90475895-2ec6-4638-be87-4df8f2aa94a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8671bed5-513c-435d-ae77-1506166b8b20",
        "cursor": {
          "ref": "6a5bc437-1fde-4a81-9e48-919931cfa363",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0499a3ef-28a5-4121-a384-1388da987bfe"
        },
        "item": {
          "id": "8671bed5-513c-435d-ae77-1506166b8b20",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a535206a-b73b-4603-8cd8-92c438458f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b10a53-24e2-4b86-8021-1a51b5d93531",
        "cursor": {
          "ref": "f036bcf8-fdfa-4b0b-bf2d-de4ce7c4a9b0",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d520ff85-d381-43e9-bfd3-32ed84de134c"
        },
        "item": {
          "id": "e8b10a53-24e2-4b86-8021-1a51b5d93531",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d13e023b-98f0-4632-aaaf-13aead596524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6f376d-4f21-400f-ad9a-4e0265720cab",
        "cursor": {
          "ref": "c4f27df0-7eab-478e-989f-3459b4c4709f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5237060d-d1d5-4171-a337-bcf7cf1a33cb"
        },
        "item": {
          "id": "ca6f376d-4f21-400f-ad9a-4e0265720cab",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5cc02366-2274-4fe9-a51c-db3b0381e0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41ad472-1a89-405e-9520-5a9d2d167350",
        "cursor": {
          "ref": "1ddacfd9-7e59-4ab1-b6ad-d6800b9bd0f5",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a6676b33-e69d-4189-a2c4-b0523ea45f11"
        },
        "item": {
          "id": "e41ad472-1a89-405e-9520-5a9d2d167350",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e6b87036-79c1-49e4-a3e2-114d96a5a1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92994fc-6fa5-4a63-a7da-d74324284411",
        "cursor": {
          "ref": "3998a26c-e7d6-4a9b-9067-009608b96d40",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "af85e3dc-82ba-43e5-8548-6d90f82ee46c"
        },
        "item": {
          "id": "e92994fc-6fa5-4a63-a7da-d74324284411",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a45b2281-a1a1-4a80-9275-b1a9924925d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3d9570-8bc2-48af-bd69-6eff403c0017",
        "cursor": {
          "ref": "cb4cd8a2-ec2a-4e4d-95ff-a40a89000b83",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4c169e19-772d-4abb-9dc0-cefc6439e80d"
        },
        "item": {
          "id": "9b3d9570-8bc2-48af-bd69-6eff403c0017",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b301f7d1-bf1a-40e2-be43-5b3370ff7b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb1fcaf-a140-4ab1-9ab1-ce07de26b180",
        "cursor": {
          "ref": "b738a706-f47f-40dd-8684-c1f25a7e084f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "de0230ab-a828-422a-bccc-042da21fb5e4"
        },
        "item": {
          "id": "cfb1fcaf-a140-4ab1-9ab1-ce07de26b180",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4821ce26-6b1f-4f1a-9ff3-bfadfa5c14bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fc6b84-8399-41f4-8252-a9b741f2e986",
        "cursor": {
          "ref": "0194b3e9-95c1-482b-b2bf-f1a75be5aff8",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0f4485b5-fb0e-4d02-a3d5-7dfd6b27f1f8"
        },
        "item": {
          "id": "44fc6b84-8399-41f4-8252-a9b741f2e986",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "eae61814-ee6f-4b6a-98a4-33c079a3e357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777929a2-01f8-45e2-9c91-a0f581aec569",
        "cursor": {
          "ref": "9d1a5457-aba1-4f4f-9baf-2eabf39e28f3",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "38c0707f-d03c-4604-952a-0b149237dede"
        },
        "item": {
          "id": "777929a2-01f8-45e2-9c91-a0f581aec569",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9d7119dc-19d3-4905-9761-21d2239ad4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb0f340-5330-4645-82a1-f1a32b445e6b",
        "cursor": {
          "ref": "0c664baa-07bc-48ef-af86-cbf1c11d0b7a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "080e1c7a-428b-4d0d-9e87-05a299c5a44d"
        },
        "item": {
          "id": "3fb0f340-5330-4645-82a1-f1a32b445e6b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "507ef18f-dc0f-4d91-a471-d0066558f44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a24578-76a4-46f6-88c7-2cb50da14c3c",
        "cursor": {
          "ref": "23e70e86-8bae-4ba4-bb21-0996eb5a5aeb",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0391c9b4-ae6d-4290-8a53-8a0e2a970e1d"
        },
        "item": {
          "id": "10a24578-76a4-46f6-88c7-2cb50da14c3c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "743c0cff-9a8b-42a4-93cf-105f53fa61dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9515342a-3d77-4ba3-ad0a-7d6ffae57034",
        "cursor": {
          "ref": "f2fc6092-692f-4241-8463-b304976020a3",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1deca8af-7b01-462c-bfdc-db6afa8fa173"
        },
        "item": {
          "id": "9515342a-3d77-4ba3-ad0a-7d6ffae57034",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7f0fe801-4ae3-4a01-a930-9499f66093d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4923dd92-a680-4bd6-937e-58d3cb1281d5",
        "cursor": {
          "ref": "ac6282a3-b797-4f4f-a97a-282fa1884036",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7673f33d-63ea-4af7-ae3a-a68ea6915a83"
        },
        "item": {
          "id": "4923dd92-a680-4bd6-937e-58d3cb1281d5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e76ea407-f747-4d6f-ae56-99b97158e8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9469808-fd87-4340-9567-e5969fa0104c",
        "cursor": {
          "ref": "11aaaa0b-23ff-422d-bc43-52eb623fbaa3",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "887c6a51-0df8-4c9d-85a5-0a1bf6667a72"
        },
        "item": {
          "id": "c9469808-fd87-4340-9567-e5969fa0104c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e6901573-1fd9-4434-a251-30d7aade9d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062566cf-b88b-4665-be19-c03aabd218a4",
        "cursor": {
          "ref": "582588c6-744e-493c-b9af-5338d92c00d0",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f916ed7a-13e7-4552-98f4-2c60ad5028c5"
        },
        "item": {
          "id": "062566cf-b88b-4665-be19-c03aabd218a4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2d9f5d03-53cf-4fd2-9e3b-2319a41efc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbdc4a8-cb15-4d25-887f-ec77a3ea6ebf",
        "cursor": {
          "ref": "51c33607-d9e3-467d-bce1-44ef8675d55c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f64452e2-f8db-42ab-8528-f7d2b63c577e"
        },
        "item": {
          "id": "0bbdc4a8-cb15-4d25-887f-ec77a3ea6ebf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2ef84c0e-ae4c-4164-b4ec-dd10d997cd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1b0240-7909-4068-a17d-a18cbe0e52aa",
        "cursor": {
          "ref": "1a000f1e-708f-4a88-a21a-c938172d1e70",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9b25da8d-8b3c-46c7-9179-6e43fd405406"
        },
        "item": {
          "id": "dd1b0240-7909-4068-a17d-a18cbe0e52aa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7094bddb-6904-4ed5-a622-5de49b27c6f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddd9d31-4924-49b3-9a9e-e8f8ec70d31d",
        "cursor": {
          "ref": "5b128ec4-9fe1-4d1a-a488-c3f3e7ab0af2",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "23a58620-7642-41ff-b19b-97be32783e35"
        },
        "item": {
          "id": "7ddd9d31-4924-49b3-9a9e-e8f8ec70d31d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "13c13f39-78c6-419e-82f5-7fed3e831beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3eb798c-2511-4c74-bb54-fb0db03233dd",
        "cursor": {
          "ref": "e6933af9-0cb6-488f-b103-24e215823b97",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "888c1b34-13c5-437a-994e-162dd4853232"
        },
        "item": {
          "id": "b3eb798c-2511-4c74-bb54-fb0db03233dd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "463e586a-1d9a-4668-95f7-d37dbbfd5686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3857fc6-5640-4b70-b7a1-c6dbe22b115f",
        "cursor": {
          "ref": "bfde2b51-ba8e-4e91-9abb-9d82251edc12",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fccff237-861d-4fbd-a844-cdc956055c4b"
        },
        "item": {
          "id": "c3857fc6-5640-4b70-b7a1-c6dbe22b115f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ce280aad-26a3-4a39-872b-b48447e82999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b2111c-2385-4db0-a8e8-5f9486fbabdc",
        "cursor": {
          "ref": "f90fc1a7-4932-4028-b3e6-5b57d89edbdf",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "21aeb613-4b42-4d64-ba0e-d0ceabd65e5e"
        },
        "item": {
          "id": "a3b2111c-2385-4db0-a8e8-5f9486fbabdc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fa5ef54f-78bb-4f1a-9f4d-41cf0d4f9746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbf77ef-974e-4d86-bb07-1b696a6b43ad",
        "cursor": {
          "ref": "37909803-21da-486b-ad88-6c9d2bbd5de3",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8cb1280d-4b75-426f-b581-d4d51a8f6f64"
        },
        "item": {
          "id": "6bbf77ef-974e-4d86-bb07-1b696a6b43ad",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f8d9f54f-dec1-4e98-b8b1-9b7424809934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea952fc0-6da7-4e91-bc6b-dc4998274e8f",
        "cursor": {
          "ref": "09319b26-9e0c-451f-ab97-e91b6b5be229",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "26dbca0f-847f-44df-aafb-457d8a02dbe2"
        },
        "item": {
          "id": "ea952fc0-6da7-4e91-bc6b-dc4998274e8f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a058af35-4c26-4423-8ded-bd1d93555465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac471e19-8a8b-455c-9538-64d9566342d7",
        "cursor": {
          "ref": "c4bf1c8b-d1d3-404d-8d1b-a88a4fda097f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a7e8ddf9-0ffe-4fb4-a72f-4f2602329f84"
        },
        "item": {
          "id": "ac471e19-8a8b-455c-9538-64d9566342d7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f3dae986-fc22-442e-80b7-c6fbb650f297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecd92f6-8ca5-462a-a827-9a2f13216959",
        "cursor": {
          "ref": "7065b3a5-f006-48af-9aa6-4d111d22820e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "323903e7-0328-4143-a0fa-252a0786ea8d"
        },
        "item": {
          "id": "4ecd92f6-8ca5-462a-a827-9a2f13216959",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5fe6140e-0917-4040-a7da-311072e6f575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc420af9-a603-4e2c-9815-65ff0b4961db",
        "cursor": {
          "ref": "7de5293c-47ee-4020-8654-081df48c639c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "11ebccff-9709-4f57-95f2-647f52169776"
        },
        "item": {
          "id": "bc420af9-a603-4e2c-9815-65ff0b4961db",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ca9319cb-46d7-4ecb-9bda-d27c134a1d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d32f1e-28c5-456c-b7b8-886d68fa2a0a",
        "cursor": {
          "ref": "8005efd1-0a92-46d8-a7bd-ff355df6e6ba",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bf6abbdb-9bc6-4c53-98c0-c7cb65526f06"
        },
        "item": {
          "id": "99d32f1e-28c5-456c-b7b8-886d68fa2a0a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b8792105-2f3b-4306-9c90-c4c58b5b8dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5889bf-b9a9-4298-aa79-7e4395226386",
        "cursor": {
          "ref": "79bd6ee8-d2f4-4a2a-a9a2-88953b80633c",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2f2c3b57-3e97-4ab6-be40-2b3ffb15b5ec"
        },
        "item": {
          "id": "ac5889bf-b9a9-4298-aa79-7e4395226386",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "45f72bb6-51fe-4f6d-9b62-ce9ce66205f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08685eb-3615-4ad9-bb8a-03588b276129",
        "cursor": {
          "ref": "8924fee2-49dc-4e3b-b7a8-77edf9ff51da",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "81ab614b-12cb-4f8c-b715-e7be941d9257"
        },
        "item": {
          "id": "b08685eb-3615-4ad9-bb8a-03588b276129",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d4295d85-6890-47e8-9234-3355ff8fbb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e2939f-cfb3-4186-b7f4-a3f905695c47",
        "cursor": {
          "ref": "caf23ac9-fe76-4bbc-ba6d-481be02b9d2f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b5af4a39-fa0a-44d4-abf7-2bd0becffdc4"
        },
        "item": {
          "id": "16e2939f-cfb3-4186-b7f4-a3f905695c47",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "88645ef1-9468-4d3d-9483-2a8208853472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d47dcfc-d2d3-4451-83d5-2b7d8b49f30e",
        "cursor": {
          "ref": "d9b8ab50-b4ac-4852-86aa-d4c5619d95a2",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b32f2d64-9c2e-4ae0-bc6c-d700ed4ace47"
        },
        "item": {
          "id": "8d47dcfc-d2d3-4451-83d5-2b7d8b49f30e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "647b0aa0-f436-4dec-b790-1d1b2daf13e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ffaf95-104c-4ec3-8df5-0acae139601d",
        "cursor": {
          "ref": "c4ec9793-0c14-4ae0-b82c-0683d698ddaf",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "04210586-921c-45a7-a5fb-98932b56a5dc"
        },
        "item": {
          "id": "c2ffaf95-104c-4ec3-8df5-0acae139601d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "195752ff-3e25-4333-95f6-3136f4e181e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b4d423-1b96-434a-ab55-5932e1d468bf",
        "cursor": {
          "ref": "5db8aea8-7c6d-4f88-819b-f78706cf741c",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9f1ba643-3d23-4e2d-927f-7e93762e66a4"
        },
        "item": {
          "id": "91b4d423-1b96-434a-ab55-5932e1d468bf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "11dcada7-2f2b-49e8-96e9-e89d6460d887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb2671d-8dda-41c6-a543-063981e1cc37",
        "cursor": {
          "ref": "a0b1d0b1-a2ec-4151-b768-694278d46a71",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "19fc37bc-a391-4de3-bf66-85cf95b52939"
        },
        "item": {
          "id": "4fb2671d-8dda-41c6-a543-063981e1cc37",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3e3d20cd-e0c0-4f0d-a348-d0b6e986b886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71017f43-f956-410a-99ab-8d18c67eb0a6",
        "cursor": {
          "ref": "dfbcba64-e77a-46b1-b9e7-06b26c7cae7a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8e072945-3970-4e06-8d60-77eadd8b42c9"
        },
        "item": {
          "id": "71017f43-f956-410a-99ab-8d18c67eb0a6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0c69f899-a518-4bca-b171-f1a83bec4a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a067e9-6a60-47b4-9c36-dbe18f9b9a7f",
        "cursor": {
          "ref": "51508f4a-6796-49b7-aeea-aad2d2dcba6d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "85c43af6-dcdb-44fb-ae4a-5fabfd596632"
        },
        "item": {
          "id": "c5a067e9-6a60-47b4-9c36-dbe18f9b9a7f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4f905210-2151-478b-89d9-c896b24694e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32adf959-9b70-49a5-a5c3-df54a7ebacc0",
        "cursor": {
          "ref": "a5350a5d-adce-40dd-85ce-022878ee5984",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "81e75f82-3322-4f8d-9683-992a5c686669"
        },
        "item": {
          "id": "32adf959-9b70-49a5-a5c3-df54a7ebacc0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "457b2a20-96b0-4273-821e-ae0c8f4e9b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3b307b-1bfa-4776-b515-8b3241cbd809",
        "cursor": {
          "ref": "7a20dbe2-5b85-4f30-b5fc-66b699cc71af",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "580577b3-8a29-4ee5-b510-5017b387b5b1"
        },
        "item": {
          "id": "ae3b307b-1bfa-4776-b515-8b3241cbd809",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cf8f7d34-0b14-4cd3-8b0d-71868d6c4f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ee033c-2e81-4447-8890-3550fe9c8b01",
        "cursor": {
          "ref": "75b5aa2e-10ec-4331-86fb-ba85b67ac0e5",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a35dcb0a-58a5-4926-b7ee-e923d1769674"
        },
        "item": {
          "id": "35ee033c-2e81-4447-8890-3550fe9c8b01",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1c041607-b654-41d5-981b-7caedca55a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02db41c-8cf5-4191-b3fc-9040589707dc",
        "cursor": {
          "ref": "572ba1f3-4f74-45d0-bed0-c971d9bc1972",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b756fcf6-eea5-4a6c-bc61-6676a22bb042"
        },
        "item": {
          "id": "f02db41c-8cf5-4191-b3fc-9040589707dc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fd5c50b7-d2a2-473a-8343-cfd68ebedfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8303509c-c3e2-4f3d-babf-7f6dae1a7b00",
        "cursor": {
          "ref": "7cc054c1-5ba0-45e9-9f2e-e18bebf1d9d3",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f6261f0e-8723-4326-97dc-9554ac63e7ef"
        },
        "item": {
          "id": "8303509c-c3e2-4f3d-babf-7f6dae1a7b00",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "baf96dc3-80ee-42af-9983-93e3e85cc232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ec9e25-8f3d-4491-96d9-5b02bf614331",
        "cursor": {
          "ref": "16f3468b-85b4-411a-8acd-5a8d136d4d2b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ee9337d5-62bc-4c91-8ff2-2695f5cf991c"
        },
        "item": {
          "id": "58ec9e25-8f3d-4491-96d9-5b02bf614331",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "59cd735c-de21-4aa4-8ca4-2815ef039836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa734640-f6db-4512-b283-0e0ebc419a0d",
        "cursor": {
          "ref": "45d8489e-9629-4e6e-96a2-91279191690a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "36e5aacd-8dd6-4519-abc7-697a5e562952"
        },
        "item": {
          "id": "fa734640-f6db-4512-b283-0e0ebc419a0d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2781ed72-5727-471b-bfc6-826ca8a6bc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd54c01-cbb0-4066-b62b-11dbb7bcceac",
        "cursor": {
          "ref": "dd76fc83-e918-4801-a3fd-4ed01b6339f0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "27df3adb-68d9-40ad-ab2f-c4f63c88a7b4"
        },
        "item": {
          "id": "4fd54c01-cbb0-4066-b62b-11dbb7bcceac",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8ed4fef1-ac72-4670-b2ff-d037ba5920db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a9ae31-84ac-411e-b1e2-166221218a59",
        "cursor": {
          "ref": "a303d3be-579d-43b4-b362-91fcf46bb0f6",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "76184d0a-b4d5-4581-956f-dea4bb33873f"
        },
        "item": {
          "id": "90a9ae31-84ac-411e-b1e2-166221218a59",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "70fa67c1-89bb-4156-a833-20e447a9612f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9496db9-c6c0-4982-a77f-17890a99b14c",
        "cursor": {
          "ref": "9f38dad1-7ba1-4778-8662-3fa584d9b921",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b919e888-ab99-4214-aa98-f64bbbf4278c"
        },
        "item": {
          "id": "d9496db9-c6c0-4982-a77f-17890a99b14c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "126d2f9a-316a-4cc3-a9df-0f351b664f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3768206e-b4e3-4eec-92d0-88293fa63fff",
        "cursor": {
          "ref": "ea135b16-1ea8-48c1-8785-ba8793b46ec9",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cc86f750-70f0-4012-b9dc-5e0111ae12b9"
        },
        "item": {
          "id": "3768206e-b4e3-4eec-92d0-88293fa63fff",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4439557e-da74-436f-a87d-b505271d206d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c400b6c-3571-4b74-b9ad-7e259c5da533",
        "cursor": {
          "ref": "1bb827d1-1d6f-4b3f-9a1d-2bc4955fd1b0",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "313a20ca-f472-4798-aba8-8b3a8b8db300"
        },
        "item": {
          "id": "7c400b6c-3571-4b74-b9ad-7e259c5da533",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "34a9481c-1293-4e9a-8702-99ce6b9ff39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29b2593-44ff-4c46-9365-87ad14f74f0a",
        "cursor": {
          "ref": "cca4a2b9-9448-47ab-8487-1f2d774087b1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f782edd0-b147-45e5-8de9-c0ac57f01e70"
        },
        "item": {
          "id": "f29b2593-44ff-4c46-9365-87ad14f74f0a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "258beb8a-b2be-4a5c-8d81-008a3128ab91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b12162-e84f-4fe6-ad83-0b7f9901e77e",
        "cursor": {
          "ref": "73ded200-8fc2-490d-977f-68e34b5ccba4",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e84fe7fb-e6c9-44f6-879e-e744a2c5e8f4"
        },
        "item": {
          "id": "05b12162-e84f-4fe6-ad83-0b7f9901e77e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4f0c66c4-6eec-40f2-9424-2aefa9838205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f49a60-79ff-4058-ba62-0fc32375025c",
        "cursor": {
          "ref": "8e43436c-4224-4764-ba40-db5fca3038f6",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "da0f9882-b292-4c3e-bc92-5c8ff23a543d"
        },
        "item": {
          "id": "c5f49a60-79ff-4058-ba62-0fc32375025c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c36ae746-4de8-4fc0-a10c-69607710de8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cd263b-5df2-4530-bc91-71d69f9a92e3",
        "cursor": {
          "ref": "1d31f1cc-5061-4d87-93a4-96147e09ebf1",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "eccc6d82-7fa4-4522-846b-1688c50ecf36"
        },
        "item": {
          "id": "d7cd263b-5df2-4530-bc91-71d69f9a92e3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0ce80a4b-c199-45f7-ae6d-c7344eb9c479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc4a663-81a4-44ec-b64a-a0146811f1cd",
        "cursor": {
          "ref": "0959a4be-1ce3-40ef-9e90-ee6fe4174c29",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f4bc5364-bbb8-4fc5-9731-c313699a79d6"
        },
        "item": {
          "id": "bfc4a663-81a4-44ec-b64a-a0146811f1cd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8ce45c57-8ff9-4a7e-bc7a-0e47ff78f42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbba417-6e09-470b-84a8-2f9cd330a37e",
        "cursor": {
          "ref": "ca5e2bce-51ac-4a50-a968-b72c3af2d1bb",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b7d1b580-3087-485e-8dc2-64304d44f8d5"
        },
        "item": {
          "id": "8bbba417-6e09-470b-84a8-2f9cd330a37e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b1c144d1-2259-4122-ad21-d5683bdfea68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6642c38f-39f1-4cee-8c4d-d195dc54fc96",
        "cursor": {
          "ref": "319911c2-b08b-4f34-817f-f881a6d2c106",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e439fb25-acf3-4c6b-9c9e-a0a0b6921623"
        },
        "item": {
          "id": "6642c38f-39f1-4cee-8c4d-d195dc54fc96",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f4ccd86a-ba26-4837-976b-8f139a5d0c10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2ebd48-9d90-4476-86d9-1d49d2ce7363",
        "cursor": {
          "ref": "84cf1d82-3ab1-4719-b8db-874fea199473",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "163f2f2b-70b3-4a5e-99fa-bf3a698f5fff"
        },
        "item": {
          "id": "7b2ebd48-9d90-4476-86d9-1d49d2ce7363",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2a10ae9e-6c68-4dd3-9239-13dd9390be72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa2573a-1276-4df0-bbd3-0bcc90ee20e5",
        "cursor": {
          "ref": "8d24f315-a409-4ca3-96e9-25255cddf6fc",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8d39b5b9-60bb-4ae8-8f7a-8cb5fb9f557d"
        },
        "item": {
          "id": "faa2573a-1276-4df0-bbd3-0bcc90ee20e5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f15ec2b9-abaf-4807-8ff6-b24afc8cf4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e941f5ce-8c69-42c0-ab38-57f308c87c08",
        "cursor": {
          "ref": "fa214744-6ffb-4d27-b35c-bbe5c394be27",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7478d7b0-a983-4005-81fb-1a80dcd6de2f"
        },
        "item": {
          "id": "e941f5ce-8c69-42c0-ab38-57f308c87c08",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "06ddf39c-c00f-4ad1-956e-866106ebcf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e171a06-b62c-43ac-8a3d-c59568b48d6d",
        "cursor": {
          "ref": "e5c6d9dd-4e52-4555-be1e-53444a448d3f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "63ac2852-b8f2-43d0-a882-1532f0f1f13c"
        },
        "item": {
          "id": "9e171a06-b62c-43ac-8a3d-c59568b48d6d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a9cebcde-636d-4d3a-b93a-eb58f0bd3f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4354fbad-688f-4bbb-823e-1d34c2fea0a2",
        "cursor": {
          "ref": "632ad026-f429-4e2a-ae70-9216427ef9de",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "806a3292-7997-49f5-949f-fbdd149a828c"
        },
        "item": {
          "id": "4354fbad-688f-4bbb-823e-1d34c2fea0a2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b796a8be-7da8-498a-a4bf-dfc20b968d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c933c29d-adbb-4342-906f-c4d7af3c1bd5",
        "cursor": {
          "ref": "301dbc12-854a-4755-9703-a29ff978106a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0b3cf431-155f-4136-b5b1-33b3b18d09be"
        },
        "item": {
          "id": "c933c29d-adbb-4342-906f-c4d7af3c1bd5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ab91aa87-5741-43b2-a4d6-77995b233f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc983a72-87fe-4791-b463-7fd7a424a5af",
        "cursor": {
          "ref": "a1ad33af-9e11-4dab-8fd0-d1523edd5196",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b67f24c8-fb1a-4526-a81e-ab5590e29876"
        },
        "item": {
          "id": "cc983a72-87fe-4791-b463-7fd7a424a5af",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "70320d8a-a60f-48e2-a0a3-b363446d5f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d965810-bdda-444b-b404-422b862fc4dd",
        "cursor": {
          "ref": "ce366554-7bd8-417f-a4c8-3f9841942e2c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cd4376c4-0b90-4709-ac2c-94ea0c86ad03"
        },
        "item": {
          "id": "1d965810-bdda-444b-b404-422b862fc4dd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c86fb5a5-99c2-4259-b4f7-7d070921bff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec7fd10-0ddf-4c6b-8fb6-7092223de66c",
        "cursor": {
          "ref": "1d622715-9c39-4a04-bf6a-de04d7c23059",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9b846622-43d2-4185-8ab8-4f66334bc6d7"
        },
        "item": {
          "id": "2ec7fd10-0ddf-4c6b-8fb6-7092223de66c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "342e1edf-70b0-4d5a-9731-142ac7d9f95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56510cb3-5366-4a66-ab85-98e52e75269b",
        "cursor": {
          "ref": "43af8eb2-dd0b-403b-bd09-2ecb89cb1590",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a31761a5-4c18-455a-ae13-a142619f9f70"
        },
        "item": {
          "id": "56510cb3-5366-4a66-ab85-98e52e75269b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "de6029d0-31f6-475d-a74a-e5e1564a0cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d023b5-4b73-4e1e-babf-67a82aed768d",
        "cursor": {
          "ref": "849e0564-ee64-41c7-9329-3e2a7294eca1",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "83c0ef6e-8e8e-4b45-9af1-597e6229cde4"
        },
        "item": {
          "id": "84d023b5-4b73-4e1e-babf-67a82aed768d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ebe9ee6b-006a-41a4-8236-f9c2c93372cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575db6e0-bee0-4922-9945-533bfe7f86ae",
        "cursor": {
          "ref": "ed1e6adc-bdd9-4bee-8a25-c0d8d82d5e1b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d9731b5d-3381-4fe6-bd82-3b36846a072f"
        },
        "item": {
          "id": "575db6e0-bee0-4922-9945-533bfe7f86ae",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b87e87bd-56f5-4a8a-b681-e8cb3984fe6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19b9ac7-fdc8-4b7c-9f7d-1ff8c50e652b",
        "cursor": {
          "ref": "16ab19e8-1bfd-4890-b3a7-30fa68c5b65d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a19b71b8-8c01-4c63-b8ca-36940e1db487"
        },
        "item": {
          "id": "f19b9ac7-fdc8-4b7c-9f7d-1ff8c50e652b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c18247c7-d16e-4db3-a7af-7ac293ad85ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d777ca24-e058-4410-a67f-7e823ea573a5",
        "cursor": {
          "ref": "d9152f99-4df0-4152-8b1e-d1354c2e43fa",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b113958d-6251-4243-8bf1-5b08d72d6062"
        },
        "item": {
          "id": "d777ca24-e058-4410-a67f-7e823ea573a5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5d40baeb-ba80-4841-b68d-11a5125a1a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9670612a-b5bb-42af-bb9d-91bd5f6bb440",
        "cursor": {
          "ref": "f539a8e4-6a0d-45d3-9fd8-bbb1a7d504d7",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f2633f42-ecb3-456c-8d1e-beca004e44cf"
        },
        "item": {
          "id": "9670612a-b5bb-42af-bb9d-91bd5f6bb440",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5f1d4413-09fc-4fda-a2d8-3f85fab90c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8658849b-a120-4475-a4d3-e169ef22110e",
        "cursor": {
          "ref": "670b9e8a-e92e-4d5e-8abc-663fee5f684d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9d2a5813-2736-405d-9368-ba8e646f09c2"
        },
        "item": {
          "id": "8658849b-a120-4475-a4d3-e169ef22110e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6b85cdaa-1d18-4f9e-9f26-1d08a64ae543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744597cd-2ff2-47a7-a589-f6a87494da13",
        "cursor": {
          "ref": "172b199d-d9dc-4b8e-89a4-296092d614c5",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "48c5cf80-ccf2-4a35-a76b-76501dc2b37e"
        },
        "item": {
          "id": "744597cd-2ff2-47a7-a589-f6a87494da13",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e1595064-0013-4081-baf5-507b3ca837f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab400d8-403d-4a10-b74f-95a41c179776",
        "cursor": {
          "ref": "818bc29c-5c68-4f0f-88f1-844e070a1ac5",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "24bc9885-9c3b-4788-b183-cabda24f820c"
        },
        "item": {
          "id": "aab400d8-403d-4a10-b74f-95a41c179776",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1536b2b9-082f-4067-b6c1-a05a6a88e65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dac26d3-6383-4968-a021-2293824c9d29",
        "cursor": {
          "ref": "b3723482-78bc-4974-bb63-5ebe74552f24",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7beca3fb-9955-4b36-9a5a-e94d5cc7ab74"
        },
        "item": {
          "id": "6dac26d3-6383-4968-a021-2293824c9d29",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "23a565be-c0ea-4c41-b714-924f66425be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e23e3cc-beab-498a-bf9b-c77aecff21d3",
        "cursor": {
          "ref": "9b3a4e63-c754-4e6e-8d0f-99f721e038bc",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "23cd0d3b-9c53-4bad-a42a-7ba74b8d0e63"
        },
        "item": {
          "id": "4e23e3cc-beab-498a-bf9b-c77aecff21d3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e65529cf-044c-468b-a12e-38991ff4d78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7c8c59-e4c8-45be-af57-c985aefa675a",
        "cursor": {
          "ref": "1edee4d6-2812-4343-a79d-22550f731ca2",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "87090a51-0328-4f4c-ad08-5998b1defe6c"
        },
        "item": {
          "id": "cc7c8c59-e4c8-45be-af57-c985aefa675a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f98406b1-1f85-41d5-8052-dbde97561fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b977110a-4d59-4cef-8d6e-670a3599b564",
        "cursor": {
          "ref": "da12abde-bcc5-4bfe-9b6b-2a8634f8c205",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0faed6b7-4f26-4a95-81d3-2570b363c404"
        },
        "item": {
          "id": "b977110a-4d59-4cef-8d6e-670a3599b564",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9c98f206-bf4f-4d25-9c58-04e4f653507a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0225dd35-611c-4d48-be04-baa05e2bb2d2",
        "cursor": {
          "ref": "acec5ed2-acd3-42c7-95cf-be8b4d567899",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "da66441d-5f4a-47a7-9bc1-510bb1558c91"
        },
        "item": {
          "id": "0225dd35-611c-4d48-be04-baa05e2bb2d2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8b067149-cbcc-4cb7-81f4-c4e53aeb0834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60be22b0-7e3a-40bf-9453-46a2636982ac",
        "cursor": {
          "ref": "e6ad5b8c-d978-4651-9629-f8b71ee9e020",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "78d9d247-99d6-44f6-90ac-796ba3e411bc"
        },
        "item": {
          "id": "60be22b0-7e3a-40bf-9453-46a2636982ac",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "09d920c3-0467-4ead-859d-742c6c475ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7914c530-25ab-4803-ad48-6bfa5704334b",
        "cursor": {
          "ref": "789f4175-cce2-41cb-b8e7-fde99471f542",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3a565a88-0a7a-4f5d-9a85-7f7cb308b4fe"
        },
        "item": {
          "id": "7914c530-25ab-4803-ad48-6bfa5704334b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ca0bc3c5-a8ce-46e9-a9e2-9b98f6879433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3811b92a-b73b-40eb-9be7-c46cd30d1266",
        "cursor": {
          "ref": "c2c344ef-a4e1-45cc-aafe-1d59b3156556",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d8c85847-9d90-4314-9ac1-aac5c19d96fc"
        },
        "item": {
          "id": "3811b92a-b73b-40eb-9be7-c46cd30d1266",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "39484e9f-6d64-46c6-9478-aa73ef72a4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e6dc12-cd61-4039-a189-e9ab9c9e2601",
        "cursor": {
          "ref": "8545a9f5-a4cb-45c3-bce3-c226ed0c1b93",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4a17e783-8109-40c9-bc4c-f86420d47bd2"
        },
        "item": {
          "id": "c6e6dc12-cd61-4039-a189-e9ab9c9e2601",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4efa0f17-4a31-4ba2-bc71-c44468f227df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61588820-ff40-4283-a62f-b111bad90e37",
        "cursor": {
          "ref": "3ac1deaa-b071-4fa1-b7cf-a4fbf0d374e4",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ae798094-c4a7-4397-836c-16a85b6ee7d8"
        },
        "item": {
          "id": "61588820-ff40-4283-a62f-b111bad90e37",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "de00a434-16c8-4d1e-9f67-60ab3f5515b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5147a0e3-1c6e-4040-a44d-0fe48238e5fe",
        "cursor": {
          "ref": "8d1e6761-5ea3-4ae1-94d5-aec626fa8b2f",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e3b402b3-52df-4330-afbf-56a131a01429"
        },
        "item": {
          "id": "5147a0e3-1c6e-4040-a44d-0fe48238e5fe",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9df0ba5d-c482-4b62-92de-e6d2181796ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2e0599-6672-43a3-85ed-387cc75b3234",
        "cursor": {
          "ref": "674974e4-07d2-462f-b035-e892526c1df7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d3f150cb-02e2-466f-9732-c09fa516736f"
        },
        "item": {
          "id": "bc2e0599-6672-43a3-85ed-387cc75b3234",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c9727f43-0ad4-4049-a184-fc1d91b6bbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53f11b1-f90e-4ebf-bc20-23e4d6cf14f4",
        "cursor": {
          "ref": "b5114e12-0b2b-433f-91d2-1090ccf09233",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2eaff8b9-9e49-45c3-9541-565af47b6c88"
        },
        "item": {
          "id": "c53f11b1-f90e-4ebf-bc20-23e4d6cf14f4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6973f347-8c1d-4d91-aaf0-9ccdb656c2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c11194-be52-4dbe-be75-d80f4c8dd0e9",
        "cursor": {
          "ref": "667c2c39-d55c-4c91-b78b-e61444a870f5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b74b1271-f885-4d6b-b99d-e6431b6ea31c"
        },
        "item": {
          "id": "44c11194-be52-4dbe-be75-d80f4c8dd0e9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3d77c54e-4542-45cd-be87-9f600234cd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27aa4640-d128-415f-8f36-d25941fb114f",
        "cursor": {
          "ref": "1444169c-f827-4a04-a9dd-745948bc051a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fca6031e-c17e-4d95-9a6d-6aa8120e423a"
        },
        "item": {
          "id": "27aa4640-d128-415f-8f36-d25941fb114f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ee65e7b8-25e1-4d2e-a1a3-00143219db6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b380085-4ef4-4853-b5ae-e011a977a9ca",
        "cursor": {
          "ref": "6bdf3b7c-7c7f-44e1-b118-55d77efe62c5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "43a83552-f423-4916-b62e-348433c345e8"
        },
        "item": {
          "id": "6b380085-4ef4-4853-b5ae-e011a977a9ca",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3eb0ad86-64f9-4b1c-97bc-b69eea55dbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76279c8-dd13-475e-84f2-0581652c0c12",
        "cursor": {
          "ref": "26ee3172-112f-41d3-b2b2-89acde68d1b7",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4972abcc-7d92-455c-aa35-2bdd7b6b8c1e"
        },
        "item": {
          "id": "a76279c8-dd13-475e-84f2-0581652c0c12",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f59f5a56-3a7c-4e2b-a9bc-a50170572b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd29dbc-7c0f-4bed-a9d3-86702ec0ae30",
        "cursor": {
          "ref": "9f03feea-0cf0-44e7-92cf-0d0411fe6d67",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "04db37b9-8800-4ba0-ba48-793a134da33b"
        },
        "item": {
          "id": "4cd29dbc-7c0f-4bed-a9d3-86702ec0ae30",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7bbdaab9-b628-4c22-a67a-33b1a88e0012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a42235-6c93-4dc0-87b9-dd345ab898a2",
        "cursor": {
          "ref": "a78b463f-2bdc-4877-b836-c5b5084a242d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2df41865-b1f0-4939-8255-9ef4b5342729"
        },
        "item": {
          "id": "c0a42235-6c93-4dc0-87b9-dd345ab898a2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f0f8d815-66d6-4610-84e9-182e92492020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cb35ee-8b7e-4e55-9daa-805544159b71",
        "cursor": {
          "ref": "c67b2635-3a69-49b0-8f7c-c58dae2ba9f0",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a5fe4782-2958-4797-baf3-368bf81213d0"
        },
        "item": {
          "id": "45cb35ee-8b7e-4e55-9daa-805544159b71",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7a8ebc54-490a-4b11-ab27-812b717ac7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3d032e-96f0-43d6-903e-5f993ba6d166",
        "cursor": {
          "ref": "dd6b8afa-f8b0-4563-ab61-a3b3e7955678",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5b88fd34-dfeb-44ea-b771-f40edbdfa5ce"
        },
        "item": {
          "id": "bd3d032e-96f0-43d6-903e-5f993ba6d166",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1b525f66-a93e-4a34-94e2-ba8043aec16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e586b5-9c3b-4077-96c6-bb4e8b620d0c",
        "cursor": {
          "ref": "00bd4c55-4acc-4625-92ad-3b534b64de22",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5eb9704f-bf9e-469e-a313-850e575b95a4"
        },
        "item": {
          "id": "e4e586b5-9c3b-4077-96c6-bb4e8b620d0c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "13b6dd2d-2b5d-43f7-b097-5be16208a0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfa5866-9c99-480d-b8b8-93587c896962",
        "cursor": {
          "ref": "7c89bf3e-cbec-4bc3-8747-3afd465c1f4f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "89d2d67d-c19f-4bf8-b218-b68a7d68d47b"
        },
        "item": {
          "id": "7cfa5866-9c99-480d-b8b8-93587c896962",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ce9b895d-f74c-465a-9b3a-8a9cb24d0af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4065c281-46df-4275-a5d4-5c55944dbeae",
        "cursor": {
          "ref": "44de838c-a251-4349-833c-3c51f6460d1c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "941d5f77-4a42-4c45-9a83-00abb45eef92"
        },
        "item": {
          "id": "4065c281-46df-4275-a5d4-5c55944dbeae",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "49dfc4f6-8a9c-4ff9-94ba-2229be51d44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd0b592-2319-4788-b277-85d2d8869d0a",
        "cursor": {
          "ref": "14ce90b8-5439-45b7-8242-749e9140e2dd",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "429c3bce-d524-43a8-a520-7d336f75fc08"
        },
        "item": {
          "id": "2fd0b592-2319-4788-b277-85d2d8869d0a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8fbc595c-1d30-4e12-833c-f62b4c6ef2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26b2a20-6e56-44b3-bc0b-be8bf093e3ce",
        "cursor": {
          "ref": "bebf6078-acc4-4b77-953b-ee89113e1f35",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a31f7a82-91ee-4f19-be5b-814ebc67e148"
        },
        "item": {
          "id": "c26b2a20-6e56-44b3-bc0b-be8bf093e3ce",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "19ed1594-08f7-4936-8c1d-97aff84129ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b291b6-bbf2-4233-880f-c42b2c9585cd",
        "cursor": {
          "ref": "e8211b73-9d45-4dea-aa40-c4d410b682bd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b5bb27bf-a557-40fe-918c-2b79230d575b"
        },
        "item": {
          "id": "51b291b6-bbf2-4233-880f-c42b2c9585cd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "da2700b9-2ff8-42b0-a635-e44756425ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f43a50-a017-4e73-ace9-196dad598167",
        "cursor": {
          "ref": "e849cab2-92fa-4228-ac01-00a4a54133e3",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7509be6b-0410-4253-9b92-44d9354e4a2b"
        },
        "item": {
          "id": "c7f43a50-a017-4e73-ace9-196dad598167",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "891a3286-a2bc-4872-904e-d0afa9870774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66700e2a-1402-4cad-b1b6-b69831d58c43",
        "cursor": {
          "ref": "5507fa42-27f1-41f6-a6fe-f2d04cb2a0c5",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cb850f77-3d55-4193-a4ec-687644791912"
        },
        "item": {
          "id": "66700e2a-1402-4cad-b1b6-b69831d58c43",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a2f5129b-1d5f-4400-8978-9c3217887bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea39fc85-b562-4b06-b29f-22451d41e208",
        "cursor": {
          "ref": "936b2040-ff21-440e-9999-5f867ba8dbf3",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c86f2a70-aa14-417f-9d6c-f59d6ef32a7c"
        },
        "item": {
          "id": "ea39fc85-b562-4b06-b29f-22451d41e208",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e7d67c5a-3924-45cc-b4db-9d96501caaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6bacf4-18d6-4615-b817-cd61e6582c2e",
        "cursor": {
          "ref": "22a82d5b-b034-4af4-a797-5c057be1a2de",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "91993b79-6209-4dae-879a-15a4c68cf397"
        },
        "item": {
          "id": "fe6bacf4-18d6-4615-b817-cd61e6582c2e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b7a6a989-a812-43c0-8b38-86dde8af795b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa1b7d2-cd2f-436b-a942-abe9eaa347bc",
        "cursor": {
          "ref": "308d32e1-21aa-4c96-af28-df1ab36b9fa7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d7b33565-1f4f-442b-9b65-95aebe861a97"
        },
        "item": {
          "id": "caa1b7d2-cd2f-436b-a942-abe9eaa347bc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0905b247-1a90-4cc0-8233-d8c737945d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11115f2-8a49-488a-a76b-d9a77208c2df",
        "cursor": {
          "ref": "51025cb6-f70f-427a-aee8-2491476adbd1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8845cf78-1dd6-46fa-baab-7186b90fc922"
        },
        "item": {
          "id": "e11115f2-8a49-488a-a76b-d9a77208c2df",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "402398d0-beab-4fac-b435-8505a24aef60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e34b377-02ec-482f-b76b-2b61c9977dec",
        "cursor": {
          "ref": "a29749d9-3e7d-4bc1-a974-510a58f2758e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b5d8d2c7-338d-4904-aadd-a85d7a7e608e"
        },
        "item": {
          "id": "6e34b377-02ec-482f-b76b-2b61c9977dec",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "12224c30-7901-45ac-9fc8-8972619934c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0380b43-b9bc-45e4-b85a-129380ff9300",
        "cursor": {
          "ref": "df26a0d6-045d-4b50-8f40-5f44536a372b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2254aac7-c97d-4a53-94b7-46f7f5a6777b"
        },
        "item": {
          "id": "a0380b43-b9bc-45e4-b85a-129380ff9300",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "83330a5d-ec25-403a-993c-add8e3bdfe61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e084a0c-a597-42f7-8077-c9386450e957",
        "cursor": {
          "ref": "447e6e43-b528-4f39-8a26-2e94039fb37b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "501e0f9e-4f71-4bf3-a07b-6a5a1f6808af"
        },
        "item": {
          "id": "9e084a0c-a597-42f7-8077-c9386450e957",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bc56783a-4a5d-40b7-9a31-51477e30c1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcce7b0b-3bed-4e0d-bf56-520a18830441",
        "cursor": {
          "ref": "db0d3210-0155-4c93-a175-535f289f2d64",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b2eaea07-9e3d-4e35-8a05-c66410abfb79"
        },
        "item": {
          "id": "dcce7b0b-3bed-4e0d-bf56-520a18830441",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6a7084d9-a483-42ea-8168-e8508732eeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c136e4dd-fd79-48b9-a784-16578321a4a9",
        "cursor": {
          "ref": "e16c53f6-761b-4714-a1af-ae5704a3a487",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "222b524f-1fcb-46a5-bcee-6df45dab2f07"
        },
        "item": {
          "id": "c136e4dd-fd79-48b9-a784-16578321a4a9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "85abad4b-d2e7-4dfe-8093-2a6456d7c14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951476f1-2c8c-4da6-8a28-c721162fe40f",
        "cursor": {
          "ref": "a32005ea-55e5-484e-8daf-13e011605f65",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "766abe50-89a4-4348-8678-a5912309df96"
        },
        "item": {
          "id": "951476f1-2c8c-4da6-8a28-c721162fe40f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a7e63f75-6f94-4b4c-b5d5-906a9fd5e844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830bb6c5-40ca-4e3e-b4de-07a09322fb14",
        "cursor": {
          "ref": "f8808933-e707-4f4b-80a8-ba454439bcfc",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dbe86769-577d-4ae4-bb8e-20a2e46f770e"
        },
        "item": {
          "id": "830bb6c5-40ca-4e3e-b4de-07a09322fb14",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f65ecba7-f25c-4700-b9a7-d5d8eeec5af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a236940-00d3-4a0b-af06-18a36445717a",
        "cursor": {
          "ref": "2962451e-47b4-41b5-8743-5c4dae9d22ef",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d7ee567e-a063-497a-999b-30e3e5085614"
        },
        "item": {
          "id": "3a236940-00d3-4a0b-af06-18a36445717a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f4d08356-e826-4474-b317-c90e2c47a2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb82680-ceb3-4ffc-ae58-7405c306821b",
        "cursor": {
          "ref": "98dca610-bc95-408f-8cda-079be4d345a4",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "010bfc3a-7691-4cab-bf41-f76edc58432e"
        },
        "item": {
          "id": "cdb82680-ceb3-4ffc-ae58-7405c306821b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7a714c11-3e6d-4338-90a1-415a93411f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8575a163-256a-405f-b576-83fb7c3e6583",
        "cursor": {
          "ref": "fa63043b-28b4-4239-b3d7-dea58819cd1b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9ab9a220-d0c7-48e8-bc6b-957d5b7674ef"
        },
        "item": {
          "id": "8575a163-256a-405f-b576-83fb7c3e6583",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "81aaee47-94e6-4646-b16e-7490e5a197e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5647573-bbde-4a87-8ab0-3c84ad2f843f",
        "cursor": {
          "ref": "7cb12a59-b6a8-4b4b-8833-b4c780c2c52a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b1e0e86c-71b0-4c8f-ae74-a7329184afba"
        },
        "item": {
          "id": "b5647573-bbde-4a87-8ab0-3c84ad2f843f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ff73f365-b353-4b0c-bd13-46d638224677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b2c948-1515-4a6f-a117-381c06d30b17",
        "cursor": {
          "ref": "b1e51d7a-9e61-4298-99eb-f89c14a54ee6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "33dd4f15-dc9d-4c80-8ceb-4a98c346a289"
        },
        "item": {
          "id": "68b2c948-1515-4a6f-a117-381c06d30b17",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a5bd1f1f-1dee-4ae2-ae65-9628084e2025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf22d7fb-e0d5-4f12-bc69-1cf3cf257fbd",
        "cursor": {
          "ref": "fc6de072-bd60-4a81-be0a-55d8b3d884fb",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "99cf88c8-d71b-4832-b15e-0e865da6252f"
        },
        "item": {
          "id": "cf22d7fb-e0d5-4f12-bc69-1cf3cf257fbd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f26f0c5b-d882-46c8-98a4-5a26d480e02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470fc15c-a474-4ced-be84-7fca11842cd6",
        "cursor": {
          "ref": "7c0bbfb4-af18-4069-8aa0-62b2265bccb8",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6fd55d19-c909-4b16-88e8-4b5c41ecb2b5"
        },
        "item": {
          "id": "470fc15c-a474-4ced-be84-7fca11842cd6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bbcaa511-8b24-4622-9b97-0cf34da86854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dc3088-fb22-4b77-b38c-1b73dfd79fed",
        "cursor": {
          "ref": "4441423b-2edc-4867-a567-a30863c44329",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6363e521-f227-48ca-8c80-6a8c6bf30ec8"
        },
        "item": {
          "id": "96dc3088-fb22-4b77-b38c-1b73dfd79fed",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f6b3e487-7b32-400b-895e-78f1c045ef5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4656b3c-57bd-460e-8afd-82a226923ae0",
        "cursor": {
          "ref": "efec49a7-cf80-4b10-803d-4f5d394ceecb",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7b325fae-ec83-4ac9-a03f-99fbd908e9d7"
        },
        "item": {
          "id": "a4656b3c-57bd-460e-8afd-82a226923ae0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "21e00454-068f-41f2-817d-8053c58c8551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdff6aa9-20ec-4571-8f8b-d7b9da5b7672",
        "cursor": {
          "ref": "870847c5-80ae-45c1-b70b-179bc78d747a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6ac86319-34f3-4ef5-b0da-a69debdad101"
        },
        "item": {
          "id": "fdff6aa9-20ec-4571-8f8b-d7b9da5b7672",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9688d300-f650-4ea8-8825-1818517958b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7b08e6-118d-42c5-9444-f09574cb8a1c",
        "cursor": {
          "ref": "51312d96-9df2-48aa-b3a9-027f832994b3",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b88d67db-dfd5-411b-8a7c-bedaec848f4a"
        },
        "item": {
          "id": "0b7b08e6-118d-42c5-9444-f09574cb8a1c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "de343df6-e56a-4843-8c2f-16eaaaf62a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8528c0ef-f8d0-4eb5-9afe-54175b3fbf21",
        "cursor": {
          "ref": "71383eed-0833-4942-b15a-819df0c386cc",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c68972f2-3eeb-4f8e-b8c9-fd0135ec72f9"
        },
        "item": {
          "id": "8528c0ef-f8d0-4eb5-9afe-54175b3fbf21",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1dc8d03f-fc15-4583-90b1-91357a91894f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885f3f52-bb82-409a-8bd1-d771be6fb683",
        "cursor": {
          "ref": "4fe4c50e-9ccd-4a65-b9f8-abc4ec0e19c6",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8dcdb3c9-ab5e-45f8-b493-5ae6883ee55f"
        },
        "item": {
          "id": "885f3f52-bb82-409a-8bd1-d771be6fb683",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f9e0b00a-a2ed-4aa5-b005-8e5f1b56853b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2343b01e-03c9-479e-99dd-dd26eade25cf",
        "cursor": {
          "ref": "6e417ebf-af28-44c1-baec-844ab5063dce",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0b295816-e455-4c48-ad5a-4cdf990af882"
        },
        "item": {
          "id": "2343b01e-03c9-479e-99dd-dd26eade25cf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5ab0f7a3-338c-403f-b6ef-9602fe89df9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14bd896-6a57-45d2-b22f-55a5350fb1b7",
        "cursor": {
          "ref": "c932e01b-880e-4eb1-8f77-6dbb7e49dcde",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "854dc916-edb5-46e1-9450-93ec67eaabd9"
        },
        "item": {
          "id": "f14bd896-6a57-45d2-b22f-55a5350fb1b7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e72f7566-e732-4dfe-a01b-dff1b592eb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0d1272-b9ba-40c0-87cd-6c14b3d0efee",
        "cursor": {
          "ref": "647e4a80-df3f-4bd0-8183-f58bdcc3077d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "19c174fc-ab89-4cdc-aea0-91fba49b6752"
        },
        "item": {
          "id": "2a0d1272-b9ba-40c0-87cd-6c14b3d0efee",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fb06e028-5d48-4fc8-a003-442ab07299b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eb5c01-1056-487a-8ecc-39b119474ec1",
        "cursor": {
          "ref": "540c511b-440d-4b3c-a1f8-9a19115a01b6",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ce33d0ea-6ace-41f8-ae83-9e4b7b3e8d07"
        },
        "item": {
          "id": "65eb5c01-1056-487a-8ecc-39b119474ec1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f0f02a05-4e8a-4762-981d-3d47697208b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0ecabc-dd50-4dd4-b008-b852473d653d",
        "cursor": {
          "ref": "fb4be6ca-05be-4f23-ab65-7c005ded6ca0",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4f1044a2-52c5-47ab-b073-b85883af824d"
        },
        "item": {
          "id": "de0ecabc-dd50-4dd4-b008-b852473d653d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e8a7fb3c-bc0e-43b5-bfa9-be03940eb092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f082d68c-f5b3-443f-9a4e-8f3939bfadfd",
        "cursor": {
          "ref": "e175ecfa-9a78-46a4-a88c-98effa73187c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5fdc6277-0412-49bf-810b-617ade677394"
        },
        "item": {
          "id": "f082d68c-f5b3-443f-9a4e-8f3939bfadfd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d5f25982-9a45-4441-b9c7-f7c92afbc265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a65adc-e5f4-4507-868b-f720a71c5367",
        "cursor": {
          "ref": "7c66c0ca-ed0a-41dc-9fe4-523d620170dc",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2a45dccc-1cfc-4120-88a3-28176a1b2dc1"
        },
        "item": {
          "id": "78a65adc-e5f4-4507-868b-f720a71c5367",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1b6bca1c-2321-40cf-a448-a336b8623607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febe7242-c122-498f-a801-63c9aaa2a6e1",
        "cursor": {
          "ref": "3ee3e75d-d456-4a77-aa52-c8f0a04c108b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8a148162-4097-4dc9-a5c5-e7222ec57c6a"
        },
        "item": {
          "id": "febe7242-c122-498f-a801-63c9aaa2a6e1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "00fc5a28-cee0-4c6e-b484-53cad7ddbe8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb440bb-ff79-4b33-81d9-f202692abc01",
        "cursor": {
          "ref": "7df570b0-71af-4b1c-87a4-1370c4fdf3bd",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6d230ec0-5774-4a53-8adf-81cf7b55e74b"
        },
        "item": {
          "id": "deb440bb-ff79-4b33-81d9-f202692abc01",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3780da03-70c3-4455-b877-c38ba67b5f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c2c662-2d80-488d-955f-f4c8fabf5aac",
        "cursor": {
          "ref": "f04eae3e-13ba-4bf2-962c-e78ef008f776",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "437cd703-378e-4f48-9017-0d7275b8a3ba"
        },
        "item": {
          "id": "27c2c662-2d80-488d-955f-f4c8fabf5aac",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b12053f2-5507-4f80-a4a3-8678944df331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88cb892-6ae7-4bf8-bb77-bebdb8ac138c",
        "cursor": {
          "ref": "87e378d3-3747-4b84-9d63-ebe8d8d4bd73",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c5aef303-c065-44d1-92d3-1a88f1dbc270"
        },
        "item": {
          "id": "d88cb892-6ae7-4bf8-bb77-bebdb8ac138c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2c20c4b0-a6b4-4371-878a-a57ae5d4f926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c614ff2-2ddd-4f2e-9edf-e023a3f9d5d7",
        "cursor": {
          "ref": "5fbeb4e1-d9db-44cd-8ebb-806cbdf91f63",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9bc2e636-1828-476f-84be-378d5d56b7bd"
        },
        "item": {
          "id": "5c614ff2-2ddd-4f2e-9edf-e023a3f9d5d7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "668e032c-98b2-4eaf-adfd-530beeb22450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c50e7ea-6ccf-44f3-83b6-b0e6317d04f6",
        "cursor": {
          "ref": "46402ccf-bf85-45f4-8b3e-97b0a78d03de",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "da8c5acb-b74f-4b6d-a50b-1d269f79cc2b"
        },
        "item": {
          "id": "3c50e7ea-6ccf-44f3-83b6-b0e6317d04f6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a33e1cd2-e8e1-45f9-aaa4-a03bb37bf4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e352081-8668-42fb-a3ea-81329a522069",
        "cursor": {
          "ref": "a7ab8303-37c5-4d65-9e63-b076742976e9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6dbe4392-c0c4-4cdf-a281-48717e4bb867"
        },
        "item": {
          "id": "9e352081-8668-42fb-a3ea-81329a522069",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "db5bbf24-5181-4c28-a54e-dcd20f6358d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac769e6e-170d-4ff0-80c5-d4b0a6d8e4e8",
        "cursor": {
          "ref": "4959c51a-8b47-4fbe-800d-7b7212c534d1",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "daba4bd4-9483-4b87-a862-c5eb34fa5a41"
        },
        "item": {
          "id": "ac769e6e-170d-4ff0-80c5-d4b0a6d8e4e8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "97217156-dec4-4fe7-8dfc-b4b61d7f43db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de21152-7692-4f0b-a4af-fb3100f0229b",
        "cursor": {
          "ref": "dc42fc4a-9b71-4ba6-9203-efe015c719e9",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "113fbc2d-c76d-4ea4-b9ed-1f2a09c07f52"
        },
        "item": {
          "id": "4de21152-7692-4f0b-a4af-fb3100f0229b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "21ef018d-10d2-4038-9102-23d0bdd5806b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ef48b6-d7f1-40da-877b-c94af2cae881",
        "cursor": {
          "ref": "78ebf7fb-65ac-459c-8d87-65deaf819e70",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f047b8e9-5b15-448e-bf8b-7d0777778663"
        },
        "item": {
          "id": "d5ef48b6-d7f1-40da-877b-c94af2cae881",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "786502a4-f2f5-4424-bd56-cfdabac5e7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc664b48-ad1a-47e5-9d59-fe456796bc5b",
        "cursor": {
          "ref": "3abe139d-d99e-4225-a45a-1a3058757840",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fe7f8c1d-c4ee-4dac-87e4-8afee8093ad6"
        },
        "item": {
          "id": "bc664b48-ad1a-47e5-9d59-fe456796bc5b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "84eb4642-f04f-4dce-b20d-1d90fa0d527f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98ce7da-ca5f-4e92-a60c-8fe10484c5b7",
        "cursor": {
          "ref": "07b89f09-d504-4665-b178-4d200a2d5238",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2aac2ab5-4a1d-4774-855a-6c9d49b74766"
        },
        "item": {
          "id": "a98ce7da-ca5f-4e92-a60c-8fe10484c5b7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "31b90227-26a7-4d7e-a38e-5ba1d66abe10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942eaf53-ce11-4af9-9606-130aa894d9cf",
        "cursor": {
          "ref": "6c265e8c-0b91-4312-a78b-f9e03e2ec1c9",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bcbf71f0-537c-4bc6-ba10-2ac7e8afa345"
        },
        "item": {
          "id": "942eaf53-ce11-4af9-9606-130aa894d9cf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ddd4c8b1-dc31-4c0b-8439-f15bb3228a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75e8aa0-b97d-4cd1-99ca-cfbd4337ebd1",
        "cursor": {
          "ref": "6cd88180-e2ac-4e51-bdf9-1e61761b836e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "71b77a37-722e-4123-82c5-53ebdc5a1b0d"
        },
        "item": {
          "id": "c75e8aa0-b97d-4cd1-99ca-cfbd4337ebd1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "daa6a227-c62a-435d-bdbc-c26aaa896e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b4e510-81bf-4a62-b8e7-136b0cb3fc7c",
        "cursor": {
          "ref": "f7c1a6d9-d4ef-4aac-8855-1a9d4666a5d1",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0cb8ff3f-8653-4f9c-9f19-5fbf5bc0c868"
        },
        "item": {
          "id": "f6b4e510-81bf-4a62-b8e7-136b0cb3fc7c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "581cb0db-b119-40f1-82aa-a10867cb9878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6b5d15-ba14-4625-9fe3-80e558c77c09",
        "cursor": {
          "ref": "e2bf55e8-6eb0-46ae-a311-3f352cabe46d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f5b76f03-42ee-4ae9-b70d-1552b977feae"
        },
        "item": {
          "id": "5a6b5d15-ba14-4625-9fe3-80e558c77c09",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9b140319-9f7d-490b-81e3-8088987aef5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2450daf3-1977-4dd6-b970-ee4bfdb524ac",
        "cursor": {
          "ref": "00e87db8-f422-4174-9cad-0fc27dc10e59",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "233e1ece-db7c-477c-8d5a-3c229d11caff"
        },
        "item": {
          "id": "2450daf3-1977-4dd6-b970-ee4bfdb524ac",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b28bf3fb-6690-4d2f-9b8c-36bcc601c182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a1e017-8c40-49d5-aa53-4ddaa8ff47fb",
        "cursor": {
          "ref": "bb6e0957-c0a1-4e4c-a69c-dc701c543031",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1400b123-f101-441d-a978-5aac5fd5fa2b"
        },
        "item": {
          "id": "69a1e017-8c40-49d5-aa53-4ddaa8ff47fb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a38986ed-2803-4ba6-a204-918768a39637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d08b58f-7686-4040-af38-65aa28af2c95",
        "cursor": {
          "ref": "916a8008-6a7b-41d0-a863-d3bdfbe17c14",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d61fe267-9ead-4e72-b739-8f55b4a832ef"
        },
        "item": {
          "id": "0d08b58f-7686-4040-af38-65aa28af2c95",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "afc9d2bb-c7b2-4d81-8fb3-97f751e110ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac686f5-6309-4d7c-9190-84e387e34806",
        "cursor": {
          "ref": "913c0bd3-c3bc-4bfc-9035-201f3bd1c168",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b3ded0ed-389e-406e-96b5-8e4ceb850dc1"
        },
        "item": {
          "id": "3ac686f5-6309-4d7c-9190-84e387e34806",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bf07a763-59b7-498c-9ab5-73b4e6ebf123",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56909e15-c390-4492-94c6-c16e5dde1d39",
        "cursor": {
          "ref": "047f3fb3-fbcc-43b2-af4a-095a2284bd4d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "fda67445-4f46-4fb0-8aa4-f021fba728a3"
        },
        "item": {
          "id": "56909e15-c390-4492-94c6-c16e5dde1d39",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6706fa87-fb8c-47a8-97ae-ede54f105bd2",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "153ed4c5-655d-4cfa-a751-6781c826ff24",
        "cursor": {
          "ref": "10f5f298-7f31-4536-844b-e540912b7218",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "cf958c63-b4dd-4925-b36b-3d14a06929a2"
        },
        "item": {
          "id": "153ed4c5-655d-4cfa-a751-6781c826ff24",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5729ceed-b2a9-4f79-b5e6-159210615018",
          "status": "OK",
          "code": 200,
          "responseTime": 1304,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "999cb381-b2a3-4858-879c-0435e635ce9e",
        "cursor": {
          "ref": "1e31ca80-dd7c-4269-93c3-0688fc331e15",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b5837d48-6320-4e29-91fc-fbbde969ff4d"
        },
        "item": {
          "id": "999cb381-b2a3-4858-879c-0435e635ce9e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "74bf30dd-8512-4158-8e7f-024603db5e96",
          "status": "OK",
          "code": 200,
          "responseTime": 1539,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "487c4ea8-0b41-4c05-8cb0-22e24ddb7c31",
        "cursor": {
          "ref": "2cca2093-6589-4296-a854-7b0a0c663e1a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "854bf007-5467-449c-9c5e-d42ed4f500ac"
        },
        "item": {
          "id": "487c4ea8-0b41-4c05-8cb0-22e24ddb7c31",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8ebc314d-f6b4-4b8a-8f5a-3b1c86d80b17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487c4ea8-0b41-4c05-8cb0-22e24ddb7c31",
        "cursor": {
          "ref": "2cca2093-6589-4296-a854-7b0a0c663e1a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "854bf007-5467-449c-9c5e-d42ed4f500ac"
        },
        "item": {
          "id": "487c4ea8-0b41-4c05-8cb0-22e24ddb7c31",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8ebc314d-f6b4-4b8a-8f5a-3b1c86d80b17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe37a0ce-f5fa-42f7-8906-0db3c125a1a0",
        "cursor": {
          "ref": "0045b26a-efe8-44c8-8583-d56a2499c67b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fa30d033-4d62-4b8b-9f6f-1ac6fd2e2178"
        },
        "item": {
          "id": "fe37a0ce-f5fa-42f7-8906-0db3c125a1a0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4e60e437-8b60-4316-95fb-534985e8f136",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ffafb7-0bb1-4a52-bdb3-a313f78ec73c",
        "cursor": {
          "ref": "1133f3c3-1589-4563-b79f-6202b21cda22",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "cbbb8934-c196-42f5-bdae-c874cc30ce9f"
        },
        "item": {
          "id": "b2ffafb7-0bb1-4a52-bdb3-a313f78ec73c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1a1fb980-1a38-4eeb-b265-030aacce7bb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}