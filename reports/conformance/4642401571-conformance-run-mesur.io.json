{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d66eb0a2-0a3a-4bc1-b379-c4cf4b87e935",
        "name": "Clear Cache",
        "item": [
          {
            "id": "de82b8cc-9ff0-4026-a272-1e32eeb78546",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "370ae116-9075-4d09-bfe8-f73dacb5706c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dea5bfff-d1b2-4b7a-8f17-ce8f7ec4216d"
                }
              }
            ]
          },
          {
            "id": "fc67d7f0-60e4-4708-93a4-d2825c4dc46a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "114e7d8c-6386-4885-81a1-1ee6dea7933a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1b3f3af5-b53b-4fa8-bc8e-f60bac63e350"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "05f3e716-ac63-428a-b776-6904d0479b4d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3a16be3f-bd10-46eb-a565-fde56ddbe35d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b1e1417-61cb-498d-8c8d-d1a664684737",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26142a8c-2ae3-44b0-934f-c6bd8859f24b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b2b89af-63cf-487f-818e-70289b157fbe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cedb4a6d-3f1c-495d-88c8-3ae0bea6bea3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aeaa6eed-7edd-4aa9-9a15-eb959aa93d45"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bd93108c-2a17-4933-934c-22de380253e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "258ff52e-f281-45e7-8065-9bfc2f5a6f75"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbdb055c-7ac3-4042-8d4b-981dbbe0a7f9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "713ca26e-7c9d-4663-bcf6-4e97fef7f853"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5e17c5b-a6a9-4139-a7fb-b91a742b388c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e494a0b-61b5-4658-a161-71bd2af9e9cc"
            }
          }
        ]
      },
      {
        "id": "985f6388-97b5-4518-9729-f89fccd2f394",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5e1631ab-4bc0-4200-9ba9-c6150ef1fa25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd7cdcb1-31d9-4d79-834e-2ae7278a9005",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "234ea256-260c-4737-93a1-a88d00868f01",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711c2203-0ed7-4303-87b3-a00593a1d539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fa9c396-9c2b-4563-9441-5258b315a290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b0e444-9f21-4adc-9263-9a0d3899a8da",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baa498f-b92c-4c91-9794-cca8042cf05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be13fa8d-a587-479c-840a-0ad04f817b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b51ffe-98ad-40a1-a425-548cdeac8649",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4690ac8-301b-4ad1-9715-cf9ffede66d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32e96f0f-1a71-41a9-ba88-bba497d2385e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c5df1a90-1792-4e7b-b5d2-c8b4997e921d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6382c8e-6988-480d-8cbf-5a0cbc0ef489",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d12769-cc2e-44b0-940f-6a94743ee464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10e7058a-2100-4a10-896f-616510f08304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0281a402-1456-41a0-8517-d89b763d3c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a4e5bd-7c48-4caa-b3b8-53b391d7f113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb7ef95-f68c-4f7f-b7ee-1ab322a45b20",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacb9cad-8efd-4183-b57e-1dc87511e080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4772100-ed79-47bb-b0ff-b9c2037cdece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303b99d2-6077-484d-8bbe-dda9b9b65a31",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "cb93b853-fda9-4fe7-b489-871b15fc5ce6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d9b9d546-4918-47c5-b027-d5870ca7ea47",
            "name": "Positive Testing",
            "item": [
              {
                "id": "be1e0e95-a029-45ab-a6da-3307a6625e03",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97e1e33f-606b-42a3-b70e-590a14d1b38e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4e658a9b-3eb9-4a61-acaa-699f765cb12b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3c6d1c5-854a-4ca7-8daa-071e844f86c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "1acc4596-012d-469f-b258-c3a100494808"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a28bbbfc-5776-4f59-80fd-f3840fab716b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c9ed2ae-6588-4211-81c1-4dbc3954f014"
            }
          }
        ]
      },
      {
        "id": "94cded34-ae2d-4ced-86e5-5a458d818842",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c3643fc8-b35e-4f5f-b0ce-fd42f7fea13a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "192adf83-62dd-40ce-91cd-409e4ed013fb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "397dc0ed-50d3-4da9-ae32-ee51fa2f6e52",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219848dd-4b65-4505-822b-d0676c6473ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4774d7e2-aa63-4154-89b8-123d167ff435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127867ef-b153-4cb6-9b23-bbc3dc465759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcc56b12-fd62-4db1-ad9d-3d593027d875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930fbd23-757a-46f4-a3f6-886647a87c9d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9313b26-97b3-46bb-a534-f1a732eaa094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9567f36-2d2a-4049-8e81-87834f53494f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9727b1c2-c0a2-4bf9-90ba-cd103f8ce93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6167f25e-226c-4f65-a4fd-bf84e611ec49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa42c63-a72a-4358-8132-bdcfff62271b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f225dc96-881b-4a66-bc83-286d4c33b495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f2d33e-8a67-49aa-80fa-13d0c18a278f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609d46b0-e970-43a8-a202-91625642dff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21e04e78-ae59-49ac-b324-7046e9e0c052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c55631b-bf3c-416a-9030-3514c380ae6c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168c7de7-fd24-40aa-9372-71e8d822c0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c273ac-7d52-4aec-b840-203f1cdaad74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1e3ef8-f2bc-40f2-82ca-19bce8b9c356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c8a1c63-a7df-4944-bfed-397fc63ff368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e29a29-f4c1-4cd4-b5a9-b1b7bd1c4427",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb06615-43d7-4ba3-b0d0-91e2e74c1c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79a6650-71a2-4493-a391-928f96b9edbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8765387f-1e54-4d25-802a-3ceb4e6ed701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a21f3f72-28b4-4d37-a9bd-8e16fcdb526f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab481e1-c6ec-4226-8351-7202147323c4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9758bb77-e173-49bf-944d-3cbfc65f0c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44354cba-07c9-4c27-8ee5-50cf8fcb3293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118442ed-5ac7-4c4d-b423-5c2b9aaa7565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a985054-1cf4-4617-a046-ae5c692519bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ce01ba-dd77-4eb4-91a8-c6fb412ba8a1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd39739-673b-4e03-a026-9ac1bde5f9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77eac72b-ef1e-4286-bf07-b86d13f334ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4648d6fd-a3f4-446f-8b53-6ccc58e4fafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c007ad61-636d-4284-8eb7-6179fb194864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fc8cf3-af9c-4c5b-8f83-515d188d287d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a7b878-2686-46b2-91db-cf8c47216eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41f6bbb-1b42-432d-b316-ad10f4ea248b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d796522-89be-48c8-949d-61bdde6987ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1227ebe7-6ab8-4a93-9f88-586a3060a87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09961a65-506d-4a36-8350-d347ba2c53e5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1f6f87-a16b-4536-ab76-1ce89200bd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8a4ad9-0cbc-48e0-84e1-d051e64ba5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a05d948-700e-4dc6-83bb-0b5b60c90085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "370fee38-37da-410f-851a-d05660926ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320533ae-224d-45d5-b66d-ce6f8a51dcd9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf31249-2b66-44f1-a9de-ada671baafaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb63b351-7ddc-41c1-8ed1-b18e59b8bed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49909a0f-2551-4d11-9a07-5ca1c4d2a0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bfa83d2-4957-4d8d-ba6f-79dd24f8d171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488c5449-0670-4dc5-8954-b0b558ac1485",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490fa138-1c5c-41b0-b90d-e68d0818b50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ce5c8e-1922-4573-b419-d90097c59753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9ec59e-8c26-4215-9f2b-5800027a02aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8b48301-7d4c-4140-81d2-f10da27a1873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7254b7-4dae-4c6a-b25a-04275126f732",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40a90c6-6ab3-4ee1-8029-dfce8c2abd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec6b952-7204-44ba-ae11-ff3fdc98f847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2554203-b37a-4666-b954-d1e0550a9b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41166ba0-2491-43ed-bbd0-39d013a7fa71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc1bdd0-7347-426e-9796-ea8be40abe38",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb9c496-0519-423d-840f-39c569425bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbe13ae-2170-4dfa-90c1-472dcc51ba0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f117979-0e5f-4e46-9067-c7c8757607a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24ef6eeb-34a7-4e3b-885e-1c2d418bcb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423ae303-1095-44bb-aaa1-8f5768bb130f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8956d1f6-4097-4ece-a23c-e39d766aae10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252f6e31-15df-4004-8558-957c2cbcab52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8529ae73-50b8-4ea1-952b-549a44603487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5481e180-a29a-4942-9a6f-f5605ddc0dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc03efc-0701-480c-b160-40eedfe328b7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934a1b96-8421-4b16-bc91-8700b3e391ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5953c80-a90b-48f8-b68b-6e02c7a1dfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd493e7-fd5c-48a4-830f-80af8e7e40be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b33e3dc-8ad9-4dc5-aaf1-da3495fdfc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a6e7a2-cfdc-4b9d-8882-3e1d8607e9d3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7634b390-8a59-4989-af3f-a8c6f4a70187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7895c8b8-b4d7-45aa-9da8-884a198345ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b7b08f-309d-44a0-96fb-73a7d5904264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4cf1eaa-daeb-46e0-b12d-25f84784775d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65154ce-b7a2-4859-8d2a-510bdfa4ab10",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e01c61f-ca48-4c69-ad47-3710e77e6fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc157a45-9ca4-4062-aae3-bda58ff15ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2030df4-6dbb-4e9e-a128-dc54ae0ff284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bca9f2d-441f-4579-ac9f-e7b937b28e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801b1c5e-85c1-4504-9115-e25ef3848d9b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82333be-1146-4c77-9e7f-960a2f5318fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218de5f7-fa58-4d1c-aef6-b15a78aece1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b57177-9949-49da-8725-a4c5c0bbf353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b75e7754-aafd-4240-8d7a-da8382898cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914e3a26-c00d-4bda-a8c1-56bb872b3bfd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cda4fc-20e4-43bf-9716-6bd8ee29ef2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961e1b60-faf7-46eb-b8ac-c9f9f6052410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c3093e-b0b0-46f3-8391-7c0be79b1ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7378e56d-135d-4aa2-a88e-2835092e179c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54aaba1-c6e9-4743-9f5b-2d5eb5b4ed74",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db71df6f-6d12-4f62-83a9-c6c90088e572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1166f8-f696-419b-b8c8-c0241bc07d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7ae0c1-dab7-474a-9566-a1faf4a767ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0730ba-9975-43c7-8cfc-6bfd470b4c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae602b8-9d6e-41c9-86cf-e272ca1b0dac",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d30eac-3ef8-4b47-8a0c-41ff7d676f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb98d97-666e-4f4c-bb00-e803804e6902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8385c4de-8fe6-4ad4-82f4-7e59e7431357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e11727b-894e-4862-8ddb-e0c4bd76a9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b1d862-40cd-4731-8faa-044f493bf5cd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f12b87b-71ab-4afc-9fe2-d1b8603b222d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d86f9f-6f44-4576-afbc-79a32a70c756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273feb22-4db9-41bc-872b-5c4878758a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f75a18a8-cda5-4e85-b2d8-a08c6cccdb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7473e73a-5bc5-4326-94b5-abb2aef95859",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9967d837-d0dd-41cf-b456-84646d487ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfada3b-7380-4ee8-b2b2-303494e78024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb633b2b-9de7-4745-b005-83e0709beb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "225f10b5-a383-4ec4-8df4-3fea00c81aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374fa010-1023-45ae-8510-13fee12a8b7b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925e1a55-78a1-48de-90de-e758c3a7f205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608adef5-0dfc-43fa-80cc-2973325c1133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562229f3-7579-472e-88dd-9e85b31d07b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c26cba10-3878-45f8-be0f-f06b9c7ed9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41863b04-c60d-4048-bdd9-1be63551df21",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7baae2d4-3ab4-421c-8ca9-86426d9a1faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0b202d-116d-4d8a-afab-742d9ed49838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1991f6-c01d-4834-bc4f-83608f786938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8c4987-241f-4e9c-93e1-16804c0f166c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed37e8ba-2d23-4fec-a6c4-e0d3ada425c5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958d352c-d600-4cea-867d-7386ef2afcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed18ac7-9879-473d-abc9-6e511b16fb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cadcc20-90aa-4f5c-b896-924bc22a593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7642ed5-2590-4972-84e7-b073a4542586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b056ce4-819e-40db-af7e-8ee9fbaf04d2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676b3962-827d-466a-b184-196d8304dc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd5748d-c689-4ddd-a33b-1927cb7b4668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5f1c80-662c-406d-935f-c60e43337831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d950310-b573-4090-b259-1064394a76d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668571fd-8418-4174-b8eb-c5e42e095e27",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f889c6de-d69c-4d52-ae6c-648be3dc2394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e32dedc-d0f8-4a44-9c81-8d9556a2635d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73828112-974c-4712-8a87-345a29214296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e31e70e-acfb-4954-bd91-91b82855a28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9775cdcf-5aa1-4a0d-aaeb-f04ea40ca22d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8ec3af-ed99-47c4-adca-eb10b24e7df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdcef20-b101-4772-a65e-50d30bf9fbca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b966306-0262-4f9f-a804-075d9903c9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "deebfdad-2c6e-41b8-9c8b-7c240923b09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954e985a-641d-4459-8606-c8833468fd45",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502eacf7-2a8a-434e-b0a9-28c5cb591f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e4a41c-c983-48e3-9558-e9ca95537ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059c9c5c-7a17-40a9-86ec-0b83067590ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee1fdb8-5f87-4d8a-9c79-cc9f04861d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbe845a-bb0a-4dbb-9893-5e563594b271",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a558a2-1be3-4e86-980b-b4439aa843c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f778c83-50cb-48f7-ad9e-809d728593fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba54782e-9204-48fa-b13e-def477244163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e34abdcc-9004-4ffc-bf6f-535a1535a4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ef5966-41c3-4628-9e49-74e90858bfba",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8007e123-1f94-4527-a2e2-f57e0564899f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a36c3c-48ea-476f-995a-201d829e92b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3117a0e6-86e9-4375-b0c8-47eb6a90783d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "940de477-ee02-4662-b312-393d995c2dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731c03ca-618b-4942-a26d-85c8d635d7c4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882d7840-918c-420d-8945-6bb9cc611191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e2472d-e38c-4c49-8d02-00dd4c854637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac75041-b99d-4bc6-bad6-e03cc11b0169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4842849a-8e04-4ee3-a844-94c7d23d3554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582fe7ec-387f-4c28-997a-0fc28d624eda",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0103b3f9-343d-4509-918b-7023b3a81b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b550fbd-16e5-4d43-beed-5fd7c58f7b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0b7d82-85b8-4f25-b87f-5cd5ecd8dc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f170b0ca-affa-45ce-9bce-0cbfa46976b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e58f905-85c0-4c89-9571-b43016f8ee97",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ef2017-c467-4968-9fac-294e7829c102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cff6a80-cc42-4b26-a556-8fc657007c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa48ce3-4fe5-4a0e-8fa0-4d52132fdf6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbe902f-a968-4cbe-8b94-e81e6d16ef04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3d8039-cf73-4854-bb9a-ce8299838a91",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4b5599-c05c-4f52-85dc-f7c4fd66a404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc8887e8-113d-4cba-a763-581b8f330682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1955348-368b-4973-bed9-0cc19e5676bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "359f6b03-6ac5-44fe-abb1-bdad32177d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873074b1-7b26-4eba-a843-a89d33d708a7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20c5d0d-444b-4332-8e96-a60526208aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d88f271-659b-4a50-8b1b-5a945921c4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4360df6-7e1e-4557-93a2-bdb992f9c5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a07b298-8dab-4b32-8759-530f3e26e779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b88ba4-9643-447d-8af3-9c276f572d0e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828b8266-eaed-4c51-9257-0332add5d352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef9cb35-fcba-4116-ab0e-7eda19ce2f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141f90ff-c39a-47e2-85a9-6deeb31b8069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "14819a1f-9cf2-4469-a44b-35d7b2826426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272d5533-86cb-4537-81a7-a1b7c98a9dfa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cde65a-340a-4308-ad5b-5bebdbd5c123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483de1c2-da56-4f43-a080-5bf3e80109da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6c6eb6-bb38-4f1a-b022-b36bc8a64b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "26522c69-95dd-4e74-bc96-b396892bb6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a094615f-09e3-48d7-af51-a106b27a4204",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22472054-e592-4de4-a44c-3237ce826c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b61f2c-486c-4fd6-a1df-63a1712c61bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584981e8-075e-49d2-aa60-bef741f335ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d47014f-78c9-45ce-8466-9f38cf921d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb851686-a937-44d6-8b2b-4c00778abaa7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b969bfe-f30a-468d-8a61-24013147bec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffeace8-478e-4057-8823-9dd8298771ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799b4afa-596c-4698-8883-568f0fce9446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef39557b-66ee-483f-8754-8935e3c34754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbceef9-0e42-4a35-b1da-45f38a7f6c64",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e27239a-8156-4c83-a638-dd17cc51e777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e8ef28-67a8-4337-9ccb-8756ce306576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626ec540-5028-4acb-a3c9-759cfea5d5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "741bbafd-7cec-4922-ba29-8603d401f5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428e6a05-832a-47ce-a9d7-e7dca38cc837",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90363fe-d10b-4bcb-bb20-4c18476979bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398681d5-ad72-41fe-a046-0098a7ec580d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d810a5e7-0018-4dcb-9e5f-0186946c68a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec96963-bebc-42f2-aca1-d4396dce691e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4c806a-3ba3-4cd3-8ef7-a8f254843b8f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533b0c9f-f915-4e2b-bb9b-7a72cd60c56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f561765-7805-40ae-a1dc-93ec72000958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4925b5b-4108-45a6-9ad6-77fa1495a641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8646cd9e-2ec3-474d-90a0-3b10ea8700c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9a6d8f-844a-49e6-b789-540b45061fe5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9822a84b-ca58-4b84-8003-974f4ed90971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e38c0e-0fae-4474-b511-7e76a2619358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf071de-0a61-4965-bbef-bd32cbc3251b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7005fe0-685d-4c29-91fc-857f16e28348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd256648-df3d-46f0-a63c-7a2296ac60e2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95807c61-7556-4417-bca1-b7cb7b7af37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b4fd01-069b-4cca-a2ab-7eec9ba57918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685452fa-a0fa-4cb5-8fb0-2b1a162abc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f5d4d2-e03d-4f73-b5ea-c7b9304ce219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7fec43-6ad9-4712-b520-991d6c2ba9ba",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcc49e0-fde3-4cbd-8b6b-661c554b343d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1650df10-c756-4d39-b50a-44e629c6f264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00feb105-fea7-4bca-912f-0995aee97c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1dab338-ea23-4904-824f-305cfd24534a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6ec48d-6558-4010-8270-124739fcd828",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05471b9d-3853-494a-bc2d-35f1ab62ec3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70dcfe6-d3cd-45ac-812d-829bfd991f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8adcbc-5a7f-4dc4-8dcb-07928753a616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c13e30c0-7f73-47af-be60-1c40a52ed1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cdb136-cfa0-4b5f-b789-a0c74fd519cc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13795e75-22c8-48b9-b0e2-0abcaae18936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac86480b-3418-47e9-ac8e-69a8347cfbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8de6c1d-332d-4601-8196-3196296e0480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8535ade-2b64-418e-ae74-ce867cec04e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669ea390-584b-46c9-bc6f-97bd94adc61b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8b6add-debd-4b52-9cb0-704648a528bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6364678e-e8bd-4abd-855f-b0f3626cd713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2728d00a-a799-4d7d-ba81-88ab71775522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aec9d5dc-f7bb-4186-8d70-c84ca3f29e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911eaf89-9f6c-441d-9bb5-220b4b144e65",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc1372a-7ccc-4743-bb74-4c6b86f03aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f96ca51-37f8-478c-93a8-daf7d3a5e8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99eb82bc-b44f-4a8c-b6f2-fb07917c0628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a3e23d-ad14-41e4-b972-c7b1727ae4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc55f5f-3680-4672-a568-92fee8571d82",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610b087f-a43a-4216-bdde-d75ccec0afbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186eed04-0330-4a9e-9bde-a65b30c9abba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079aed92-cb59-496a-b27d-3f24fc7e6111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4ac966-340e-42f0-9e82-79e95a923f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8c9843-e0a9-4d4e-8db6-42776aafb5cb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31def74-c4f3-4b03-bc0a-e3b562605d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d1d22c-8c17-48e7-93d9-1c9faf93a6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866aa27c-33a1-4f2f-849c-59d3492b857d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e536daba-e012-425a-b245-5fa501e01bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62795ff7-d50a-4bbf-b2d9-0e5a5c6672b8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4b3c60-0ba4-459c-bd5b-20212310d5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f41715-d13d-4161-9747-783a7cefbba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f5d08f-e7f7-434f-a967-037f4d323f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a92513e3-cfa6-46e2-85ee-ff30ca9326d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4288db-e10b-4777-b4ea-a90bcb9d97c8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48be548-fef9-4757-a0b0-d3fae98283c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f26be4-a688-448c-9947-e808685c322d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8151d0ee-b9f2-469c-956a-a8ff85463008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddb6b9e-937f-41f7-b2b8-79f9c650f424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d55af4-80c3-4963-b013-7868da35de9e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35774521-1f30-44fa-9c9b-49a197943bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f022789-def2-40bc-b96b-3a7399efea48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f0d679-f9f9-456d-bce1-489beb403296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9df83c-2f6a-463b-97c7-c43a62e2e49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d50ca9-6262-472e-9f81-15e1c3b95df0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08811a5a-3169-4ebd-a30d-9bcc4179a937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb86d1c-81bd-44c5-b07d-f2c19ad81187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f646341e-7cd9-4fb9-86c9-ce1bfb1d0968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a534c8d-afdc-486c-ac3a-1e25514637d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6985e9-b00d-4716-9d1c-d14ca57abfd6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f78d2b-e481-423e-b7ef-260debce4aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff1d609-6812-4c7f-a095-215d30ff56f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31caa09c-987e-4954-9539-061fad2b0497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7c8514-5ea2-4485-a152-68908a538c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1313526-04da-44a0-99ca-daec38ac9f23",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccca4165-d6fb-48f9-a925-9f59f1571937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b99efd5-098c-4d7e-bcac-d607db1c978a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a3752c-3354-4edc-9606-79387c3396e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8db6edc4-c71a-4ee2-809f-fea0c1ea1f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445e72c7-9a4b-45ce-a7e8-4bbbafbbff6d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b74ce2f-d202-4e28-a6e4-0dee15478d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e4eb26-221b-422b-a998-f05c26d6541b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5b92c0-bdfd-4774-8535-64c87f091348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "21641cd1-e17d-4ebc-9aca-19ff3afb959f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3238d47f-dbd4-4f51-95ca-040aab50e0f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15575efb-91aa-4f4b-93af-cd2e9894d712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a231568d-d429-4ed7-9507-7e10f1fa368c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f689644-9581-49ef-9508-8f67ca7ae7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2e7cd5-2855-4339-97c1-3ebee6b09e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563c93ac-7905-41bb-b71f-80c416947e81",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8dd261-be4f-414a-a967-a5f063cbb66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfa9ad5-4e85-4f92-b451-5af604eb5658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ff7be1-20db-4b73-b3e3-716f9720d19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb8ffc0f-5d9b-4f22-9a06-34c5a7efcde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b909aa6f-136e-44b9-8a58-4b0f3549f551",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a3272b-b075-4166-bd41-ba8e177196aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf404e68-2787-43c3-838c-2685daf8be83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d643e00f-5bac-4906-afec-b53df7fe4428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b1e124-5622-4259-b64d-f1f895461c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc2e2b1-d1e3-419a-84b6-97485286dae5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebf3cb5-33a9-46b1-be20-1b8f38bf5046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d885ba5-efa7-4826-ac22-78dbd2a6db53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236f2f16-506f-4892-ba41-6acb68124657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "511d03d1-1aad-4bf1-bbde-7749c38a7ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7301f486-4d5c-44db-80d6-8db3d5c49b4f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b09bb10-eccb-4b82-aee8-d17bf9d66998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d69fe08-3a12-4b58-a2b4-44c369d920b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f41533-6975-44d6-8d47-589540333ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d384c7f-5389-425d-8d86-a082d806fc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e0b547-df4b-4049-8622-5644f333bf59",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a77e90d-3ded-4d9e-be73-8eebeb754e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f8fa54-02d1-4839-8c53-d411da62c747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8d00a1-5074-455a-8aa0-3d3bd5b04757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0307e798-a8be-42c3-b8d8-d5248043d487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02e9f4d-9393-4fd0-ab20-cfd8c99cc59b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f789828d-15e8-463b-b1ab-8ccc8a756674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f97f2a-6ecf-47d5-a326-6f0075a9dcd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c4bc08-a06e-4770-84d7-434003823e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7ed204-9ea0-46b8-8f20-967aa3f7a6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8b9a9e-915d-4f0d-86b0-d2190098ccc2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342c6a8d-4db8-4ef2-85e0-48a127f35be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1419da75-4b00-484e-9fdf-87199d73c6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb15402-fd8f-45b0-9511-52e063ea8a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "71b66a83-53a6-426b-ba6d-f7271c644fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0e9863-0a7f-48f0-a785-de60087a3ef8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f133f7f-7aab-429e-a0ce-d37cc7340cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a22139d-87e3-4107-8695-215d49c95a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d87422-855a-4898-b1d7-145062ecb5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaef32d8-477f-4100-b3f1-0ec1acac6536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d5d7fc-9f39-4ad0-8f3d-4787f182b4af",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac9c382-7dc0-427b-a65a-562ac3d4100c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0d553f-38bd-46c0-80de-b3550dacf7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fe5e9a-396f-4240-8afb-0d5bb561c041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "419a00ee-dfad-4d16-bda9-5accec93eea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72d1f82-dff4-41e3-84cc-25255802647e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ff4144-847d-4429-8caf-6d5cd933d62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f21370-a7ab-4264-9410-fa05e675f879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6e456a-d3b9-4a96-87eb-1cd1f0face16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04fd494f-60ad-414d-8d23-ed1535e4ade7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91df53bc-c87f-4a91-829b-9cc88388ff8a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e4c943-6959-4806-b0bb-b7b4d141110d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ed1d32-e79e-4404-b9d3-a5c9542f436c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af19fcef-d3a4-4b10-8d1a-3c8897e96cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c850ccc-f0f5-443f-9634-5ab9165fc1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be62192-d9de-4f0a-8af8-1b79e8e98515",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a612bed-c491-4c54-8d36-8cdfcce4a718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44700469-4865-4354-b2c2-061685a4af03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f93dad-e319-4ee9-b2ea-9a8170317919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4108e570-845f-4424-8b27-f93a0b98546c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ed368c-b6a6-4813-9dec-d06e34f4e9bb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b36cb0f-f1e5-4d03-9740-0f91a64f11a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ddbdce-37c7-4f59-ab16-833f6afba651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3556d504-ad61-457c-ad30-0c11fa5166e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86500fa5-c73a-497f-bbc8-90ce179c3398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb70c55e-9083-4734-880b-2638baebbb36",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be48e1e-857e-4c95-a06e-c5bd9250d9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce90b97-afe5-40fd-9286-1fa0e05a82d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abc4923-73d1-48b0-858a-99c61ce98274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "306d414c-76ad-4238-96ce-9496f1c57306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8900e28-f8b2-4704-b1ce-8eb2d93871b7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876df8ee-ca06-4574-9be8-2dfbaa67c917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31477db-09a0-4f7c-bfc6-aba211d3d011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3cc4b5-5458-4a92-b59e-f382b7dceb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac516c3-a258-4e17-bd16-4c8f8ae6dd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1ce52a-d729-4c42-9449-b98b225884b3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03995f2d-1add-4a56-99ec-3b4a87a19133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f472b28f-c46f-45b9-ba75-20751d03f0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6caedc-fcae-4a3c-97c4-3ece6ea1c7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a96aaee-c338-4199-9582-653ce44e4251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae6d308-32fb-4f11-8e89-bdd76503437d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220e3566-db51-46c7-80bd-e8d13e700381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18728d7-664b-488f-bc9f-eb4f7358c20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6070d8-ad57-447b-8dc7-5424529e7685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf58458-2e78-4f11-b051-cb4ce951f56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b415f50-6ebd-444c-8508-64d0056e6b49",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc5738b-29a4-462f-b989-530a7a556b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7050b8c2-0d97-43e8-b919-44201bd2efe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8b9025-18df-4626-a3b5-10def73b750b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34a2757b-7286-4f22-a066-f16a850dbed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efd4993-91f7-4129-b7cf-a686dfa2708a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccd5c8d-07a8-4750-b058-08080e1a3f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4321891-d8cc-4043-ba04-897ad4075f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e53e04-87a0-4b3e-b5b9-632b659d66d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "153f6319-30e8-45d2-a019-20776b803f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda20366-9c10-452d-8b00-f46b0961dbb3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ac7026-64cd-440e-8ea8-c3fdc00e69ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673e6cdb-7aec-4a86-9b2c-595c41e9b600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96991b6a-377b-4413-b6ac-4523d79a0da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "22011951-3404-4723-8848-22a16b19010a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0131dbee-f3ac-4f4a-80f6-ed4ece819fc0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d7ccca-7365-4318-b830-f2d7ad41da40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea70df6-c259-43e9-8ef0-865dd2797fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df618580-0eaf-41da-9be8-4864e3eead4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a561636-4744-49ad-9421-89e0c9105efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ca1449-ac3f-417d-916e-2e860038069e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477d989a-390a-4f9f-9035-219be250a681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e8973e-7dc3-4863-80f4-887e873174c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ad1bf1-4f19-4115-bf27-f8942c3f33db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d170db-b735-400e-b659-7d16785acd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d70b6a0-f131-46a7-a2cf-2549bff25a5a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020a7ad8-daeb-4c24-b727-62d4c178dfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0433ffdc-8b63-451d-9173-1d8a28fc7cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cabab39-a763-4b58-9be6-a99ffb4b22ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5029ec3e-74d0-43e0-ba0c-dd7bb83a1387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f3c7c9-1192-49b9-8ed7-fc7343635ab1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60683b7d-7d27-40dd-b444-74c0bcac49b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbcfc19-75a0-4db3-a4bc-5c1b7fdf1bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0260ebff-b0af-4e44-8c93-c2075d142160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19190457-bd65-473a-a327-da743f11ff82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf2ff92-0c27-44e7-8c44-5b65b9745c59",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b98d48-12cb-47e6-88b5-4698266052cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6b7768-b89a-4c41-b001-2d0419179e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17be657-641b-4ea4-89c2-4f9935546bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27762b54-6b96-483d-9d6e-525aec59725e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b9e581-00de-4aac-860a-62bd912547a3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8414f762-e0fb-47b2-9889-40646be00ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14876d0c-3487-463a-a4a2-397182519547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3a130e-76f6-4817-b6fb-bc0b3684f64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "90736768-6ead-4a26-9001-48d9df64c9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e83bad-d88c-45cf-ab53-cb3e9444f46c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1b253f-6321-49f0-8a8d-caf972421667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8dcad8-254a-4b93-aac2-1a10a053fe6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62436c0e-1ee1-479e-91e5-1219bf9b2738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5481b38f-880f-4ce5-9b27-c3c4bb2ef080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cea29e5-7250-4823-b7a6-fdaceb218c8b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6525be-6816-4a0c-9968-4a0accfcee57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edac2067-d0d7-4f4f-877d-42debfd24411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0a08fd-011b-425a-a7e8-47fc493c4103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8417feb-c00c-4387-8a47-a1172858436b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee230c9c-b564-47b8-9f87-75fe50356340",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb72c66-c042-4cd1-9df2-1c223a2d3b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57202630-e826-4de0-8eb6-ab94c75eb443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc256b9-b1fd-419a-a9e3-59e16faff76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4777ef4e-230b-438d-8dcc-86f0c439ffd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c058067-ae22-4ff0-b0d4-115830fa4fd4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694dbe01-bc22-4ebd-b5a6-be6fea2c0228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6414ae-09e5-40cc-9605-c754d2b88f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f94b89-6657-4ebf-a7b2-958cf8af06b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "de46f6bf-9b95-46c8-8861-e18b25641842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75ba2bb-d589-4a63-bdc8-9572a69f2c77",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec3f3cd-90e9-437c-b311-ca56edc8bb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a841eea0-7eb4-4df3-aab6-258ae2e70a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbbdf86-bea4-4f6b-9e3b-b8aca3290495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa86b5f-f0b3-485d-868c-49194044d233"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "846faed6-c4f3-4e08-a624-bdb63cfd8149",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3612c8d9-4544-431a-bf67-6b1392f756df",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061c12ec-ee1a-4ed8-ad64-a5736e1258ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b023d829-3e88-470d-b384-1f51a40535f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a741604-ac42-40c0-b5e1-1edd37df5075",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7610824-9481-4958-962a-ef3a977fd663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80891075-6e3e-4906-9d9d-18997fab6fae",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be69b741-1b34-4b3f-a443-6c6c4ae82862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9ac1094-90ac-4274-9355-ea389f5623a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b38e921-e309-4ce9-be3a-6b3ae71c2566",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ce6b558-ad79-472b-b747-b377d4b4bc3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2560252-b034-464e-aeee-965b66394433",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7bcca98-bb9f-48d3-a2b9-3f73cb4ff67b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a91e8a3e-9ed0-4543-96a4-16413df3a8c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf7bb3a1-b64c-44ca-9d30-9c3f6bfbf3b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a5fe1206-01fb-45b0-b0f7-66ea922d2e44",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2c4f00d-ff6c-4153-b547-e14c1e3978f6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cc0c71e3-4497-44b4-8d0d-5580e8f5ea0f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "384f0193-447e-4e86-a4cf-e6891f56b921"
                }
              }
            ]
          },
          {
            "id": "1cae64c4-f644-474c-adaf-42c80e1388a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "082c0973-709f-4ae7-85b9-95fcbddded09",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29369382-e91a-4612-8007-f35c90982ca0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "341106ca-81b7-423d-8a86-899d7146e8be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef37b9e8-0ddc-4b05-9232-de042177243e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76a1b22d-00db-4412-aa1d-12d065650833"
                    }
                  }
                ]
              },
              {
                "id": "ac8e4728-a357-4b2f-b351-d42bc204c4cb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65553850-c4bb-49b7-8e53-3f8133c5b81f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d6fdde3-c1b4-4b37-9f46-a5c79d7fd4df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe1647bf-2b42-4569-af79-e48e2522d8e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f6545e1-d863-4a2b-bad1-35d3fa67f2ec"
                    }
                  }
                ]
              },
              {
                "id": "858cb8b0-1d2c-4bad-b2d8-1cbafd5f76fd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dc99643-15d0-412b-a6cb-48b2a9bc5a3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dda6423f-dcd5-46f4-b671-dcbb474a1a4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf8d3b9f-dd3a-4ffe-b27a-c4f7d7ff54e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6fa42bad-67e2-436c-a06e-36db45614494"
                    }
                  }
                ]
              },
              {
                "id": "521c3777-448b-4e8f-999b-a8589d550a60",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1bdcadb-5c32-414c-a813-eb3174644a66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d043e63-93be-41d1-a74d-cd3c4c3c83a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a0edd15-9675-4556-aa59-97e005a9fa40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "edcc55d9-a63a-4a59-aa40-a5e5d48e5118"
                    }
                  }
                ]
              },
              {
                "id": "cbe0322a-a26b-4427-a11f-1fadebb0e8aa",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d88e66b-f038-41c8-9466-31e2754cf386",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a2fca8f-734c-46fc-9a12-c99a3d25c40a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5abeb62-15d4-447d-a492-270b6c5544c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "00789141-0f49-4e2c-9014-18b0e11151ae"
                    }
                  }
                ]
              },
              {
                "id": "2b2f4957-c94d-4029-ada0-101a19347ed8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "449f6042-90e3-4296-9235-5374b171f1af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f26522b-68aa-4204-b6cc-35b8d5fd2cfb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf1e8a0f-8e3f-4382-9da5-e44817e34d73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "59383f2a-e5b5-4067-90a9-4df8697c7707"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "098158e3-654f-4f20-b703-789fcf14da81",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c98086de-e771-4ad0-bcc0-fe4cd73c3afe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c8063238-d0d0-4a61-96f3-f5c760a35f53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff0de96c-0ec0-4048-b566-a86efdc05b8a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d97e0dc-0dd5-4823-a3dd-cb40f87c13ce",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5d1236b6-c0d5-42b2-af97-504f2042056c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1940781-411c-4187-8a10-ba81760d370f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "765c7faf-2cfc-4c74-87ba-5855cbfb2e76"
            }
          }
        ]
      },
      {
        "id": "84a771c4-478d-453c-98df-04352ad40387",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c426389c-b030-4a32-b767-72038a579322",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fc8a204-a318-4e34-b674-29aa10bfbe4d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e90074a2-c5a7-4294-ac2e-51f2293234bc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f00e52c-2c5a-444d-8fe0-91cd627b0b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d06842-a9eb-4f1c-a146-ec009aa5b057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39836cf-e4b0-4a77-96f6-f4c788ab7f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c73444-9bb9-42ee-9e1e-74c90c8063d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ded5e6d-f649-4c0d-92e8-cca03f62e56b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6748eb0c-f209-4511-82eb-165a13149e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e262540-37b8-4ead-bdaf-a9b4472d7e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47751270-bfa1-4f6a-9d7a-a8deb6f3dffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4807c87f-e756-41b4-b9ad-0244da206753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5272f3b2-fb00-41a6-a09d-91cc11ce4b8f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e041e590-9db3-4c18-b725-a35d838f99ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc11915-4864-4c6f-91b0-e48106e5784e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8debe6-6cc4-42f5-a64a-483e137759f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a82ea856-cffe-4b19-a8c2-e37cd56070d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9c8c73-fa66-4de0-bb4f-3fc6e2b0fce6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136662a0-1c04-4c0d-be39-d531735878e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79c90f9-1530-401d-a379-171bac6e7608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd5021b-67c2-4ba5-89c1-4168133f4575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "209a8952-4613-4e39-b346-2ddb1f5ce12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8e5c1f-b86d-48a9-b1d2-5aba746d6e99",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a99099f-943f-4f66-97af-ec92b6021e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87b4603-e38e-42eb-8c2d-01e47468255c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378136f7-2ce4-44f9-b378-f72d20ad174e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20e5f70b-99bf-4e61-aaeb-64dee5f3255b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ce5bac-caf1-4d7a-9177-62eb3f5acc69",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da9e84c-3e17-41ab-8040-bc5348c779f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03832be1-5d2c-448a-a6fc-f8b436ba2dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c95d1b5-c4ec-4c2e-b48a-0d88781ecfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c99e1db-b19f-43ae-9c93-80720b775cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41c2ede-97b1-494c-bc33-f3af5f463eb3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d25bbef-a9b9-4ac8-b32f-6108f8f8027a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bda4e67-ad26-45c1-afd9-25d61ffdf485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0323502c-06ca-4b70-a5f8-5daeb1c37794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2df2b83-226d-477d-971e-fa70596d0f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5796370b-12ac-4193-87b9-c2a951d61ab5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b031b78-a504-4af6-83fd-c1b8220bdb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0610faf8-7243-440d-86db-07e568e0e5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664b4a68-f4c0-4989-9f94-d7a4873ef2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6baa0d3-5ac4-4ffb-9478-6a04a6ec459b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439756e6-317f-47ee-b60d-1a823c4836b6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a38fd8-1d25-404d-bbac-7efbc17c570e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c29eb3-63af-4f2f-87cc-1f3c7b57a487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e56e0f-352c-409c-bf4e-42e83107b64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76d1c67b-ae1c-4b2d-acc5-987e9a7fe37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af2daf2-6230-43b1-9f3c-d32e0eb68158",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9066d0ee-66a2-4468-b705-bf908689c549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634838f4-1f1e-4647-8e1c-f15f1d6eb395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e189b3-ae58-4e00-ac5d-ff980d1ab744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4808d4-6110-41e0-bbd2-e453e7d0ff8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41834f75-edbe-46dc-9c20-53e39ef74c7e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2778b35-bf52-481a-8ed1-215475c8a60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a7edb6-29f2-4554-a529-9fe08bee77df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6db99c-076b-448c-9d2f-e8b7ccb91758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b66a4ee4-1228-4f88-939e-dab8716d52d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b9ea95-182b-42cc-bf19-26da072806af",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bb1751-966d-433d-9369-b097648f40b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d4716f-3af4-4141-9183-e3082f8d7096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714491ef-1059-4d62-b371-ec0e2478be45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47dfe692-04cd-43b0-befc-709b505a3542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731ebb84-4232-48e6-b03f-a366571db4d0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66de16a5-6c05-4ede-a3aa-f34cc3c84b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dbe700-ecb3-4818-9d53-a4f71ed7d12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e2a1b2-17d7-404f-a914-1f1dc7409c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6186e8-596f-4800-9f97-b2d290298251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6113b61c-7701-45ae-b932-9d11058622a6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa2d19a-f48f-445f-9c8b-4c1aa8c979ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82ae74f-d92e-4fcd-a868-2282d63a8759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69045551-6f7d-4c17-9bba-7776d6172f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "61e1f3e1-5465-44dd-9e80-631ddc24298c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e889ce-a7ae-4d0a-854b-b26b88c847ec",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b619d4-b7c9-40ab-af6e-8d6750ba81fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe17c7e7-bd67-41a2-a564-384c39dde350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba8d74a-ead8-491d-a23a-7ed2734b0cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d830c8cb-02f5-4fcc-85da-706d0c8ec1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba27759-d9ab-4319-9184-f01bee277acd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd87a3a-dc2a-49d1-bde8-6ee5a5f50062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d53062e-ca74-4615-94b3-192628cf472e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbf0911-bd23-468d-8f31-df247d377296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee64cf87-2121-4d19-8f6a-15f54062130b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3cb20f-7022-4fc3-b7eb-4814ee1d8f99",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616ab561-4242-4db9-ab5d-a5d62f2a9380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2f6cd7-9690-412e-ac29-1456f8cbbf65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a60a28-fed4-4d64-812f-4febcf6ea91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "474777e0-9ae3-487a-8625-0f099e9d4183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388f9a80-97cf-446b-8a81-3cb9dc9ad244",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767a6a64-8fc8-44b5-bc48-522a4ba58b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad584fd-b74e-4653-993f-78afefa9be3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df00d57-fee8-4cfe-bd98-9cd4c3ffc671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59184733-3273-4c91-9af2-7b39e58991ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def1c978-406f-4d9f-b60f-4bb2017a69ec",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bee113f-2953-467b-8241-a6655e6867e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a5d64f-6b20-4336-ac44-f212b905b5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bce15e8-ca06-4689-94b4-1a257f4b496c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1e0af5-6ac5-4689-a731-d8540b893495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c21595f-d3ab-4c5d-a6ea-bf0aef3db840",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64769e35-31e3-4628-80cd-2bacbff61bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ec8f32-26e5-4faf-81ef-9bba51a36215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52296586-8f95-44d5-ae7e-3f833ef32779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d555e1-42fa-4947-8518-43e3f4e6aea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78ec0f0-4291-4d2e-84f3-d3c82a5ebb26",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6e454f-8d2f-425e-a38d-0b44136f805b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47a1c57-6dc8-4d9d-9756-867bbcf4d758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab68ee11-3884-426f-b983-a615a6b6cc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "006e3aa0-0e3e-466b-be46-d54190ad8928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55eebe15-4e5c-4c7b-8474-2cd2f3b57d7f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25051857-2aae-4e91-a0b8-165646b81a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b50acd-ca35-4d8d-937e-90d7f8aa58db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7bc20e-e710-491f-a749-f4fa81b2396c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4964931-9110-4431-a2db-cf48fca783c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006c03b5-b021-4233-b1fd-e8d3b4520dd6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a6f94e-6566-492c-b7fa-35ae16965a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a3737a-0be2-4ac0-97b8-c59e18e50976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5790d7-ccd7-47a9-8367-67582235a47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7047428d-66aa-436a-adec-3d6a3ea26f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970ceda8-9b0d-41df-95bc-8687cc57f22d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c89e4c-cd98-4ab0-810b-f89a0e6b9fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad17a2d-1ef6-4a7f-9ac9-bcc746c4cf6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dd00ce-a154-4d3e-9c33-ec69b1780973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f595f5fe-68e5-45be-9ae9-09cb82386fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de74b37-31e0-4276-9bc6-1abe8be4ddfe",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6035409-ecbc-4289-b4ca-c98f60f05a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27510f73-4a57-4215-87e2-efc11557d663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d12a9cb-ff92-4f0c-86af-921cbc3d826a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86334a16-31cb-4f35-a380-a4f5f2b452ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa79c74-91d8-4c89-adce-17b678ce78c8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9305de-e509-4838-83c4-90e6c7f7b0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b55ebe6-baa2-461d-9dfd-85f2274f4699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b8ca44-f549-49d2-a09b-19cb0b5748a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5bd9d3-f6b3-4869-9fe8-36a8322699b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4097d893-96e3-48c3-8bcd-2327ae9e9862",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495750b8-c337-4430-a259-0436002f61f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02152df-e95d-420e-846c-8c4964b76f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d36015-0dd7-40a0-ad1b-12346db43fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9dd175a-cfb7-4730-a26e-bc1f3596deae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7888f12a-abbc-4ff2-baea-410a0c00d714",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079ff0fe-bcb1-4cb4-a211-befbd40126a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91436ca3-bec7-4875-babc-9ee1aea44212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc90d26-6213-4005-994b-992a6d07fdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "582e7c9e-7f27-4790-ab2e-ddb5f375a082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9eb97c-b6b5-4ddf-899f-c90076b5b740",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a92891e-86f2-4d18-baee-5596bbe0209f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941272cf-0f6d-40ad-b828-e4f5a4d16c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d79cfa8-00ce-496c-b599-656f5ee32a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6d684a-cd3b-451d-ba5e-6d867c664873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a222f25-f437-4944-a623-d9566c73a374",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ad08a3-135e-4c28-8b0a-79264962c6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f230eb7f-7408-428a-84cf-53c65d77e241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c4a999-3b58-472f-91d7-0e183dda9c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed66c33-93d5-41c1-921e-c6a52b9b1e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d072699-0d21-4f83-b6ba-25f568c88695",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c323b4e4-7c0b-4de4-a0d6-1d7903e3bac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4964673-ba42-437b-be69-ee3e66436abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953b9d8c-c88c-491f-9ebb-54b7075b1cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a606cb47-fdb0-440c-9994-086191973a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79c592a-15e1-4d3a-80d6-aa806b82548b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee3965f-f9bc-4d89-ad04-1a5f04318adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb3bcaa-8775-48a9-9562-209e0b2bf400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3c2dcd-9f57-4188-a202-ebc6e2722024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a8e727-9739-426d-907e-ef153c909a17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43d6dec4-ed32-4e5f-8d42-3ab7aa99301a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf27a0c2-a121-4a8d-bc46-de585a3c6e2b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8547da5-9c09-47d7-8681-d50248fbf2cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "57c2e047-14c4-4b7b-a44d-fcd89dd263d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29fff28-0015-493d-8a4a-3ac4e30a8e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90f4c1a5-cd6d-4319-9fc8-870502004d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1de796-ca96-4fa0-a9e6-211e0b661bfa",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1925f6aa-3833-4b3a-8f3d-a9483853a453",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5754b4cf-2843-46af-95dd-e2844097dd8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0c9619-5f51-4f76-9e23-1e05e5979f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0539df5-40ce-43a3-8128-dd24731db896"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db83778e-a38e-49ba-b72e-eebf0e0f79c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47943fe0-2f37-4375-8882-8328b733a6b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e60ad56-1605-40b9-a360-722e1bb0a946",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34ab99c1-fe8c-4ee3-8fa0-71dd0dbf0d6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e313d041-1adc-4a1f-8d8a-8e164acbabe2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a3632e8d-bf82-4cff-8408-7fa0c649cd30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9503cc80-2cac-481f-baf3-e8c429a66dc7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0adeea39-bb2b-4c6e-bd3d-cdfad9e409bf"
            }
          }
        ]
      },
      {
        "id": "02b66275-ddb9-4ffa-9d36-b8cace1459b8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "48889161-a91d-4819-9edf-a2cf66384148",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2c5eee8-e9dd-4134-a769-65105d55f38d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f4cd0315-89e1-47e3-bc6b-23e17f3da368",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e922476-a593-4477-9abe-4d83b565d7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e2c698-bf71-4494-b6a0-31b34b1a30e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df83715a-c194-4e36-ad57-d66a134613c9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b31992-c83a-426e-b531-65899e902c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a034ffde-7bb7-4898-b217-3cd5c15ec784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62380aa1-c0f3-48d5-ac34-55d8d080ffab",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e789316d-d1fe-4794-a9b4-f037ed7c8773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e32175-fab1-4711-90e1-d7cdef1980ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16ec85d-b423-49b2-a93d-ce5f108021fa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a43aef5-fb41-42d9-8ad8-ca20a7c9087f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b3af32-ca05-4d36-b4da-0db0f2f7ab19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14626602-abca-4d5b-bf0f-fc9cb1a43b9a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7d20e5-febe-44b5-8c6d-8cd55237bc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b81a6e-cf6e-4196-960b-c6bcf66e3295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67d6830-62af-448e-bad9-c57c32ed53fc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba0b82d-94a4-40f8-b9c0-a0b04c626dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a32072a-35fc-4110-bd55-720fc77c4042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09336a24-4046-4cf1-a2b0-ebad7e8a9e99",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca729497-9bb0-4646-b38e-1e9c813c0e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2a3e89-011f-4701-8b1f-b162de114382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f631766d-e173-419d-a8eb-1dcd0ad6dc2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4849ebe0-e851-4c3b-83a9-ef9816f8abb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b9d19c-a6e5-41f2-9198-f82519669e99",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3ec1ee-2ed4-428c-bf7e-603b77bc6e55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f298ece-6791-452c-a97e-eca6df5530d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec60a25b-548e-40c5-8702-692dd6eefeff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464d07f3-49ca-4efe-9add-abe541aba563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d5e472-70a7-42db-a732-8e66e67354e6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661e7791-fcf8-45d2-b3fe-640d0c2407bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48bbffed-e137-4fb5-b0ce-d1216973177a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8390caa-2361-43d2-bc18-a99671bdf26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9c742a-7ff3-4c76-b4fc-ced277097c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bea7a9-541b-4859-b3e5-8357314a3ef3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198d0205-67c4-4426-b762-2bb3e8b0cf8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65524d15-5183-4ec0-b3fb-8473de0bb522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b91cef-a325-4d2f-980d-6df7bd82fe11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11105e5a-19a6-4a1d-8f94-74e99a4edc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50413caf-8a0d-4a86-89e0-f5d66965d025",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480125a8-4541-4600-8f49-afdb7c624f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7609a90-3c13-498b-89ce-e8a449df5193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb4bcdc-9516-4e74-8482-f563c82018fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef9f2ca-c3db-4998-81f6-c7ab59491f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1175070-cab5-4674-835c-dcfb9ede2c42",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cfb2f3-64f6-43ca-999c-d7ad3d1d89f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f97a9d-7bb9-4ba9-bb4c-41591da8a430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb47c19-f05f-4aa0-a25f-b01908fdf179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da384c8e-e1ba-4fb0-b16e-f3727b2af4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671a3b09-2424-468d-8eda-71e91d6912e3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2f66ec-0d10-44d7-a696-e440ad6ca5cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d273d4eb-b178-48ff-92ea-79cb57aa74a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fdfab2-cb0c-49e2-ad87-4a4d9cd4df38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07c3d72-6053-4993-82b2-2b90777e5e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbd9765-af91-467e-bbf5-a72f4dfb6638",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3466231c-5251-4ef2-95ab-d6e3f995ecc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc38ce34-c4ec-4138-8f2e-17b14fd389e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cc8340-e3bc-4e05-a040-0137c080678e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc07876e-757d-4056-b5fa-5eefcff363a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17d941e-4ca0-47d7-9043-23dd271bc493",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291ca659-6b31-44fc-9581-fec199caa780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea897af5-e13f-4737-9c5e-19a39733b122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30cb94a-a6cc-49dd-9c1a-5f76d32a87b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5094cf66-73a3-4f6b-bd03-714709ef030a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3370aeec-4084-4552-8908-3b6a2654a5ea",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85aacfe-afbd-4f68-8d3e-880ce275ebf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cc6f3b6-bfc0-46b6-9f5f-ed9aa842261d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a802848-8a1d-4955-bdfa-94d0ccbd8330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e94bffc-ed5b-4fa2-b6f8-bc54ca0a9f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c7cc49-7d22-4f10-9802-4f91b4647718",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164ab11b-eebe-4dbf-83b0-67552b5e3960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb583f6c-5312-4724-9c0d-4393ee3b1116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3e3716-ccc7-4dd4-b691-b0452719c402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a80588f-a9ff-412d-bcff-a8c4362c3b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a594e1-2e8f-4ed7-a4b9-f6ff9a280ddb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8186805e-b1c3-471d-b802-2ab0070fa84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c3e1bb-ba85-456f-a8ea-b86be43d0060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a944e48-75ac-4867-9195-1cbdf61a158f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c894820-672d-44f9-9537-075378bd5cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2608fc0e-1461-4155-a11d-d5f1960576e5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd74df6-e2dd-4976-98a6-b359df136c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52bfef8-ed10-400e-b911-7d58b8cbc3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29895f4f-8bd7-4f7a-a8e1-23f9eccb1c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbc42a7-b162-494b-af1b-f54aac61aa29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548895e2-72a1-4e29-a945-54fff9abad5b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e163a38c-d696-451d-b497-e87930280bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d7bf41-5473-4e86-aee0-f7488cc2effd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d954ed74-afce-41e0-8b73-33fa509675ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fdd23c9-cc42-402b-bd05-41cfaebb4b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aeb6978-4ce7-49a5-9395-a1713b7cd4d5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409fa34a-ed46-4054-90ce-e8ab93fd4a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eee7b60-37bd-4eba-b92e-21b548bdeba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40b079a-690a-4b1c-9b9c-3792131ad187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f2a842-e210-40f5-bb01-239d4eb6d94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74a0d51-bb8b-48d3-902e-cb33fe78528d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63821e9-fd8b-44ec-811f-90bd4712c31c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2f03a1-e388-4d39-ab3c-ef56e85c1d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e726e31-b8e0-4e9a-8ecf-579eabd06883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb5d8bf-e2d5-4ee9-97ba-1f88a0548ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8356637-152a-4e3e-93db-e4eb47510379",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d599e7c-7b7f-44aa-b544-7749e14af484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c755e59-23b7-4216-a220-e75a5fbac7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b19eba0-8db4-45b3-8f0a-313e8e487b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6979644-d5be-4bd1-8b48-f3b7a1c01e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c6c36c-712f-4fbf-a18c-0d61374869fb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a059dd3c-447b-4e14-9a51-3b391f17d0d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe9ed31-6a45-493f-a98f-b443b804a083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f7c41d-ebaf-4e44-80b0-835123e2e104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3f2674-1422-416b-97cc-7b7e0b2faa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450a901b-9af4-49d2-b582-a52bc0c07a3d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4867391-94e9-4ef2-9939-87e87023d8c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88af5f7a-e719-4b7f-b9fc-4f560681423c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42520dc-a758-44ed-b35f-cc0945e7adba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd10b6b-226c-4dc3-ae4b-d01f0611c029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27727c3c-c54e-4671-a1cc-95485f5d20da",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f2e47a-4c59-4a09-8d97-424b39766101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d682b93d-1f48-4d8a-b2af-897d912373cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6766b7df-4519-4336-88d7-aeb9e05c2f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279450b9-c354-43e8-b024-baa35aac1885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc13afa-1c64-4db1-8f72-c1f3cece3fc4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd12da7-9d4c-4d67-8145-a67d37c6e241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c7c52c9-f3c7-41b2-96b0-831f24e6405b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c3f327-9f5c-41b1-82ae-aa7259c49ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0df4f3-8962-4617-b65b-7d2c1dfec856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7b662e-794b-43a5-8f41-1070082d00f8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b80fbe-2168-46c3-8c7d-e73cb86f456e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee5ee74-57ba-4868-9b0c-b3d48f86428f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa205a5-88fa-4213-b294-c98c0dc57e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0630dc-022d-4043-8077-e895b5b48e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919a7e6d-aa89-4730-8287-85e0c6c7045a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76807985-8998-4a42-88da-1b8f495bd947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f8c2c4a-bdd1-41c5-9845-d4b15a973764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b68043-36fb-47e8-bf2b-862b656964ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87eb28fd-18ff-4ba8-90d6-e13ccc809770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7356421b-5701-4773-9c24-94d09779fca1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09398488-7d34-4b53-8a92-1ac634156078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2ca721-11d9-44ea-ab7a-a4a75895bd3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37c30d7-84d4-468f-b882-68db5d455519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca00e26f-99f4-4dd0-a011-b2388dcc3c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4aa453b-2fa7-4ff8-870d-e77e5f9ac387",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f73a7d-e1cc-4cf2-b017-a296e94fcd6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de91e297-59fa-4390-8dae-c3a6a5969ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2b1ab7-7799-428c-9491-af7d0947de16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e468ac3-55f2-40af-a9e4-5ddb8bfd420b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cfa362-fc02-41ff-911f-0a3cc9799c02",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005e09df-95ee-47cf-9981-9c4d9b8d3ca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b0af4af-c460-448f-a622-68d0f57872de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbf3ca6-11b9-42a6-922e-cc1c9be62385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c423979-3900-4c78-b848-20597566db1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b40dca4-ce62-4d55-9249-9024d74103b1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d403eff-32ec-42ff-8f4b-6b24ffca2d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8402397d-4bce-4502-9c22-6a9720917afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c990de44-4ab5-48d5-955e-8d0156699479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6a8918-0a0a-492c-8c45-717e2fea21ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54e074f-0639-4897-87df-089fa93fd50a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aec5397-670f-4f40-a7a2-94a48a8a936b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d81c9984-00af-46ab-966a-f074985fda22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b632d44-0028-45fd-9381-39689bc12db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9474c0e1-6a23-4583-a255-2bdaff690665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358b63ce-2ad0-4e10-ac06-08af51f95a68",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6491cfaf-c5c5-45be-8470-b777c272ee11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b29b847-9ab3-4c3a-8cca-5f5dcaf75ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02cae74-1742-4015-a73a-9351720e0d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cb8c29-27f2-499c-9454-5407a3a5425b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607e1f41-e8d8-43b1-88a8-389a0a87dd3e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53d75bd-e838-472c-9fe8-98869b8e20b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10eee92-9619-485a-9a37-52257c2f6465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41435df-d34c-4b7a-966b-bc13002190ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08bff5bc-7b4d-49c2-8fd3-3f850f198761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a49ba44-00f1-433a-a04c-e9d2de3bd130",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37e7544-2a69-4302-8a87-3ac22e31c6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae82ca0-55bc-44b8-804b-9396c7bef062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f6bdc6-3b23-4441-ae91-b4f9f37e1cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0b7430-6d07-4b89-b5b3-43fc0f36419d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7533c1b3-61cc-430c-b129-dfa3760240e4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc615813-a9e9-4506-bd29-2b4325b4de00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14795db2-ce9d-4c9a-b238-bad8f6c7b064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028e6093-9f0b-49d5-8895-cc5623599cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df93838-b21a-4306-87c2-6715441ee454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099d7712-0b74-499c-bfad-0a0fbc86ced3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86016c5-97f1-4b0a-9992-85580f008e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ff2fce-341b-4af5-8f6e-cb44fed75105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af99a476-82d1-4fce-b226-a152a853be8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2de14f-223a-4c49-adf0-33be1aa3f429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2debb1-fcf0-4733-8580-16bed3159591",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe84804-46e6-4106-a8f8-103743f12091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81e010d-b2d0-461a-952b-cf28a7337bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cadc90-29a2-43a8-8d77-800053f65fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71bf7f1d-bc65-45ce-9896-2e0c2c86a206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05114529-857c-4c0c-b280-6de3bfee229e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db92f53f-1454-480b-b56d-d1aea188b9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1492e72d-cbc1-4075-93ba-fb9982f8b077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673005bd-944c-407c-a3ed-94d9c72a010c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04736375-3b40-4182-bcdf-a9fd865a7caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab30d51c-ab68-4ed9-bdf3-e7855e0f1992",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7037ca1a-312a-4a30-8741-7162f4ab1625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41757507-eba9-4ef6-a66e-15616516839a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7f2eaa-79fb-4240-912c-61858d7758db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2825792-6e20-4b37-92c0-c036535a9734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2511474e-cc33-4587-902c-38fe9e670417",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d4b256-6db3-488d-baf3-84e9534324a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed4f83e-d881-4d58-8a82-2d928c3abbb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1a90df-0fb6-410c-bfbc-260644192f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78df1d7d-eb5b-4d51-a4e3-23aabc099833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8b6f0d-0ded-469a-b1a0-6646892c5982",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31102565-462b-4b7a-828e-4b617850588e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc00b12-99a0-460d-8f1b-7e797f1f737d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fff52d-a75e-452e-be23-b4fd74dd1eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519893bd-12c7-4c28-b680-ceefa798fbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247bee6f-98af-4094-90de-cd09a5d874c5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340d1df3-4ee3-44d0-a1ed-3cd68bcc7dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19cb935-fbd2-460b-8e6a-a5d232df0ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e449a66-58b9-408f-9b2b-a8c8c87d1dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9139e5-31eb-493b-88b9-116045a31a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba59c4c9-33e1-426b-9cc6-5b20a8861cf5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5570ef-8ee3-408f-bb3a-ed1d90f8048e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd1e135-5314-4287-b237-4e50ef7f01c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1aa8a5-0594-4ee2-8a7e-feae635f1c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc04348-22e0-49cd-b0fb-484828c29374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a37142-442e-4263-afae-74cde439299e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332d0451-3996-44ec-85dd-5847d11aae3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a701a9-43ac-45da-9a69-2b760873b72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0346031f-0e9d-4eac-b45c-ae3592b2a184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82df299-03bb-4c6d-902f-247255a1b181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4b6018-5fba-42a3-bad1-b7412faf262f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24d5b8a-a62f-4a8e-8894-1d6e6262bd24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df57bf8-8fc1-403f-8ad6-f969eb3265e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ef7d26-d042-4ece-85d0-b0ae2a04481d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd24225-7b3e-4393-a1ce-d8c8f7f179c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74a9558-f7b2-45ee-9859-727e2ea77fe4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f33e2a-9712-4916-a6c5-6e54c3f3b06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cda5eb-1238-4736-be9d-c983d182692a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ff0e36-b892-4869-9312-587f8d292cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed61d9b2-7b1d-45ff-abcc-d7e193d3c14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a8180b-5977-4c19-ac74-5391984be4d3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47c7c63-fe11-4313-92f6-5d09d3ad8ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901fc7d1-c76d-4504-93f3-83b3746c2b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9e9fb8-4bb6-47ea-9737-f4e155784509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da502bb-91c3-4da2-9d6b-23397ab63306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871c0448-4670-4dbb-a7a6-9a1b616136cb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03a92ae-6e1b-48b8-8e96-8cfe7aed4c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be771476-8664-4f27-a298-5d6b6b5761f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09965db1-a99c-4382-94d2-84d4331308aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c5e077-0b16-4ab3-ba8d-abc3ce916df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36787bd5-989b-4063-91ab-93c14f7202fb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7dd355-c1f1-4d1b-b661-a6d9bedba6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fed81b9-04a8-4c56-b665-a0ba88d3e46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f445ad5-9ccc-4caa-9c9f-465fd2330361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72e3673-7a57-4196-9371-8d35d3a3e03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31ac2ea-b5b9-46dd-9f97-7ecbe2b5f544",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0723cdac-a913-47cb-99eb-601731ca694f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046e9c50-80a1-47e5-840d-a26e4013236d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fdb9ab-3343-41bf-b986-c341ba7f1db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c42273d-3cc6-465f-be17-aa5fba2546ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45dc4aea-52b3-4ef2-bb74-16faf2721758",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c5d35f-10e3-4870-b82f-8ced60f7de25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a19282d-8748-41bc-8830-e6a7cce1c18e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f909df41-a355-4901-ad70-5e2d52e18f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639e6826-48d7-46ee-b3db-e70db6bdde47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a07f8d-fe9f-4d95-9da8-14cbb456b349",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa8ca93-5a9f-40ee-b6e0-528dc08497af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0e8162-41fb-4196-a256-affc17d2508e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9361063-f919-42d0-a506-c57db41f2c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd9eda0-bb8c-4327-8d14-55e1831ffe92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc587854-c87d-466a-94f9-5045c32da10c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50370229-312a-46fe-bc56-2fa2bd18314c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735ad986-be96-4fab-a8b4-8281f10c601c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0463aca-14b6-4c71-a713-dd385bc097a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d3c50a-ca9c-435d-bb89-69a3da9a2596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a00a41-9f22-4952-adc6-8af2ca29ce70",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3de1aab-fc00-4b64-80ac-904ae083ed4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ff3413-5ffe-41a9-8d21-980ae91fe347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5a0b45-68e3-4900-832f-6d327293bead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f11b7a-1358-4aa5-bb76-192cac1eb8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69eebf3-7ea6-43c6-9d5a-5b39c95a9eb7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f8ea57-3519-4c1a-98c7-a0db06d34db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9857a813-7e85-4aa6-85ad-14ad8a7cab06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501d7b74-e069-4456-9a1d-354e935873d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000f917d-9e38-4cde-9a99-ff1413c2f3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd05aab9-d076-4203-a690-1fdbbde10afb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d358a939-2cc3-47fc-b42c-56eea1b4038c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fdef52-4180-4eba-ad48-7a3c6dc7f14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fa401a-8ece-4af3-910b-4a05ed7679e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c577f3-fd9b-4d4b-963f-575e9fa16ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299814f8-af26-49ac-a6dc-d32e506802fb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67f0c09-219a-45cc-8b85-d06ddc610771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15601c4-bc6a-4be1-8b72-4175503d514e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ef5254-599e-411d-a782-6f16821d0f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0c690c-5310-4ab7-9571-7685d0764dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97297359-d731-405e-8a27-ecb7d63bb3b7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585861da-929d-41dc-8e3d-122ee2672c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53b570b-1b6b-4781-ab32-c9a36443a8b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b05db82-260d-4965-9733-1330e33d14f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9289e9ec-407d-4e7a-97b3-2c9167120994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96826df-bcc4-44aa-ad83-67d85318631c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec6f6c4-1fc1-4606-962f-e7199c6a28b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274d43e1-e83f-4c0d-99c5-f795274b68e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c686763d-57a3-47c8-98da-0eae32e474c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a66c3d-17a4-4912-8238-bed40b5b2b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c37a2d-cb4d-4dd9-85b7-39bf3b264096",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757e45b0-91ca-4fe5-bf79-221afa68ff44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5198ff7-d50f-43d0-97ef-a88a7c4b772c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13404aa-39ca-4e7e-82f5-3b688cb8d378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6a212d-c02d-4d4a-b2f9-31910c3d6477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f58b924-1764-4f72-be51-0811dfa8a439",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76979bcd-2334-4813-b994-2ea70bd0ea41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84d47077-8005-4392-960f-ebf431485d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf396036-8c50-40f9-a4a4-2f7015035f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d08b554-0091-410b-9725-8f50066b213c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1793e39c-f24b-461f-b594-28742e387d4c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d321d10d-9831-49cf-bfc7-55aef0d533b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab457364-3433-47d2-be42-0a92711e6733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d69f9d-8de5-4d4a-83ee-11ed9e975c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd420a7e-ce62-4b0f-8a59-2a3618b2c553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d256e4-cbd8-4f69-97ad-7d971dafc660",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20cbc36-03ad-4ff5-a76c-27f71871aa82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2bda6bc-c9db-4c67-a396-487de5d91760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4602b1-7a58-44d9-948d-eb617dddbfee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd3f1b2-0dde-4528-b275-92ff4d978069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34c4090-6a71-467f-b99e-8a1d3c6da484",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32aa7310-e499-4a62-ae6b-77e9f3262fab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae1ca8ea-3dc5-48e7-8e69-affb3403703f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "121620fb-1c84-4b60-bf84-be6ac85de328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5fb208-d33e-45e7-9664-dde61a820572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7eccf12-74fa-4d9c-b512-1dc2f541f464",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f640793b-2966-4ba4-8741-4497e6ef561c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "788fb04d-c7a6-4e32-8978-440b79c024e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c756722-3e23-4ef2-8f89-9ed31c29f8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881a35de-bdde-407a-bfd1-47578c2a850a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbda5d9-1ec1-4769-a78f-6331b9fe4b96",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589ccf54-8b9d-4c88-b969-085bb2c9e7d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d11df84-55ca-4851-9654-4f971abf301e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377c98a5-8c46-4b60-a687-ae9707f1de78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f348f32d-05b0-4701-861d-dcf8c6045872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f854b8ef-cad3-465b-a285-10859006d080",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68552fa-281c-42f3-a7c4-8ff3b4877dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b714fc4-3544-4396-994d-b6f25e69707c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef6783b-29e4-448f-8de2-165a232c35a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224ef0af-d711-4bbb-b2c3-2e9b76335cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5d74b4-0bc0-4929-9742-674503f1b375",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839f9f68-794f-4f9c-b062-8ac11008b07d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bcdd141-dd09-4eae-9f2b-5ee6f632d5b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6915a62-c99a-4115-87d3-58d70332200e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81aa3ad7-4d8a-45a3-a8ec-1fcfec88ebc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0490956f-41da-4e16-b55c-8aeb80b920a0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11ee9b7-74fa-4f0e-baee-d8861b523bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f6bf1d-ee9f-42fe-856e-fcd28667c9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aafcfd5-ac14-4b0d-acf8-1d9c0bd23f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce3759f-9f06-4245-b2c7-1dfbf3f67dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30270f4-2745-4e48-990b-ba66b24cc89e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba61d95-046a-4d9e-b6e6-abd7849fefa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece1218e-5e4f-4568-b687-ef23c8669a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35165a58-160e-43be-adeb-0005fadcdef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ac0f6f-7605-4575-acb3-31150615818a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d898e1-0cb3-466a-b900-3cad4a7a05d8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5bea3b-391b-4816-bdf6-f722c5052815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f14e742-0bb0-48e1-a703-bb3a1a5b9cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cd2eab-3f83-436d-83a3-c07d55bb30c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94cbe8d-7e18-453d-8d57-733bdb6db735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa9a3bb-628b-41d4-9fda-0b0eb188284e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72628e14-14c5-4a5d-a0a3-c362fc632828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "382b530b-5967-46d6-a298-9d8213804b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550e4617-e0f5-4285-b1c5-11f29f1d432e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfd78ab-2adc-4d11-8662-f58a8c70dd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070a8466-dbac-4526-9815-76199c3522d9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f302d4-f49b-4371-a171-3a2e6acdedad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f9d959f-c43a-433e-a8cb-8a4ae836590e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e74b4b-209e-42fd-9b00-b185dbdccaa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3de788b-f231-47cd-acc9-3044c1f33158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8e4756-05d5-4c9d-9a60-3aa88b20d39c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23960fe9-b23d-4493-b31e-e05a6a0bb843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81adc689-3f32-4f80-8d94-266cf547694e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3fc98b-c20c-49cd-8895-38a8f24225df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193de282-99cb-412e-83f7-454e69528825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102dcb44-3b6c-4f81-a2e7-2597c716284a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f229780d-0fde-48bc-9b49-7925a546617f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f78c109-c521-4829-a794-c488ae3be8dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493db140-c89d-4848-bf8e-e289c7c7938c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb251016-f2f4-4284-83bf-f2d5d300fc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cd7010-ca05-42bf-b305-6b1aa8842033",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51708b1e-8660-43cd-a0a6-3902e1d0cd83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c640a22-6298-462c-9707-83fc2a4cb764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb42008e-c06d-4b7f-9cf0-3f56fb7f71cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4296b04f-9e8d-4c40-8eae-e8c321632849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2991aa29-bbb5-4730-98df-ef4976829762",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42edcd6-0469-46a6-ae4e-219cb7ab46c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0599662-1e0d-47fd-81cd-5312b858c9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "867f04ed-ceb5-4d8c-ba62-7dfd9a9d67d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e562bbdb-1109-462c-a3ca-551303757591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333ca7dc-da84-404e-9a2c-1ecd14dae9a3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64e73cd-9606-4eef-a679-6aee8f5741bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02e52f4e-2a35-436b-a541-ba8a81fd9402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0607196f-05d9-4180-8038-1b4b7d139374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d966577-cc4e-40f8-8b3b-bb201312dd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a98d56-025b-40dd-86eb-3befa3cc314e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5325c80c-f780-4a5b-9a13-1110476ae916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50311946-4231-4ed7-bc45-3f64f4ee7a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3869fc6b-8041-443a-a8ba-7c38af490a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ec5957-a33a-40ba-89f1-a24a5cc3199e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e78416-7a71-4c72-8ebe-9c03cf68c8bb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b98b056-e3ce-4c60-ad24-d305fc01abce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67e2f022-ab2d-4189-ad4d-9af9f3509a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e627b1a-9b5c-432a-8324-4edf54309429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511df423-f729-48d1-a8d4-e9e4483d567e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a760ab8c-aa80-4d3f-a3f6-15e5f81a4ff5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd3949d-0074-4a6b-a4b5-965d169b0d23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b09a37-a07e-4bd6-9c38-77d5623405f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4740a5a6-e089-4047-a7bc-1ee82f448ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79a7451-9a57-4f74-a7f4-737cc7809350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ab081a-4e45-4862-be3e-d82f60688049",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98200c0-5a6d-4d34-af5e-b255e12b0f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e46ae726-67df-48ab-8a14-c00e6951caf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006b8c9d-de95-4f2f-a733-8b67b9fe9af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc080b9-aca7-470c-8cc1-85d001d759c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6142162-7a6d-42d4-b312-823551f40864",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9de6fc-af97-4114-a53a-384d532fa308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1864e39-9064-47fb-ba28-d0d9c5fb04a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9446e7-dd9e-4f30-b3c3-36b121b6a0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb78781d-85a9-4648-aaa4-5822206e0c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd90954-90b8-44ea-92d1-331d827e7cd7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987ba959-7b3f-4b64-ac54-77b85205d156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0333c625-134d-4ae9-af93-33b3b10e962a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f5aaeb-c223-4f5e-aa21-8025d10537f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f68df0-d1dd-41f6-8e05-1b355ddbb2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99d9779-c976-45b1-b499-a21f39f67317",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34cd706-4cea-4a55-91ed-f5e8afb5d716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "597909f3-fce9-4e84-a01d-f479b71f7ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fde696d-5916-46d7-8423-5615b82c86aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d5c23e-0ed0-4d36-ad04-ba00819c7440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22297794-774b-462a-ad9b-e24f173f5d91",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5421d0-48c4-40ba-acf3-f2684b91e238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55b8319d-ecdd-4d78-be61-d5b9e0cc2110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8660dafd-58f8-447d-a4ef-54e28154d400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e8f3ab-0ade-4451-bc21-b0d043250c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d2f18d-127f-41a7-a2fd-b5c761c1d444",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72e7247-cded-4fa7-9f30-bfd0c9d99068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f640a6-7f74-4e1b-b390-f316a9255d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a879df-81a4-44c2-966d-6a4407a7e0f2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270e2374-c64e-49dd-b51b-645e2f7146eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6976ad4f-77c6-4307-8c56-e3399d6f91e5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac8212b-e44d-4402-8c01-ba4dc8faa838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7362270-6b9f-4f05-912b-1210b7e14fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f641f4-7928-4cca-8d63-e466796f89f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3272bd83-e157-4a8e-adac-fd85806cb3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdf02ef-2116-4e0f-bd50-d12dac31dd92",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86057c52-97c8-4dea-b640-58fb43b86c4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5049d160-f7fb-4a5b-adca-b1574dae8632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1da294-08c9-43d0-b088-69f9e14ed003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273da1af-e73e-4ca7-82e5-6964999fa377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9e829b-5f71-4d11-b8c6-89392751ffaf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b520b80a-98ae-4fcc-9dd9-fe5bbd92cc32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54b89389-eaa6-44f6-be7b-0dc2d27b72f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adf8ab0-9f28-4dc3-977c-0eae95d2cd85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7941c763-2153-4837-811d-1282f9bc4d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea241004-fd32-4e19-a8c3-f4da0d2dc4e8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aea9773-2fb6-457d-9f42-4af11cd97822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81c4ee67-0553-47e6-aefd-7f674da86992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c2455b-2cc0-488b-a53e-1801c6699d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2f2e14-1db5-4526-9659-adbdfab0ea00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655141dd-2409-47f5-a70d-23e83d35e074",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4e0dc7-eb77-4c2d-9abf-6bc180cecc72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa625d6-7ecf-477f-8fb1-1ab02e453d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a67ac81-1915-4ef1-b417-70f38cdc32a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec590a61-78bd-474a-ace9-0920ec3fc4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a26922-a88d-42e7-9572-a56491c078c2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31a4383-245a-413a-a51a-ed2e32b5ef05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb13ff6e-b9d2-43e8-b32b-220f0f121b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fc4522-beb6-43c9-b05a-f8662b5246db",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4fcba4-ac96-41e9-89f5-af3ceec1a0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868f23f2-30fb-42ec-8b4a-81a4ef15c9ae",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddbddf0-71e3-4217-8c6c-746f8061b6aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f068a318-8c1a-4be1-a076-16c29bdec01c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e31a72d-4d5c-412f-92ce-3724a7eec681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c1fddd-39b9-43fd-ace1-39d1e623d1e2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39d7c98c-445e-4108-a7e3-4012c2857ad9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8710464d-db21-49fe-bc83-ae56bdfe940f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6494e72-5a74-440c-9270-402f521479d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abdf1cf7-eac3-4ac7-adf6-a27262160c63"
                    }
                  }
                ]
              },
              {
                "id": "968e744a-78d4-461a-a344-2502e6d33a07",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "430cf5b0-ef64-4cb9-822d-65f8938ea6c0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2658846-b8b3-46bb-9a1b-437ff4113944",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c0ad44fc-34d3-414e-b2c4-9ef653f32186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6419b70-d98e-4388-b33c-f46cae56ce43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da41f1cf-11b9-4a39-a0ba-a30a7716179a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3372eefb-c54d-40b1-9b85-120db44ac604",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815ca419-87aa-4def-887a-32af3ec8c2ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "be9fea06-dd34-48c7-bfa4-5e39156c174e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d0addc-c0d5-449b-9ad9-cd5fbf601302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f04ace98-3ff9-4012-b17a-48de98a8859d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef4c4158-d96e-471f-a828-19af3dcfe236",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e9c1771-5316-4f5f-872e-063df3ac5fbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae13e617-3aeb-4dcf-a748-14105b9a6e2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d0ea04a-4bd5-40cd-949b-1c985be9e7f4"
                    }
                  }
                ]
              },
              {
                "id": "303744ee-e54f-4c78-87da-191092069095",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7724d013-6b12-481d-86fc-8c13dbda4277",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce5996c-899c-4720-bed5-5d846b407eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2fa29167-39c7-4b72-a8b9-78618e801286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b414de2-73cb-4387-ae07-77d71203fd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8f9b66-12f1-4777-968a-4785b34a7497"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "62a545c7-3b50-4692-893e-56451397d695",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29d6ca9f-604f-431c-b095-db09814426be",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55087fa9-3d08-4f10-8b5d-a56c139f040b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "37c8fd64-44b9-45b7-a92b-e98433aa3d98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0e62fd5-5c21-4e76-87e4-6aa3f694d1f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cab9dd22-0d25-479b-a04b-cf9eb5966c38"
                    }
                  }
                ]
              },
              {
                "id": "616141a1-173c-4c7c-81eb-2b2b0cdac6c2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7fe19fd-abd6-456f-b505-2c7799e5f973",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d6c1d8a9-c578-406d-91df-3aadd03060aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e489e287-23e1-42b9-b01f-b6e3ad5a0511",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e200c4e-d45c-45d0-b6f5-8171ea057d7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c5655a1-3ab3-4acb-9972-7659ad65b58f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b3df5df9-064d-4ae9-a080-4063a0741856"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8dd66f4e-abed-45f4-8e7d-c76819894f27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8e82bfa-942f-4a30-aedf-6d8d34ab7d93"
            }
          }
        ]
      },
      {
        "id": "a9ea9d30-a908-44b8-9184-44a08ac35bd0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0f228567-0991-4135-8343-05fbf70f3f64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "484d4436-ce80-49bd-9074-b3091b7144b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6514b63e-4bd1-41b2-a5c6-f65e270653b9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb80312b-f1e1-425a-8180-28cea79722b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6eec2c9c-5d71-4601-aa2e-845c173d9511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2d12b9-17a5-460a-bae4-356fd2a1d623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7cacc50-7a26-4deb-b704-4d5c1307b732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a068942-bae7-4634-bd42-f53154902473",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b69d885-3c24-4a7c-bad5-c3791c7c1764",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d8d9918a-15f0-4906-9cfe-1c2656965792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de27619-2aa7-49d1-84fb-42e4c43793c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30f72a8f-5f8c-4657-bbaf-fbc7ed508c7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ada03dd-e829-4df3-9ed8-44c372810d51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df06d24b-9043-424c-8918-2519e5634e1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa570492-7db0-4c9b-93e2-336150efd4ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1d3cb48-902e-4d56-a688-852911c0697a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e93bd41-3f52-460a-9722-1e77f2f85d2d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "51afa4d0-4f69-4099-95c2-b5e62383166e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84fac002-e1ce-4288-a805-620d53cb8e44",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50b10e0f-6659-4a38-bbc0-c416edc10e79"
            }
          }
        ]
      },
      {
        "id": "b3e3f750-d27a-45b6-ae6a-51d8652b2b1b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9a0d654c-f982-4ca9-a465-6837a69189e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ea3bf67-f1af-41df-a5e1-2329678f7dd2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68207e00-fa96-4356-9556-e768d0218fc5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a8567b-e48d-4f97-ac9e-f363c7d929b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80e2fce7-1a84-4f8c-a066-c9c018be4ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419ee58e-c140-40b4-84ea-8f350165a49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3113a728-7f8f-49e2-8431-a6d6de24681e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2ab87f-4839-4efd-bb5a-4ffd24cf3955",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146df0aa-282e-4972-9fa2-7b4339a46aca",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e75ecb97-3a01-4113-81c9-62095ebc5649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c882ee0-6cc5-4d9f-b4a0-a9f3900ca7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58b376b9-e9bf-49d5-bd18-5d5019ee33aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3da7d54f-4c59-49d9-bda7-577f575320d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d06f7406-eba3-43d8-8c03-4de25525d475"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8d1ae9a-d9e6-4ffe-b96e-6aff6a538fde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e46dc049-31e2-46ca-97ac-10ddcde7e06d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81db2240-74d5-4a7e-97b1-083c87d4f4f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3c5ee1f9-cb46-4d50-b82f-77b9160f1162"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86665492-cebf-49e7-9f16-6ffcece89c06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6519cd3c-5151-40a3-8ec0-cc9f636c3194"
            }
          }
        ]
      },
      {
        "id": "93f059f0-9265-48be-ad37-7e725a0a80ff",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "06b52dd9-955e-4377-a9ba-4075c71440b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d7e5567-15e5-42c8-89e8-5c2c1a7d5d46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6585ed07-a2ab-4256-a6d6-8caa32087e2d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0a3084-ddb8-4fb9-a7d7-02924f57bb87",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8968f655-93e3-4e8b-8d24-10cccc32a288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bd1947-57c0-4273-925e-3c93d9f62dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06183288-83e4-4a17-a6e3-cdc921a965b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d1fbc9-445d-47bd-a45c-9a28f63a0e57",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f688413-632e-4470-ae26-f69d5ca90a95",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "43763e2f-9385-4495-b648-ac4c833fdfc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db6a7f4-4ee6-44cb-93e9-fa58a3ee6842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08791530-f114-4eaf-8c75-c7fe06d99942"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b555871-64af-4aba-aa97-f76a9093b88c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a4217c7-871e-4baf-a9fe-9d9d597def40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a05935ab-301a-4b97-b781-2c4ddfd1386e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88d2c2ab-1f66-4cdf-b8d0-2045365dc44e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12493f3f-6f7b-4448-bd35-6f1ec3505fa2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "86710426-c603-48aa-82da-664e27eefcf4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "473fe230-0a89-4417-aea4-883668562d6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a3a9641-fc1d-444d-b57b-3a2edd4f31e5"
            }
          }
        ]
      },
      {
        "id": "6a769d06-4d09-44cc-9533-04d02b6fd165",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f666e6e5-2058-495a-8bc3-16a06eabeaac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5792cc68-6344-458d-8d5f-713e0094eb4e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "dab239d2-f9df-47d2-80e9-a0449d7f594e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7b866d1-0e20-4422-8cce-50fd15b5e3a8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cdb9cff-ed29-4ef7-9763-d8743b34de20",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 42.861538461538466,
      "responseMin": 18,
      "responseMax": 350,
      "responseSd": 41.28293628610216,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680914065564,
      "completed": 1680914087120
    },
    "executions": [
      {
        "id": "de82b8cc-9ff0-4026-a272-1e32eeb78546",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "293d8555-c644-495e-a05f-d72d6218527e",
          "httpRequestId": "acf3f9c5-6330-408d-b8d9-582c1a34f604"
        },
        "item": {
          "id": "de82b8cc-9ff0-4026-a272-1e32eeb78546",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b3fa4cf1-0d58-4301-8c84-564d978414ea",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 0
        }
      },
      {
        "id": "fc67d7f0-60e4-4708-93a4-d2825c4dc46a",
        "cursor": {
          "ref": "fbb12d9e-c66d-4523-8fc4-81d44cfd5284",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "24ebe329-8fa9-4e8a-96e2-2afc397f7827"
        },
        "item": {
          "id": "fc67d7f0-60e4-4708-93a4-d2825c4dc46a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0caaff16-0971-4941-9576-1b175d213f2b",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "3b1e1417-61cb-498d-8c8d-d1a664684737",
        "cursor": {
          "ref": "7d3dd09c-0291-4ac3-a728-b62854603138",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7d897ba6-49d1-407f-bcc4-31f50e828fb4"
        },
        "item": {
          "id": "3b1e1417-61cb-498d-8c8d-d1a664684737",
          "name": "did_json"
        },
        "response": {
          "id": "3bbced3a-8dfa-4d81-b9de-6b9ec0aaedf4",
          "status": "OK",
          "code": 200,
          "responseTime": 146,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234ea256-260c-4737-93a1-a88d00868f01",
        "cursor": {
          "ref": "5fe0ea29-ffe3-40b6-a274-22235a3b7965",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "836d0e7d-39cb-452c-b4fc-3591416d90c4"
        },
        "item": {
          "id": "234ea256-260c-4737-93a1-a88d00868f01",
          "name": "did:invalid"
        },
        "response": {
          "id": "fd22e0ee-a190-4b0c-ba2c-63f4adaf9a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234ea256-260c-4737-93a1-a88d00868f01",
        "cursor": {
          "ref": "5fe0ea29-ffe3-40b6-a274-22235a3b7965",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "836d0e7d-39cb-452c-b4fc-3591416d90c4"
        },
        "item": {
          "id": "234ea256-260c-4737-93a1-a88d00868f01",
          "name": "did:invalid"
        },
        "response": {
          "id": "fd22e0ee-a190-4b0c-ba2c-63f4adaf9a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b0e444-9f21-4adc-9263-9a0d3899a8da",
        "cursor": {
          "ref": "78487865-a549-4b1b-bc9c-8d757b61d6e5",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dba5bfbd-78b3-4247-8686-f794c47aec40"
        },
        "item": {
          "id": "f8b0e444-9f21-4adc-9263-9a0d3899a8da",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "53f227e3-540a-42ef-b387-5fc9ebf98ff5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b51ffe-98ad-40a1-a425-548cdeac8649",
        "cursor": {
          "ref": "5f9a3571-ee8a-4d95-b274-5d9b03aab3a0",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ffa1f826-5ce1-492d-be95-8ce5d909a8e4"
        },
        "item": {
          "id": "90b51ffe-98ad-40a1-a425-548cdeac8649",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8dfe9206-6262-4a08-8fba-033d4ef6f7fb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6382c8e-6988-480d-8cbf-5a0cbc0ef489",
        "cursor": {
          "ref": "5ffe40ca-e75b-4f0d-962f-d8f4597905fb",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "52e7dda2-e925-45ba-a95c-2d0cc40a051d"
        },
        "item": {
          "id": "e6382c8e-6988-480d-8cbf-5a0cbc0ef489",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "60fdea8d-6e79-4fe1-b0d7-b754d84eb5e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb7ef95-f68c-4f7f-b7ee-1ab322a45b20",
        "cursor": {
          "ref": "41a22653-7e8c-4048-9b36-93648fabf521",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d0ba0c8d-54c1-4734-90da-ca9935999449"
        },
        "item": {
          "id": "dbb7ef95-f68c-4f7f-b7ee-1ab322a45b20",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0b716124-cdc6-47ff-8f66-1a11727d1b8c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 34,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb7ef95-f68c-4f7f-b7ee-1ab322a45b20",
        "cursor": {
          "ref": "41a22653-7e8c-4048-9b36-93648fabf521",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d0ba0c8d-54c1-4734-90da-ca9935999449"
        },
        "item": {
          "id": "dbb7ef95-f68c-4f7f-b7ee-1ab322a45b20",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0b716124-cdc6-47ff-8f66-1a11727d1b8c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 34,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1e0e95-a029-45ab-a6da-3307a6625e03",
        "cursor": {
          "ref": "12e80499-68f5-494d-8af7-c156533a51b4",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ace1bf4c-bccc-4dae-b3b4-e5f7e0b273f0"
        },
        "item": {
          "id": "be1e0e95-a029-45ab-a6da-3307a6625e03",
          "name": "identifiers"
        },
        "response": {
          "id": "931158df-9302-45fb-a0f8-46d329cf3484",
          "status": "OK",
          "code": 200,
          "responseTime": 193,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397dc0ed-50d3-4da9-ae32-ee51fa2f6e52",
        "cursor": {
          "ref": "8dd1470d-194d-4084-9d79-22e6f5a54e10",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "889d4cec-3375-4d87-95ae-42fd695138fc"
        },
        "item": {
          "id": "397dc0ed-50d3-4da9-ae32-ee51fa2f6e52",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bd548ebc-faec-42d5-a130-695d79337452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397dc0ed-50d3-4da9-ae32-ee51fa2f6e52",
        "cursor": {
          "ref": "8dd1470d-194d-4084-9d79-22e6f5a54e10",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "889d4cec-3375-4d87-95ae-42fd695138fc"
        },
        "item": {
          "id": "397dc0ed-50d3-4da9-ae32-ee51fa2f6e52",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bd548ebc-faec-42d5-a130-695d79337452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930fbd23-757a-46f4-a3f6-886647a87c9d",
        "cursor": {
          "ref": "5e5d4457-5625-48cc-b961-36636e92654a",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c4e08fc9-b6b5-4958-8f32-40b2a543bd7c"
        },
        "item": {
          "id": "930fbd23-757a-46f4-a3f6-886647a87c9d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3b6132fe-584e-46ff-815c-8a35ddb92929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa42c63-a72a-4358-8132-bdcfff62271b",
        "cursor": {
          "ref": "5e598c8a-7ffd-4c76-9150-705fc0947eef",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5f2a1eef-ba51-4913-b8c3-e9f4168a4074"
        },
        "item": {
          "id": "5aa42c63-a72a-4358-8132-bdcfff62271b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f0b8fdec-a5b6-4f0a-b9d5-14850e4550c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c55631b-bf3c-416a-9030-3514c380ae6c",
        "cursor": {
          "ref": "ce847c8d-de45-4940-aae8-c6fa29e014b3",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "90968433-24cc-45e3-8252-1f1b6fcc2aef"
        },
        "item": {
          "id": "0c55631b-bf3c-416a-9030-3514c380ae6c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1090fbb9-ccdd-448d-ada8-361db704724a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e29a29-f4c1-4cd4-b5a9-b1b7bd1c4427",
        "cursor": {
          "ref": "660c4d14-45cc-4821-b2a3-01c7f9b0227c",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "86ab17ff-9653-448e-9e17-f738da98fc8a"
        },
        "item": {
          "id": "b3e29a29-f4c1-4cd4-b5a9-b1b7bd1c4427",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dc41b937-2b92-4233-af13-25ff1c0762a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab481e1-c6ec-4226-8351-7202147323c4",
        "cursor": {
          "ref": "7d24970a-50f6-442b-b6b5-d1e93d9524e2",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "84dc6860-3034-4bb4-bb51-0403e53c7eac"
        },
        "item": {
          "id": "3ab481e1-c6ec-4226-8351-7202147323c4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a3872b07-8a2a-4fc6-b277-d93ecfd725e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ce01ba-dd77-4eb4-91a8-c6fb412ba8a1",
        "cursor": {
          "ref": "a1dfc155-a971-4745-a695-45e309c39892",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "286c9357-787c-42a5-a783-41f6ea8e81d8"
        },
        "item": {
          "id": "52ce01ba-dd77-4eb4-91a8-c6fb412ba8a1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3e32f55c-c107-4477-b2b9-8fa200be3331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fc8cf3-af9c-4c5b-8f83-515d188d287d",
        "cursor": {
          "ref": "689f1a39-fc7b-4e58-bbde-2dde4485b23e",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e4617b3c-559a-48c3-b023-7a8bfb19be52"
        },
        "item": {
          "id": "a2fc8cf3-af9c-4c5b-8f83-515d188d287d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6a21e0d5-457c-454e-b8e8-5715fcbd39f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09961a65-506d-4a36-8350-d347ba2c53e5",
        "cursor": {
          "ref": "e01af8dd-6735-4985-8e05-97d399a46914",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "532fa53d-b9c7-4abf-959d-611078a3d104"
        },
        "item": {
          "id": "09961a65-506d-4a36-8350-d347ba2c53e5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4895c470-79c9-4286-b206-a34372340fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320533ae-224d-45d5-b66d-ce6f8a51dcd9",
        "cursor": {
          "ref": "53af948b-bd6b-4bd1-bd35-fcc78e122616",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3b59d640-583a-4778-9604-156a9953084d"
        },
        "item": {
          "id": "320533ae-224d-45d5-b66d-ce6f8a51dcd9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "22542fdf-eb3c-409f-bbcc-b76a96df3632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488c5449-0670-4dc5-8954-b0b558ac1485",
        "cursor": {
          "ref": "c966c4fa-e316-4be6-ab93-d06c4432e7a3",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cae1734c-191f-4a76-a887-432cdc02518e"
        },
        "item": {
          "id": "488c5449-0670-4dc5-8954-b0b558ac1485",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "358d48a7-7b56-4828-826c-25ad6798f027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7254b7-4dae-4c6a-b25a-04275126f732",
        "cursor": {
          "ref": "f817b432-d6b0-40fc-a524-db29b6b19349",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f9adbad8-ab07-4bdc-96fd-1d0eece0396a"
        },
        "item": {
          "id": "8c7254b7-4dae-4c6a-b25a-04275126f732",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b3ebd1be-16eb-4b4d-9873-c723e67b7aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc1bdd0-7347-426e-9796-ea8be40abe38",
        "cursor": {
          "ref": "51d302fc-1f1c-4218-adc8-a0ae1bd890a2",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "40edcd38-540a-44ac-8281-749a09432cb4"
        },
        "item": {
          "id": "bfc1bdd0-7347-426e-9796-ea8be40abe38",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "44cff83b-5ace-4742-a263-5ba37a6b25dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423ae303-1095-44bb-aaa1-8f5768bb130f",
        "cursor": {
          "ref": "f28c9496-a4ce-4e99-99dd-4d9a50a74445",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "33f607fd-35fc-4cd9-8d70-0f7e3323bc84"
        },
        "item": {
          "id": "423ae303-1095-44bb-aaa1-8f5768bb130f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fafb3751-8426-4fa7-9cb3-ff94ed5741d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc03efc-0701-480c-b160-40eedfe328b7",
        "cursor": {
          "ref": "128339f6-9282-4311-b28f-a6669d3227da",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "20ad2cae-2388-48ac-9ed2-4b48fd225e9d"
        },
        "item": {
          "id": "ccc03efc-0701-480c-b160-40eedfe328b7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a13b5eb0-3a86-481e-b3c3-e8cff7c67ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a6e7a2-cfdc-4b9d-8882-3e1d8607e9d3",
        "cursor": {
          "ref": "acd6d4e9-5f64-4121-8a45-e34a5c6a89df",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8af18607-7974-4e31-9a5d-0faa94d38ab0"
        },
        "item": {
          "id": "a1a6e7a2-cfdc-4b9d-8882-3e1d8607e9d3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4cb7b8d3-5101-4ff8-a208-e436f74bbc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65154ce-b7a2-4859-8d2a-510bdfa4ab10",
        "cursor": {
          "ref": "c740b9fa-799d-43d9-a767-c98fad97b58e",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "81433b84-499f-4af7-9df6-4be515cf1fde"
        },
        "item": {
          "id": "c65154ce-b7a2-4859-8d2a-510bdfa4ab10",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f57d460f-8ea5-477e-9fab-89a612b729b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801b1c5e-85c1-4504-9115-e25ef3848d9b",
        "cursor": {
          "ref": "e7694ed6-9f61-4f85-8b8d-9aeda7ffbaab",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d7fb12ec-96ad-49e5-9b8c-98e51948b753"
        },
        "item": {
          "id": "801b1c5e-85c1-4504-9115-e25ef3848d9b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "23d259cb-5d72-4773-9a64-eeee2c2da84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914e3a26-c00d-4bda-a8c1-56bb872b3bfd",
        "cursor": {
          "ref": "e047cf0e-d37b-4d75-9e48-dd8849f6bfdd",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "88000b5e-a7ba-4c71-b142-6d9b5b671ab3"
        },
        "item": {
          "id": "914e3a26-c00d-4bda-a8c1-56bb872b3bfd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4b24b531-a069-4868-a627-25ffe5f7f7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54aaba1-c6e9-4743-9f5b-2d5eb5b4ed74",
        "cursor": {
          "ref": "b488e785-9d55-471d-8b9a-aa58d26255fc",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6bb3314f-fa71-4628-bc42-f7ac09d59532"
        },
        "item": {
          "id": "f54aaba1-c6e9-4743-9f5b-2d5eb5b4ed74",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3fcbf78b-b95e-41c4-9382-6cb99bbcea75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae602b8-9d6e-41c9-86cf-e272ca1b0dac",
        "cursor": {
          "ref": "94462907-c9a1-4ba4-8f3c-4dc7cbfc945f",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0361feaf-9646-4a31-b6dd-7694ef83f40d"
        },
        "item": {
          "id": "0ae602b8-9d6e-41c9-86cf-e272ca1b0dac",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a5978a98-d7a9-47bd-ae28-13bf2a05eaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b1d862-40cd-4731-8faa-044f493bf5cd",
        "cursor": {
          "ref": "1b52f125-1dc2-4fce-a9b1-381a04e36904",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "69c23827-a09c-46de-a9d3-c29e372a23f7"
        },
        "item": {
          "id": "96b1d862-40cd-4731-8faa-044f493bf5cd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2cde5f07-b665-4890-b3a7-9986a7f97dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7473e73a-5bc5-4326-94b5-abb2aef95859",
        "cursor": {
          "ref": "1cfa8a51-a144-42ea-b291-e9387aeb2b0f",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bd91910a-9ba1-4ece-834e-fffac54462ee"
        },
        "item": {
          "id": "7473e73a-5bc5-4326-94b5-abb2aef95859",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "24c90093-d9bb-4032-8468-8d78f8b23c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374fa010-1023-45ae-8510-13fee12a8b7b",
        "cursor": {
          "ref": "1a1fb05a-cef5-44f4-b148-e3d71619067c",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "191ab096-9cc8-461e-a1a5-3b42416efe3a"
        },
        "item": {
          "id": "374fa010-1023-45ae-8510-13fee12a8b7b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3c624317-139f-46cb-95af-d50861d71500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41863b04-c60d-4048-bdd9-1be63551df21",
        "cursor": {
          "ref": "a7aeba09-f6d5-43b3-b7ac-5a6ba05cf13a",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3373b54f-3775-4622-9c03-23da6ec6ac8c"
        },
        "item": {
          "id": "41863b04-c60d-4048-bdd9-1be63551df21",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9a72f9a8-f41a-4bc0-8257-bb2a67bfd942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed37e8ba-2d23-4fec-a6c4-e0d3ada425c5",
        "cursor": {
          "ref": "99fd26aa-d97b-4071-9e22-6410daed20ec",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b401df2a-f371-4170-8f6f-2a45aaef47e6"
        },
        "item": {
          "id": "ed37e8ba-2d23-4fec-a6c4-e0d3ada425c5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "53a18320-656c-443c-8612-504943528964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b056ce4-819e-40db-af7e-8ee9fbaf04d2",
        "cursor": {
          "ref": "d6a02224-5d7e-4b1b-a9f0-9d16f84337a7",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6dffa0a6-92cc-4ced-ad3e-8b5a4dca7233"
        },
        "item": {
          "id": "5b056ce4-819e-40db-af7e-8ee9fbaf04d2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "271b23ec-8d3b-437d-9706-d4051aaa70c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668571fd-8418-4174-b8eb-c5e42e095e27",
        "cursor": {
          "ref": "d827d190-029f-434c-bc14-64d2fe0035b0",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7492c4fa-864b-40ff-bfaf-e11907f75b65"
        },
        "item": {
          "id": "668571fd-8418-4174-b8eb-c5e42e095e27",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "28dda1c5-7164-4cbd-a182-9ee52e92999b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9775cdcf-5aa1-4a0d-aaeb-f04ea40ca22d",
        "cursor": {
          "ref": "6a546f61-9fda-43ae-b13e-b4747a0f6ad4",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "91d3cd29-d7e9-4718-93b0-661e1a006aa8"
        },
        "item": {
          "id": "9775cdcf-5aa1-4a0d-aaeb-f04ea40ca22d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3c749a3f-cac8-4afc-ba22-d6be4dd91b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954e985a-641d-4459-8606-c8833468fd45",
        "cursor": {
          "ref": "aee12dde-71b9-4114-982e-e6220d306848",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "24c53c6e-f4f7-493d-90c9-55b80206188c"
        },
        "item": {
          "id": "954e985a-641d-4459-8606-c8833468fd45",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bef0036d-a3bb-4971-9189-f8969d893ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbe845a-bb0a-4dbb-9893-5e563594b271",
        "cursor": {
          "ref": "7416f04d-989f-45d2-8c5a-b6e1506b748c",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "78463328-66cb-47c9-936a-3147ab2ead12"
        },
        "item": {
          "id": "ccbe845a-bb0a-4dbb-9893-5e563594b271",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5f856e23-bebe-4368-9715-f13765fa81e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ef5966-41c3-4628-9e49-74e90858bfba",
        "cursor": {
          "ref": "575dee65-f411-4866-9b8f-3474c9ab3f94",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "af0f0dc2-a08d-49ce-a5f6-16067845c398"
        },
        "item": {
          "id": "d6ef5966-41c3-4628-9e49-74e90858bfba",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "57bc55c6-e08a-4cd2-b1de-5101a61baf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731c03ca-618b-4942-a26d-85c8d635d7c4",
        "cursor": {
          "ref": "ab39bc34-1433-4fb6-9aa0-2f1ed64a981a",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "54ac09d0-608e-4e73-a76c-df683bd38d4d"
        },
        "item": {
          "id": "731c03ca-618b-4942-a26d-85c8d635d7c4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5fda6a62-0949-4fe9-a84c-10139ad2c8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582fe7ec-387f-4c28-997a-0fc28d624eda",
        "cursor": {
          "ref": "dd1e32b9-681a-4608-b200-070b5fd3726f",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b72f0790-5782-4576-917b-bf0690273efc"
        },
        "item": {
          "id": "582fe7ec-387f-4c28-997a-0fc28d624eda",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8ff5a5f7-63ad-45d2-a5eb-9b230af197c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e58f905-85c0-4c89-9571-b43016f8ee97",
        "cursor": {
          "ref": "ba51cf3b-7862-4414-8425-c5625636f724",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bdc15788-d75b-473c-a920-6c0dbb4c2598"
        },
        "item": {
          "id": "6e58f905-85c0-4c89-9571-b43016f8ee97",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "01734c1f-f93d-4899-baa6-1595703e424a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3d8039-cf73-4854-bb9a-ce8299838a91",
        "cursor": {
          "ref": "030bb457-a6f8-4097-aaad-24de7606617d",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8c92f4ba-8ae0-4f0c-b226-d9a6aa4cc3ee"
        },
        "item": {
          "id": "cc3d8039-cf73-4854-bb9a-ce8299838a91",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ed9442b5-feb6-453e-90fc-2a4e8ec0d5ef",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873074b1-7b26-4eba-a843-a89d33d708a7",
        "cursor": {
          "ref": "5065b097-28ac-4e96-991e-bb18ee87b87c",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ec028912-ece6-4c32-91d5-02ce25b2c8e6"
        },
        "item": {
          "id": "873074b1-7b26-4eba-a843-a89d33d708a7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b10eec19-045d-4784-908e-099287fb521d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b88ba4-9643-447d-8af3-9c276f572d0e",
        "cursor": {
          "ref": "1a61ed14-630c-42ce-a055-240638c11268",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2e3d0138-78bd-43e7-be4f-d305f21ff9bf"
        },
        "item": {
          "id": "91b88ba4-9643-447d-8af3-9c276f572d0e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "60f65d7a-5d18-4b7a-819f-25dd52690131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272d5533-86cb-4537-81a7-a1b7c98a9dfa",
        "cursor": {
          "ref": "419c039e-0cef-48e3-a84d-9a3b7402afb0",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "201e7d81-2e1b-4a86-83f5-566bf2b487e3"
        },
        "item": {
          "id": "272d5533-86cb-4537-81a7-a1b7c98a9dfa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "35f49199-bfa8-4165-b0ca-b9f7ad7210b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a094615f-09e3-48d7-af51-a106b27a4204",
        "cursor": {
          "ref": "2318d96e-fb93-4fcc-baf5-e98e58f94a35",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8f586f66-f4e9-4b4a-9e14-a889c19392a9"
        },
        "item": {
          "id": "a094615f-09e3-48d7-af51-a106b27a4204",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4a962ff0-0407-4826-a011-6ba2daa9c642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb851686-a937-44d6-8b2b-4c00778abaa7",
        "cursor": {
          "ref": "e48370e8-0b99-4ba4-84e1-eda9a4c94508",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "94209e9b-20a1-4c42-bd4e-73b733199650"
        },
        "item": {
          "id": "eb851686-a937-44d6-8b2b-4c00778abaa7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b22524e7-2075-4ee6-834b-3212cd850ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbceef9-0e42-4a35-b1da-45f38a7f6c64",
        "cursor": {
          "ref": "500389b2-3ecc-4108-b2ce-8517f1080a38",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "515d29c1-c190-4e33-b605-69ef5a1808c0"
        },
        "item": {
          "id": "adbceef9-0e42-4a35-b1da-45f38a7f6c64",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "41217cc9-dcea-43c3-8216-48419feb5501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428e6a05-832a-47ce-a9d7-e7dca38cc837",
        "cursor": {
          "ref": "39286e38-0de8-4a09-95de-de362707570e",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8bd05f2a-7476-4ff9-b78d-382f6682f0b8"
        },
        "item": {
          "id": "428e6a05-832a-47ce-a9d7-e7dca38cc837",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "01a7d936-7e2e-4b50-8d40-cef1f5cb032f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4c806a-3ba3-4cd3-8ef7-a8f254843b8f",
        "cursor": {
          "ref": "eb0eab32-9cab-464d-a62b-60527f7ff4c9",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "68c4109e-c099-478a-948b-83229f62c5fa"
        },
        "item": {
          "id": "9d4c806a-3ba3-4cd3-8ef7-a8f254843b8f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "40cb95d8-72c9-4050-b8d2-bc0f294cad51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9a6d8f-844a-49e6-b789-540b45061fe5",
        "cursor": {
          "ref": "8e989b90-63ff-41b4-90ad-3eb81bf26710",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "147148cf-5fe5-4c3f-b108-35526dc3ddb0"
        },
        "item": {
          "id": "6b9a6d8f-844a-49e6-b789-540b45061fe5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3637f6f6-5584-49c4-a2de-ea44f41249bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd256648-df3d-46f0-a63c-7a2296ac60e2",
        "cursor": {
          "ref": "a1875d34-6247-4973-b925-b665e52083d6",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4dbde7eb-5f68-47e9-adf2-cb27199a3c49"
        },
        "item": {
          "id": "dd256648-df3d-46f0-a63c-7a2296ac60e2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9d0c5c2e-aad1-47a7-af64-90591ad01671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7fec43-6ad9-4712-b520-991d6c2ba9ba",
        "cursor": {
          "ref": "21297e8b-ed12-4e66-8480-3bacaaf27c24",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b46cf344-1ab9-4754-9b9e-bd1050f9c76b"
        },
        "item": {
          "id": "8f7fec43-6ad9-4712-b520-991d6c2ba9ba",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3046ef7c-66e1-41bb-ba8d-fb89e5b6ce94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6ec48d-6558-4010-8270-124739fcd828",
        "cursor": {
          "ref": "9b551063-191f-4def-b508-72c229995782",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7a98ffce-03c0-4d53-b0bf-0f4a44780dda"
        },
        "item": {
          "id": "dd6ec48d-6558-4010-8270-124739fcd828",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "05a07a8a-6259-40ae-a3e3-6440c2518a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cdb136-cfa0-4b5f-b789-a0c74fd519cc",
        "cursor": {
          "ref": "720e3aad-af5c-4793-a452-ef6ab78f4f7d",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "63fe59b6-474f-498f-9aa1-1632caff16a6"
        },
        "item": {
          "id": "20cdb136-cfa0-4b5f-b789-a0c74fd519cc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "529612be-fc0d-4ce3-81e3-2bf81d44fb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669ea390-584b-46c9-bc6f-97bd94adc61b",
        "cursor": {
          "ref": "aa06aa03-c50c-4125-980e-cb41ee85410c",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4851bf42-6d4a-481c-a345-d5d6d260fca4"
        },
        "item": {
          "id": "669ea390-584b-46c9-bc6f-97bd94adc61b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "888d3f87-6169-423d-90e5-c516c8668d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911eaf89-9f6c-441d-9bb5-220b4b144e65",
        "cursor": {
          "ref": "4d845586-c71d-4257-85af-83470173ba67",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c5882bc7-e3a0-4458-837b-173c72e7ef55"
        },
        "item": {
          "id": "911eaf89-9f6c-441d-9bb5-220b4b144e65",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f41e8662-91bf-4c42-9eda-a47dcf2da8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc55f5f-3680-4672-a568-92fee8571d82",
        "cursor": {
          "ref": "eea1d0ad-aea1-4ae8-b756-0aa5e9be1216",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "69a70a3d-d134-4c85-9777-27e1d446fb43"
        },
        "item": {
          "id": "fdc55f5f-3680-4672-a568-92fee8571d82",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a8da2fcd-6b2c-4dfc-8ef9-c96cb93d51b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8c9843-e0a9-4d4e-8db6-42776aafb5cb",
        "cursor": {
          "ref": "f43a01d5-cd28-4787-95b6-8abb4ea4d62d",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "238d2e1d-83a0-4b51-9bae-5672cc16d709"
        },
        "item": {
          "id": "ba8c9843-e0a9-4d4e-8db6-42776aafb5cb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b60e56f4-b608-4d0a-b8db-46261ca51803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62795ff7-d50a-4bbf-b2d9-0e5a5c6672b8",
        "cursor": {
          "ref": "a3677798-5d35-42c1-b1b2-fe6f911fe0c9",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2f19a5a8-2482-4313-b577-74298295c261"
        },
        "item": {
          "id": "62795ff7-d50a-4bbf-b2d9-0e5a5c6672b8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4d734fb8-bfb6-4b28-a613-b534e7cca647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4288db-e10b-4777-b4ea-a90bcb9d97c8",
        "cursor": {
          "ref": "83e22d41-b737-49ab-a75d-4faa60a8c29f",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fba8e21a-b335-4db6-93ae-628ee3e4f0f0"
        },
        "item": {
          "id": "8d4288db-e10b-4777-b4ea-a90bcb9d97c8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1975fac0-24b4-4083-9f54-598bbad09005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d55af4-80c3-4963-b013-7868da35de9e",
        "cursor": {
          "ref": "62d13331-c2c0-4335-aa85-7b4f9a0907dc",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "265c1839-80da-422a-bf00-4987b853f6d0"
        },
        "item": {
          "id": "b6d55af4-80c3-4963-b013-7868da35de9e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a5a5c199-ec3a-4f1f-bf90-2b461bcef7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d50ca9-6262-472e-9f81-15e1c3b95df0",
        "cursor": {
          "ref": "a2471870-1dfe-4539-949d-abcfd227c300",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "497e6162-3a35-46fc-849e-09bc746b3eea"
        },
        "item": {
          "id": "c9d50ca9-6262-472e-9f81-15e1c3b95df0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a3a9c603-a241-4865-86b4-168e30905590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6985e9-b00d-4716-9d1c-d14ca57abfd6",
        "cursor": {
          "ref": "bb915d64-31b2-4969-983f-9ea1cb1d069a",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "68e6afc8-9320-4d18-9f1e-9580b64350da"
        },
        "item": {
          "id": "1f6985e9-b00d-4716-9d1c-d14ca57abfd6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6e52a49d-ddfd-47c8-9da2-df38a9b3cf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1313526-04da-44a0-99ca-daec38ac9f23",
        "cursor": {
          "ref": "0337344e-44bb-4631-8815-7dd5000a1e7e",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7710322f-15ab-4a5e-a841-6a541150bcd7"
        },
        "item": {
          "id": "d1313526-04da-44a0-99ca-daec38ac9f23",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ea6aed69-44fa-426e-9d2d-533c2465b9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445e72c7-9a4b-45ce-a7e8-4bbbafbbff6d",
        "cursor": {
          "ref": "fae375bf-684f-4dc8-b0d3-5a6f708763c3",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d3947713-9dc9-48f8-bef0-f9ac9c75e6be"
        },
        "item": {
          "id": "445e72c7-9a4b-45ce-a7e8-4bbbafbbff6d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b80cb0b3-a749-4463-983f-95bf17567afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3238d47f-dbd4-4f51-95ca-040aab50e0f2",
        "cursor": {
          "ref": "a2d53693-783a-4dda-9e54-f153cb84eb0c",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "56e28e67-2a18-4a96-93a6-6621626250ff"
        },
        "item": {
          "id": "3238d47f-dbd4-4f51-95ca-040aab50e0f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "912598d7-7292-47ac-a9e3-f6c4c711fee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563c93ac-7905-41bb-b71f-80c416947e81",
        "cursor": {
          "ref": "752d03a4-ea4a-4f75-9a87-459d792dc057",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6892869d-a331-4c97-9215-0629eac51860"
        },
        "item": {
          "id": "563c93ac-7905-41bb-b71f-80c416947e81",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "39623f5c-afd3-4f23-9e8e-c43296691850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b909aa6f-136e-44b9-8a58-4b0f3549f551",
        "cursor": {
          "ref": "cd5b402d-6831-4a4b-832c-733e369598da",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5cde70e6-3f89-4f35-897b-2e09fb5c364d"
        },
        "item": {
          "id": "b909aa6f-136e-44b9-8a58-4b0f3549f551",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "be7653bb-af0e-48c2-8a7e-59a18fd01df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc2e2b1-d1e3-419a-84b6-97485286dae5",
        "cursor": {
          "ref": "a36da252-25a6-4512-8075-e6fe2cfd760f",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c74ebf4b-ff88-4615-96a0-b5ee8bc5c288"
        },
        "item": {
          "id": "5bc2e2b1-d1e3-419a-84b6-97485286dae5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c4d902e3-d150-4b1d-bcbe-2b04ea5e7943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7301f486-4d5c-44db-80d6-8db3d5c49b4f",
        "cursor": {
          "ref": "c4b6944f-38e3-4391-afb4-7e53c8d61373",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "44c5854b-2620-4675-8c6d-40c2e0eb8b75"
        },
        "item": {
          "id": "7301f486-4d5c-44db-80d6-8db3d5c49b4f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a03e8c59-c454-46bb-bfec-f622d90bc75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e0b547-df4b-4049-8622-5644f333bf59",
        "cursor": {
          "ref": "d3d3252c-8028-41a3-af55-66281f85047e",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "33c7d219-49da-4668-a56c-ede4bfedb1ac"
        },
        "item": {
          "id": "78e0b547-df4b-4049-8622-5644f333bf59",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2a081157-9775-4464-8d82-ca2ed5e0e760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02e9f4d-9393-4fd0-ab20-cfd8c99cc59b",
        "cursor": {
          "ref": "de052bc2-abe2-41f6-a57c-fa8c0607c5c0",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "433f492c-20f2-4a8f-a826-1fd87182e0e0"
        },
        "item": {
          "id": "e02e9f4d-9393-4fd0-ab20-cfd8c99cc59b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7307b6c1-b485-4cbe-a1cf-a36b788627e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8b9a9e-915d-4f0d-86b0-d2190098ccc2",
        "cursor": {
          "ref": "9d2a04a9-7212-4068-a539-d24d7f39a84a",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "26574518-dcfb-456a-9300-c55f7e73394f"
        },
        "item": {
          "id": "3c8b9a9e-915d-4f0d-86b0-d2190098ccc2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7879ad74-4b06-41a2-a62d-6f28cabf1b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0e9863-0a7f-48f0-a785-de60087a3ef8",
        "cursor": {
          "ref": "a474e609-c165-481b-9372-210a5b0922ba",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a9bd7927-aa29-48b6-88df-fb81041cd0a7"
        },
        "item": {
          "id": "2d0e9863-0a7f-48f0-a785-de60087a3ef8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a5630af0-b01a-4bbe-bd3f-15118b9ec633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d5d7fc-9f39-4ad0-8f3d-4787f182b4af",
        "cursor": {
          "ref": "4062e9df-7e61-4b09-b828-38d36b972f23",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fa40acd7-15c0-475e-b61c-e9c1ebf8834c"
        },
        "item": {
          "id": "d5d5d7fc-9f39-4ad0-8f3d-4787f182b4af",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f193c673-39dd-40ba-84dc-4b809f2a51e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72d1f82-dff4-41e3-84cc-25255802647e",
        "cursor": {
          "ref": "b0e12b9f-8520-4d27-99fe-f4b24203eaae",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f0d2a12b-9949-4c0d-8f8c-ce37008209e3"
        },
        "item": {
          "id": "d72d1f82-dff4-41e3-84cc-25255802647e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0315c1a6-9daa-47df-bcad-186a6b523fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91df53bc-c87f-4a91-829b-9cc88388ff8a",
        "cursor": {
          "ref": "1d08e2dc-7b7d-4dd4-ab1a-c6ea1af420f5",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f7f82a66-8b14-4f9a-aa3a-d33cc468da32"
        },
        "item": {
          "id": "91df53bc-c87f-4a91-829b-9cc88388ff8a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d17cf073-be78-4876-a027-ff274ac25058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be62192-d9de-4f0a-8af8-1b79e8e98515",
        "cursor": {
          "ref": "326b72e8-11f9-43f8-a603-9f83767bcf06",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b94bbd9b-6d7d-48aa-b7c4-0504e2cfde0e"
        },
        "item": {
          "id": "2be62192-d9de-4f0a-8af8-1b79e8e98515",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d479fe1e-579b-4a1e-88f2-494c4f53f697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ed368c-b6a6-4813-9dec-d06e34f4e9bb",
        "cursor": {
          "ref": "8802f24d-ee0d-4f27-9c81-2b024506c06a",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b69365bd-8027-43d7-959c-2ca344680045"
        },
        "item": {
          "id": "80ed368c-b6a6-4813-9dec-d06e34f4e9bb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "95a0cf0f-0dcb-4b0f-851a-0f4ac4d57537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb70c55e-9083-4734-880b-2638baebbb36",
        "cursor": {
          "ref": "3305e41f-20ea-4118-8233-d59354e65a57",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "44df067d-15f8-4878-9b6e-5f49a873ea89"
        },
        "item": {
          "id": "fb70c55e-9083-4734-880b-2638baebbb36",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fec54e72-cb0c-4ce3-853a-8d522d6fe559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8900e28-f8b2-4704-b1ce-8eb2d93871b7",
        "cursor": {
          "ref": "a5965667-b322-46fc-8bcf-82df14664736",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d6ac3021-87ca-4585-896d-302ab88e4772"
        },
        "item": {
          "id": "e8900e28-f8b2-4704-b1ce-8eb2d93871b7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9000fa30-5fbe-4576-836c-c85c401eabf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1ce52a-d729-4c42-9449-b98b225884b3",
        "cursor": {
          "ref": "e5419aee-6cbd-48db-bd84-f434aa18a90e",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0b1d4d02-48d7-4885-a1b4-28c572b74387"
        },
        "item": {
          "id": "aa1ce52a-d729-4c42-9449-b98b225884b3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a86b0710-3b88-4630-a927-5edf443bf0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae6d308-32fb-4f11-8e89-bdd76503437d",
        "cursor": {
          "ref": "60f56677-d394-4dfa-ac75-58dcf4696a21",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "009e2b18-0b23-468b-b326-7f216d0d9813"
        },
        "item": {
          "id": "1ae6d308-32fb-4f11-8e89-bdd76503437d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "24ca6a4c-52d2-467f-bff4-4a21e724e04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b415f50-6ebd-444c-8508-64d0056e6b49",
        "cursor": {
          "ref": "c4e76301-f07f-4495-a4d3-bb5842ce9f85",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "928d5863-b0d5-4d0d-b98c-ca3f17b7e0ab"
        },
        "item": {
          "id": "4b415f50-6ebd-444c-8508-64d0056e6b49",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "edaa82fc-154f-492a-ab88-c1384eca7f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efd4993-91f7-4129-b7cf-a686dfa2708a",
        "cursor": {
          "ref": "a118b582-90a8-4035-a738-692d60b5e1b5",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "49477ab9-06a4-47be-8145-f656a24a1e67"
        },
        "item": {
          "id": "3efd4993-91f7-4129-b7cf-a686dfa2708a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8c8f9c0c-7133-44a7-94cf-beaeb625d2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda20366-9c10-452d-8b00-f46b0961dbb3",
        "cursor": {
          "ref": "f65d91fb-ed9e-430f-83b9-21203b27fab1",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6a82ef2a-cdb6-4a93-b4ce-f46418299500"
        },
        "item": {
          "id": "eda20366-9c10-452d-8b00-f46b0961dbb3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "04a745cc-e531-4d34-b4de-1d2bb77a6c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0131dbee-f3ac-4f4a-80f6-ed4ece819fc0",
        "cursor": {
          "ref": "bd0ad8df-17b9-4ae3-bfe5-8d9926f6264e",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "71390149-5d67-4b2d-9428-af294c8b6413"
        },
        "item": {
          "id": "0131dbee-f3ac-4f4a-80f6-ed4ece819fc0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bb3d57b5-d884-4208-8615-0b9c978cf78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ca1449-ac3f-417d-916e-2e860038069e",
        "cursor": {
          "ref": "a6a345e0-a727-4f12-aa5d-db0c8ca82995",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f6b5bdf2-d94b-45b8-8cf4-011496e9fd3f"
        },
        "item": {
          "id": "65ca1449-ac3f-417d-916e-2e860038069e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9b2f84f2-447b-4492-aec8-0239561f6a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d70b6a0-f131-46a7-a2cf-2549bff25a5a",
        "cursor": {
          "ref": "4ca922bd-c026-4606-8c88-adb780eb00ea",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6c519196-5037-4cfd-a004-b66b65f8595b"
        },
        "item": {
          "id": "5d70b6a0-f131-46a7-a2cf-2549bff25a5a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bfc49bf8-b4cf-4432-b79f-c6a8e168db81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f3c7c9-1192-49b9-8ed7-fc7343635ab1",
        "cursor": {
          "ref": "c68633d5-8552-4482-b70a-53ba7c3b0b65",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b708a951-a20e-4921-91a3-d28229d8ca2d"
        },
        "item": {
          "id": "97f3c7c9-1192-49b9-8ed7-fc7343635ab1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c8344d7e-99b1-4128-9598-48ece6313940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf2ff92-0c27-44e7-8c44-5b65b9745c59",
        "cursor": {
          "ref": "dc22e93d-1653-4316-a95d-1025e5a6f24b",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "185012dd-6b6a-4c62-8d52-bbfa57465b06"
        },
        "item": {
          "id": "cdf2ff92-0c27-44e7-8c44-5b65b9745c59",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a706e487-35dd-49be-af11-7f5d4e24c3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b9e581-00de-4aac-860a-62bd912547a3",
        "cursor": {
          "ref": "e326a9e1-4276-4d39-bdb9-cb2065a124f4",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e122d668-253c-4a80-b4e6-058ca88c80ed"
        },
        "item": {
          "id": "43b9e581-00de-4aac-860a-62bd912547a3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1096e4b7-e116-48b8-976d-723c5fda1537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e83bad-d88c-45cf-ab53-cb3e9444f46c",
        "cursor": {
          "ref": "292a7914-9bdd-4a7a-b4df-6f1a63cce114",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c234fbec-4b73-48d2-8520-de5f4eb5eb18"
        },
        "item": {
          "id": "74e83bad-d88c-45cf-ab53-cb3e9444f46c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "48190936-4715-4f13-b3aa-ef1d98f33447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cea29e5-7250-4823-b7a6-fdaceb218c8b",
        "cursor": {
          "ref": "1340966a-4667-4fc5-b30a-96e54ce8580b",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9944a54f-04c5-4559-bf5e-f311efde7636"
        },
        "item": {
          "id": "5cea29e5-7250-4823-b7a6-fdaceb218c8b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bca4d4b2-463a-4837-b87c-350a2851dae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee230c9c-b564-47b8-9f87-75fe50356340",
        "cursor": {
          "ref": "75b11d3f-663b-410f-9e6c-bb4b1de3cd65",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4fef88b0-2a2e-4822-aaf5-bbbf1cba1d4b"
        },
        "item": {
          "id": "ee230c9c-b564-47b8-9f87-75fe50356340",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cb0dfb13-1fd7-4695-9f9e-8ac516edfcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c058067-ae22-4ff0-b0d4-115830fa4fd4",
        "cursor": {
          "ref": "319adba7-ebf5-470a-be6e-6fc650bfe626",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e703b129-6a98-45a3-b3dc-12138d05da2c"
        },
        "item": {
          "id": "9c058067-ae22-4ff0-b0d4-115830fa4fd4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9e7c04de-3b29-4731-a115-c010af9ebb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75ba2bb-d589-4a63-bdc8-9572a69f2c77",
        "cursor": {
          "ref": "90f298ec-03cd-492b-a143-0e970ac3ac96",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bb5e4585-a48f-4b6f-91d7-37664647c1b4"
        },
        "item": {
          "id": "c75ba2bb-d589-4a63-bdc8-9572a69f2c77",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4708e80f-fc6f-4b6a-8983-c1207413afa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3612c8d9-4544-431a-bf67-6b1392f756df",
        "cursor": {
          "ref": "37e0d9ac-1e27-42dc-91fe-899c52fc626e",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4b90eacb-3518-4e25-aac7-e272967aa7ae"
        },
        "item": {
          "id": "3612c8d9-4544-431a-bf67-6b1392f756df",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "efd855d3-33dc-429d-b279-46d255931320",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80891075-6e3e-4906-9d9d-18997fab6fae",
        "cursor": {
          "ref": "d195b04d-58f4-4743-af13-89b91c8b979e",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "652fd1d2-83ac-40f6-82ff-c4e36a3f2437"
        },
        "item": {
          "id": "80891075-6e3e-4906-9d9d-18997fab6fae",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "d11a76bd-1c62-49de-8013-1d6b06157b75",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 246,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082c0973-709f-4ae7-85b9-95fcbddded09",
        "cursor": {
          "ref": "7a24af53-1f18-4f09-ab43-72ca68eab441",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "17d81550-cecc-462f-83b9-ed03a8e4415a"
        },
        "item": {
          "id": "082c0973-709f-4ae7-85b9-95fcbddded09",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9740d2f2-394a-4852-865a-1f8cd11480bf",
          "status": "Created",
          "code": 201,
          "responseTime": 350,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8e4728-a357-4b2f-b351-d42bc204c4cb",
        "cursor": {
          "ref": "d63f4886-4d46-4972-a18a-254ee76acd52",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d69fb189-0bba-4da6-b9ce-015377d8388f"
        },
        "item": {
          "id": "ac8e4728-a357-4b2f-b351-d42bc204c4cb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f2dea694-4737-44ba-aca8-727fcfb75092",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "858cb8b0-1d2c-4bad-b2d8-1cbafd5f76fd",
        "cursor": {
          "ref": "9bfd4b0b-d08d-41e8-abf7-8b458fe1d7e4",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1a1b0d5f-9ae8-488d-a58e-f46155679a9b"
        },
        "item": {
          "id": "858cb8b0-1d2c-4bad-b2d8-1cbafd5f76fd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "02eda76c-9f37-4baf-86c4-4ca422c93236",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "521c3777-448b-4e8f-999b-a8589d550a60",
        "cursor": {
          "ref": "837a394a-cda4-4cd1-a230-ce4821991229",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bb17cb0d-da5e-4d37-93c6-d8399288088d"
        },
        "item": {
          "id": "521c3777-448b-4e8f-999b-a8589d550a60",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "053d5f1e-fc41-45a4-bf00-f7b76ecb5682",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe0322a-a26b-4427-a11f-1fadebb0e8aa",
        "cursor": {
          "ref": "f2d287a2-22ad-4530-a47e-2d7776ff8d20",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "878c28fb-a421-4b1a-b286-5913de300278"
        },
        "item": {
          "id": "cbe0322a-a26b-4427-a11f-1fadebb0e8aa",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3197fc4e-3072-489f-8470-81f56fa4c7d6",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2f4957-c94d-4029-ada0-101a19347ed8",
        "cursor": {
          "ref": "bdf42c66-6f78-4300-ab4f-b02afd9a0889",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "835afe3b-e729-433e-be6a-7589cadecbe5"
        },
        "item": {
          "id": "2b2f4957-c94d-4029-ada0-101a19347ed8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4c0242d5-4453-4dcd-8dcf-fd0c701c0aaa",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90074a2-c5a7-4294-ac2e-51f2293234bc",
        "cursor": {
          "ref": "4be1d3be-ef78-44f8-967c-a671e9f42682",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e4610c33-bba7-497f-a3ae-9aea214f6884"
        },
        "item": {
          "id": "e90074a2-c5a7-4294-ac2e-51f2293234bc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "03f14506-fb1e-45e6-9934-392eed42abd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90074a2-c5a7-4294-ac2e-51f2293234bc",
        "cursor": {
          "ref": "4be1d3be-ef78-44f8-967c-a671e9f42682",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e4610c33-bba7-497f-a3ae-9aea214f6884"
        },
        "item": {
          "id": "e90074a2-c5a7-4294-ac2e-51f2293234bc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "03f14506-fb1e-45e6-9934-392eed42abd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ded5e6d-f649-4c0d-92e8-cca03f62e56b",
        "cursor": {
          "ref": "78ebad3d-0397-4012-8b8d-19cda94f0ce7",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b0d353f7-7a92-4b7b-8cb1-750a8740686b"
        },
        "item": {
          "id": "1ded5e6d-f649-4c0d-92e8-cca03f62e56b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "366d1b0b-3c22-44d4-bd72-63df0085cf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5272f3b2-fb00-41a6-a09d-91cc11ce4b8f",
        "cursor": {
          "ref": "b3dee5a4-929c-4c29-909e-752b2d5e38ea",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ade1ef26-6aaa-4705-b5fa-cda5e43bbb05"
        },
        "item": {
          "id": "5272f3b2-fb00-41a6-a09d-91cc11ce4b8f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2da0f79f-9220-4fc7-a01d-964c68fb4407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9c8c73-fa66-4de0-bb4f-3fc6e2b0fce6",
        "cursor": {
          "ref": "3ddce1f8-c33c-40b9-aef4-0250516a69b2",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b15a9072-e351-4042-9d80-73e5e635427f"
        },
        "item": {
          "id": "ce9c8c73-fa66-4de0-bb4f-3fc6e2b0fce6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d7437cc4-ec45-4285-9008-afe0129a8f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8e5c1f-b86d-48a9-b1d2-5aba746d6e99",
        "cursor": {
          "ref": "f11396b3-a1c1-4861-87bb-dad1cf94adfe",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b09eb3ac-34da-40ef-9b57-0f6a97cab276"
        },
        "item": {
          "id": "1d8e5c1f-b86d-48a9-b1d2-5aba746d6e99",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1894fd4f-7e9b-479b-9b1b-eb077d88afe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ce5bac-caf1-4d7a-9177-62eb3f5acc69",
        "cursor": {
          "ref": "8690d087-f7fe-4b08-9bbc-4418027a5f4e",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "73026702-92a7-440c-9fe1-ea212d250ba2"
        },
        "item": {
          "id": "c1ce5bac-caf1-4d7a-9177-62eb3f5acc69",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5dd439b9-ccee-41ab-aed8-68b190b23e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41c2ede-97b1-494c-bc33-f3af5f463eb3",
        "cursor": {
          "ref": "180637ee-ab3e-4872-90c2-583efcad67de",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "77ea5113-ef85-427f-80db-c4b7e65dad21"
        },
        "item": {
          "id": "f41c2ede-97b1-494c-bc33-f3af5f463eb3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d523c9aa-8764-408a-ae9e-aeb152f28d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5796370b-12ac-4193-87b9-c2a951d61ab5",
        "cursor": {
          "ref": "2c5403ec-01de-4992-9ce9-d642563607bc",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e6ddfcf8-9530-453c-8b8e-db060fa99363"
        },
        "item": {
          "id": "5796370b-12ac-4193-87b9-c2a951d61ab5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e3d2f5f1-42b7-4625-82d0-9b6625fcee34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439756e6-317f-47ee-b60d-1a823c4836b6",
        "cursor": {
          "ref": "f8b0fee5-b746-4b08-b995-0f81c0bc3cb1",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e8be2964-951c-41fd-89be-bfb10d06c93f"
        },
        "item": {
          "id": "439756e6-317f-47ee-b60d-1a823c4836b6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5d4b7950-cdca-4e53-a63f-d6b8e003bcda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af2daf2-6230-43b1-9f3c-d32e0eb68158",
        "cursor": {
          "ref": "8a11832e-eb7a-4ea1-b070-d854c8be2761",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2f06d146-1120-4fa5-908e-75575437f509"
        },
        "item": {
          "id": "9af2daf2-6230-43b1-9f3c-d32e0eb68158",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "25567fae-320a-4332-85e5-bba621c85ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41834f75-edbe-46dc-9c20-53e39ef74c7e",
        "cursor": {
          "ref": "476a3ee7-2822-4277-9a7d-e655b8c26445",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5a57d9fe-e411-4fb9-84fb-73af5fe7873f"
        },
        "item": {
          "id": "41834f75-edbe-46dc-9c20-53e39ef74c7e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f72911d4-2c4b-4811-b4de-5d0b203dbe56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b9ea95-182b-42cc-bf19-26da072806af",
        "cursor": {
          "ref": "ccc6310c-e040-4e37-a867-273fcc3c6452",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7b392094-a3da-4ecd-8e72-e680b71fe7ec"
        },
        "item": {
          "id": "b4b9ea95-182b-42cc-bf19-26da072806af",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "183a5f13-13d8-4211-a56a-2c4361813a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731ebb84-4232-48e6-b03f-a366571db4d0",
        "cursor": {
          "ref": "fa979418-5517-49d5-87c7-2a3d5d396070",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e70e461d-b923-4046-8467-70425b2a0755"
        },
        "item": {
          "id": "731ebb84-4232-48e6-b03f-a366571db4d0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0a52f275-1298-459c-83bf-603b1d5030aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6113b61c-7701-45ae-b932-9d11058622a6",
        "cursor": {
          "ref": "ab7c5e4a-6db5-4d16-b93a-25a07c734dab",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bfa603e6-3240-4861-be8b-dd8bcaf308f2"
        },
        "item": {
          "id": "6113b61c-7701-45ae-b932-9d11058622a6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "90a9884d-6172-4622-b113-2e56647c88f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e889ce-a7ae-4d0a-854b-b26b88c847ec",
        "cursor": {
          "ref": "7cf1ce53-1bcb-4b62-bcd0-87d1dec5df9b",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5bfbf5b6-3c2c-463e-8853-31d6bd94971f"
        },
        "item": {
          "id": "01e889ce-a7ae-4d0a-854b-b26b88c847ec",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3e0ce52f-af61-4f7f-a388-74111bc4de3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba27759-d9ab-4319-9184-f01bee277acd",
        "cursor": {
          "ref": "ef16db9e-676e-4d72-9fe0-d769a35d66d2",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6fefac91-5ed4-495c-ac25-c6ffd06efaa5"
        },
        "item": {
          "id": "8ba27759-d9ab-4319-9184-f01bee277acd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "663ad341-ab09-4e77-8f3a-fcf657714d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3cb20f-7022-4fc3-b7eb-4814ee1d8f99",
        "cursor": {
          "ref": "5eb55516-c8ba-4d2e-9bfa-12ae09e6dd79",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5892afb8-2f9f-47a8-9cae-301f9b234bde"
        },
        "item": {
          "id": "de3cb20f-7022-4fc3-b7eb-4814ee1d8f99",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c8b4cfcd-d68e-4409-a11b-bfbbdbb09be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388f9a80-97cf-446b-8a81-3cb9dc9ad244",
        "cursor": {
          "ref": "6b74462b-0464-4731-995e-835fcf9411b5",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0f6d8e68-038f-45eb-b681-db5fa8b13118"
        },
        "item": {
          "id": "388f9a80-97cf-446b-8a81-3cb9dc9ad244",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2a4971ff-b680-4990-a343-b8776eb17430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def1c978-406f-4d9f-b60f-4bb2017a69ec",
        "cursor": {
          "ref": "711ab3fb-424d-4e66-9a82-be1d1db54829",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "97837f9b-c8d0-4235-a4d2-f81876d3c311"
        },
        "item": {
          "id": "def1c978-406f-4d9f-b60f-4bb2017a69ec",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5a50fda8-b972-48c7-94af-d521e2cdd409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c21595f-d3ab-4c5d-a6ea-bf0aef3db840",
        "cursor": {
          "ref": "19f370ae-3504-4c4f-8424-721e6ecf8773",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f8b9da26-f81c-47f7-9f5c-3ed62be87b26"
        },
        "item": {
          "id": "2c21595f-d3ab-4c5d-a6ea-bf0aef3db840",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "842ef1c9-f274-4051-9237-2e46ab84121a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78ec0f0-4291-4d2e-84f3-d3c82a5ebb26",
        "cursor": {
          "ref": "28ef3597-3571-4a6d-9cc3-3519029bd98b",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "503b8693-c786-4be4-8fae-4c12ccc05769"
        },
        "item": {
          "id": "e78ec0f0-4291-4d2e-84f3-d3c82a5ebb26",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "663b12f0-0d74-489a-83fc-5ad5324f456a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55eebe15-4e5c-4c7b-8474-2cd2f3b57d7f",
        "cursor": {
          "ref": "33389f10-ccc6-43ee-9a19-183d06ea5616",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b48fc379-283e-4968-8def-6d913f7d0fd8"
        },
        "item": {
          "id": "55eebe15-4e5c-4c7b-8474-2cd2f3b57d7f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c1d97c41-8c67-4889-9e45-a8cfc2f0b4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006c03b5-b021-4233-b1fd-e8d3b4520dd6",
        "cursor": {
          "ref": "aceb0503-db5f-47a8-8260-9427aa6122d4",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "accb5d70-7747-4084-a3b6-974cfdf51287"
        },
        "item": {
          "id": "006c03b5-b021-4233-b1fd-e8d3b4520dd6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fc5771ad-7980-4f85-91fa-02bdbcace0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970ceda8-9b0d-41df-95bc-8687cc57f22d",
        "cursor": {
          "ref": "6b4088b2-cb2c-4396-9384-2cc8d416fa98",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8d676c32-9396-4584-b377-802493e09aef"
        },
        "item": {
          "id": "970ceda8-9b0d-41df-95bc-8687cc57f22d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8a5d6c7e-bc14-4b9a-bff3-01a384907e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de74b37-31e0-4276-9bc6-1abe8be4ddfe",
        "cursor": {
          "ref": "7760af1d-2589-4760-a530-aebe5b717ada",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0770c1ec-e5ba-4ba6-bc00-168a77b17b07"
        },
        "item": {
          "id": "1de74b37-31e0-4276-9bc6-1abe8be4ddfe",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "31e7903e-61fc-4b81-997b-de1f6edbff4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa79c74-91d8-4c89-adce-17b678ce78c8",
        "cursor": {
          "ref": "00f5d419-e249-4975-a28d-dbec89938c31",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4194fe1d-fd2e-4d34-a0f9-b6bda4921769"
        },
        "item": {
          "id": "bfa79c74-91d8-4c89-adce-17b678ce78c8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c5df085a-b3d0-4b03-8d74-177dc31092ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4097d893-96e3-48c3-8bcd-2327ae9e9862",
        "cursor": {
          "ref": "d0d68ac9-01a9-4fd6-a3a7-2be93f75d128",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9c431472-8c12-450a-9230-2972d62fd527"
        },
        "item": {
          "id": "4097d893-96e3-48c3-8bcd-2327ae9e9862",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e306720f-0c43-42e3-a583-80d9d721fb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7888f12a-abbc-4ff2-baea-410a0c00d714",
        "cursor": {
          "ref": "6ea79204-e2f2-4c44-a11c-5d7a5415028e",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1c389f45-d976-46fc-a675-1c00de6c17ac"
        },
        "item": {
          "id": "7888f12a-abbc-4ff2-baea-410a0c00d714",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6a4d6a19-4f66-4405-b6fe-143281d3058c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9eb97c-b6b5-4ddf-899f-c90076b5b740",
        "cursor": {
          "ref": "b6304d89-4e18-499e-b905-1a17699b5a2e",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "18f7a868-84d8-43cf-bbc6-d930c21dc133"
        },
        "item": {
          "id": "5d9eb97c-b6b5-4ddf-899f-c90076b5b740",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ea916fa6-770a-4f5e-9bc8-b9c20fc5a599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a222f25-f437-4944-a623-d9566c73a374",
        "cursor": {
          "ref": "6909735a-6eaf-4a21-9ed6-e764f3b8d592",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5a50134e-f0cd-4cbe-a19a-8289787b3704"
        },
        "item": {
          "id": "5a222f25-f437-4944-a623-d9566c73a374",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "80943801-188d-4815-8b30-35bf11566323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d072699-0d21-4f83-b6ba-25f568c88695",
        "cursor": {
          "ref": "dcf0b5df-c74a-4b4b-9e38-7490582806f3",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "caeabba5-7ffe-47de-b04d-1637d1793dba"
        },
        "item": {
          "id": "2d072699-0d21-4f83-b6ba-25f568c88695",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b2f4ca99-ce2c-4b10-8f78-8670e7d62fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79c592a-15e1-4d3a-80d6-aa806b82548b",
        "cursor": {
          "ref": "ea7c7195-eade-4016-8bee-3a16988a85c6",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "26389fca-8fc0-46c4-a2e2-5848f08e0153"
        },
        "item": {
          "id": "d79c592a-15e1-4d3a-80d6-aa806b82548b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "92e3f0fd-6234-4a8c-b862-ee6cf8676725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf27a0c2-a121-4a8d-bc46-de585a3c6e2b",
        "cursor": {
          "ref": "a7ad5339-664b-44f6-9dab-2461ee5963d8",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a0d33482-452c-409e-9cd7-86bd8e88ebe9"
        },
        "item": {
          "id": "cf27a0c2-a121-4a8d-bc46-de585a3c6e2b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "efb31cbe-62e8-45f5-b3e3-af13876f8c83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1de796-ca96-4fa0-a9e6-211e0b661bfa",
        "cursor": {
          "ref": "3119bec4-765c-4921-a6a6-66d653972326",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b8514250-7636-4eb3-88ed-a9033a1e8975"
        },
        "item": {
          "id": "6b1de796-ca96-4fa0-a9e6-211e0b661bfa",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3859b88a-1f2a-47a7-9804-39830869cda4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cd0315-89e1-47e3-bc6b-23e17f3da368",
        "cursor": {
          "ref": "ba7890db-3228-4d26-b828-d11aaf74ad37",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "69de2bb5-e96a-478d-a9c4-ff460a0529b7"
        },
        "item": {
          "id": "f4cd0315-89e1-47e3-bc6b-23e17f3da368",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9a29a187-d51d-45b2-83cd-5a5e4d23a541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cd0315-89e1-47e3-bc6b-23e17f3da368",
        "cursor": {
          "ref": "ba7890db-3228-4d26-b828-d11aaf74ad37",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "69de2bb5-e96a-478d-a9c4-ff460a0529b7"
        },
        "item": {
          "id": "f4cd0315-89e1-47e3-bc6b-23e17f3da368",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9a29a187-d51d-45b2-83cd-5a5e4d23a541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df83715a-c194-4e36-ad57-d66a134613c9",
        "cursor": {
          "ref": "0a6ffe15-d504-426c-8b08-c5baaad4d193",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a2c1fbc3-40fd-4b9d-983b-d9bea7add837"
        },
        "item": {
          "id": "df83715a-c194-4e36-ad57-d66a134613c9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "859da3d9-012b-4281-8fab-71bd00773fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62380aa1-c0f3-48d5-ac34-55d8d080ffab",
        "cursor": {
          "ref": "69d5ea70-85a8-445b-8045-32f29eb81c05",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bce2f252-fb56-4456-ae82-2ce735b092c9"
        },
        "item": {
          "id": "62380aa1-c0f3-48d5-ac34-55d8d080ffab",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e621b369-5acd-48f3-840f-a4725c879d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16ec85d-b423-49b2-a93d-ce5f108021fa",
        "cursor": {
          "ref": "c8ddc661-1e9f-49b2-b62e-e5f1ac645ff5",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "07e85588-83f9-4805-b306-a604c873954e"
        },
        "item": {
          "id": "d16ec85d-b423-49b2-a93d-ce5f108021fa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c44668f6-127f-4349-a061-ac39ddf1402f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14626602-abca-4d5b-bf0f-fc9cb1a43b9a",
        "cursor": {
          "ref": "c3a7fb6d-680f-4eba-9039-61e22a24f6e9",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b1a84787-101a-4e81-b0c7-68d1178ada8b"
        },
        "item": {
          "id": "14626602-abca-4d5b-bf0f-fc9cb1a43b9a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "aa34fff2-6b0e-49d3-b8f2-de22ddb1cc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67d6830-62af-448e-bad9-c57c32ed53fc",
        "cursor": {
          "ref": "878d06b8-3e6b-4247-a200-d190f15e87bf",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6a6e4711-92cb-410e-900e-1c12a31e911b"
        },
        "item": {
          "id": "b67d6830-62af-448e-bad9-c57c32ed53fc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c2d79730-ccf1-4024-8eff-960636ac080c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09336a24-4046-4cf1-a2b0-ebad7e8a9e99",
        "cursor": {
          "ref": "55f4bef5-0eff-4520-8ca0-8d9340e24d7e",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f88ccf2f-f8ad-42ba-838f-a069facfa2fe"
        },
        "item": {
          "id": "09336a24-4046-4cf1-a2b0-ebad7e8a9e99",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d5d18040-a54b-4107-b664-55d367cd145f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b9d19c-a6e5-41f2-9198-f82519669e99",
        "cursor": {
          "ref": "eb9604d4-9ee6-4aef-9cce-56bcaeb395b7",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f8ee0680-6362-41b9-a527-3b03a0fbcb7c"
        },
        "item": {
          "id": "d8b9d19c-a6e5-41f2-9198-f82519669e99",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b417a2af-60d9-4a86-a771-f8bc0f150761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d5e472-70a7-42db-a732-8e66e67354e6",
        "cursor": {
          "ref": "4b6cf285-06ea-40b5-8723-f199c32b86a1",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9559a7bb-e9d0-4117-9a56-9ef7ef3f289d"
        },
        "item": {
          "id": "26d5e472-70a7-42db-a732-8e66e67354e6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c96780aa-16c8-45c9-8ab3-30858469de75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bea7a9-541b-4859-b3e5-8357314a3ef3",
        "cursor": {
          "ref": "9b9ee279-18b6-444b-b912-cfd46ac6d237",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2dc5a0c9-d991-4637-88ae-51df46562563"
        },
        "item": {
          "id": "50bea7a9-541b-4859-b3e5-8357314a3ef3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "517506b4-5077-4c10-ad4f-b5fce40c4767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50413caf-8a0d-4a86-89e0-f5d66965d025",
        "cursor": {
          "ref": "dc6fe332-9e7b-48c7-83dd-7aec409ff20e",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bfe2fbea-5259-46b2-ba69-04b882bb254e"
        },
        "item": {
          "id": "50413caf-8a0d-4a86-89e0-f5d66965d025",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d6101d34-03d4-448a-acc5-e684042c06ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1175070-cab5-4674-835c-dcfb9ede2c42",
        "cursor": {
          "ref": "d3454bf9-e7f1-48a5-a40b-d8a4be20e122",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9074f070-414f-4b83-bcc9-cc8e8913ee84"
        },
        "item": {
          "id": "a1175070-cab5-4674-835c-dcfb9ede2c42",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "562eb510-bb7a-4df3-851c-5c28e1367d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671a3b09-2424-468d-8eda-71e91d6912e3",
        "cursor": {
          "ref": "186a8a94-530e-4ca9-aee3-d3b6dd72e40c",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b153a743-4694-481a-b648-fd0c146fb4d4"
        },
        "item": {
          "id": "671a3b09-2424-468d-8eda-71e91d6912e3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8119f08c-853a-4c66-bbd7-e4e387fa0755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbd9765-af91-467e-bbf5-a72f4dfb6638",
        "cursor": {
          "ref": "0b3daf11-cd67-4bc5-92c5-5f7ac90f975a",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4fa8dcc5-c290-4d5a-b046-5ccc02f7d5ef"
        },
        "item": {
          "id": "6bbd9765-af91-467e-bbf5-a72f4dfb6638",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cc7761b0-3517-47a9-bedf-70aaffcccde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17d941e-4ca0-47d7-9043-23dd271bc493",
        "cursor": {
          "ref": "bdd50221-b1f3-4c7d-9288-5c7c7ffb8530",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bc32a49a-a3a1-4f74-bd6a-9d33e6e46b6b"
        },
        "item": {
          "id": "f17d941e-4ca0-47d7-9043-23dd271bc493",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "82278bbb-58dc-4c67-a6f9-d18c07ba2870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3370aeec-4084-4552-8908-3b6a2654a5ea",
        "cursor": {
          "ref": "6b5ca966-37b2-4e47-902c-3d18d6310ef1",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5ee9924c-3cfb-441f-b73d-14861522b3f4"
        },
        "item": {
          "id": "3370aeec-4084-4552-8908-3b6a2654a5ea",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "63476539-70b1-4b1e-85a7-d1d9d8ec295a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c7cc49-7d22-4f10-9802-4f91b4647718",
        "cursor": {
          "ref": "caed8ffa-d6e2-475f-8935-ecbabe4e61dc",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "61cc866e-a0ac-452c-895a-1f456fbb76c6"
        },
        "item": {
          "id": "34c7cc49-7d22-4f10-9802-4f91b4647718",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f2a9302f-3499-4738-b390-b9d418febad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a594e1-2e8f-4ed7-a4b9-f6ff9a280ddb",
        "cursor": {
          "ref": "e7ec4003-bd97-4927-9cfd-dcc2a5c940d8",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "56613d02-3475-4491-a928-e44fa964f175"
        },
        "item": {
          "id": "95a594e1-2e8f-4ed7-a4b9-f6ff9a280ddb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fecab2c2-02a2-448c-b3ce-e843a537ca21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2608fc0e-1461-4155-a11d-d5f1960576e5",
        "cursor": {
          "ref": "4710f1ab-2aaf-4b66-8746-32ac1e793bd9",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5c96802e-b475-43aa-bf36-3e96235d1902"
        },
        "item": {
          "id": "2608fc0e-1461-4155-a11d-d5f1960576e5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f4559071-ba37-4c41-9270-c9723744eabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548895e2-72a1-4e29-a945-54fff9abad5b",
        "cursor": {
          "ref": "e97ec929-d8e7-4008-bb15-d1fd931f73da",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "550bf6cf-f7b5-405f-aa17-a283166590a3"
        },
        "item": {
          "id": "548895e2-72a1-4e29-a945-54fff9abad5b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e095af4f-2f82-4a25-be9c-3cce7254e25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aeb6978-4ce7-49a5-9395-a1713b7cd4d5",
        "cursor": {
          "ref": "ee07936d-3a95-4ddd-b7ed-2882486494ab",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8871b78e-6464-4650-884c-2063b4526533"
        },
        "item": {
          "id": "5aeb6978-4ce7-49a5-9395-a1713b7cd4d5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "16709092-8546-4b76-bb13-9fe97d0f22e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74a0d51-bb8b-48d3-902e-cb33fe78528d",
        "cursor": {
          "ref": "af3cfca4-c6ab-4d19-acc4-6ae7f8452019",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "73dd127a-10c7-4083-9bcf-d8a4d9450d1e"
        },
        "item": {
          "id": "d74a0d51-bb8b-48d3-902e-cb33fe78528d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0aa7a452-074c-46e5-91a8-080434cf4ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8356637-152a-4e3e-93db-e4eb47510379",
        "cursor": {
          "ref": "f1482f4f-43b6-49ea-a5bf-7faa752c46d7",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9d05f71d-4fa6-4579-9abd-e2f19e19bb64"
        },
        "item": {
          "id": "a8356637-152a-4e3e-93db-e4eb47510379",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c5b708d9-7af5-4859-a1d8-76fde83a9fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c6c36c-712f-4fbf-a18c-0d61374869fb",
        "cursor": {
          "ref": "475f92fc-af56-4cba-9081-a2f299a7d3df",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d1b6bb85-fc7b-47e3-9dc6-0501cc68a019"
        },
        "item": {
          "id": "14c6c36c-712f-4fbf-a18c-0d61374869fb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "29fa61e6-04c1-4590-88ee-c76aea29e583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450a901b-9af4-49d2-b582-a52bc0c07a3d",
        "cursor": {
          "ref": "24cb4b6b-1b6b-470a-9d0b-eb7fc74d5ec7",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "660dae89-5de2-4b65-89c0-56db7ae7ff7e"
        },
        "item": {
          "id": "450a901b-9af4-49d2-b582-a52bc0c07a3d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b35fa27c-e251-4a76-92a0-1dd584a19b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27727c3c-c54e-4671-a1cc-95485f5d20da",
        "cursor": {
          "ref": "1c442794-1856-4db1-9200-446fdf337bef",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "39ac3e8d-dacf-4e37-b1a0-f9ddf8dc8cb3"
        },
        "item": {
          "id": "27727c3c-c54e-4671-a1cc-95485f5d20da",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a90d90e7-3820-40db-aad3-ce0a9ffa8037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc13afa-1c64-4db1-8f72-c1f3cece3fc4",
        "cursor": {
          "ref": "e3205722-fbd7-4852-aec4-a39e0c1c4f90",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6d30c2a3-b8a7-4730-8611-7be1d3fb4823"
        },
        "item": {
          "id": "dbc13afa-1c64-4db1-8f72-c1f3cece3fc4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1d72b001-381a-4d62-a87c-25b8550bf27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7b662e-794b-43a5-8f41-1070082d00f8",
        "cursor": {
          "ref": "57177928-26a5-4a61-9ad7-41a42b868c9b",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b1d00b9c-4474-4bd7-8253-55116e46d53a"
        },
        "item": {
          "id": "1e7b662e-794b-43a5-8f41-1070082d00f8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3ac039c4-5733-4a49-942c-fe877c7959a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919a7e6d-aa89-4730-8287-85e0c6c7045a",
        "cursor": {
          "ref": "18a8f103-4b8e-4847-b501-dcf4858693de",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b99e4167-74f4-4cea-ba82-088e2c34de62"
        },
        "item": {
          "id": "919a7e6d-aa89-4730-8287-85e0c6c7045a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8ddcd9c2-21b4-4260-8a0b-74fe680e3ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7356421b-5701-4773-9c24-94d09779fca1",
        "cursor": {
          "ref": "5003b027-9941-4046-b952-90393cde4394",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8096b192-b49d-4570-9e97-2920314576bc"
        },
        "item": {
          "id": "7356421b-5701-4773-9c24-94d09779fca1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3e775557-ed8e-447a-8481-54794f351266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4aa453b-2fa7-4ff8-870d-e77e5f9ac387",
        "cursor": {
          "ref": "ff5becf4-e854-4ab4-a285-0e720cc2aa47",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "36b3c673-9045-4f23-8dbb-efc238a9b341"
        },
        "item": {
          "id": "a4aa453b-2fa7-4ff8-870d-e77e5f9ac387",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4cfe3e26-7d50-4103-be3b-98bc72304acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cfa362-fc02-41ff-911f-0a3cc9799c02",
        "cursor": {
          "ref": "f61183a6-dabd-46e4-9f59-b04f1b66a277",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e690fbe5-a1f4-4d02-bc66-91d82dd11243"
        },
        "item": {
          "id": "16cfa362-fc02-41ff-911f-0a3cc9799c02",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fafd7d50-8816-456a-a223-d32292954c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b40dca4-ce62-4d55-9249-9024d74103b1",
        "cursor": {
          "ref": "49341c7e-4094-4628-951b-107d3a94a804",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5dba76e4-1033-4cac-a1a4-d5991c2753b5"
        },
        "item": {
          "id": "7b40dca4-ce62-4d55-9249-9024d74103b1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fb22bdb3-d58e-422d-bc04-64c953e5746c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54e074f-0639-4897-87df-089fa93fd50a",
        "cursor": {
          "ref": "5d60cd4b-2fdf-44e2-a4cb-1fa1ba8cdceb",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bc248c83-dc7f-4f62-a737-b5a19b2d4b21"
        },
        "item": {
          "id": "f54e074f-0639-4897-87df-089fa93fd50a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "df7c5a79-4ddf-43d0-8993-387541878ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358b63ce-2ad0-4e10-ac06-08af51f95a68",
        "cursor": {
          "ref": "bd3c4f37-d946-4c7b-ae4a-69c28e8d54bc",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b9ba393f-a084-4e43-aaf8-ab47c2ae9776"
        },
        "item": {
          "id": "358b63ce-2ad0-4e10-ac06-08af51f95a68",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4822ba1d-53c8-4e34-9cbe-5cb327485d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607e1f41-e8d8-43b1-88a8-389a0a87dd3e",
        "cursor": {
          "ref": "e4d4f289-0e7e-4d30-81d2-b4fe415e3243",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d7f8d932-03dd-42dc-a698-c9aab4b9114a"
        },
        "item": {
          "id": "607e1f41-e8d8-43b1-88a8-389a0a87dd3e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b3ae4642-83b1-4abf-b84f-e43285d274a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a49ba44-00f1-433a-a04c-e9d2de3bd130",
        "cursor": {
          "ref": "6134659d-fe1e-47e2-8bb6-c030e70665a0",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "704b25ff-4799-4cef-9b97-a67014280d33"
        },
        "item": {
          "id": "0a49ba44-00f1-433a-a04c-e9d2de3bd130",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "dff25f31-aa62-472e-b3a4-8eb7a3f3ee71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7533c1b3-61cc-430c-b129-dfa3760240e4",
        "cursor": {
          "ref": "a94dd4b8-f1bd-4396-9096-9c824e8a1f3a",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "48d7a301-91b6-4aa5-9119-e3198fbdef40"
        },
        "item": {
          "id": "7533c1b3-61cc-430c-b129-dfa3760240e4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3308474e-4a8c-4d98-bada-eefa2a043752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099d7712-0b74-499c-bfad-0a0fbc86ced3",
        "cursor": {
          "ref": "34918fe2-dd09-47c0-8525-edf28690d696",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ece6ddeb-5651-4172-9f36-91f458707d4c"
        },
        "item": {
          "id": "099d7712-0b74-499c-bfad-0a0fbc86ced3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fbc6f6d6-e782-4a8c-a93b-3df79a29b188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2debb1-fcf0-4733-8580-16bed3159591",
        "cursor": {
          "ref": "128b79d1-7678-46c9-9d64-8b0f4e9dbbd3",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a1c94323-71ad-47bb-bd48-332ed3ca718f"
        },
        "item": {
          "id": "5e2debb1-fcf0-4733-8580-16bed3159591",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fbd1b0e3-569b-44e3-bce9-efafc8979588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05114529-857c-4c0c-b280-6de3bfee229e",
        "cursor": {
          "ref": "db4c4d00-7454-405d-8fab-a8be495bbbb0",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d7a20091-f705-4ca0-abbd-c052f453f740"
        },
        "item": {
          "id": "05114529-857c-4c0c-b280-6de3bfee229e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "818c5af1-643f-44da-90d9-919e8d5c2de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab30d51c-ab68-4ed9-bdf3-e7855e0f1992",
        "cursor": {
          "ref": "b684b732-1042-43d0-816c-38258ec54c29",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a36d5d56-826c-4b78-b1f1-c506773b0c8d"
        },
        "item": {
          "id": "ab30d51c-ab68-4ed9-bdf3-e7855e0f1992",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c4fdda9f-521b-4275-ac23-98a6467e878e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2511474e-cc33-4587-902c-38fe9e670417",
        "cursor": {
          "ref": "eb96586f-e418-45ae-a38d-ea4f23961998",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c31017c6-654a-4364-93be-b7e2485b5aa5"
        },
        "item": {
          "id": "2511474e-cc33-4587-902c-38fe9e670417",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e5c55bd9-8dc0-40a2-a9e4-05bcf07ab9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8b6f0d-0ded-469a-b1a0-6646892c5982",
        "cursor": {
          "ref": "3bb74044-c20e-4ded-a0bb-a4b6d0b1cb6f",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e06d906a-f20e-453c-a5e7-19992043e7a3"
        },
        "item": {
          "id": "9b8b6f0d-0ded-469a-b1a0-6646892c5982",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "93880545-3ca3-42b8-8e6b-d6d60f193237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247bee6f-98af-4094-90de-cd09a5d874c5",
        "cursor": {
          "ref": "71cf421f-af96-4e82-b22a-8614d5bf87db",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5a8b8669-7ebb-4907-9854-2eeef73b728a"
        },
        "item": {
          "id": "247bee6f-98af-4094-90de-cd09a5d874c5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3e0d3d85-cdde-4f7a-a9d5-55344a460fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba59c4c9-33e1-426b-9cc6-5b20a8861cf5",
        "cursor": {
          "ref": "b804c9de-538c-4671-b7ab-852d8519d86e",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9323360c-f11d-4ec4-8a3b-280ee05c582b"
        },
        "item": {
          "id": "ba59c4c9-33e1-426b-9cc6-5b20a8861cf5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f3b3a3e1-3ba7-408c-90a0-ea4a4e4430f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a37142-442e-4263-afae-74cde439299e",
        "cursor": {
          "ref": "a0530752-0572-448a-a8f7-b3ff968de07b",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2e5ddb1e-ae1d-429f-a158-8ded630bc340"
        },
        "item": {
          "id": "e3a37142-442e-4263-afae-74cde439299e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b90b99f6-982e-45ac-8f3c-af870363338d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4b6018-5fba-42a3-bad1-b7412faf262f",
        "cursor": {
          "ref": "f7780845-4aee-49e4-8a05-6240957e7a09",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "293bef0e-9194-48ef-bdba-ccc690a51a59"
        },
        "item": {
          "id": "9b4b6018-5fba-42a3-bad1-b7412faf262f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e59b7789-272e-4295-b143-6846781736f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74a9558-f7b2-45ee-9859-727e2ea77fe4",
        "cursor": {
          "ref": "7566e243-f238-4e81-828c-c3eda0a26095",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d9e80579-4675-4b43-bd07-2fdc8ba73178"
        },
        "item": {
          "id": "e74a9558-f7b2-45ee-9859-727e2ea77fe4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0a1b783c-6fde-4792-ab91-762dc7fa4da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a8180b-5977-4c19-ac74-5391984be4d3",
        "cursor": {
          "ref": "239c2526-1a8b-4204-b559-d5e82c332ad2",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7f4a3f38-3c0a-4685-b3f9-05fa937c9bcf"
        },
        "item": {
          "id": "79a8180b-5977-4c19-ac74-5391984be4d3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5dc1fecc-71b7-441f-8e9e-a02b93cd9a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871c0448-4670-4dbb-a7a6-9a1b616136cb",
        "cursor": {
          "ref": "5ff09b58-e9dc-45f5-89b2-c92695c8fd0b",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "742c27de-d680-4d51-ae92-a76594ba3634"
        },
        "item": {
          "id": "871c0448-4670-4dbb-a7a6-9a1b616136cb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1b06d4f6-fe63-450a-9aa0-ed6f4ede857e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36787bd5-989b-4063-91ab-93c14f7202fb",
        "cursor": {
          "ref": "1e3fa1ad-e02e-4340-9729-1a2a214a55cb",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ffc1bc32-7a43-4db3-a65d-9b3b6ef89367"
        },
        "item": {
          "id": "36787bd5-989b-4063-91ab-93c14f7202fb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f408d396-f278-49c5-b856-a41cbb58b10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31ac2ea-b5b9-46dd-9f97-7ecbe2b5f544",
        "cursor": {
          "ref": "0a7b07ac-650c-4053-a494-49e0ecfb401f",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d6a1dcf3-dc4c-4544-a750-e882878b034f"
        },
        "item": {
          "id": "b31ac2ea-b5b9-46dd-9f97-7ecbe2b5f544",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2e2e10bb-3ea9-49bd-a6b5-671f136a971c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45dc4aea-52b3-4ef2-bb74-16faf2721758",
        "cursor": {
          "ref": "01eeeee0-3c1b-425e-84ce-c4b5a89fc655",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "576556f7-e5f9-43f1-8d03-b8336ab727c5"
        },
        "item": {
          "id": "45dc4aea-52b3-4ef2-bb74-16faf2721758",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bd990711-0bff-4646-be47-9d67ec177bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a07f8d-fe9f-4d95-9da8-14cbb456b349",
        "cursor": {
          "ref": "0694387f-1d08-4e8e-bf65-c9f7cc272992",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bcce4910-fc5a-4af3-85ef-cd8e2223ed6d"
        },
        "item": {
          "id": "b3a07f8d-fe9f-4d95-9da8-14cbb456b349",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "703d318e-dba9-4774-80f9-9f3d97fd0597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc587854-c87d-466a-94f9-5045c32da10c",
        "cursor": {
          "ref": "9323838b-5afe-4a70-bae4-aa5c834131e0",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "50169e5c-4afb-459f-a258-afb1ed0a7c1b"
        },
        "item": {
          "id": "cc587854-c87d-466a-94f9-5045c32da10c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a180e4ab-c181-4266-a82d-c61f06c1097e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a00a41-9f22-4952-adc6-8af2ca29ce70",
        "cursor": {
          "ref": "129bda7a-05f8-42ca-bd4b-50fd091e94dd",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4a7bf5d6-57d3-4c22-8824-f7f980694c22"
        },
        "item": {
          "id": "84a00a41-9f22-4952-adc6-8af2ca29ce70",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "916b556e-198a-4ad0-8996-b19f5172c7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69eebf3-7ea6-43c6-9d5a-5b39c95a9eb7",
        "cursor": {
          "ref": "34cb2e8a-b7ee-4ee7-b3e0-17d061b9320a",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d2a0044d-5d7e-4489-b888-27295291e303"
        },
        "item": {
          "id": "c69eebf3-7ea6-43c6-9d5a-5b39c95a9eb7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "806554ac-099e-419d-90bc-88112b113328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd05aab9-d076-4203-a690-1fdbbde10afb",
        "cursor": {
          "ref": "58f00ca5-f135-4ff8-b45b-b478cb4bc536",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a509bf6a-887c-403c-a8b5-4c1f883f0cde"
        },
        "item": {
          "id": "cd05aab9-d076-4203-a690-1fdbbde10afb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "68a9ba32-7aa2-4566-a64a-71bd54d5fd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299814f8-af26-49ac-a6dc-d32e506802fb",
        "cursor": {
          "ref": "5cded8c8-8cb7-42ea-89dd-dbcc6e49c7ec",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b66d0e4b-939f-4382-aa66-33f72f0f15be"
        },
        "item": {
          "id": "299814f8-af26-49ac-a6dc-d32e506802fb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4f358674-b65b-4e6a-835a-818b8f2ced97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97297359-d731-405e-8a27-ecb7d63bb3b7",
        "cursor": {
          "ref": "950fd313-9a5e-442b-8f3f-b74500eb316d",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5d62f117-bc48-4932-af47-bc45c9648817"
        },
        "item": {
          "id": "97297359-d731-405e-8a27-ecb7d63bb3b7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4e007982-efa5-420a-abf7-76a58e7c1c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96826df-bcc4-44aa-ad83-67d85318631c",
        "cursor": {
          "ref": "09841d41-eee9-4528-ab89-3a5f7fc1e5f7",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a3d6792a-9b18-4162-bf01-e82f58474b67"
        },
        "item": {
          "id": "c96826df-bcc4-44aa-ad83-67d85318631c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "03850d04-7da0-42b5-9fa8-f3cd9d459634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c37a2d-cb4d-4dd9-85b7-39bf3b264096",
        "cursor": {
          "ref": "cddc6976-456f-4147-9721-9681021b58a8",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "58173896-650e-4550-8128-61875032c9b7"
        },
        "item": {
          "id": "60c37a2d-cb4d-4dd9-85b7-39bf3b264096",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8ae2335e-56bf-4681-bdcc-6fbc48d5d16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f58b924-1764-4f72-be51-0811dfa8a439",
        "cursor": {
          "ref": "7c159a5b-4666-40b3-9bda-b99d491bbef7",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b0097a45-16ae-494f-a790-248bf0044773"
        },
        "item": {
          "id": "9f58b924-1764-4f72-be51-0811dfa8a439",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f921b75b-55ca-42fd-b010-55099cf53c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1793e39c-f24b-461f-b594-28742e387d4c",
        "cursor": {
          "ref": "4e37d65b-20fb-44c6-9bbd-e454fd0f7956",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b5004590-27b9-4a16-a609-46c710dd37d7"
        },
        "item": {
          "id": "1793e39c-f24b-461f-b594-28742e387d4c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a69c3e62-bc72-4fd6-940f-19d9d3b725bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d256e4-cbd8-4f69-97ad-7d971dafc660",
        "cursor": {
          "ref": "7f941d09-f0df-4fe3-b689-fcebb94605c7",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6ec0e1ba-f8bf-446b-aa60-c64e9692683b"
        },
        "item": {
          "id": "20d256e4-cbd8-4f69-97ad-7d971dafc660",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9aa4ee96-2198-421e-a467-29a292a5d76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34c4090-6a71-467f-b99e-8a1d3c6da484",
        "cursor": {
          "ref": "77fef2dd-f74b-4c93-9842-108abc08838f",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a603dbf0-bddf-485b-bd33-dd8064aaa157"
        },
        "item": {
          "id": "b34c4090-6a71-467f-b99e-8a1d3c6da484",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a2321678-eb74-42a2-a808-54ea3d1d034e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7eccf12-74fa-4d9c-b512-1dc2f541f464",
        "cursor": {
          "ref": "1ed3138c-bf7c-45e0-b524-8481863804c6",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f644b4f8-a79b-4539-b3bf-54ae7227d751"
        },
        "item": {
          "id": "f7eccf12-74fa-4d9c-b512-1dc2f541f464",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "39390828-1db0-4742-8100-b90610fafdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbda5d9-1ec1-4769-a78f-6331b9fe4b96",
        "cursor": {
          "ref": "a84b00a7-da0a-4051-a278-c43fb9636c8e",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "772ecf49-fe67-43ea-9dc8-68e0409b66ab"
        },
        "item": {
          "id": "5dbda5d9-1ec1-4769-a78f-6331b9fe4b96",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "009466ad-9eff-483e-924d-c391bc361820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f854b8ef-cad3-465b-a285-10859006d080",
        "cursor": {
          "ref": "17414d8e-6d39-4c15-930c-ccc7572c156b",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a6b19bb1-0683-43e1-a3c8-8123071acaa1"
        },
        "item": {
          "id": "f854b8ef-cad3-465b-a285-10859006d080",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a35116c5-f07f-4df8-bf53-dfff94f07909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5d74b4-0bc0-4929-9742-674503f1b375",
        "cursor": {
          "ref": "520b41ee-ee4c-486f-a4ce-de1eac853320",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1acbd8dc-3a77-4418-9184-138703775133"
        },
        "item": {
          "id": "9b5d74b4-0bc0-4929-9742-674503f1b375",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2c1daa94-7d1b-47d5-af5b-dc7a295f4824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0490956f-41da-4e16-b55c-8aeb80b920a0",
        "cursor": {
          "ref": "b14d5f45-18b7-4b6b-a556-1a4147ee993c",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3eff3a38-1fe4-453b-a226-20d5e1f37983"
        },
        "item": {
          "id": "0490956f-41da-4e16-b55c-8aeb80b920a0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "633970f5-dce3-47ba-9ce0-31dcf0e7222a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30270f4-2745-4e48-990b-ba66b24cc89e",
        "cursor": {
          "ref": "8a0474a6-099a-4e43-94a1-cb41777fbaa2",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "02ca8962-b049-4b22-bb4e-c04222da740f"
        },
        "item": {
          "id": "d30270f4-2745-4e48-990b-ba66b24cc89e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e16dd4df-a5be-492d-932e-49cec4927710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d898e1-0cb3-466a-b900-3cad4a7a05d8",
        "cursor": {
          "ref": "520796e8-de89-48be-ba1a-904df251640f",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bfac6b86-a0e5-4a3c-bcfb-a3b1a62a3a0b"
        },
        "item": {
          "id": "18d898e1-0cb3-466a-b900-3cad4a7a05d8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6abc2691-c811-47eb-b4e1-dff7b3afa9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa9a3bb-628b-41d4-9fda-0b0eb188284e",
        "cursor": {
          "ref": "bc58f812-749e-4451-be00-10b8a620812e",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b6ba5900-eb99-4cb1-9c7c-194e7974d09e"
        },
        "item": {
          "id": "3fa9a3bb-628b-41d4-9fda-0b0eb188284e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "237aa6d7-aa7d-431e-b27e-a7a2a1ae955d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070a8466-dbac-4526-9815-76199c3522d9",
        "cursor": {
          "ref": "020a346d-d21d-463e-8610-aa8c2b8c74d1",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "966b778d-6680-410c-b439-7ef4fbb8366c"
        },
        "item": {
          "id": "070a8466-dbac-4526-9815-76199c3522d9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "50660d13-7c8a-44b1-90ea-a42e7e76e723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8e4756-05d5-4c9d-9a60-3aa88b20d39c",
        "cursor": {
          "ref": "cc79ddfb-8f4b-4c71-b315-85253cf0d58b",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3942ee5c-ea53-4e12-b713-12d9610900db"
        },
        "item": {
          "id": "1a8e4756-05d5-4c9d-9a60-3aa88b20d39c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fe01309e-3a15-4000-9ef3-1f4ca8e8ec15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102dcb44-3b6c-4f81-a2e7-2597c716284a",
        "cursor": {
          "ref": "36f66956-785c-48ff-95ec-e4597795c718",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6ee382e0-2025-41d5-9e83-04f1fa121e06"
        },
        "item": {
          "id": "102dcb44-3b6c-4f81-a2e7-2597c716284a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b964daaf-8860-4163-ac08-9d197e5b3a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cd7010-ca05-42bf-b305-6b1aa8842033",
        "cursor": {
          "ref": "37bfcca6-2a59-4ae3-a5c3-a5ce9cdea5bc",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "160c9181-a152-46c2-a98f-a701cd597df3"
        },
        "item": {
          "id": "b6cd7010-ca05-42bf-b305-6b1aa8842033",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "35dbfdec-5a0c-47cf-9996-83b4099513d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2991aa29-bbb5-4730-98df-ef4976829762",
        "cursor": {
          "ref": "a516d663-7e5c-4e50-9535-b83288bcd4ae",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2f34f611-6dcb-4bc5-9af2-00a7253bde71"
        },
        "item": {
          "id": "2991aa29-bbb5-4730-98df-ef4976829762",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c87da64a-5994-4f2b-91d6-d5ba3663daf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333ca7dc-da84-404e-9a2c-1ecd14dae9a3",
        "cursor": {
          "ref": "0247b516-4023-4c6d-9324-980e0af2561f",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1dd32ea6-5d0f-4786-b4d4-8d221c04f1c3"
        },
        "item": {
          "id": "333ca7dc-da84-404e-9a2c-1ecd14dae9a3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4285173c-b625-480e-8ae8-e6da68a299f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a98d56-025b-40dd-86eb-3befa3cc314e",
        "cursor": {
          "ref": "6d6677b6-bdb3-4cd3-8466-592c0c6e226c",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4347cb74-3010-4224-8496-8178781f0bfe"
        },
        "item": {
          "id": "85a98d56-025b-40dd-86eb-3befa3cc314e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a9b58855-9b45-44d0-88d5-361c9543500d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e78416-7a71-4c72-8ebe-9c03cf68c8bb",
        "cursor": {
          "ref": "274cc745-1c0b-418a-b5ba-6254922aa8fc",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "75232e87-9a77-43a3-8627-a1ecad263eff"
        },
        "item": {
          "id": "23e78416-7a71-4c72-8ebe-9c03cf68c8bb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "54fe1dbb-ea47-4ecb-93f5-65ef47f7c6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a760ab8c-aa80-4d3f-a3f6-15e5f81a4ff5",
        "cursor": {
          "ref": "00d73209-42da-48b2-acf1-8cd98136bf61",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ae06c2f8-8bbe-449c-9423-c4fd82212fa9"
        },
        "item": {
          "id": "a760ab8c-aa80-4d3f-a3f6-15e5f81a4ff5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "35479587-c79c-4fae-adbe-ea67cf33a06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ab081a-4e45-4862-be3e-d82f60688049",
        "cursor": {
          "ref": "cc6aade3-3f6a-4d25-80dd-381129a13d6d",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "eee6c431-95c9-4347-b584-e810f51bf0d3"
        },
        "item": {
          "id": "31ab081a-4e45-4862-be3e-d82f60688049",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "76a76716-7b82-460c-80de-5de32da185e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6142162-7a6d-42d4-b312-823551f40864",
        "cursor": {
          "ref": "c7622084-5401-4df0-95b2-8931e90511ad",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5865e46f-615d-44c8-bfd6-97594821ed0c"
        },
        "item": {
          "id": "b6142162-7a6d-42d4-b312-823551f40864",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c5582dee-897a-4325-af31-a069c0ac7946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd90954-90b8-44ea-92d1-331d827e7cd7",
        "cursor": {
          "ref": "a3a53b32-fa98-4994-8095-c11880eb1a1e",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dd17fd97-5b6f-4bb4-a215-2e8c8d0e1a73"
        },
        "item": {
          "id": "2cd90954-90b8-44ea-92d1-331d827e7cd7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5cd23790-411a-47bf-bb1e-043abd2fa7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99d9779-c976-45b1-b499-a21f39f67317",
        "cursor": {
          "ref": "d7443668-dd59-4368-8b55-6fa38f1d2a45",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0778c624-0d03-4206-b1ce-d2163906a73b"
        },
        "item": {
          "id": "b99d9779-c976-45b1-b499-a21f39f67317",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fb69ee7f-bceb-4dd6-bacd-b22a5a8b4965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22297794-774b-462a-ad9b-e24f173f5d91",
        "cursor": {
          "ref": "41fc4633-00d2-4eab-b37d-624494e092b3",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c1702544-113b-4867-8439-043b022f33d9"
        },
        "item": {
          "id": "22297794-774b-462a-ad9b-e24f173f5d91",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c0001c23-6b0a-4e7a-a13b-25b76d229dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d2f18d-127f-41a7-a2fd-b5c761c1d444",
        "cursor": {
          "ref": "25dbde25-0f0a-47a9-8f91-71937e4abfd3",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "af8bcbc7-9297-48c7-ba91-55e7ffe118fa"
        },
        "item": {
          "id": "d1d2f18d-127f-41a7-a2fd-b5c761c1d444",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ae748359-e427-47f0-afcb-da9d7ae7e81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6976ad4f-77c6-4307-8c56-e3399d6f91e5",
        "cursor": {
          "ref": "fe620f7c-6b2f-4445-9bb2-a41493f7f8be",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "20498178-eb11-4de8-987a-df8da7b52290"
        },
        "item": {
          "id": "6976ad4f-77c6-4307-8c56-e3399d6f91e5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3af0284c-d84f-4973-950a-1994603a4b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdf02ef-2116-4e0f-bd50-d12dac31dd92",
        "cursor": {
          "ref": "b8fd2a6d-5983-4d87-b699-a68f1619342b",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6cdf6010-a97d-4504-a121-bea371d6d8fd"
        },
        "item": {
          "id": "3bdf02ef-2116-4e0f-bd50-d12dac31dd92",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "665107e8-706c-422f-b4ba-b990f16c4910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9e829b-5f71-4d11-b8c6-89392751ffaf",
        "cursor": {
          "ref": "e4f409ca-42db-4b71-b590-441556a0aa0d",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d72f3d57-ec95-417c-b2fb-939340a8863d"
        },
        "item": {
          "id": "8c9e829b-5f71-4d11-b8c6-89392751ffaf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "497de945-3da5-4cc9-90df-74b436c78e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea241004-fd32-4e19-a8c3-f4da0d2dc4e8",
        "cursor": {
          "ref": "5faaa072-6403-406b-8111-0ccb1c73bbf7",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f99e5f25-eedb-42c7-aa39-959395ff958c"
        },
        "item": {
          "id": "ea241004-fd32-4e19-a8c3-f4da0d2dc4e8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f1f8bbe3-3e3c-47bf-bee6-303aeec7159e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655141dd-2409-47f5-a70d-23e83d35e074",
        "cursor": {
          "ref": "912d9da6-fe48-4f15-ad19-65031e3bb269",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9363e57c-8e9c-4180-8dbb-729a72d9fce9"
        },
        "item": {
          "id": "655141dd-2409-47f5-a70d-23e83d35e074",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "acd6d626-9ef2-4cad-b6e3-6b27b81cc576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a26922-a88d-42e7-9572-a56491c078c2",
        "cursor": {
          "ref": "4296d3a2-dd45-4b30-95ad-29aea4d055bf",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ebce15b9-893a-42be-85c8-86e76018a8cb"
        },
        "item": {
          "id": "33a26922-a88d-42e7-9572-a56491c078c2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d3b510d2-4d5f-45cc-b010-9ad334ed2f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868f23f2-30fb-42ec-8b4a-81a4ef15c9ae",
        "cursor": {
          "ref": "941be160-6447-46ae-ab3f-61e0fe81dea4",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c477bcc3-8e29-4a3f-be3b-746aeec67f65"
        },
        "item": {
          "id": "868f23f2-30fb-42ec-8b4a-81a4ef15c9ae",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ad1e1ccd-053c-424c-8e50-22c8e865865d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430cf5b0-ef64-4cb9-822d-65f8938ea6c0",
        "cursor": {
          "ref": "8eccd3d9-1354-40f8-ac53-e56ae9d13505",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f8336286-80ae-4a34-9b1d-9a660c8a23f8"
        },
        "item": {
          "id": "430cf5b0-ef64-4cb9-822d-65f8938ea6c0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2f015a14-90cf-4c03-80f3-5cf7d364ebd6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3372eefb-c54d-40b1-9b85-120db44ac604",
        "cursor": {
          "ref": "213748bd-8d76-4f5e-a1ca-a59b903aff69",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6fc45d5e-603e-42b9-b5e0-dda4c8a1639b"
        },
        "item": {
          "id": "3372eefb-c54d-40b1-9b85-120db44ac604",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "24a0c691-6d9d-4426-b776-59574fae7ca4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7724d013-6b12-481d-86fc-8c13dbda4277",
        "cursor": {
          "ref": "c9e4a1f8-f55c-44fc-8c23-5b3cbadd420f",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2a5cd27e-6a3f-43bf-8df1-4becd2402f16"
        },
        "item": {
          "id": "7724d013-6b12-481d-86fc-8c13dbda4277",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ff896e31-8e0d-4f3d-b71f-a3679d41d017",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d6ca9f-604f-431c-b095-db09814426be",
        "cursor": {
          "ref": "c5dab145-3ee6-4715-9fc6-9cace8838d23",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "919e428f-e4dc-43b1-a4ca-5f2714aadfce"
        },
        "item": {
          "id": "29d6ca9f-604f-431c-b095-db09814426be",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3b051859-ef74-4006-bb9e-0010c4e7935f",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "616141a1-173c-4c7c-81eb-2b2b0cdac6c2",
        "cursor": {
          "ref": "d5263c5f-28ec-47a6-b0bd-ff315ab28d1c",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7e8f2f1a-c9d3-454c-a14a-96700527ebfa"
        },
        "item": {
          "id": "616141a1-173c-4c7c-81eb-2b2b0cdac6c2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f3b89d8a-94f3-46e5-a0d7-da0d29e4d5aa",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6514b63e-4bd1-41b2-a5c6-f65e270653b9",
        "cursor": {
          "ref": "44ed7de4-5f7b-4078-a678-345bcfeaaa9e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "abe2d91f-23cd-4246-af94-81d57c364f64"
        },
        "item": {
          "id": "6514b63e-4bd1-41b2-a5c6-f65e270653b9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0b22638b-8c84-4cc0-9da5-59c802402184",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6514b63e-4bd1-41b2-a5c6-f65e270653b9",
        "cursor": {
          "ref": "44ed7de4-5f7b-4078-a678-345bcfeaaa9e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "abe2d91f-23cd-4246-af94-81d57c364f64"
        },
        "item": {
          "id": "6514b63e-4bd1-41b2-a5c6-f65e270653b9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0b22638b-8c84-4cc0-9da5-59c802402184",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6514b63e-4bd1-41b2-a5c6-f65e270653b9",
        "cursor": {
          "ref": "44ed7de4-5f7b-4078-a678-345bcfeaaa9e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "abe2d91f-23cd-4246-af94-81d57c364f64"
        },
        "item": {
          "id": "6514b63e-4bd1-41b2-a5c6-f65e270653b9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0b22638b-8c84-4cc0-9da5-59c802402184",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a068942-bae7-4634-bd42-f53154902473",
        "cursor": {
          "ref": "de8f834b-faba-4dc2-b2ef-3b40aa0d2ae8",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "22f4a654-27a6-4964-9217-f056a7d8c61a"
        },
        "item": {
          "id": "7a068942-bae7-4634-bd42-f53154902473",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "0b6b175e-84fe-4da5-87fc-99fabb581cd9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68207e00-fa96-4356-9556-e768d0218fc5",
        "cursor": {
          "ref": "f82b8283-8992-4bb3-ae1c-69424089979a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f8bc45d9-8fd7-4bcb-b74e-31288c947d58"
        },
        "item": {
          "id": "68207e00-fa96-4356-9556-e768d0218fc5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ed907d6e-49f7-4eba-b2fd-8dcb26bdff4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68207e00-fa96-4356-9556-e768d0218fc5",
        "cursor": {
          "ref": "f82b8283-8992-4bb3-ae1c-69424089979a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f8bc45d9-8fd7-4bcb-b74e-31288c947d58"
        },
        "item": {
          "id": "68207e00-fa96-4356-9556-e768d0218fc5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ed907d6e-49f7-4eba-b2fd-8dcb26bdff4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2ab87f-4839-4efd-bb5a-4ffd24cf3955",
        "cursor": {
          "ref": "5517cd2f-901b-4a35-8b73-9e08daffd54d",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a8e742e7-e037-4d42-9fe0-0c3d672b3b07"
        },
        "item": {
          "id": "9b2ab87f-4839-4efd-bb5a-4ffd24cf3955",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a0b717dc-8d67-4a7d-8e4f-adc6287aa789",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6585ed07-a2ab-4256-a6d6-8caa32087e2d",
        "cursor": {
          "ref": "0afd4391-1084-4a48-a1cd-3a780ef1738a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2d1d4070-3389-4839-a62e-303b7790da8f"
        },
        "item": {
          "id": "6585ed07-a2ab-4256-a6d6-8caa32087e2d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e48d444b-5093-4760-bbbb-ddabe6eea65a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6585ed07-a2ab-4256-a6d6-8caa32087e2d",
        "cursor": {
          "ref": "0afd4391-1084-4a48-a1cd-3a780ef1738a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2d1d4070-3389-4839-a62e-303b7790da8f"
        },
        "item": {
          "id": "6585ed07-a2ab-4256-a6d6-8caa32087e2d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e48d444b-5093-4760-bbbb-ddabe6eea65a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d1fbc9-445d-47bd-a45c-9a28f63a0e57",
        "cursor": {
          "ref": "809bc647-38f7-4626-a7d6-65cdc281e927",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ce53e426-2bc0-4b64-9bfb-f9c1b0fc0023"
        },
        "item": {
          "id": "c8d1fbc9-445d-47bd-a45c-9a28f63a0e57",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "5158f4ae-6f5a-4219-990a-eb516be0340e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}