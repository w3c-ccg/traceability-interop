{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "70220358-12cb-46f8-9d7b-420b7bed4f61",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0d236a1a-00e0-4d07-b9bf-02dddf113736",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fba82043-7b8b-4a78-9639-ecd5253546e9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "080fc183-2037-44f2-a664-621e80700687"
                }
              }
            ]
          },
          {
            "id": "f05a8f9e-4914-4d10-b777-ecb1f67ce27a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "25e2b9b4-a13b-4f14-a520-339558fe1a91",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "79fed713-8370-4d28-a1af-09c7a0214fc1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f2c9fccf-7ef6-432a-8be2-e18d0f11d2d1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0ec65052-7c45-4312-a7dc-34ee6b054334",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2c7abd25-f6dd-4132-9a0e-ccfa9570d4ee",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55f396ea-6a11-4014-8e96-2a1b36a3d530",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42a5bfe4-8681-422b-8b5c-ae8b6d6e71a3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "422415fb-9fe2-4057-bfae-fce686664822",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f65a2e41-6478-4a7a-9ed2-61bdcca5257f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "493a8409-86c5-49c9-b197-24228a1cc0b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2696ecc8-c8da-4f3d-ae61-da53d894ffe9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abd88415-cb16-4496-82a5-549a8f05d091",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d80ff470-ed93-4e73-8685-568f3da92d50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fca4a83-15bf-437a-a3b2-cfc4bf3bf22e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b58c125f-03f1-470f-a6ff-2f2d1ca67126"
            }
          }
        ]
      },
      {
        "id": "b80fd6a8-b4e8-4da5-b1da-68f826c3f2b0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bdb27694-6a84-42cc-bd2d-8f7f9a3cfe22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d983efc-0809-46de-94d8-d651da5434d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "84f095a7-56c6-405b-a0cc-d641d50a70b9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f6e4dd-44fc-441a-aa25-8c17df3b4f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe77156e-67b6-40cc-a370-904e551e1d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0816d40-18ff-443b-ba68-e14bc0ba647d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b7d0b8-e3e9-40c7-9c5e-56268cd4272e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3432a86-0b9f-4bbd-9f66-d3805db3aa04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922bda8b-8082-48ec-a512-0b13667262cc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6efde0-761a-48b3-ae1f-48c5e84cee2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68061cab-4b3d-443d-8fe9-a12ff095d107"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3cfaa30-b677-4ade-bd68-6e7caeb4cc11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "270102c3-151b-4cd1-805d-eced929589e5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c66a007-9e2d-4e61-8fa8-d179a0dded5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "438bc3b7-d3c6-4719-81ed-2990411ac8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258598c6-7a64-4f1c-b5d8-f7de872115e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33ef49d-5f46-40ce-83b0-d9f4a2d3ffed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0e50d7c1-f1a4-4519-9592-45cd5f59ec01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "74d63ed5-df09-4dfc-a327-773b6c8e1494",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26b8e69a-df55-426d-933b-ee5d83bc26a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "76932b7a-855f-426b-8ec4-4693da733be1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "827f89ec-a2c3-46f1-868f-cbb8f291ac35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "49fcfd4e-4f09-40e7-906d-fb8d75c7ff12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3989678f-4937-4a05-a28c-e5e134e94459",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ec0320c-0d4b-4ba2-adad-7560c0137965"
            }
          }
        ]
      },
      {
        "id": "81253c1d-afa3-40c0-91d6-cf4a3f8d9325",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cf8b0095-2ae4-4290-8bd0-d515c4d46630",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45d94bb7-8f4b-4b1a-a653-1536c9b3f16b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "abf91de3-6827-48f5-95cb-4d9b8ab91249",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b7c342-fcd5-43e8-b813-e64dda6e4dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9813ff4e-e277-4f7b-b348-a2fb49571285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba7b46d-74d1-413f-aba6-499cbbfc0b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48c9f51c-f060-4963-9226-c3a267d01c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a19738-ce4d-43c8-9c5d-3b18f5529de8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6d5fe0-f7c2-4407-844e-4f9f87eaf4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aead97a3-a4dd-4c33-8dac-1c07857a0311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1021600b-1f48-4f2e-8556-b0b7b649fa46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dfd54b3-d748-4a46-8036-f0b7abc80093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257b6b74-549f-4dba-9220-83a6470bb984",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17695d0a-a720-4eff-a40f-7490b2c1be06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a234de-2b40-48f5-a748-84f2ae1268e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd92207-8fab-4eca-b4b8-6ae7bd0556cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "033aac27-8194-448c-b53e-9d283f3388fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e62b07a-a2a2-4a57-816e-025725d446f8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e5bb4e-5ac0-4365-bf34-c26314f75d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891529ea-833f-4abf-840c-a261d1f0a77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae5e462-5643-4872-a18d-a6604a5e0a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6022c22e-9e95-4887-838b-511f882faa44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896d6bc5-2d56-4cfd-9de8-f5d23c71f7b3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a9990a-b38d-4889-92dd-6094d86a8915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224687f4-5545-4ce8-aa64-75284c66039d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6f3baf-cc5d-48d0-8306-b6e03a183bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10bd5dbf-2590-465e-9e33-e5cf12e9a74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a205d2-4f55-493c-bc33-21019e30d017",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2744cba3-5b64-4684-ba8b-378530dca96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46adeb3-96b9-4972-8ce6-a5da1d76b283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31e2461-c6d8-4c70-a175-3b8b307e3074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e5d49e4-99c8-4e39-80b1-e2d2a6ed4c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e5ef2f-83b1-4108-9c71-2d25f25dc7d4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bd2dca-a918-41cf-8daf-452db9789b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88fe8ca-0500-4a0b-8aab-bd4ffd18c65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a485f8-22de-42e1-838a-7df6097460a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7aa8f4f-228a-4099-bd27-2bfd5506c683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e493ad45-138d-4092-b5d1-0b289e0b314b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adc0046-beb6-4cdd-8714-3a1db8372533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af48172-9160-4663-8545-a730413f6587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5bc3c4-85f5-4549-9b6d-f9998febc0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8931e733-1498-4e60-86cb-186a6af6e5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd1a992-086d-42bd-8d21-e880104818bf",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bed962d-20b5-4a26-ac88-e1ca906217a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57144dd2-eda6-441c-8378-919e3a13d2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6649d81a-31df-429a-862d-e084df1815aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "504c0d7a-fca0-4cd2-80ec-1ea3ee02f6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3965aa9-9265-45bb-aec9-677ee4113b21",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46de906-ecd5-4d11-8cd4-1b9ba28f9f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a554bcf0-350f-41c2-9085-292f07dcf17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bbbb77-77a0-43fa-a97a-ded206ac60f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d323f6d0-daf6-41b2-9c34-652a7f48a952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ceca88-f8d3-407e-b823-fc858aa402bf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf1da3e-9844-4452-8c3e-e1d5464f01e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45dcf2f7-5490-401e-9ddb-5a8e77b70a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009f76f0-6c32-4aa8-8de4-d261e256114a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d62aaccf-6856-4fc7-b957-2fbd7e86f56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965bfca4-1a70-4a7b-b17e-2a8b4fe8120f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3f2ad8-1769-44cb-9f85-039be658ba7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5711c1a2-b830-4105-aaf3-4c5da0295e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5259070a-9e4d-4a62-9ed9-0edf59461ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1c822a5-e73e-4e3a-817b-497e211279f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fa3c61-c1e7-4739-a968-60e7ea9d4029",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a755bc47-e963-4fdb-a957-6e70890a3e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac1f42b-3b22-419c-8b21-3338227d3733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c4cd07-7e9e-4e94-8c85-537728a0bd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "347fc774-023c-42ad-87ad-fdeb98b20d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4694e7af-00f1-4975-82ab-b63e7c7334e6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584f2c4d-e734-45b6-9ed3-ec0ad5a4ee18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4cda38-2c8b-411a-a5ef-7d6745f8f146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ad23f3-5f42-48ea-bba9-3d3dec845fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6c986a0-e5a6-43e1-872c-8695b59f75d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25aae59b-2fef-40c2-961e-510e0deec552",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dda842-4691-48b7-85d0-121c80bc5930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5128a45d-f21d-43b1-867a-2aeea7334e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f40487-4856-4aa6-943f-a7c502433e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2d2d534-3755-4899-a0b5-e2f161aec48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc347d09-5291-47e0-bf63-0fb5ba5b8bd8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffc5eea-f4df-426f-b4d1-815fb00837cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f858cf7e-b52b-4840-b59f-15ceb28e1a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d429a6d2-3cca-46e1-9f87-b2a33102bf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d6e377f-37a3-423d-93f2-c9a20a1ccc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c883ff25-c3a8-4fd2-a49b-86e80ab703fa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de52a222-1a97-4e08-b637-dff72b1ad860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68c18f4-bc05-41fb-9a86-83831b6edeb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49deb04-d16a-4797-aa02-519ee1aa4eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f33b98a0-280f-41fc-924b-90ac5b53f4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6615a5fc-14a3-49eb-ab18-13584f2785d2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac85c72-bd5f-42a5-adb2-e3395ecc112a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98cb124-26d3-40bb-a4f1-d5614dd0a5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285d9ed9-4053-4a4a-b1d4-eff57a9c2419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f26ff111-5b40-40ce-bb07-589b70f5dd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3d1ed9-2ae6-44d0-bace-d897c3c04011",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79faf620-10b9-425c-9ef9-a5599a9e4a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8c3786-20ad-4d49-82d5-8a4bc30124c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b543f5a1-91e9-4bf7-92fe-156c9b0648f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "517dc553-8872-43d7-8c80-1b5a3d8b0519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0b2dcf-0403-49e2-b872-6377322becc0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fae374-ae1c-4a55-a475-a5681bc0723f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a5b404-2a33-4fa8-892e-0cd71b3a8d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866eaca3-a7dd-4e88-8c09-9b4cbbe85c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11bde8f0-303c-47f7-a667-915f97caf7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71779fc0-d638-44a2-96cf-0f1aa4d67014",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a46d5e-7412-48f3-ba3a-71eaa1f3418b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3f58fc-ed69-4c01-b6a9-8550eb08f368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a239e7ee-7755-4fc0-9203-252a1bbcd4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be1f1545-d4dc-47c6-9d95-2bd3f2f2d37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece985cc-38b1-4d80-95c5-0a376444ee61",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82e9206-08cc-4178-8a59-f9726a07317e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c39202-8496-42d2-885a-31fbaa69096a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fb2674-2bd7-43cb-8be0-34a8e185f4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b0b682-dc97-4e2c-91a5-fbe8fd120c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a1cb3e-3556-4a25-a539-93b9aec83496",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a064433-ff6d-42f4-b426-4d33d5ba5dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ee5247-1fc3-46b6-a5e4-33c24d3d7714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f8adf5-0c43-494c-b097-74e4ece03bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24c58369-84b5-4eea-ad1a-1152485a308f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2accdc83-c1c5-4dc3-8d7a-a600c1918ce5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b63db8-78ae-4ba3-94d5-60084f9f5bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2525fef7-5e7e-4e84-b79e-0fef4c45be19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc43b139-073d-4b75-b323-d498b423153b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "665c4e1a-e9b4-49f2-a7c6-7fa11b7e5241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180d4255-e481-4c48-9f84-dba5fa9edf36",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e97f9eb-0b64-407b-aff8-0e4446247450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b403038-1def-460d-97c6-5c97bfc70681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51b2168-e05b-4c2a-a0ad-15a1eca5574a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ddbc91-34d2-4360-802d-9e007c3b1c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bc3b08-60cc-4dd9-90fc-12735c330e58",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857b7e6f-4002-460f-b485-23a9fde9e934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1b3041-bacc-466d-8a9b-cdf1c943bd54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34f1db3-80a6-43bb-be22-7bc9c836c3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a756e62-c95b-4109-9dff-4c708bd378d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebeeef77-fb83-4c21-9358-5816b4591c05",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4decb18-152d-4b14-a589-187aed082d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c06360-8a5a-408f-976b-b1aed85c82c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19caf2b-393f-4dbe-abc3-fce1cd18f180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77b74d4b-f1b1-46eb-96bf-2df15ad4be20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7283850b-6469-40b7-80e3-485baa0eea62",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1794c5ac-e434-4566-b2b7-4fdb840c1b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e78d2ff-24f9-4295-b057-5666b14b2f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59880f19-e162-469e-8fbb-83345b474a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5354f3af-e900-4f15-8041-1043305e19ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491462ca-8dde-43a8-82d6-aeedfcf101d9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289a3f29-5756-4482-9d97-78283efc24e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043e4f98-55cd-4117-8695-e58ad929309c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b712b062-734e-4254-9cdf-cf29dca4fa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c3712c-01eb-4f5b-9216-9610cb684d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce5c2c2-1f61-41a1-88ef-0d35c552b55b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0606aa46-f435-4972-8e1d-21c23982b3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493cd459-2fcd-4461-87c8-9272bba4a04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee06deb3-1578-4a5a-a934-b48afebb2347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2956e0f7-f745-4f4a-b504-76a07c800f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7330ba34-c971-4556-94ac-4e81d41d15e5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0155d797-8f81-4409-93fd-95be491c0afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b6f825-de1a-4d3a-960e-6559963a50c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d5b883-4986-49b7-92cc-f7e6afea0a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7e602e-a293-4a48-a026-a11d06397efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d9a9c8-521f-4906-b15d-44aa0a6f3872",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4669f21-75fa-423d-92b3-2591008644c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a317c5-b17b-42e1-9032-b185e40b1d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147f39c6-e249-4e65-9886-21c1e5c014f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc16414-2b1d-430e-bf19-87a55706c9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fc0383-d9df-4ac6-8999-cfc390f8f144",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed02fd32-02ec-428e-a1f0-55ed9531f458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43458376-4c48-4591-bb43-0ace505aded9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57378b4a-9b8d-430f-bf06-63e91e5eff3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c590afca-0ff0-422b-ad7c-373608795ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea669e9-fafb-4112-8be5-df9a6aaa18ee",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0a040e-bede-4b51-9aa8-2e29fb00e1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8cbf99f-c2bc-40c3-9206-f223833bccb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae352532-b22c-4a73-9381-99967facffb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3274e267-ad80-4306-961c-10d4337d8017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49605db4-a2ab-47ee-8f0f-f683a1e96e5b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f1c2f6-17d1-47f0-942d-b8508c540dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adaa6fac-ef4d-42a3-bfdc-788e87ac2050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0876afc4-3dfd-4a03-bb29-249e20653dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "32dfeac4-413a-4999-8e24-a385b69b91cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861fe135-6952-4051-a3f8-19002b45e9fa",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593eb2c8-2342-4e07-8eb0-88e8170a72e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a79b3054-3925-41db-b53a-c36fd681643d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10380061-3ea7-4c97-ad6d-603c207e5158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9dfc54e-c308-417f-9988-ec197ec2a3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907b1ff7-d6b1-4522-a118-5c2db9ae544c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d047b6-5882-4887-b14d-5fdb05750386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce2e5af-2863-48ce-aade-9c8c10047e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c588a5-adb6-4d34-8bc1-0c2881f2af0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "615d1a16-0fd6-45c9-83b0-f3d335d300db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff37212b-6794-482e-b14d-3014894474f5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e058aef-c0fd-47a7-b34d-5c0e52b73611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad01580-3e77-45f4-b41d-f65c2d951337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3075e7d-6a09-4d41-b4b5-6c156df9bc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f01701e1-19e6-4c21-af11-86ae933b6ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8c7797-346d-4822-b644-058f070b2de5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042c5b82-4413-4b68-b9ff-49e83a8acdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552dd97b-50ff-4061-8c5b-6935daa8bbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd2ac74-928c-44db-a69c-a4e17f9fb1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "95a397a0-a43b-4a4e-b4e8-b3807a8ffbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9766676-4894-45a6-9ef1-72f8338f9bc4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f889c0-53f5-420d-9bae-02b08ade77f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54b5b96-1dfb-4d44-9707-9ffbc88f846a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6cd8cb-8ef2-458d-9f35-93ee1b701a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "299d7262-ae1d-4f5a-9d46-979bc4e233e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdef9b9-b86d-4f90-a8eb-c2dcd93f8cc9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ad5cb6-a7ae-489c-baa1-1c08fc2a0f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad4e92d-c3cf-42fd-8ac1-6ac39ec8b216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e284ce5-926d-4d32-be55-767564db00a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2631e8e-ae47-4b72-a9d0-6019eaef9791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc68374a-f8d8-4a7f-bb4e-e053bcd6def7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd847de2-48f5-4ee7-b1b4-15a6c00e7d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85348f7c-caaf-4c10-82e0-34f932200c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f857b2-7c38-4496-a35d-37a29755c2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fc21a4d3-b6b2-447b-9c66-ae65502c403b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a631a4-a60d-481f-be99-ab9722898a2c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f2fc96-7f86-412e-9e5c-293010afc2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f155a97e-2cc8-4657-a0e1-1628b354e37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd53bfb5-ec20-425d-83fc-7212f22aef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "aac5e712-0e1f-4b58-950b-af73ae25d210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2c9467-e0cc-438d-91b6-d5f13f96b2e5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a9de6a-2175-4472-82b3-317418b90772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549b2739-d4c8-4c68-9457-2278e2334955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070fc108-c0ec-42a1-a352-58c56100afba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "904f45bf-a552-475c-9958-2ddee5f37678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb061a52-3c0f-48a1-adcb-6c33cd539bc4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3d796c-4629-4408-9f67-fb66f08e1961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961a599e-5ffa-4ed5-b73b-439a50a0c028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3baf9e-c255-4805-9194-37d9c4cb4a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26d21ab0-ceb0-4273-99f8-6b39c5a58b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3beef0f0-6c2d-430d-ad0f-9e540a99e51b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc1ef9a-7f8e-4d67-80d7-d62240d98f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0668af5e-9456-4302-b7a9-1b2f53116002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa806a0-757e-49a1-ad69-af05fe15e732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "133800ac-42a1-4100-bbef-a99a645826bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c998104-4471-48f6-a2c6-05bb8ef631d0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9fdb6e-875a-4742-9bd7-9c88f2770c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7cd7ba-736c-45b6-ae23-464a1a78e65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac79476-970b-4d42-aa00-1e16b81d77b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4873c4c9-dbc7-42a7-864c-39de4987cd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d0443d-1ab7-4f14-b21c-3045fb236577",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b26fb10-fd6b-4aea-858b-b11195e68c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81205e4-cb20-4886-b9fd-2664a2f95882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ada109-375f-40cd-9726-c966aed8f60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36d10ce9-7d75-4805-b7c9-d049cf85f794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8e1146-1400-4d74-8c15-39623431b146",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0428d46-5a71-4dfd-9854-b80e30893b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b0ae34-9da5-4fe1-ae58-222833cf9a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887f087a-c766-4011-9496-02881ca3b954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2784a58d-50c3-493d-afcb-aa5c82751c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdb8210-d4fd-4572-b91f-c07fb38b6dce",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886d94b4-43ca-438b-8ae8-bca51626beae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fcedef1-1501-4f9f-a3dd-5f92c5ac63c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6b728c-bd0e-4e1a-9181-930f1ab6062b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f521c32-f235-4c63-8a82-b179ca0440fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2684726f-14a4-4ca1-9fed-7f7b04d54899",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee5c2c2-2b63-47f7-b957-0aeb1277f7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e15c2f-0533-4df0-861a-c7a956a87f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ba8c52-0454-49ac-8d5b-952705316c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c63c722c-5088-4dd3-9243-8b5d621a5e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77049fe3-9719-42a2-bc7a-821ab43de488",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2426e83b-8740-4337-ba74-87f68eb5110b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148324d9-b8b2-4d9a-a6c9-dd4002a5da2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65412abf-b7d9-4a52-9e20-f7acc244c012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25dafcf6-233d-410b-aad0-f47d9bcfb821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a94874f-b6ef-4627-8b47-ba42297fea4f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd69804-b9c0-4c5c-89ef-2a90d960e806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33e3ed2-9f54-47da-8054-4b570cb519d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d24e2c-fe49-4f35-b6f3-347a07e85c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75fa8861-1f78-4f67-bbb9-58f69d7d6bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdb744b-3ac2-472a-abe7-d6fb4114516f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa14e8c6-1ecd-4316-8b4a-4cad9f7e392a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927b6163-6524-459b-b14b-feaa94e3c821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9156a519-5931-438b-b4e1-da0147b15471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17a18bfe-ed4d-4d8f-8039-65e6754de003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02296bce-4c62-44fa-93e3-c1039e475fc0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f44d2df-796c-4466-9e22-8f61dad83c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e9fce9-ca1a-4f9b-9a95-a9e5b9e3abea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8863d81-3f01-4604-bbb3-3b1953c273a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "883f257e-8cf3-48b4-a6ae-3d55bdfff05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb0f17f-d537-4969-b4c7-ae6d865a2585",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2135e60-5d6a-416e-956f-bf85ff7d05a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26406316-0b40-486b-a673-ceee2ef0fb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7845b8-be24-44f0-9854-ecad5d9c70f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d85ddc53-299b-4fe5-a7eb-9fca2227a857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4af88d-f5aa-4abd-a36f-25d21ea6ac09",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7b51c2-a99f-4e1c-81e5-c575011cdc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507d542c-e7b9-4ee7-9ad9-cb26a7279c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e254fe57-acc0-4598-8ad4-a431f3788124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9419caff-11c6-4c64-825c-f681d2b4bb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cdb2ee-79ba-49b5-bb41-b969e9a096fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dce9cab-6698-401f-8121-e81595d87815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9839cea2-9435-4247-ad62-220478c65ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3790fa9-582b-4772-9353-8aa6d277c79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0d3a1a-e43d-4332-bde6-d2953a66d3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1d5d4b-9bf1-4893-92b2-345a28284ebf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c67262-9ecc-49dc-962b-928901e42060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace7dada-d1bc-43f5-ace5-e73bde5ec5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a24f8d-354e-46d0-a3f8-6ceae59cca5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "34526a61-4d76-48d4-8594-2e52df2e67ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca358fb-e18d-4647-9c4c-5d2bff401a5e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da28b03c-3193-4387-89f5-a5d282181bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfe187f-e83c-410c-9e13-b3540b01a47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bd5379-3845-4d10-ae92-d3f78cc17e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "80ca7ae1-56c3-46d7-8ffd-876e785dd902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef68d9b0-e918-4c6c-87a6-2d1aa7207757",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7291a0a-156b-46b8-a71d-97ddb23edb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8f83f4-6bb2-4387-9448-af966df5ef1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc8b1a6-322e-44dc-b2b7-239379d7649e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2796cd43-171e-4839-a864-7ffe4f98cbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82287a23-b4b4-4d1b-a20d-8defb9af4f84",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8523c2c2-9679-472d-9e8f-743c309b6818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63616aef-cf4e-4915-9548-faf5cc727e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3435fc89-3d75-4c9d-8230-6020badebb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f141f8c6-13d8-45a0-8aa4-67840c8d7dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cb364b-a1e2-4eaf-9908-032909cc7777",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba58b8f6-6b34-4a7f-9339-12a547b0f8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34684eb5-1f92-4532-8b23-21334c1f2572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8c75ab-da83-455e-bc65-6d3d7c860242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb150db-e8fc-4004-812e-875bf27b6b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a68b2b0-5d8f-4bf0-9f30-5cce33ef1c4b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca2766c-ee2a-4bd1-abf4-7d80fa7ec82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f6dfc4-fa3b-44dd-9cc2-448d689421cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073b8b79-86c9-448f-b57f-86a648400e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a402c8c4-020b-437c-ab8c-752218ae27c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3dea8d-3afc-45b1-9095-e7cdc2dabbfb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d2f6a2-35ed-4d31-accc-e36bd8eaea8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12f45c4-b8b5-4c68-98d3-08fc2dc64d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fa025f-ccfa-46c3-9493-d93c497b87e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8b1f2a-e757-4d4a-9f7d-f66e9ea1dbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6538108-95d8-4fcd-8828-1930e27da26b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a1257d-5ed2-4533-b9f1-dd95d5e26072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2cd39d-c122-4f53-ad57-e1452bec5249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c597653c-0bb3-4554-a48b-3a5c9debe440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51b3cfd2-ced2-43ab-bc7f-24202d218404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050f2a21-7842-4f62-af4e-f05cd463d047",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a8092e-005a-4216-b041-0465e44ec6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2797224-fae2-45b3-80a1-44051781dc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bef3d29-9b3e-43c2-8706-e678480a6ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78973094-267e-4188-8bec-47b0bb97e244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47869473-5388-4fb4-b384-a2514b1b9bdc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87e9a7a-853d-4605-b2a0-4c4568ec715c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8911e9b-ec7b-4641-a9b6-784deb633fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ab51ad-2854-42bd-8ac0-d130f7795b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f7fdec-d119-44e6-a8ff-4b49b2214aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ef7c74-e2b0-4346-8f2a-ea657b11d191",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fbeb98-0745-4776-b66e-af611c117864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bbcd9c-3f1f-4c79-b0e7-0efffb61c24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f58b157-6d08-4215-9766-22f1220c707c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e52b139-288a-4581-854b-73dfd12f445c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96d11d4-0a1f-4900-b90e-8e99eb6fea9c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835b74b2-06ad-4886-b2cc-14f3e4508b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de52cb3-03a8-4f22-8a3c-5b3c2eed45a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c90aea-350e-43b0-8958-0a2a2ed40636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a221f6ee-d4e9-4fc5-b8d9-f4aeae1f1117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f09cbb-5b74-4507-8479-019a7d44e402",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a3eb9d-c2a2-4d39-9405-4aadd10eb57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa413f17-4a54-4871-96ec-4d925381e4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ed6b36-397f-44ee-8b08-c494a4637569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "039bb987-5533-4c7b-a949-e3ac4ac61ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b63b62-775a-4c08-aebb-51faea4951fc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36b627d-5f9a-4a88-b5ea-92553319e007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25edb8a1-5859-455d-b392-250e80db0528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9d4947-c293-4b37-87e7-373dd2ce0696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1a2d60-be28-498e-a720-aac962477da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a09e0e6-d37f-4914-8d29-170b26950e82",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5348f2c-3dd7-4a75-8b15-50b0e1a6aa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ddc8e0-ec09-4915-8aa5-ba6e21d2b00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f679c221-3f4b-4764-99f3-52cd5c9c2f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae68263-95e7-48ba-82eb-4b503035a88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3204d85a-6c9e-4fc4-ba10-4a5b7fa2fade",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d247c4-26fe-40e3-8d27-f469d162e983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfc7106-a97d-43c7-a630-a270c4997a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9f77f2-7a39-4c46-99d6-d0601275ac47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04b00fd6-2d1a-4f11-aeab-f2227f667c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd58cccd-d48b-47f4-bd95-4a42f38fe09d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fd9d7f-968e-4c3e-9696-1c6e7609e658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73070671-a34d-4353-9c3d-bf4d5f355cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a7a106-bab8-4dec-a0f1-9969a17193b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dea9f10f-bb1f-41d7-b932-e2c8f589bb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43af1856-ed3b-4925-ab30-bfa85479b3ca",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31544736-34ab-49aa-ab1d-5d1789fabbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa33647-4df1-44c7-95c3-102f4be202b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6180f0-26d1-4def-81ae-c3346467cae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36f59cfc-1e86-442b-bfec-3bc93199b2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8aab0d-851c-42a4-85aa-11096a5e4c50",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168f9b9b-6d43-40ae-865c-6791ad40bda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3cbbd1-14ab-4d66-9bee-5677cbca7f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37128a31-25fe-4aa6-9a01-32b9fb61fe3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ebdd1e-9705-4573-b5a4-4d2acce00da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e10ef84-6287-4590-96ec-20359b0e2275",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e694f147-b2f3-470a-baef-ee55f2819c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56018f9a-79ae-4054-a345-56280d728041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb7d733-6e1b-40d7-a8e6-4ec331d57521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c546d0c-2adc-471f-b990-edb259e41b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65834b9-6477-4494-95f8-c1187e45ae75",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707ef6f5-4484-4fbc-a89e-e8bdb51e0594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93af84c5-8d99-4db3-a4c1-70ba2f7b54c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c221b5-9eac-4cb2-bba1-1b78cec2efae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bad61103-067f-4b9b-aec9-25b7f1e1ec30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9d5657-7f10-4dd0-8b60-0360799c49ea",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6f27c2-3c7d-4031-b94d-50bd47e4f1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1434958c-5347-4c14-afae-d2fd6df500de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dd5b74-6f15-4ab4-a64d-d8468f70ea17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1327c75d-3bb0-4709-8fad-1400b4c9a784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83034ef-7be7-494f-87f0-6b4a3be62f2c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ba77f9-59b2-41e0-bc52-d41dc9ae0ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a124ca24-588c-42ed-8234-650208e24551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788d0a28-17a8-4648-94bb-96ed46a98f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eddd07d-197c-4a25-b4dd-a0ecde3727cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7bc9a6-6e0b-499e-a1ed-bc3c40ce431d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc2b345-b8e9-489e-9f9a-2307f8d88119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f18998d-f2ed-4ce1-8ac1-299385fb55cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03af37a-d2f7-472f-aaf2-48c47a3b0d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b92a76-7d5f-4f21-99c8-841b1c01fc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daece331-a77a-4bed-828b-f53dfb344590",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f53aed7-56ac-45c4-832f-e5e056dd9db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0b4bfb-d2a1-4abe-a6b0-fd268ac6becc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233257f2-6e76-4f89-bff6-5ae05d761d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77b9d515-775f-436a-a5be-d9c2f391ffc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebabda25-463a-40ce-8192-9d2c1e2712a4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c48bdfa-76c8-430e-91af-afd2eb67c85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c36aeb-2142-468e-8741-c75b894abb84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc71996d-9081-4edf-b63c-17dfa554c5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afde5fa0-2d02-4251-93fa-f059f14767c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a2b748-0fa0-40d2-9c33-94c00e67894c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedb0e26-772b-41b3-81db-4249d40788df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f995734-4ad2-4914-badb-5d317763082e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2306d4a3-3290-461a-b1b2-3ccf57dbbdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5856c999-0da8-4156-a734-a1004f2321c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aa6346-d94c-4e61-9d7b-5fb3da18437e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e402dced-ea48-4da9-819b-2a6a85390085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21005c9b-1b11-4a2f-801a-9d06ed206356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc79d05-f270-444f-8a4c-93a713401c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3438c964-da2c-4c54-b824-dacc27894aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d41192-7405-46c2-971f-d1906d17628a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8299e58d-c15a-48b1-93f5-5749a7c8c34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bbc1b2-41d7-4338-a776-915f397b8e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27ea676-d943-41fb-9c80-5ebb41de6e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "63c785b1-bcb1-4432-a051-47f2d01bfee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e85719-0072-4d97-bbe5-811ec6917cd6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6b0ab6-0893-4e62-ad4a-a0fe65339692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e40da22-7334-48d5-b861-139f9edaf191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12c48ac-9dec-4f66-94ab-3dd1d14bf868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "727cdff0-bbe1-4a2e-b725-022759cbdbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0609596b-bc66-4754-8eef-e2102b6f9926",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa46b58-b0de-44bd-b6c9-465d2b94a6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0078d293-2be3-40c1-8403-eaf2df2a27a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc3ed8d-6ef5-481e-8e57-76d0b5261a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c37a5b-0e84-456a-ab14-3229b8760a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da55f8a-1d52-4ba3-843b-321b1ae760ca",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18bbc21-0f37-4cdc-83cb-2e94f60671f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713eaa42-a6a6-4a71-9b67-cf10a2109e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f45994-c1e6-423b-b673-be6220741fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "63415f4e-ee1d-4f68-a5d6-0f8134854ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed217c74-34ef-4163-8111-95ff504283ab",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c71f3b-e9fb-4a5e-a0dd-c71ca3f45530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d10b439-2147-411e-95b2-592c4bdb2ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1fed25-7c5e-4a39-9d89-188d4f066dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4be45d4-0639-4225-8e0a-65b14185d148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1c262d-0dd6-4b80-af6b-92feed6800b0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8678490-ea12-46f5-9d8c-b0869a63d89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "efdf8936-739e-4800-8306-8e0f1ba75495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154db820-2386-47ef-8cc7-af7f153885e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe44ec76-4a54-49b9-bc86-1d3e5e083975"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab4248be-2279-4dfe-b553-daa22419d4a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53cc4209-71a6-4ee3-9365-c44eebd89dd3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60c8bd3-83f7-4964-9bd6-e1e58e5bd47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06ac21b8-28dd-4d46-a01e-0a7308ebcc55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb6e28e-da2a-490a-b14b-0fd4809a89c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "561c67b0-a7ce-48de-8c39-988820185e67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2aff833a-3068-4d0b-945a-736fe969cddf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8418809-0c25-457c-83f7-71d2af0f4f8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2997481b-1270-416c-81de-5f89a17eae5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a20dda39-0647-49bb-b22b-af4a85be5c3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6ac7789d-8077-4b88-b7bd-c8c109ce2cac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94509226-8771-42d5-97ac-7a25565e7d18"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "47dd8791-434b-42ab-99a1-8591408fbeb5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6b31347-91ef-4e95-b91f-9e26f31daf8b"
                }
              }
            ]
          },
          {
            "id": "f4e0d3fd-84e7-498b-a01e-a1158332da98",
            "name": "Positive Testing",
            "item": [
              {
                "id": "39ad6e63-65c9-4045-865a-90b9217d230c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "eafb83fb-4e49-4d28-b4fa-dbac525ae859",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b579234d-13c2-4537-a93a-6567daf07ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8ecd6d58-5ff6-4437-b679-a0f5196cb101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12b2baf-2dc9-4784-bb38-e95839fb1cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb120e8-b2b3-4dfe-a4f5-a3bd72774b05"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b041dae0-c1be-41e5-b434-d1a8a4dae858",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3235355-57d4-46ff-a203-79868ca92cd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8dd3d352-6093-42ee-b21c-2d11ba23a12f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4b218e2-67ff-4da0-a197-2b0a7ca972e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b8ec742-a7cc-4f4e-b826-6fac33af8598"
                    }
                  }
                ]
              },
              {
                "id": "4c4c183e-74c2-4798-a063-42ba8f6fa595",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40640e4f-2819-4f5d-9c9e-c4cb1ed41506",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ae5921c-634a-4b8d-a3f9-386ff711f242"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8eba7774-7626-4969-adff-7576266e52ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6cf16267-0c5d-42b2-8688-b0ed8027a42f"
                    }
                  }
                ]
              },
              {
                "id": "e1e18813-cf25-4031-aa93-70df348ec411",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c12cfaf0-5e77-4671-a364-0b24510790d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a3c3356-d753-4c04-8155-843b328c3c9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63c34b86-8386-40a3-baf6-83f4924736dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "75cf0fa4-f572-49e1-9f7a-bb1a5a313f3e"
                    }
                  }
                ]
              },
              {
                "id": "2fb93778-88cd-4f50-b0ba-13364a0bfe59",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0140315-f73f-4a1c-9c35-4b324b7aa9c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c7da17c-d9cb-4e33-bdac-a1582f69d1cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adcc2589-4092-40f8-92f6-b7d2140a6dca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a51cc3a1-41cd-4693-99a5-48efc86de38d"
                    }
                  }
                ]
              },
              {
                "id": "2f0dc460-3679-4876-a632-a4be0f08b7fa",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2ed4612-3ce1-447e-9d16-3aad7f40f73e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24b2814a-97c7-4ab5-84c6-75db0c4906ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fec53ded-8f10-454e-8117-c13df99468eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ecc9b251-6407-478f-9472-aacf81df4df8"
                    }
                  }
                ]
              },
              {
                "id": "08a8070e-0081-46ac-814f-d61502481c0f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce4d44b7-5798-4979-bf9b-e138468d9859",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "856f609e-69b2-4167-aa45-0707be87a8d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f12f8b5d-1d3d-400e-b904-6999e2ec2390",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab380b74-7668-44e6-9fb6-e6610d60cac3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3fb5fcec-a4da-45a8-b587-324901228a91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d53cc2be-c198-4ac1-9d09-6c025b757e16"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "28f270e8-b247-46f3-b69f-fe1f0f0d69b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25fd23fe-c710-468e-ad12-dd48f9e26a6c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "041978f4-9f78-4132-b02d-1778af8c03d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4c7806e2-3441-47c5-a86c-f06abda6b1e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4518f24-5700-409b-a215-826ab6179c41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dba1cdcc-6611-4e99-9116-765283fe7364"
            }
          }
        ]
      },
      {
        "id": "6b35ab33-4650-4cef-b86d-cd67722fe729",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4da2f1a3-22b7-43ce-b817-8924c0fa35f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "834cc52e-c528-4071-b23c-90785030ee47",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1b0b93a0-fa63-4f40-9c6d-5eb1b4682164",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c630d9ba-6bf1-4915-b084-69bae53ba660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99302e13-7b3b-428b-a31b-880e0b757866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddc7091-8d6b-43da-afef-e6d89390bce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "108835f6-1ff5-4144-98ab-db33b2b5138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5918d7-2bf2-4a20-ba36-1a5a1077e9aa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c519b68-1f78-475e-afb2-c8e288293240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f86a05-731d-45dc-8050-f25e19cc31ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc435c4-ab04-49b6-8037-b2f8fd068b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37c2a438-2088-4339-9807-9a852a3e1f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c71bd79-41f7-4ba8-8606-9f0333e89c34",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7488f3-74f4-4d7b-835a-8b2c451f694a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a68e332-4110-4a66-8595-15c5c013fe4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f44948c-4bdf-44e8-a7b9-a5fa3601bdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e508b4a5-d508-44b3-b1a3-513540ed1fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6093c97e-4047-4a00-8c13-502626cd45fc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b6551e-7bb2-4ca2-b85f-864d93a71503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcac370-01fa-449e-b256-4b2ca71c8b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fabee11-14b0-4845-adf3-12be58896de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "933fec2a-ad92-4c7b-9424-74c814f66125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffa5f89-ac6a-4169-86d9-e959398fa4b6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16b8784-7fc4-417a-bcb2-88258dfa1e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ed9211-5589-4fdc-a237-2d46d215defe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938c4d33-dc7f-4d1b-9f82-b79a5c3165df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2279116-2551-4d29-a8b7-910e48a13d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f00b18-5d10-4b69-8fb0-59d38ee67a81",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14201116-0208-491a-937a-94dbafdd3006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d63c4b-dc0b-4b19-9742-cb46bbc7e1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc857ad0-98f9-4a8f-8081-54aa8c457640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8574ae33-2b0e-4061-88c4-30ee51cebb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ac2f72-6510-4d12-86e6-b1611c1f1b49",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1380932-0774-48aa-a367-63ffe8bb4f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d76858-2dd5-445c-a868-048bf05d9d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635756ec-92c8-47a8-b9e7-da9907a150d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3df411a-89f6-41a0-bdea-80ba0fa4c405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633664ad-262b-4c19-9587-affcebe80e37",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f07dad4-46a3-4be3-aded-b2ec273cb49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f473cb-630b-4cb1-9730-7ff373050cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c266918-1744-45c4-af33-c8c7937b080f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fd8dda-d43e-4e6a-89c8-b540a91e1f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859c0f7d-504d-43a4-b351-1c7a0d37fff7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03766568-e5c1-4898-b9da-6f9069f08224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bbd3ef-13ff-4e2b-94a2-f2bd9a6cba83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4884801f-73c0-4fc0-97da-f67025fbeff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a36c2d5c-90cf-4f84-9845-7dbb54ab7bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81963aeb-1634-4750-bb67-f012cffd6332",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2eba583-9ee4-4ea7-be08-bee1e97aed2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1755f35-ebb0-44e8-9fc8-9edf03fa9fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215dd3b5-919a-4cea-b277-e86ccf39470b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "632c3903-860d-4c79-aff0-349648832143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5631004-471f-4694-9242-b17c471c925b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8e2ddd-ae66-4aa6-b3b9-08e5e6581b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693dd98d-53d7-407f-afb5-f6f875dc445c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4171009-60a7-474e-befb-0bb279f7ae28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8e48abb2-ca7c-4b77-b3b3-53405aecf940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9e6259-92a2-458f-9c3b-3e12002cf8bd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886b2c4a-ee03-4a13-86ed-85c2b4a2ea73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9530692e-b770-4c08-bded-0073d5fda166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae85d22-8b16-455d-8041-936fd184a95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05189782-de13-4548-a96e-178f1f72141a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23724f0-67eb-4cea-b114-1dd58105094c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbdcc84-7129-4c57-8636-52cf26613fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a166675-bee8-4df9-bc2c-c809d16162fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac8db99-88f0-4e40-80ed-961c8422670b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f85a88d6-5b03-4749-b322-693544dddb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f7da0f-6d6c-48f6-bf63-9326dda6fbce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0321f598-02b3-420f-b9bf-9d5e805401ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ee6dfe-7974-4450-acb6-8433d7eedb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d36406-7c3f-4445-b0e9-f52315f75f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e679161-42d6-49fc-82d0-9f3d014ea59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24259f3d-588c-4d34-8183-8bc4b3c7f6aa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e199fb9-02b0-4392-90d3-73a9648c93aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75a32a5-1b06-41e4-a7a5-31e9fd863339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da628864-6ff9-49db-a631-da4062d2e01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "53c99b56-ba0d-4617-9318-32b7b9734bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771bcc8d-ee77-47bd-b6ce-a190b5d1c1e8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab28a84-a2b6-405c-b090-47933328cf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be6f3bd-fd50-4b1f-980b-c5ee4a2caaef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8923ff7d-29cd-4981-913b-0394a6fc4cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5dd499-f1e8-40c9-ba11-b747f4def1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c63fbe-4247-4200-bb29-fcf6b65d89bf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21130a82-eda7-4198-b066-3aa47b620af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b794dc-2dfc-4d27-b031-fc9f38f6948a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbeccc4b-6862-4a3e-905d-e661734cc33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a429974-8df1-4443-80ae-4cfb0cd23b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98299c33-6322-46fa-aee7-e3925dc0ad20",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87e1bb9-8238-44d8-8c0b-a13d5669cf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc74cbf-4a81-496d-8786-8da45fd1afd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a07bbd-a071-4ecc-8fba-c45081fa0efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eab3f8f-ba68-4f23-b038-4c1f3be64ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99c4cf2-f176-4d25-aad4-38dc7f805409",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab57b3cd-b2d3-4b0b-91f8-b10dc9e9222c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f256e55-4676-48e9-b6e1-ec6e49f84601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4643477-2224-43b7-9043-f667895329b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c472991-f306-409f-a82c-4bb083de695c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1badaed6-6ec6-4175-9af9-edfba968afd0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd31c3ec-b5df-47ce-a996-83917ac92358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbd096b-9ed7-4eb7-9641-eb5b6572f492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb131e17-aeba-43ba-a20a-cc969e0cd231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3d0e7c-c62b-4856-8136-aa464de3eedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3a59ce-0419-4150-92a1-5024c80023c1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e6c3dc-5be3-4a41-9ec4-f118d15ab5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734bed95-6504-4607-986f-249815c82324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca44b34-904d-4764-acc1-89bc5f12e8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6e6782-e014-48c6-bf48-be8b6e1c2c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1532f76-80aa-4dbd-8394-b7877b193e44",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3363ff7-7f7b-41da-a716-568821117568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a874ca5c-0962-4330-9ee8-a68a2225b061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4414f7-eb0b-4ee4-bf0e-4003e3bfca69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39987a45-1716-4d75-90fd-b5a1a8eafa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c658817b-4a51-4ce1-84e5-30244eabd33e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd82335-ffd4-4051-acc7-f5d14d20fdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c473fd8-6b26-497a-9d0e-770c782e1da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae8c87d-5a39-4ad2-91f5-9c3c371a02dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5647cec-fba2-49fd-8753-1a349e0af0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4688497d-663d-4e22-83ce-63e4ff357d48",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49d1ac2-479d-4775-8c7b-af93b586b681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9741a7-7b1c-42b4-91dc-b704b47366cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81415daa-49a7-4096-afe8-7ba1be3ac051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d19421c-ee73-464e-8ea3-bd822fa23097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ede820-7107-438e-a9f3-1103bfec8b6e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1dd886-f9cb-4652-9ce5-55ab7d0463e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06098dba-53b8-4e7e-b09c-138793a74ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1dd0e5-a96b-4ded-9fc2-ef7b4c7dad6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a2fcb5-7869-438c-9535-ade99d10e099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c3ba3f-6039-464f-ae62-ec41b030ab83",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b5865d-80f0-4698-8de8-4f77fa4b9b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a25ff62-9322-4893-905b-069f59ef71ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a8006f-6b3b-435d-aedd-4b5cdc064946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1feedf7f-aa14-40a4-a7ef-cdd99b40132a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da5ae5c-ba28-4b4d-b89c-6b0d5c679997",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d646da75-85f8-4c53-8287-bf423d0094fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a93f7a9-70d2-4ff1-8ccd-509d93459257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c9d0b9-fcc1-4670-8404-1f16d4009821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40f7a278-0620-49b8-8705-5bd77ecc0e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e4a055-c053-467b-9d67-5586343d676e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6170c29b-0c3b-4d0e-a235-fd769a71642b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa5387c-7c67-4eb9-b8be-f4e3d31c2920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47bd0c6-d1e4-424e-9598-ce03c60114cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b479988-dcc5-4a80-b5c6-076569d58eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821be499-b3a2-4805-b473-e9d7989d3954",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788b39db-770c-4e5e-a73f-56b4c6b469da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fa55f4-ab0d-4acb-9db4-d39eea185a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02d7b9f-db92-46b9-923e-b4caff32d12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dffda1c-0f86-4f37-8e83-9b7c49466455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b93738-ae58-4247-a74f-a2c4b51987c4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c8312c-51df-4a7f-965c-be623faba270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad210ea-939b-44e3-836b-4807998aeec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d159b7a-a41d-48bc-bd5a-83d579f25b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7fda5e-5682-47c5-8788-cb3872a51884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213a32d9-d0c9-48cd-843e-18a64a7dfa53",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867bbf91-a5fc-4563-9f72-8bd86df54896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6624f1-41a3-4da8-9a31-a9e29a3bf6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e977e9-32b1-4914-96f2-fcd41e7af990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfff7f48-1249-4da1-ac0a-b9d212e87dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220e2ae5-c996-4967-ac99-3b69dde5c54f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaccf81-c143-4348-870b-1124fbde8257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfce86b4-db6f-4f0a-9a93-9bdc8a63c031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac3d80d-50e1-46f3-96e6-aae39ccb00f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f2b410-8425-4658-950d-f4d95cad9ee3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29a1b771-1864-4284-95e3-dc28e817447f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f90d1e21-81bf-44ad-bcde-67b63fabd3db",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2b333b-be90-4075-9196-eb5c7137cbd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3bbcadcf-3a10-4900-94e3-b10263f9e737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9d7cad-2f58-4838-b6fb-d80921ad5302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "687c032e-ff2c-43f3-a25b-a62879b61ce0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d86cc4e1-d97d-4db0-a3df-5ce47317620b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba741317-c42c-4f8b-8f17-2ba981f252aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdc800fa-3dfd-47e0-9c33-7c1f78c66d2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63925ffd-11d5-43d6-b068-8dd4f40e3f35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1bd0d28-9231-49d2-bc47-354fc023c29a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5548fe2b-3a1c-46d1-b3ef-cd4b357320f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24ca08da-e171-4968-8947-21a3ca2c21d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbef87bd-7ddf-42cf-8e9d-da879ac8741c"
            }
          }
        ]
      },
      {
        "id": "8ac635fd-1175-48a1-b55c-8f2753803190",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7832cff0-fad2-41d0-a3aa-881c55aa411b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6266a42e-3ba2-4a32-ac6a-60f5d6560620",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "92fed95c-0996-42ef-a0c3-df0cd076dfa6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12662321-ced2-43f1-b267-bc664586f0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a120f518-fae0-48b1-abb7-2177b2f7feb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1204c4b2-bddd-424c-8262-dd789f81b596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7792fc3-08d7-40d4-b8ce-709c9675a2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31166467-014d-43ac-a118-afde0d242095",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d9f021-c99b-4ca4-b7b1-1bbac9cd69fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f0beaa-a485-465d-8a6d-15b01ca68fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a021ad5-4a8b-4911-8dcb-30f8cfc3ae58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db0f011a-976a-45e3-9f4f-43c71ba4dec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1736b5-2a94-4890-a399-f85336280c2e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a72318-b39b-4184-a9f9-75d6d6e5b406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c37f5e2-cf71-4425-8852-bef2fa6d7f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c530b717-2dc3-4f98-a446-bb8e29efaef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e755a621-2e04-4fd2-8883-f5ff7ddd0006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfdf0e8-497b-4049-b8ab-8ed004a7a85e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5440cdf-61a7-40d6-b65b-d8955ed7f054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f999a3eb-d3cd-4a3c-8d12-814a3d386675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c7c98f-fd97-471a-8d39-0ef0b0b8aa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad538678-7407-4152-95a1-759b8d69affa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99157d7-f484-481e-a682-06a4ad2f290f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4555c49-d530-47f2-99ca-a11f1f9ea0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb62e9b7-208c-4dce-b934-46b53ce3602a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5353b642-82ea-4423-a9a4-de80e2821bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c289b939-4c89-495f-a02b-ec5c5a14f748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c30e70-5bdc-4a17-8dff-9a4e63fb6d21",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d175fb3f-e966-4d84-b944-8568d75bbd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db739396-592d-43a7-b8db-21fe38e8373e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba19d9c6-7bb1-43ee-b3b3-6d290ca5ef10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a52dfe1-4ab7-45ea-9587-fb3c2ec78be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619cb400-e6dc-4f0c-a998-208045281191",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b8c39c-a898-400f-8d39-1ba1f4c8fd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37c0263-3cb2-4028-a1dd-d415e9d659f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d17d04-569a-45a1-9283-1e4b4198746f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "01a4986a-27c2-4cec-a594-897f04b9a224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f168b1c-8a89-4672-91f2-c7badbff8a40",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e76f3e-4bc7-4697-a2fe-52a0a6349795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5b6a24-afc9-40c1-b8e6-dc1f1c79a1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bac088d-eae7-4cfc-b078-7e53b4c3b0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16452e92-ae73-4d22-a5e2-6e7f8e9f1f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68b76da-c2cd-4ba1-abe6-d7efda0505fe",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96328b7b-34ac-4ae1-a2aa-081c1c431c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa50756-fd27-4975-b2e8-3b3d2d05ab1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9634b735-044f-44c1-9f3e-f18337d56897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46b49658-0b62-4644-a857-497ae7c653e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcbc939-9b3d-491a-8006-4740b8c74e2c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773ccfb8-20fa-4256-a8d7-8f3b0b620c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a7c28f-3129-4091-83fe-3470d7ae9da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d914f6a-2b2b-4ba5-aaa0-0876c9fd9eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d39f5b1-fbd6-4dcf-aac4-b28cb6967f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d652c668-4755-43b7-90fd-29d2aaf1b773",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d061f63d-24e9-4466-956c-ef2444ff255f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18fd55b-46f1-426c-a384-0ea8d0934375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4680031f-adf0-483f-8896-7615507251d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7d0ba3-02f6-49b2-b759-d0928621b16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb078d7-7b54-41e0-87e1-1e8c06d1d792",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dc4468-3da4-490e-8045-78d01c7188a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbe9d4a-347a-4889-b6d7-be23d3eea078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec302623-030b-452f-9d1a-a319869bd3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da467ee2-0630-4882-90e1-8f783450ccf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11238172-20df-4e9b-bfc9-6f225bf6f626",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c44de5-432d-4e61-b7ec-67e8b73c4031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049675d9-45ca-44c6-abba-b51c6964e8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029bcccc-9282-40e2-8b07-efde5e3b8d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1282af90-6c8e-4507-ad37-0ca1e027de21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f31f010-e5ac-4489-a2c7-a0eca9c5ddb5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed0cd97-d3f4-4140-89f8-73d28aa1db50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfa91ea-3ed4-470e-baf1-de2aa36420e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a49a92-d984-4e9f-856b-370757918e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b5442b-5c86-4f5e-84ef-d2694cf8e640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb481de1-c22b-4a88-b246-909497fd9044",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7356d689-62a0-42da-8068-c3caa9efdaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473090f7-f44c-4267-982d-0bf032602c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca811ee3-1dd0-4e0f-8abd-67b3af36625d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c778cff-a7cb-4b92-9e6e-68f55c2da87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a9a953-ab3c-46f2-ab3e-71b0c26dd2db",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ec0878-c11f-4414-86cb-c14fc9378779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f640178-a26c-4c50-a77e-bdf25197a11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4759e8f3-cc0c-4f6f-9e2d-dc21fd2fdb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7c3fce-1ec9-40cc-b7c6-2fa09c7ecd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bc6295-6948-4cb2-ad6a-21d1130c0ce7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b073cd22-2ba9-4a4a-b348-e1794981674d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf8d95d-3ee6-4d81-b894-fc7134bd19af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2682a02a-85d1-4ca6-a472-c974ba5eeece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5052feb1-36b4-44bc-a165-e16c7b172590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7233a4ab-d1b6-4acf-ab85-89be2f000750",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6cdd67-1f3c-4a14-9ad2-a40c04735e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9afe6c-23a1-43a1-89e3-8d6baeb05398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fabf57-3938-405c-b641-0cd7195cd9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f016f503-1bf7-480d-a793-50135b33bc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02f8411-3091-48cd-af06-7665728633a1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5078e3eb-c9e3-47e9-84aa-d463801f0e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6a3265-53e1-4c5c-a3d3-60d8490d775a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c877ead-332d-45d3-b848-fa40592dd772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac6840a-c657-4645-9c4f-3780f368099f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13427137-81bf-4fcf-92d9-6a17b6857c88",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6d2bb3-ee74-4ad9-97f8-0b9b9aa2cfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d7323f-c94c-4020-b405-45c493353c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbadad0-f22a-4886-85e5-4b6170c6c3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95fd0c20-1b61-4933-a993-61b06e304c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3b6433-a8d4-4200-bfe9-3686657fbd93",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ac2773-bfee-48c1-a8ab-56a4ac88326d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39390d48-53fe-41a0-8228-88aee8b5a5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e5acff-2575-42b0-b44c-b4dc2beb00f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc4f874-73f8-49ab-b86c-f89ae3faae9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8e5bf1-6641-4b63-926b-72516e01a499",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce568e0-7846-458a-b5ac-e72312aa02bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00452c87-6cb0-43cd-abcc-342edc94e0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b672f91f-e840-4849-a667-ac3bb8282376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dad65586-a321-4443-9cac-4f82d15a0292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d6c1a3-33f1-475b-80d3-a87a93e9a0b2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcc9580-21c7-4612-b650-c7b58c0e5022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf47046a-22ff-43e6-aaad-983449498219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60d4bc2-5a1a-46bc-87c5-b03ff2b59702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4873a2-86ad-4efe-aeeb-d618e580a8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3220ba56-ef87-43a9-a5d9-ab4151e2d4fd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2a7dd8-c741-4a3d-b739-e63ce14300d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af5a166-83e9-47a2-8d0b-7842e0344365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9375f8f-da8a-4c43-8484-30ec3f298c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c280d265-93e0-43c1-ab2f-83261980f137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244653c9-dbfb-47e7-a42e-4161bfa4b64f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974d0bf1-63a7-4beb-a3d5-bcc2e4dd3471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e7f531-8775-4a03-a675-59c688d14674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad4b079-a4f9-473e-8936-d73546c8866f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d1cd77-7a30-4370-a6bf-6aea1f078700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28c2087-70b4-426d-814b-e5dec4e49b3c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cb3880-328f-4be3-9cc6-1916e6453633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d359efd6-9fc2-4b4f-a41e-71fc665aa19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a256f7-0608-4829-ac4c-b9820cc3877b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b8e310-5f23-4cfe-94d5-6775f9c335b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e6e953-649c-4e02-bf39-1daf3aff41eb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a51503-1824-4ffe-b9a5-481a7badaf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7855d7-1784-419b-ab13-d9e6ceac9417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53202066-b399-44f7-9371-5e13fdd3820d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec6c511-4046-43b8-989d-ff8a47bed493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d304d5cd-feb6-4453-9d6a-66d27bcdb1c2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cf8825-6f03-4f5c-b25f-12565dbf7bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e364cbd-1a3d-4cea-8c51-0d3bfc72d033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cc414e-2c62-4786-9815-dba76b8ad23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f9a3b6-55ce-477d-8b04-adb26bd04c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578b29c1-e807-4d8c-9fa7-ec58f82de830",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ed32e0-d784-4cca-be59-0769828c7af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0f340f-e6de-4c91-9cea-6bd50ae710fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3599e6f8-d54a-4410-a914-092fdc84e30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cbf2adb-b314-4245-813a-1610520eea5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd424d6-2fa1-4429-a4c4-9cd0e98d9cac",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaab7187-ad97-4575-9b2e-7ce3da334f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c38cb7-8ced-404d-a0f9-c482032a7153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c980b941-a8fd-4cda-b494-7d26840e8818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8590d16a-0a66-477c-b8fe-db5be0474bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0550c80-cca5-4e71-955e-2c0c1767e21d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366061a6-4310-4525-af59-13922cd0d926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d195449e-a23c-42ba-8f95-ddcf6083565e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2004b3a-ef65-4736-82a1-ccc845948bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e93a51-87ff-4b46-b53a-c788c51cb668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b14b7d3-57da-4a3e-a4f9-922360e48cc5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a3a4f2-75ef-49ab-a170-f621fa6fe184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe0f124-8acb-440b-a86b-ffabe5bc57ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad734b5-0296-415e-b382-d7af81a5b29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c9e986-52c6-4b54-995e-657d4e90d92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d135d07-d0d9-40d9-8fa4-8c90c6fd508a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e2b56c-6df3-46ae-9eae-eb40398e8f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc56885-9b06-4550-8ddc-6b66078f9590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e8a081-7cee-4978-8447-f3f67e8e8848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b18c856-919a-48a8-adbe-14d6de456dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb84c1fa-a6f0-464e-a79c-3efeb2f5229b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba63722-1059-4c62-ae00-612740103d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b1d01e-9263-4e97-9847-a250f7cb430b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c5848d-e7a0-4d2e-9ced-eb42a6921eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d6ae9d-cac1-4f57-b3ce-162a7928a681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2906dcc5-7b8f-4b26-b6fa-e3077f82820c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce322666-9ede-45b1-848c-46b943456cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974e9894-2bf5-4aa3-bb90-fb01da86fa11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac3ec81-8f66-45d6-abfd-986c627c722f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd078f2-25c9-4e3a-8a98-f1a1e30db6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1856bb10-dacf-4f56-b380-5abea214d4e7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef954a1a-739d-444e-b3b8-139e56765009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40b751a-1f7e-47b1-807f-f79e86cbae99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed54f3f7-b342-4a42-8a0e-d68860a06ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "831c7735-22ed-43d1-9d34-6ad5b1d56fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce4d7fb-23fe-4d04-ac86-d17bf8a6b7f5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bb7bb2-ef09-48b0-9862-41c804b12e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d9522f-7628-43ed-a44a-743c43d0c7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fdf746-f351-42f7-bbae-4f8566f6f956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5abc9050-0754-43f6-8756-6a99074fc90d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9dea8886-d883-4efe-a981-6fcbc81676d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31c159dc-e4b6-45a7-a6a7-3828cab6760f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322d2470-86a2-4ae5-ba00-7b2e51efab30",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6b022b74-0e33-4fa7-9afe-657bd08b61a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a885aa01-eeff-4907-9ecf-a470ef7c7da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1045fcf0-d912-4780-b0bd-e7274f80ef2c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13ee2b7d-ea1e-49b9-8815-f0f63d3ce763",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af01ac2c-ea4f-4a8c-a945-ca90693b8a5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45fce9f6-3e54-4ed3-bfa4-409e015f8d41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c4c2284-33e7-4b0e-8c95-5a75931952f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02816783-f376-4c8c-af59-f5fbb08c56e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8209bad6-42a3-4337-8eef-47d3be16a063"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3791745-a141-4538-a8fd-1ee5a80df69d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78ff4ffd-e25f-49b3-b366-38904c8c1621"
            }
          }
        ]
      },
      {
        "id": "6ad37ec2-10a2-4be0-8b3a-a44906fbc49d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b94be727-a866-467b-b624-035a70e2b6e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bec1b377-9b22-4e9a-848e-20c9a0831901",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3af973ac-743d-4e12-b7b1-836f3efec234",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2211f9eb-4ac2-492c-a522-e13893baa5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a6905d-adf1-4d6e-85f6-108cfc9beb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175ee7f6-e8a4-4044-b187-2ead8361fb51",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd31905d-9d7e-4997-9ab1-6a9e7fcad997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba97a587-4923-4299-91fb-6d58dedf71e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4dc0b9-bc82-4271-83b8-cc451a2e31da",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b437f54-d752-4570-9f5f-adeab806a777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caddd338-a75f-4f1b-ba10-147f650514c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075deffd-6a9f-475a-a42f-c88d0efc3719",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddbca86-af3c-423e-b692-a57e5b21f10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa9e373-2578-4fc5-9f34-5b1824eac08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b861d0e4-6226-4082-8f4d-0710466b8537",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfa885d-bf6e-49da-b76e-aa7de4ff22a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d339ad5f-3f0d-4c41-be7c-46057e49d3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dbfd7c-9a39-48dd-84fa-56105cf0837d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafa1f63-c598-4bb3-8b36-3bf2afaacb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6508370b-feb9-4de0-ab3a-2089dc9789f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4510c17-795a-4549-bcb3-22e105ba9c55",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9244b06-df12-4645-8dc5-c75bfbc54bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1146b21-f055-4a38-8ae3-262014eff6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df325fd-e54a-4bc8-95d3-33d38e4eefcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18be518-841b-49da-ac8c-c1d9677738ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a05a1c-7ffd-4b72-a28e-a0475fd88bf8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8a3b05-e31a-48e1-a7cd-044a0bbf8b3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da0a7c38-2209-402a-892c-83168eba87ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f621e340-c809-4ee9-97f9-40abe9c24be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851669ed-5a93-4508-af7a-8d7f27b50ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d869162-3e98-4098-8469-88cb690e3f85",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0950f99-7acf-4060-af5b-3332f1035c9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db29bf4b-2f9b-4d60-b29a-7485547406ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc5f0f5-747d-422e-b2cd-434eef3d328d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207f48a3-cd6c-4a2b-92c8-57216cbc8a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e7763c-9d52-459f-bfc9-632e46b3a948",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35df565-96e6-45db-9c34-e55d78e16977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc9ece6e-e669-476b-900a-94c2809fbe01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0176d194-fb12-42a0-9c04-71a8e4570d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9828979-3e7f-49d3-b456-1fc60c690252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d9a777-43d1-406d-bd49-b0df5724380e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407d7e47-f30d-45f6-bb8b-1d67128a0eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbb22ed-71d0-4a99-999b-02c17a0abcd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cccdf36-e602-4a10-8dce-98bdabddb4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8427ef6b-fd0b-4a90-a421-41330bcea865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8d652d-6550-4322-b783-a9431c7074d8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95a47de-4474-4082-baf2-e3db34bf3f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cf82f6-c98a-4da6-859c-deae25a49313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b894c98-30f6-4367-8566-8cbf2fca1478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d50983-ea04-4a9a-8492-d07eaeaa79e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46d3879-ed56-4535-af32-d28726b1da0a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad397db-3702-4d22-9136-e45d21241075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27a74845-65eb-46c3-aae5-c2a079b94d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7d1212-e0dd-4e0e-a87c-0c03e174b151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8ba2be-4d88-4fcb-96e9-f31ff0003865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dc87a4-2d0c-44df-92ee-7336064359b7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4684b1-6f22-4ec5-91f8-50351b4ff160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a36034d6-f0a4-406b-a5da-6067e1cfe2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdea507-9d2a-4306-905d-96fd239d2209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fd23a7-2bcd-442f-af87-cd6d379f4a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5131045-ee54-41e0-b354-b46beb3653fd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b5b96c-b6f9-47cd-8c29-72698af531e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "187562be-6d9f-4015-bdf9-ac924320e308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c319c005-9525-4883-a19c-eb4bbfeda343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61bac5ff-fdfe-4420-8fbc-a81ad8a997a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe5539d-708f-4edd-a3b7-bceb3519b1a0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa86a74-11bb-4e49-9d34-45c4bb9afa2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec16372f-2305-42a8-a960-30df46df2e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e1c834-c5a0-4e44-a36c-420d756ca919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b61b73-effe-4551-85d5-4e6051cc679e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8f5c71-30ad-403a-a257-fb78abe12700",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb25037-283b-4391-ba2e-08ff0c0ff47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cbe6aa-9789-42b2-887b-faac966dc941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ab7f47-6ee0-47da-903c-6d5d74204cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b91edf-da4d-41d3-9984-cb22fedacd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e3b3f6-7507-475d-9e7c-bdfc54db2365",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601d14cd-1542-46b4-a707-ddad0c229589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02bb75a-6ffe-4e91-88f0-909aec552500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e872818-54b2-4d12-bcf7-cb2123594cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4afe32-b238-441a-8c8b-0fe106c0f7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1996f50-543b-48ec-8558-47cb667e072d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61e9f97-efa4-4291-950e-6fa17db27590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0df4b6f-3cd1-4b43-9016-6b57ab38ed4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e4d8a1-96bb-4dd9-9412-88d635c0b8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470fbf04-80f4-4f55-8314-0e75dd099ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f52f36-926e-4e61-9bbd-bad5c9f8e968",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b975a483-f595-45bf-b468-e1d15d5db4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1383b490-1fd9-4b73-97be-5b32c4af312d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2fb7c6-303b-47c1-954f-e14eac7b1fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2629b78-9d76-4699-a426-2b6550d331e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a07747d-1555-4f8c-b3d4-d5cfded8b9da",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2d7bec-2bcb-47da-a434-4d921a6be602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43528975-63b1-4ba7-9a50-9fee69f705f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc496b9-b960-4426-ac45-e6ed673c50cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f496e8d-3337-464e-a8c9-a94420cb7d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca157a56-34fc-442d-909f-7fd0434488e7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e9f6d5-4f92-4449-be75-5cce285e3bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25dc8231-e547-4fab-bece-21f2bdea0ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebda2593-b02a-4fa2-a57f-d2c52226705a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d412433d-cc83-4951-9b3a-2432a9e42307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562f025d-aa30-48cb-8444-b231c4c5f40a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c388c3-fef6-4cef-9527-51ad5332a676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b62a44-ef5d-49df-a556-70fe44909325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37736e63-d499-486f-83a7-66bf0c3c39ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70decb31-225d-4c45-9698-9e304c586e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b40572-387b-46b2-b8b0-c252ef68144a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f020fd2f-df54-4169-b3b6-d32e401fb032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f27323c1-a577-4ac1-a4fc-d981e02358ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6371838-01b4-4750-a07c-64f22c7db5a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1655c0-289a-4e51-94a0-b06118461bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d00f51b-2857-400a-bf1b-f1a12b141489",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e12a1c-1b2a-4fd2-8bf4-a9ee1199127c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31810b6e-8f30-4696-93cd-0de59a6fa6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e260455c-4525-400e-bbf0-42e126e0e142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3dced6-f02e-4f96-989a-1a906bf88863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7579f24-19f7-4a07-84f6-722fa1cb0277",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcf68ff-2f93-4a4a-a21e-6a709bca3b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d2c3e30-0f03-483b-bbfe-51e5a3bd83ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0c2d17-e04f-457c-a88a-b2eef85d7959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0115de1f-e454-461d-b190-82dad900df2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b33508-6ffc-4e9d-9208-49dbd2cf90d3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4beae7-d192-4882-9e5c-95048e0440b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3355b0ab-81a2-409d-8b86-d8f6bce53f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc55761d-fc13-44b4-876d-7ddd170588a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70d7b60-ccbd-4478-83b3-1aedd1c74674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835ecf90-bcba-4663-8df3-0d9c3131ccd1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f7cfb2-570d-4c00-bda3-1c9fbfd1cd2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eff4afe-e3d7-4077-923b-9d3501d69061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23203f44-b797-4f58-a183-fc7a8b25bac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e52a6c-0fae-432d-83e9-c1f53ae81176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d20ec9-ee05-425a-aac9-63c375389c87",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fce79a-1ce1-41ae-ac44-0a338883c5ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "074925fd-63d8-41ce-846f-c3412492f5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2b0616-7673-4735-893b-7a1292795f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee3aaa6-37fe-4deb-b872-de39ece52986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1541c1-c3d1-43c9-b7bf-5f09c64381d5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be13f09c-354e-4ece-9f06-1d7eeb3af3e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1097272-2eb4-4d33-b163-4738b3fe2736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3740e5-ad2e-4311-a104-193510f7d6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6ca08c-dd8e-4ea9-8257-7c3d23fb939a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e5f0b4-867d-4011-bf49-f1c2de0a2c2f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ad1be9-fbcb-48d1-8d5b-f30231be00bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bf2cc0a-96a5-4d51-b9c3-cd1f907cc8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d635b3b-80c2-4c99-a13e-fc746711b2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b3491d-e08a-4ee1-af09-cb0f68370a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c49f7fd-b241-4471-b997-220655a7313b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ef5673-89f8-481b-83eb-b5f3470b3214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bc6a000-d0ca-4506-bb16-fe5aaaf3293f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "401bcba8-2f74-4c29-a695-6dad05ca8390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71fcb04-3611-47da-b696-8a7c8565cc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e60836-1ae1-48b5-86c7-02e03e32ea8a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9651d8e-ee2f-4685-8931-58c7fe2fb77b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c7071d-db20-4222-b8cd-cf71029cd3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d752d759-21be-4d20-98ba-2f11298c6500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc604d3-e9f9-4e63-88d9-369ec42847f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c7c52f-f692-4198-bfa8-f8abbe5bf5b8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90da31b-f955-497f-a489-fd2d81fc8637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3cb7ba-654e-43ba-b153-a35bef016821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fcbfb1-5530-48c2-9b36-68a1b051847e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9cc17c-c79f-4c47-a22e-a0d767181d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7714719-e1b6-41d3-861c-25cc06505996",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ff56e2-a049-4b54-8f7a-140882de20ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0373043b-b44f-464a-a62c-c613608c9f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2a3bc2-64d8-409c-ae86-f9bdcc5bc28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1c4428-97ee-43e5-8ecc-9ff8f0c62f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cce9c5e-71a1-4134-99e1-dab443cfacdd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46f6e6d-a7ab-4622-af43-11394b039dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7f5a13-2a79-4745-98cf-62d2af628476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6b78c8-cb6c-43f9-a9e9-0ac82d166c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2062f52-c130-429c-8cad-438f3f337f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89990dd-6904-43e2-8d16-581c125ba2c7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daf5823-df52-4d51-8d35-7c75bc2c9fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c32cc66-40bc-4b34-b852-a9521d195659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f630155e-8275-495b-b3be-e4917a4b3ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af07c5de-f0ef-4596-85ef-03dec52f55e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b3b23d-4a0e-46d2-8e62-86d37dc5d2c4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17e64f0-20f2-4c59-8285-7a383c07c404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8dd7241-ad60-4a70-9008-96c4d07867d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44376d8-ad23-4d24-ac38-d3ded0b76640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46eb2a8-10b0-4883-b9ee-2d8079eca2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4bbeef-356d-4e02-ae1b-ec06eb50d02a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c1f786-d7b9-4732-b1d9-fad076db91f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d7c447-6bc7-41ca-9ebb-e4b09de2e5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34fc5d9-8790-48e2-a65f-ed708d5d2301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba46e66c-9538-462a-b182-74c744942764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b210485-2a17-49c5-9111-6c6ce87d4841",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e1ab1c-764c-4a01-af88-42c46c00f887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fc87d8-6dc1-4e9b-8f09-e676417b0cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc11b028-1ae9-49a6-bb8d-72c85c498b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9958946-f3ea-4ae8-8960-6c78edd19103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730146db-8842-437e-947a-1d884475d7c4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93966153-88bb-43e8-a20e-15c411af8c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3b493b-18c9-4744-9547-302d77808022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacc54fc-5508-45e2-b858-f1b189e82a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9aa091-5d99-4f81-82a6-b80a5a96dce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b693a44-1cf7-4d0e-aa34-085853b7d679",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3eff76-3ac5-4807-b54a-649afdf54348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df54d413-82b8-442e-9b56-288b122e8869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb725510-27b7-46d1-a93f-d796057ded0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e53d69f-0f92-4afe-bc69-8e467ef3fa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5de2f4-8f8c-4161-9e78-85b5c322260f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1185950f-085f-4578-8ce3-95846a23ba40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65634069-999d-4930-8f6e-bd6c159a09f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735c79bd-66e7-409a-96e9-e513fd69a571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085ca577-6b0b-400f-82dc-f20c66160173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33aaffc6-79fe-4e1c-a466-2d7a849a5c3a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8aaeb8-c77c-49ed-b398-1f692bd95bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff389ac-18b2-4f79-b043-a55e7727e582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941f6e97-4fa6-43b6-976d-f339af7506c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0b923c-8eb4-47ef-840c-1a9ddbd72e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b4113c-df58-4316-9c45-5db0c41e55fc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd795eb-b24f-4b60-b73f-1e424bca9520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863bd34a-a789-4fa1-bb21-f2f44ef41548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "495ba9cc-f196-4a1b-bfc6-b05809a6e212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59eadd9-d8e0-441b-915a-22e91a65bf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2045c6-71d0-47d0-983c-de14e058cb5c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21652306-4e46-43fa-9fbc-a99569167f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193b2ec3-ee63-4bb2-b980-db1bd45f7156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10feed0-52dd-43f0-9bfd-d8fc3f02620f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db31e51b-2af7-44f9-ae81-3c9357b478a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4a8daa-55dc-47d4-b4c8-431ec329aa7b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be92d890-f2a5-4ea3-9287-450a4db5b49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ebc060d-ffa8-4fba-962e-9c625867f43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1375643c-cfa3-4990-874b-6618d0422edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085d9abf-a9ab-4f61-9252-34f534dd109b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3991f96e-5a68-4a47-a444-55d7639469c4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4943056-ccee-43ae-9d1e-4370a13f6ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f762d4-74e0-4f41-93a0-67f13b6ce295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9e42dd-c907-4dba-85c4-c1376abbc4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b623c8a-cf3f-478b-bf61-6f9d4e9adf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd145d8-9bb3-4859-9c80-dc6384f7153b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1aa41e-09f8-4a2d-be1e-0be3e2b9de30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ada2a61-8e8b-4897-8db4-692997ddbf03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "384c389f-5249-4cb3-8794-92e02ab9d0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26283ffb-e589-40b8-b852-ba030268fbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c375a51e-d567-421a-940a-89cfcba68bf8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d8e9de-90ad-4542-8c03-3217c1ecd545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff424aa-7cd9-4977-afc6-55c9a4571fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b17838b-9399-452c-a233-07bebc5ef5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21f2906-0514-4e13-9ceb-94fb7aa7bb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0477ec27-dd1c-495f-bb4d-28bff79ec067",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4bff56-d31f-48e6-8a67-7c7a7b7b03e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b373a41f-086c-46f4-beee-a9135c98bd75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb9eafb-3f6c-4438-aff4-0cf19bbbfa65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5271b0b-3be2-4e8c-8160-6bf68445420d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bcdcf6-34c4-4c0e-ad33-a9aa0b364b0c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055f217f-9bd4-49cb-9e49-c46de8ecbf9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702352ce-f9f5-4618-b79d-d0ca73e294ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058f35f7-2cc2-4df6-8ff1-bfb5a009ed42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed186b1-1bb6-4eba-a0a9-bd555d66abcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d49212-2b6b-41da-bb22-91b1b0b0379e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a50426-202a-4222-9936-a6bf37d015f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0963a4a3-7f7c-4f13-b370-09ac79340d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bc80ce-c7e0-4f1a-a300-65017bffc3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b93b96a-c928-4b8c-9a12-dc62336eee00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50c9a3e-609f-493c-9022-8f7c9b572e14",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bd11bc-032f-45a4-b0c2-bc37134b46ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f887d8-2b2d-41dc-9855-b8ec041b82b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2c9362-e521-442e-ad8c-b264ab34157b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370ad646-8cdc-460d-9ba5-3a2f82038bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6d0651-29fe-4c60-ad38-c4606fd82f0b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14595f96-3937-4661-b087-0a37da4b1986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b32ab0-dd9f-4279-bf9b-62abe1fa9ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b54f63-210a-467d-9ed8-accf8c69ae6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a87b5c-f67d-453d-91d0-a13cd587fe94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0566f72-5cf7-4c5f-a904-dedf4ad42076",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c351221-4851-49d7-8c92-acef1e553160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1365b358-ee94-42ef-98d2-bb2273482170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1a9dc4-653f-4824-a814-641585ce6438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a85cbd-670c-4f5c-ba77-9a76642b5eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2a99c4-aacf-4374-ae2d-fa0c41716aaa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68183172-78f0-4914-9ee7-43daa747bd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2caeb09-76fa-413e-8bd4-37948152f59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62390ad3-2f19-4a11-bf20-ba86d1ba0260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb1db39-4c82-4be5-acef-054490ea6120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bdf6dc-453d-428f-931b-16c93050c1ac",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d49e59e-a800-4c8a-8209-934923341c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb69b89d-0eaf-4b5d-986d-c9942bd2bc98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bb52bf-8ec2-4573-8feb-0cd839024338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8f9d54-4e6d-4453-b03a-c1f1dd349420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5279bcb-7a31-412f-9843-232675907302",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ba76f3-703f-4141-a0c8-828871d43558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9f8c90-a164-4ca8-837c-bf8bbc68e0f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29f29b4-b111-4a43-8a30-5364df71b9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab430791-6309-44f8-a62c-3914d274318d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cda125d-25d5-445a-bb81-ccb3e8438dba",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e906b488-91ba-4711-805e-e0f3bb39ce92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0282ea3e-666d-4cd4-aa48-9473295a4b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eaf7ff7-52c3-4746-a217-d68098283c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28399aa4-8099-4381-9469-bcc2f3eafcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cbb8d1-32e6-4faf-84d5-cc40f6122050",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88f7475-be3b-48f9-aa8d-418f77d7881b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2888583f-61b2-4900-8a9e-f4e088f55bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81f2ca9-4fac-4f15-9d5c-8764c53ff351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a67429c-8ac9-4308-b401-16b691718b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80307e46-31d7-4ccf-9fcf-d938e5a75ca0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d21ae7b-50cb-4ac2-84cd-a7b0450e959e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7409520-141a-41f7-a3c0-c38c5dad842d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae59d516-9283-40c9-973f-07f4a75ccaea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549c5e57-15d7-4485-ae6d-1052134c97b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c75ee7-11e8-4abf-b7ca-6faea5b2b22b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838f7c92-f585-4101-9a10-2921dd2c7d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a71b1a6-8e03-4d10-94e4-6dbd0a18afd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a472cd93-3c49-4e2f-8f7c-8c361d0d736a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2788785-b60f-49bd-9617-c6112226e92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa6fbe2-8061-4da0-88e0-016f52ed5a9f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e82ab8-40e1-4c66-976a-0c3a2ac6a8a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10a5a2b8-1893-415a-9c8d-d167c51f1734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3617b3-f825-47c9-ae05-0fabd67f3f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1626f4e0-5d21-4cef-b1fe-3ecd57a11bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba822fa-7f04-47a8-8eac-47da7b49b22c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674a0272-fa31-4b08-82a6-36c6446c321c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f33a671f-7693-4e00-81e4-4b1b6ec83ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8320fc5-3b04-4b6c-9e86-6691533effdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67ac26f-abf5-4765-89dd-a0f727b0f6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf14c04-dc63-41bc-b324-54a54c752df4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7055d2b-7224-4a33-b5f5-c173ef46dfae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2160ce2b-9fc5-4bf6-8651-7de0b6791c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01c26a2-51bf-4c50-8a1a-561cdd627e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac438ea7-f2c5-41c0-a820-84e446dddc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a6d6c3-7fbc-49b1-b0d2-ce8dbcb440b6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b66eaf-e588-4aa7-828b-64c30d9aba5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc206d89-9f82-46b7-9634-baeac31d4bff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459ac358-fbd1-44a1-a68f-5042d3473b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6677f915-07e6-4f3f-b3a1-fe8ade2cf6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7d8788-e8db-40f7-92ea-a5830c1aead5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b970f1-5dfe-4e61-ada8-361b336e9091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4115861-31d2-4c0e-bedf-e15f961fb0e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f43500-c295-450b-a9a3-ad77a6d98126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6669b8-c764-4082-bdeb-546d9defcfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20a3ef0-fa33-4ec0-b76f-7e71ea0ca521",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc3a59f-c360-408f-9e21-0a99a2c4d1a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6024a2c-370d-491f-87f4-35f5f011f19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4325627-4bd3-4df0-91a6-d39478277057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60b39a5-8f8a-41dd-a18c-d8cd9d637480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7d20fe-2889-4b3b-b876-f99b8adf4674",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee471949-8fc4-4e31-a912-78ce5a0e4fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "934e9185-6f07-4850-990a-167052d6b742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93b2c90-b32e-4e64-adf8-498fefc542a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b74d9b8-8cce-4549-9403-1ee51cf2d57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924c60c9-6f99-43ae-8f32-e05e5c9683c4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a204fc02-09be-4c2e-ac8c-e929162cb29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "762dcfea-ca43-4d84-9ad5-16f366fe42b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cc44c8-5aa6-4c12-aae0-127eef589a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c8fdda-7c7a-46d4-bb0b-cda2c0f96729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba5367e-85c0-4929-8788-4ca7effd6eaf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07e42ba-4337-48e7-a514-2f0e2a18b597",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3423b43-4c21-471a-bed2-a81ab3a47ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26339f6c-9f24-4b1c-b0e9-3c11af3ec8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35f9eb4-6aaa-42e2-b580-1cd9800a9ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b785e448-22fd-44be-a750-008053824c4f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f68615-e8f9-4399-8923-af99e8893d81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "799e9034-cea3-4084-a309-6e583585defa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec8b8bf-1bf3-4038-ae30-3534a897ce98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f220cb-32b3-4dda-b434-ca24967d460c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea62fc08-e5de-4e75-9b16-88b64c72ffd9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6207d7aa-be66-43d9-b736-30194b93779c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a1dd9f4-ddfb-43ea-bb05-b41c9f5ef2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa28bbad-2de5-4439-80c2-864068ac70d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d42302-df1b-42ce-84ca-ccb8192a7f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a129d1e-d179-4b5b-823d-8a3f78b5d735",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695dac2a-bf27-440a-aba0-6e7476fa66ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f03392-3657-493b-b635-f3ffa6c1c87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b9953e-5e15-404f-866d-1168cceb47af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b45d8c-7ef1-4718-a0a6-407aa757f561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8439c4-db05-4f25-83b0-b5b4a91bb442",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f74f3c-8498-4292-941b-0045d0eab418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5324723-171d-4b14-8e95-2934462ad4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6615b584-717f-4aad-a123-57dee9296797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1527dd7-8ac8-4046-8641-46a13b82372a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defdd51d-3f93-463f-b669-6bd5d392c608",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c284e41-6a66-4b43-9d4f-b73ad2e76ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc636f0f-79c3-4a12-b318-977463ad34f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf55641-8437-48c3-9324-5db394f6d00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ccf9a1-e903-4af6-8aa7-f2eecef6df2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1037d84c-b5fd-4591-92d7-089e1c5482c9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c4e65d-b925-4447-a5c4-30a37790888b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb5fb86e-cbf8-4ad1-a5f3-688b5a5b7105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e92fd4-69d6-4ede-90ee-a987d3073391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57fd138-f1b1-42b0-b87b-f0b5b900b762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b77ae2-2ef0-49a7-b963-6c8e88c3bf1e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386359af-a4aa-48a2-a461-96ef602dc28c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18bfa5f8-0055-4266-8cd5-3bec7e5c9e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5742ea5e-3f76-44c4-b071-ddcec326e315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e6728a3-3115-4c24-a2c8-007877ceeab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eb1c3d-3cc7-4ca7-bb6c-b862b39b8c35",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910c53f2-bb47-4fe0-a694-d77758b984e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b789248-181a-4343-beca-beadf647aea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6d30f7-b8cf-4ddc-b1d6-f65d06f11c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6a4f74-b857-4e38-aba2-78bd424684f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3b7ad6-3b14-4245-8860-c393c7799d3a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10646d7-c955-4235-9fc1-7314dab820db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d28a410-f975-47d1-b5e3-70b569a3c338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de10a4fa-4ed6-4372-9ef2-e1ba2d7a7b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756973fd-31da-457f-9867-6bfa1221e5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edd4c92-f957-4434-ac7e-2f3d7f6c9bce",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b648cf17-86d8-4654-97f2-ff0b885a5bd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e893546b-dc32-4d02-a764-925a0ca99e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7ecf7c-f46b-4f1f-9989-304d9469df06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79ee207-ffc8-4b0f-99dc-84d3956a1990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81f1e0f-eca8-4ff1-a605-1700350cd5d8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13eb083c-70e1-4c06-9a31-49e175a5cb40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6a772f6-19e6-4e4f-8313-26e5f40422d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9ef0b0-b911-4d5a-8489-d16a3525e902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae5c0dc-104d-4648-9db3-506b7e7ddb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78815f85-1717-47f0-a42d-ecc5a719c67d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309e1ec8-e72d-42cf-8fb4-18fa8b941fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19e9c2ce-e843-4e5d-826d-1b74ca35a86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df5eac8-af6f-441e-ad18-77bf0d1da24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431f560b-6196-40ff-8a7d-90cfc9c5be1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd98cf4-4ef1-43af-884b-a477f995f001",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf206dd-e2ae-4328-ad74-90cb998cef35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83abbffe-3942-48c0-a3fd-9ab79b145822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eade19-6f7f-472b-a690-45a6e79cfe09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076da620-97bf-4d78-8396-06ea6e58eb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a688fc-9e84-4a3b-9b59-84591bbb3ab1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3939978b-11ed-4ae5-847b-f9e54b23218a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adf2bb67-0b18-4a96-9186-c3ff46dee99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b4c79a-d264-4ef1-924c-782acc5aa9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce41a9ae-ea0c-4276-9ebf-9333d482b292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01c23c2-0c4b-4f9a-b118-4a75e148aca2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69df6085-53d3-494d-afe6-fa83ccb223f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d749c9b-7593-4b2b-a4db-74d7c6dc830a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b9d882-6a0b-4710-9708-e16c2bc3e5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e033bc-f2d7-4971-92cc-e8f8d5cda5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58af0af9-f8d6-42ee-99c5-eed971314343",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f6e072-dcca-45cf-a7bf-9501e92268bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c506c70f-ee85-4666-9498-af39d535284c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b64c3e0-4e59-46f5-ab6d-eb6bc59274a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8322d58-7064-46ea-9885-916b3a5fab94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420ba99b-84a9-42ab-8a8e-25ac6d9398da",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46d6a2a-064a-4ba7-a233-b7d64678e756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68032c6b-d6a6-499d-ac1a-f7f22f5cfe33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c6bbc2-2ca9-4d0e-87eb-f78b12e639f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02235f6e-a1a3-44d4-b7ef-f0fb128523a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d78e01d-7c6d-42b3-ac64-f991a2e9d5d5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92181cee-3976-4e68-b9a0-d755c1f78e54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbac28cc-f3c0-4e33-a87c-755cef8e1454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75f0bd5-483a-413e-b1fb-50c982d4c038",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2dcf6c-f26a-4476-b01b-a215bb36db2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67870e9-5465-43fe-86e0-20da584523b7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b03474f-597d-4032-9061-093dc5088d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "667479a5-024a-4694-be1a-bf5595ea2b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98489f9a-36fc-4bc6-8c23-d05e519b6f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8186c4-39a7-4e14-ac4c-17de05098ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e94697e-e57e-41e0-ba12-45ef4c16632c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f6f673-d478-4cdd-8f61-ed863c7f8ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53b9e6c-b022-455e-8d76-830cb3a35cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a71822-8e3d-4c3e-a270-f443cdef7ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69430454-3bdf-4655-b981-a0c2614b153a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2affda-28c1-4d02-a110-1d4ac86494c5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36b859b-7146-4a4e-8510-2176204c364a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9fee538-05db-4aa2-a574-a7dc8b480b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d33e48d-7bde-42ba-a761-428d5eb086a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c2633b-2d5a-4ea2-acd5-ce75f33d6e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30673a49-131b-4893-9acf-e1318592db88",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1469e4d2-dd8c-4f66-86e8-7c4b51396ad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db22f342-3f04-4689-91c8-d13703f2e0f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdea89c9-a014-4176-84ae-fa163e17461d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8320b8ac-aaaf-423d-8586-f4692b274090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7d2b7e-98a6-4d88-a115-3f443fe827c8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb853aec-0105-43ca-a203-0f7d58ada874",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "927136cd-65ec-429a-a3f7-6bf7f1db4be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c240c56d-c33c-4a77-be14-cfb51646c1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e819afc-02fe-4212-8ef9-0e84edb3f8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcc9411-f720-4832-b7f9-d7a3bb582dd2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f19fef-37fe-457c-8c4a-9af6384ac753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5aceb20-f378-4e2c-9f2a-14add371e776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68327e8a-d121-4e13-bf50-42c969fc51e9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670b7044-8d02-4277-9e1f-47f72233e458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611e3822-cc25-4f78-a478-c2c00af39819",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249e5f4e-d928-49dd-a435-b770d7436ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb9200cf-cf00-4f77-aae8-355971214f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7c8103-5bb1-4eb5-a193-854637a1cb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c903b72-a34b-4a7a-a92c-066d2119c9cb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad1b2575-fd03-4c63-af68-60a5d22540b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da1ed13b-c4de-4988-8877-7a6c59abd4ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52a9721c-c9e6-4727-bde4-6eb2ff6dde69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "343f3260-eea9-4b8d-9fb3-df267496677c"
                    }
                  }
                ]
              },
              {
                "id": "67f42950-8d5a-4a4b-a7d3-b2c2920c80c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96177dc3-fc77-4695-bb47-fcd94a1a06dc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6238adb6-9d1a-4d6b-acfb-8d6a5f76a7b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bdaf1b87-d452-46f0-8a22-1b075e2cc546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0b73fd-9f62-48b4-988f-c044f31c4763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "084bd01d-cdc4-417b-87fd-bb5377b62f09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a4bb0ce-2a73-4f76-ae40-f1fd8f71d898",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c5f99ae-791f-4a07-8b7c-90406cda1716"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc6f680d-9696-4cef-a735-2d152249792f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22f7c984-55e2-4c54-8105-c2b7c51bdb99"
                    }
                  }
                ]
              },
              {
                "id": "ccd1ab1c-622a-484f-86b2-70a9aea30dc2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3750e982-2b5c-43b3-abdb-45743746c64d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c8e234-e39d-452b-9eed-de9511dba834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9e3551f4-45d9-4368-8427-83fc64f7e4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4471db-f118-4dfc-99de-dc128566e5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c7c276-c6c9-43d1-8719-19df4886a40a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9e8b286d-afed-4669-9cf9-2109b350dcd6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d096aff8-767f-4ed0-8116-ea789c2230d0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a746c931-7609-4e35-8296-1d95ec695d5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f45fe2ae-a2ad-4afc-b2e2-5cb3102b9976"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5aa1dc2c-67e4-480f-b676-797442b6036c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7485f951-dfcc-460e-9dc7-918f7ada4841"
                    }
                  }
                ]
              },
              {
                "id": "4e3df58d-89ff-47ad-8397-a28328ea12dc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eece51ef-ca95-4436-bcee-f25402784b40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "53b4f312-2619-4103-ae90-75695a5bb6bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ea7491d-68b3-4fe9-beaa-8221d5741db8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f4137d2-bd1f-4140-8896-2bd6c092a9a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9232b13a-5fc6-4bae-bfc0-af5d10e07c10",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1bb74f90-fa99-4f36-8865-896f44ad5edc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "358e9c46-5e5d-43bb-b1c8-f2d35a25cbc5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19d208f3-4c6c-46a8-a4b2-bd895cce7370"
            }
          }
        ]
      },
      {
        "id": "07dcbe93-16e7-4fbe-8604-9b5a6ae515de",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a5d4945b-4c19-4134-9b46-c824686c57a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f1aead9c-cf54-4810-8044-0d386e0b3b15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c193d942-01b2-421d-808f-abb7b9c72fa2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4aed4a-1710-4442-9586-e1e388f6ee5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "50db3687-0e4e-46ad-87ba-63c07c62ff5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef973a0-84d2-4d3a-b236-feea953e4074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95a24d8a-6e84-4532-808d-8ec016af0c82"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b99f95f6-5517-421d-8813-54857bedef88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "700a96e5-2ebb-46c0-b1c7-585ecbec6a56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42ab9963-d35b-4d9e-ac83-8757cfa4d9cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c593f96-7186-4311-9a3e-62ca4f9556fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "210a14f2-b69b-4862-b82b-05290f9c3835",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f6e52dec-a022-426f-a90c-b73c9bb53964"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "959eb038-e4eb-40b3-a05c-b374ac87ab2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "517c484a-2984-4877-ba5d-66b25bde7128"
            }
          }
        ]
      },
      {
        "id": "46b12975-feeb-4c56-ac8b-9d69d200d68c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "80fb7032-e1c7-4b5b-99f8-4cc247472275",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47ce793d-b1d4-4086-a08b-7d8d7dc6df8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a09ba5d-e06b-4720-b278-0186ad1058c9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361739b1-f372-4aba-af23-979c9d5dd08f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b34a2d6-2c6a-47ae-a5c8-c5c6c92cf364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9bdae3-18d4-4207-8d58-fa79c1ab8394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09b46035-7367-48d2-acfc-520a30df1831"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0de4cc8b-1619-4a2b-8908-7946fb8f42d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "284505e2-b50e-4213-8c81-531d57c6126f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f119a90-d007-43ed-9ab3-998fa580acb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b47e6a3-97d1-4cbc-b28f-f27239b55b42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b55712c0-f049-4c5a-b8cc-a4b007fd62bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ae973fd0-ff15-4302-a053-9e2c7085fe20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8779e9f5-d7f9-44ca-ad91-cd0e5d42df47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab8ff48e-72d9-4171-83ad-2a20a5419545"
            }
          }
        ]
      },
      {
        "id": "31ca2b20-f725-46b8-9317-9ba8cb6fbac1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0e78c6f3-3aba-4af9-aafb-6ff58af4996e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f25080a-f5ce-402e-b21d-efff3a2087b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "618f450b-3e85-47f9-89ce-e78b2008993d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a43329-1de6-4e2d-bc19-c0d9f810781a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93da4e35-a33f-4633-8bab-7e4660d0fae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7b222a-bdd6-4df0-a5b8-acb6e90258e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f1f88c9-a3a2-4c2b-9c59-6d9e7d447948"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b0fc4e5-1517-4b67-bcf9-c967c846c123",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a049e21f-9b00-4d04-9896-fc2075d4e6a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99864f80-10f3-4eff-9334-9794cb0107f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e5f586f-91ad-4295-b334-e40e1c898920"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36e56442-b5a8-4dee-91bc-31166aae771e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "71cf4a4e-4c86-405a-83ac-1a815305dd39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cedf8428-376c-4430-a2f5-af71359c2f32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2cc4174-0e34-4b77-b890-cac68e3e6c18"
            }
          }
        ]
      },
      {
        "id": "ca1ce066-71c6-4e76-b420-ce2e22d0058b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6461a038-2d3b-4fb8-a8b7-029cf9956a58",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "574180d5-e341-4bcb-8a81-0b94b28e5b8d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d831461c-d075-41f1-94ba-54a8009b2e31",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d5ac6fd-86de-4ff5-8639-94bfccae386d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62241203-ecc2-45f6-9757-0be41a0d36ea",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 85.14035087719297,
      "responseMin": 7,
      "responseMax": 4738,
      "responseSd": 375.7976237096794,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697675613245,
      "completed": 1697675649600
    },
    "executions": [
      {
        "id": "0d236a1a-00e0-4d07-b9bf-02dddf113736",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8fae83d7-9998-410b-87f0-976b6e57efd8",
          "httpRequestId": "1368a71c-1240-4c2a-8cea-1b84ec83949f"
        },
        "item": {
          "id": "0d236a1a-00e0-4d07-b9bf-02dddf113736",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "579688a4-aa3f-467f-b3c5-794935711e18",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "f05a8f9e-4914-4d10-b777-ecb1f67ce27a",
        "cursor": {
          "ref": "a5dce0c7-d6f9-4023-b1ef-dc67623f3de3",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d69cab41-e36e-4c20-a3e4-c4e79026b44e"
        },
        "item": {
          "id": "f05a8f9e-4914-4d10-b777-ecb1f67ce27a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "acae05d1-af33-4c03-be7f-508eb3af13d6",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "2c7abd25-f6dd-4132-9a0e-ccfa9570d4ee",
        "cursor": {
          "ref": "c88c5278-5fbb-4e80-a3ee-181f84633789",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a1052be4-a989-4b9c-a335-c1635d01e80b"
        },
        "item": {
          "id": "2c7abd25-f6dd-4132-9a0e-ccfa9570d4ee",
          "name": "did_json"
        },
        "response": {
          "id": "96d7313d-ba22-47bf-8cdf-37a8194ab0d9",
          "status": "OK",
          "code": 200,
          "responseTime": 153,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f095a7-56c6-405b-a0cc-d641d50a70b9",
        "cursor": {
          "ref": "3d71ad74-83bb-4c9d-a260-e8f266dd1c20",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "64b8be5f-320c-43c8-8dbc-ff1f0e4f25f1"
        },
        "item": {
          "id": "84f095a7-56c6-405b-a0cc-d641d50a70b9",
          "name": "did:invalid"
        },
        "response": {
          "id": "20e40977-4eeb-48f4-99a6-b0099d8ab6f4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 480,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f095a7-56c6-405b-a0cc-d641d50a70b9",
        "cursor": {
          "ref": "3d71ad74-83bb-4c9d-a260-e8f266dd1c20",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "64b8be5f-320c-43c8-8dbc-ff1f0e4f25f1"
        },
        "item": {
          "id": "84f095a7-56c6-405b-a0cc-d641d50a70b9",
          "name": "did:invalid"
        },
        "response": {
          "id": "20e40977-4eeb-48f4-99a6-b0099d8ab6f4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 480,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0816d40-18ff-443b-ba68-e14bc0ba647d",
        "cursor": {
          "ref": "efd23862-ffc3-4273-a94f-42204de0e53e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dc7554fc-6a17-4cb3-a009-36bb7ffd8ab7"
        },
        "item": {
          "id": "d0816d40-18ff-443b-ba68-e14bc0ba647d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2726b79b-11fb-4b3b-b83c-e37e3a2ff49c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922bda8b-8082-48ec-a512-0b13667262cc",
        "cursor": {
          "ref": "85c81432-b379-4bc5-bb8f-5b1a6ca8a591",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "878887ea-195a-467f-bbdd-1a01e9a0bab4"
        },
        "item": {
          "id": "922bda8b-8082-48ec-a512-0b13667262cc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ef7cb192-ac54-41fb-ab0f-0181b44fda36",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270102c3-151b-4cd1-805d-eced929589e5",
        "cursor": {
          "ref": "870de349-5239-4aa5-8a2b-781442a7fdbd",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c49784cd-aae9-4cb4-b79d-fabdcbc9b8f3"
        },
        "item": {
          "id": "270102c3-151b-4cd1-805d-eced929589e5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f776367a-2fd0-4ab4-b369-8e6fc398593d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d63ed5-df09-4dfc-a327-773b6c8e1494",
        "cursor": {
          "ref": "759bbad7-8244-4cc1-92d1-9a7a80a8067d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9c477018-1c5a-45fc-9221-3101db6f0117"
        },
        "item": {
          "id": "74d63ed5-df09-4dfc-a327-773b6c8e1494",
          "name": "identifiers"
        },
        "response": {
          "id": "e44fdce2-ec1b-435f-9adf-e21a01fdbd8c",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf91de3-6827-48f5-95cb-4d9b8ab91249",
        "cursor": {
          "ref": "0a4503cc-8a58-4337-b14e-384c892e23fd",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1ac3dfc8-aad2-4adf-8647-2dd3ac73cb53"
        },
        "item": {
          "id": "abf91de3-6827-48f5-95cb-4d9b8ab91249",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "14cd9f72-ad00-4a92-ba2b-61e5b6fee5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a19738-ce4d-43c8-9c5d-3b18f5529de8",
        "cursor": {
          "ref": "157b778f-a8ce-47ee-a844-e458a438324b",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e707f3dc-f45b-4152-92e6-b7ce015ea7b7"
        },
        "item": {
          "id": "94a19738-ce4d-43c8-9c5d-3b18f5529de8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8caabd33-1766-4569-a06e-c64380deb933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257b6b74-549f-4dba-9220-83a6470bb984",
        "cursor": {
          "ref": "a8d604f3-ac68-40cc-bdf8-40ff8c1b0b8d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "66b98cfc-1613-415a-b951-680f7e0acc35"
        },
        "item": {
          "id": "257b6b74-549f-4dba-9220-83a6470bb984",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4b12f681-55c2-4810-8200-81e391fd518a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e62b07a-a2a2-4a57-816e-025725d446f8",
        "cursor": {
          "ref": "c9e886af-d962-4e6a-ab26-647e21b256b7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7d9d26db-3174-4090-b59c-dd2accb9df89"
        },
        "item": {
          "id": "7e62b07a-a2a2-4a57-816e-025725d446f8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b48f97f8-034d-468a-927f-664c592f8008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896d6bc5-2d56-4cfd-9de8-f5d23c71f7b3",
        "cursor": {
          "ref": "d2e2ab78-b453-47bf-89cb-3f2419dfacf1",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0432e67a-7232-4adb-bebd-29052b01dbab"
        },
        "item": {
          "id": "896d6bc5-2d56-4cfd-9de8-f5d23c71f7b3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8ce1812d-6cb5-4b39-9247-2ff2f8212dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a205d2-4f55-493c-bc33-21019e30d017",
        "cursor": {
          "ref": "19e9a2fe-d7c7-44ac-918d-b4663d7d0320",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "73c18be7-acbe-4803-9fe1-134c30e36c02"
        },
        "item": {
          "id": "b5a205d2-4f55-493c-bc33-21019e30d017",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cf04a9a9-b2e2-4917-b34b-7ab34bed0811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e5ef2f-83b1-4108-9c71-2d25f25dc7d4",
        "cursor": {
          "ref": "14703a44-5515-4929-9076-fd930ef16501",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0d34a51c-28ca-45fc-950e-e994a820a5a5"
        },
        "item": {
          "id": "d3e5ef2f-83b1-4108-9c71-2d25f25dc7d4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b5f3bfde-3b0e-460b-9aed-550f76ee56fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e493ad45-138d-4092-b5d1-0b289e0b314b",
        "cursor": {
          "ref": "22d6271e-5fce-428b-bd9c-944872d0fa45",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2f523f4a-78a2-48d5-b903-e4bc91cacf92"
        },
        "item": {
          "id": "e493ad45-138d-4092-b5d1-0b289e0b314b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d438a0ba-cb0d-4b1d-a71e-c4d817e2d95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd1a992-086d-42bd-8d21-e880104818bf",
        "cursor": {
          "ref": "fc0a4466-ca54-4d46-830a-8cc6500417fe",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f0ff0c88-a1ad-4d00-8062-8575dfdd53a5"
        },
        "item": {
          "id": "abd1a992-086d-42bd-8d21-e880104818bf",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5e7815e6-a445-42ce-b13e-ee24e3ea3ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3965aa9-9265-45bb-aec9-677ee4113b21",
        "cursor": {
          "ref": "39c0651d-33c4-4252-a7c0-35d958cb991c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e9c67312-66fa-4afd-b3af-c97a6bb75720"
        },
        "item": {
          "id": "f3965aa9-9265-45bb-aec9-677ee4113b21",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "71a2a20f-494e-43df-b2c2-d6e23ced28fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ceca88-f8d3-407e-b823-fc858aa402bf",
        "cursor": {
          "ref": "4a446e3c-36eb-462a-85f0-e1de5c4eab76",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e50ffbbe-a563-47e5-828c-be8444070e28"
        },
        "item": {
          "id": "f8ceca88-f8d3-407e-b823-fc858aa402bf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5692ed95-2d5e-4ecf-9473-282f8fe6a1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965bfca4-1a70-4a7b-b17e-2a8b4fe8120f",
        "cursor": {
          "ref": "b1bab8c5-daf1-4249-b5d4-a398bf43262f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c649ff45-bc62-4f8c-8de7-073fe5420e8b"
        },
        "item": {
          "id": "965bfca4-1a70-4a7b-b17e-2a8b4fe8120f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e73a0f27-4153-4fe4-8462-93a076030b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fa3c61-c1e7-4739-a968-60e7ea9d4029",
        "cursor": {
          "ref": "2177f9fc-218b-46cc-8cc8-fc5e2ab0b96a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0ba1e162-57b8-43d4-8b2b-c6858bfadfc2"
        },
        "item": {
          "id": "68fa3c61-c1e7-4739-a968-60e7ea9d4029",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e8b72e3b-be68-4a14-a457-63cfb9945e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4694e7af-00f1-4975-82ab-b63e7c7334e6",
        "cursor": {
          "ref": "e9e55233-353a-4a26-b596-5a20ae15e827",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2da5edf3-3616-4d17-a9c8-6f997a90ed32"
        },
        "item": {
          "id": "4694e7af-00f1-4975-82ab-b63e7c7334e6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9019ffbb-bb0e-4fc6-b1ed-b0be908479b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25aae59b-2fef-40c2-961e-510e0deec552",
        "cursor": {
          "ref": "59638d2b-4dc5-4eb7-9763-806ff36c20d2",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f08ffea7-f050-458d-b47a-363ed00d6284"
        },
        "item": {
          "id": "25aae59b-2fef-40c2-961e-510e0deec552",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fcac29f8-a149-40f1-b8a1-58e729528860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc347d09-5291-47e0-bf63-0fb5ba5b8bd8",
        "cursor": {
          "ref": "3da82897-cef2-4902-bccd-5bdbe44ef912",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7638d5bb-5ed7-414a-b6e8-4d1b9f5be7d3"
        },
        "item": {
          "id": "fc347d09-5291-47e0-bf63-0fb5ba5b8bd8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "520c14ca-b430-45c3-b6ec-1158fc010c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c883ff25-c3a8-4fd2-a49b-86e80ab703fa",
        "cursor": {
          "ref": "5d195ac9-d37a-49b2-81a0-2d3a0b2a1ac8",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6269a5b9-abba-4744-a9c9-e71c2cb0e507"
        },
        "item": {
          "id": "c883ff25-c3a8-4fd2-a49b-86e80ab703fa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "523ba17a-6879-4d15-910f-75a00e3b483a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6615a5fc-14a3-49eb-ab18-13584f2785d2",
        "cursor": {
          "ref": "e068ab85-0d38-4391-a006-328ae49ac4ea",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bf1964cc-9a38-4e58-a51f-ef546d6122ed"
        },
        "item": {
          "id": "6615a5fc-14a3-49eb-ab18-13584f2785d2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "46bf91ba-b7fa-4eb8-a0ae-3a6b6f418f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3d1ed9-2ae6-44d0-bace-d897c3c04011",
        "cursor": {
          "ref": "e54920af-d870-4688-89dc-9571299169fe",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d283c553-6d3c-43bf-b368-b8a813651317"
        },
        "item": {
          "id": "8a3d1ed9-2ae6-44d0-bace-d897c3c04011",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "16192f7d-5d75-4e94-b045-35ad74aa3109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0b2dcf-0403-49e2-b872-6377322becc0",
        "cursor": {
          "ref": "fa202706-a340-4a93-94e4-4a9a6976d962",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "29b8949f-6e58-462d-9512-2e0d71ec76dc"
        },
        "item": {
          "id": "dd0b2dcf-0403-49e2-b872-6377322becc0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1a0b54d9-63e4-4afc-8516-f981610c084a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71779fc0-d638-44a2-96cf-0f1aa4d67014",
        "cursor": {
          "ref": "895a34b9-2bbd-41fe-8448-cb78551ede4b",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2896384d-ad95-4876-b824-e2665e9825d8"
        },
        "item": {
          "id": "71779fc0-d638-44a2-96cf-0f1aa4d67014",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "513997f6-fcfa-4201-b143-fc7967cd9a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece985cc-38b1-4d80-95c5-0a376444ee61",
        "cursor": {
          "ref": "405feeab-8334-439d-b7d4-8bffb0e6c684",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "86b8d19f-36b4-4d33-8f3a-e90ed55ce765"
        },
        "item": {
          "id": "ece985cc-38b1-4d80-95c5-0a376444ee61",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "65f7730a-45ff-4295-bd54-9e06ba9e674d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a1cb3e-3556-4a25-a539-93b9aec83496",
        "cursor": {
          "ref": "3a38f215-5813-4104-ab59-706be7e2ba01",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f75366a4-46d0-4ec2-803c-4b135746fe6c"
        },
        "item": {
          "id": "e6a1cb3e-3556-4a25-a539-93b9aec83496",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "96d3a0b0-c415-4352-8eb0-0d9fbbbf8645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2accdc83-c1c5-4dc3-8d7a-a600c1918ce5",
        "cursor": {
          "ref": "d84e3f35-3a73-4a9d-af03-3f5428586e5f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4012209b-fcf8-4d91-b0f4-caa0cc6a3ae7"
        },
        "item": {
          "id": "2accdc83-c1c5-4dc3-8d7a-a600c1918ce5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8a3821b6-214c-4be4-bb06-b7e3ded518e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180d4255-e481-4c48-9f84-dba5fa9edf36",
        "cursor": {
          "ref": "7b9468cd-9f74-4d5f-aaff-c820781c1bc1",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "aa93c392-4192-4075-831b-e1406e5ef803"
        },
        "item": {
          "id": "180d4255-e481-4c48-9f84-dba5fa9edf36",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "041a0bac-7a32-4182-b757-10d512bd0c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bc3b08-60cc-4dd9-90fc-12735c330e58",
        "cursor": {
          "ref": "3080ad9c-d685-4efc-b481-3ec41a2f0a32",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0e2ef9d6-908c-4b6b-b321-922fe163d535"
        },
        "item": {
          "id": "07bc3b08-60cc-4dd9-90fc-12735c330e58",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cd5461bf-cdca-4716-8026-12327f9d9e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebeeef77-fb83-4c21-9358-5816b4591c05",
        "cursor": {
          "ref": "46bd4425-c53b-4422-978b-d4792550bd8d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b4cd3023-bc88-4e8d-a452-01f0d685a487"
        },
        "item": {
          "id": "ebeeef77-fb83-4c21-9358-5816b4591c05",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7a895dac-9a12-41a4-a5ed-003fb86f6a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7283850b-6469-40b7-80e3-485baa0eea62",
        "cursor": {
          "ref": "53169211-9753-46c8-86c6-1cd25320f168",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9e332239-b11e-4dc9-b64c-822b308aedc8"
        },
        "item": {
          "id": "7283850b-6469-40b7-80e3-485baa0eea62",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e8406f46-a910-4fb2-8ac8-00872da84e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491462ca-8dde-43a8-82d6-aeedfcf101d9",
        "cursor": {
          "ref": "bb11cb6f-56d3-4b7f-bdb7-8594dfe8211a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2f6dc673-eb5c-434b-97ba-54ae6e1f2d44"
        },
        "item": {
          "id": "491462ca-8dde-43a8-82d6-aeedfcf101d9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8fa5b0c9-1b9f-4939-b5ee-4a7306a74d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce5c2c2-1f61-41a1-88ef-0d35c552b55b",
        "cursor": {
          "ref": "bca13ae0-8958-4196-803c-d17775139680",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "76bf1d20-2684-47ba-9d6e-aca01744dc51"
        },
        "item": {
          "id": "4ce5c2c2-1f61-41a1-88ef-0d35c552b55b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "01281aa9-9b1a-4fed-a17c-ba24a45df1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7330ba34-c971-4556-94ac-4e81d41d15e5",
        "cursor": {
          "ref": "eed9ecd1-4625-4d20-b495-8693c605a5c3",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0bd215a9-a5fc-40a8-83c2-ec742f084d21"
        },
        "item": {
          "id": "7330ba34-c971-4556-94ac-4e81d41d15e5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "729241db-8e20-4d5d-a829-65da4f8d1a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d9a9c8-521f-4906-b15d-44aa0a6f3872",
        "cursor": {
          "ref": "1e442223-af06-4fa5-a788-77b2f4791cf4",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "296349ae-2e35-4ba4-be35-ca85162b8ec8"
        },
        "item": {
          "id": "c0d9a9c8-521f-4906-b15d-44aa0a6f3872",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "266d4462-675b-4706-9796-9da940edb161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fc0383-d9df-4ac6-8999-cfc390f8f144",
        "cursor": {
          "ref": "fd893372-bd29-4683-bf3f-da10456b86df",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ef11acc5-6428-4c2b-9a0e-9742552005a7"
        },
        "item": {
          "id": "83fc0383-d9df-4ac6-8999-cfc390f8f144",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0b45886c-72d7-4ace-b47c-067a9dea9f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea669e9-fafb-4112-8be5-df9a6aaa18ee",
        "cursor": {
          "ref": "64a7b465-24fc-41c0-8768-fa1a459bb557",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f313ee22-c0dd-4c73-a8c1-f42f61b97cdc"
        },
        "item": {
          "id": "7ea669e9-fafb-4112-8be5-df9a6aaa18ee",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fa337d9e-a602-47e4-946c-71f1a71e9354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49605db4-a2ab-47ee-8f0f-f683a1e96e5b",
        "cursor": {
          "ref": "d34ffe4b-cfd1-49ce-8851-ce5dd8bc0ee3",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7d5db798-3990-4911-91ff-909ba096377c"
        },
        "item": {
          "id": "49605db4-a2ab-47ee-8f0f-f683a1e96e5b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7473f107-f8ec-445e-a255-08c814614eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861fe135-6952-4051-a3f8-19002b45e9fa",
        "cursor": {
          "ref": "9b426657-610e-4796-9617-bf74165a2415",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "95b14d93-8f29-4f37-a9bd-7062045cce4c"
        },
        "item": {
          "id": "861fe135-6952-4051-a3f8-19002b45e9fa",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8cc1fbbb-e332-4407-811e-8e2daeb07066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907b1ff7-d6b1-4522-a118-5c2db9ae544c",
        "cursor": {
          "ref": "d37cd63e-5921-4e1f-a009-1909711ceb46",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1130f5f7-8990-4c2b-97a1-05af5013159c"
        },
        "item": {
          "id": "907b1ff7-d6b1-4522-a118-5c2db9ae544c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f098cb68-8fe0-4286-817e-b45f3647b0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff37212b-6794-482e-b14d-3014894474f5",
        "cursor": {
          "ref": "7ac1050d-3e09-4713-b03e-6ff54d1acd12",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b7acdec7-e4ef-42da-ae93-869a168ce57c"
        },
        "item": {
          "id": "ff37212b-6794-482e-b14d-3014894474f5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "18e64821-0f58-4b23-bb4f-98fee7db76e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8c7797-346d-4822-b644-058f070b2de5",
        "cursor": {
          "ref": "9f5d6343-e8d7-4ced-9e5b-1956049e5624",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "95889e61-adc2-4352-b1a1-d1192e26bf7e"
        },
        "item": {
          "id": "7e8c7797-346d-4822-b644-058f070b2de5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "08580ac7-6dc8-4180-806d-f200a1f84d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9766676-4894-45a6-9ef1-72f8338f9bc4",
        "cursor": {
          "ref": "088b7b37-b676-4cb5-a8a4-8d48b2a77e40",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "83bc55b8-338b-4308-878f-463f457be481"
        },
        "item": {
          "id": "b9766676-4894-45a6-9ef1-72f8338f9bc4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c1333af1-fa47-4f51-961c-d91b1c9a4918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdef9b9-b86d-4f90-a8eb-c2dcd93f8cc9",
        "cursor": {
          "ref": "57c0cda9-0953-4609-93f5-6b0f076ce710",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "02d193fe-3fea-4e00-85bf-096eae3c232b"
        },
        "item": {
          "id": "6cdef9b9-b86d-4f90-a8eb-c2dcd93f8cc9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7ee1f6cc-1950-4dfc-9827-97ced2cf1fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc68374a-f8d8-4a7f-bb4e-e053bcd6def7",
        "cursor": {
          "ref": "9d406d40-7f64-401a-87eb-b3c8dc031857",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1fe03219-b777-495c-bcc2-8bba140e67a2"
        },
        "item": {
          "id": "cc68374a-f8d8-4a7f-bb4e-e053bcd6def7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b0bcb210-bb2a-4939-867e-dd1d6be07575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a631a4-a60d-481f-be99-ab9722898a2c",
        "cursor": {
          "ref": "c55faa29-459b-4368-997c-9bd41f192f23",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7f3c1616-85dd-4646-b522-c921c08a2849"
        },
        "item": {
          "id": "31a631a4-a60d-481f-be99-ab9722898a2c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "420cd9ca-b9e2-4353-86ee-f696d5821905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2c9467-e0cc-438d-91b6-d5f13f96b2e5",
        "cursor": {
          "ref": "0ad92a65-8c3d-4c42-8f76-6de2fe4246c1",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2317712c-b009-4261-80e0-c81b94bf380c"
        },
        "item": {
          "id": "5c2c9467-e0cc-438d-91b6-d5f13f96b2e5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6908ed09-ab45-4092-9602-35572c603b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb061a52-3c0f-48a1-adcb-6c33cd539bc4",
        "cursor": {
          "ref": "0990dd64-2403-4d52-933f-5b6684367ff0",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4e245376-ea74-470f-b38a-baff572b5b5a"
        },
        "item": {
          "id": "bb061a52-3c0f-48a1-adcb-6c33cd539bc4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d9c802d7-24ff-4136-bf39-d831ee91df26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3beef0f0-6c2d-430d-ad0f-9e540a99e51b",
        "cursor": {
          "ref": "765d9a1b-d43c-4f13-bb14-e75a71d659d3",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "93d29519-a6e9-48a7-9e8d-891ddb7fe5c8"
        },
        "item": {
          "id": "3beef0f0-6c2d-430d-ad0f-9e540a99e51b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1aeda368-18eb-4f64-9341-f319dafc4cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c998104-4471-48f6-a2c6-05bb8ef631d0",
        "cursor": {
          "ref": "4737ce51-65c3-4047-aafb-b243d4d00588",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2886f9a2-46e8-44c5-ad8e-08d8ebbbb4ff"
        },
        "item": {
          "id": "8c998104-4471-48f6-a2c6-05bb8ef631d0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "18cda965-f106-4c67-9b0d-6b1dcbe0e817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d0443d-1ab7-4f14-b21c-3045fb236577",
        "cursor": {
          "ref": "6ab85b84-d6b2-4716-9ddf-718acfcc3880",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "32a1bc8e-caae-4843-937d-ef9bf48f8ccd"
        },
        "item": {
          "id": "a5d0443d-1ab7-4f14-b21c-3045fb236577",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0053d162-a087-4b64-8725-25faee31019d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8e1146-1400-4d74-8c15-39623431b146",
        "cursor": {
          "ref": "ef4d65ea-09ad-4452-b5b1-1208d1624e22",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b01b5aac-366f-45fb-a79e-41bd23dd0f8e"
        },
        "item": {
          "id": "2e8e1146-1400-4d74-8c15-39623431b146",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6ca7e1fe-aff3-421a-b86a-dd58cded62cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdb8210-d4fd-4572-b91f-c07fb38b6dce",
        "cursor": {
          "ref": "b33295f9-8392-4eb0-bb22-c514a4ed2dd9",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a1d81834-5734-441f-b5d1-ad81e842b267"
        },
        "item": {
          "id": "0cdb8210-d4fd-4572-b91f-c07fb38b6dce",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "681977b9-d24f-4621-9ba7-081b32ffbfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2684726f-14a4-4ca1-9fed-7f7b04d54899",
        "cursor": {
          "ref": "e28fe3d6-1636-4bee-96b9-2784226d0473",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "02f0e114-9ec3-42c8-934c-09c166ab4590"
        },
        "item": {
          "id": "2684726f-14a4-4ca1-9fed-7f7b04d54899",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b1d18a91-4479-482b-b63f-d84122be9252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77049fe3-9719-42a2-bc7a-821ab43de488",
        "cursor": {
          "ref": "191cff19-85da-41bb-b1b6-0ba805e7d586",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "00894491-8947-44d6-bda9-9c97b50ff6e7"
        },
        "item": {
          "id": "77049fe3-9719-42a2-bc7a-821ab43de488",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c70bdf72-91d6-4c2f-a13c-54c8ea4c0ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a94874f-b6ef-4627-8b47-ba42297fea4f",
        "cursor": {
          "ref": "6af86c53-ef41-461e-add4-5edbee829a9c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d775a955-a52c-42e2-8568-b9781c31a0ee"
        },
        "item": {
          "id": "9a94874f-b6ef-4627-8b47-ba42297fea4f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e463b431-f057-4644-91ea-d2b89ad1f152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdb744b-3ac2-472a-abe7-d6fb4114516f",
        "cursor": {
          "ref": "e5207e58-0ffd-44c2-8453-4c836e13b639",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "21e449c6-6d59-4fe3-9ba5-fc1109e9a94d"
        },
        "item": {
          "id": "8bdb744b-3ac2-472a-abe7-d6fb4114516f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "75f77753-26ae-40d4-8a1e-a14bc3328949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02296bce-4c62-44fa-93e3-c1039e475fc0",
        "cursor": {
          "ref": "498daa83-ee91-4985-a6c4-a6661e696fb8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6e3f6436-ed0c-4010-8b7d-1b1cea66d4f6"
        },
        "item": {
          "id": "02296bce-4c62-44fa-93e3-c1039e475fc0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "65e9b4c6-6e8b-44b4-966a-904c91760ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb0f17f-d537-4969-b4c7-ae6d865a2585",
        "cursor": {
          "ref": "a1cbba3a-61a9-49ea-82e1-4772fd5fc661",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3e606625-e1c9-431d-8f39-3e320dbe4dc8"
        },
        "item": {
          "id": "7fb0f17f-d537-4969-b4c7-ae6d865a2585",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e5d19581-3f25-4514-b432-b1d046b17faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4af88d-f5aa-4abd-a36f-25d21ea6ac09",
        "cursor": {
          "ref": "67be3d23-0152-4afa-a393-4dcf38267a6d",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4e26c4ab-a40a-4845-a6d1-de87c4941cb5"
        },
        "item": {
          "id": "3f4af88d-f5aa-4abd-a36f-25d21ea6ac09",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e75e3d94-ef38-4d7d-bdb9-10497259efaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cdb2ee-79ba-49b5-bb41-b969e9a096fe",
        "cursor": {
          "ref": "45e5d492-02f8-4d7f-9d0d-00d13bf44e74",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "01974e36-0ace-4e92-8fb6-4eeae46b1343"
        },
        "item": {
          "id": "25cdb2ee-79ba-49b5-bb41-b969e9a096fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b1b5e6c6-020c-446e-b0fc-a1bd6eace95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1d5d4b-9bf1-4893-92b2-345a28284ebf",
        "cursor": {
          "ref": "ad3d9614-05eb-405e-80dc-63a301e1b9fc",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fbed41b5-2a08-473b-9b71-95639ea18a63"
        },
        "item": {
          "id": "ee1d5d4b-9bf1-4893-92b2-345a28284ebf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "20309326-62fb-4f9a-94a5-deafabdf8723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca358fb-e18d-4647-9c4c-5d2bff401a5e",
        "cursor": {
          "ref": "351be9a8-fb35-4766-914e-5cddf79967f7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7dbe2f18-c0a7-4cfc-8491-9aed4eec1dbf"
        },
        "item": {
          "id": "7ca358fb-e18d-4647-9c4c-5d2bff401a5e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f3de78ce-dea3-4a8b-83e7-9e5ba694ed60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef68d9b0-e918-4c6c-87a6-2d1aa7207757",
        "cursor": {
          "ref": "044005ea-3bb6-4018-9c99-153434ef1412",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "35483e99-81ce-4856-97f5-6e6eb7f263cc"
        },
        "item": {
          "id": "ef68d9b0-e918-4c6c-87a6-2d1aa7207757",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b1831d03-5d37-495c-9b7a-3d10770d4303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82287a23-b4b4-4d1b-a20d-8defb9af4f84",
        "cursor": {
          "ref": "d62cba4a-b0b5-47cf-8b14-7d7022c6d662",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2b93e4d7-b8fd-412f-a758-e36e50a4314c"
        },
        "item": {
          "id": "82287a23-b4b4-4d1b-a20d-8defb9af4f84",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6fd5a248-3bc4-4cda-9c63-6145269b51d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cb364b-a1e2-4eaf-9908-032909cc7777",
        "cursor": {
          "ref": "78dbc819-1237-4e39-aa76-377b31d1060d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "54c6c9c0-bcb3-49a7-ab62-8ca7250f2659"
        },
        "item": {
          "id": "11cb364b-a1e2-4eaf-9908-032909cc7777",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3addd500-61a2-4318-97ff-8df48ce60134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a68b2b0-5d8f-4bf0-9f30-5cce33ef1c4b",
        "cursor": {
          "ref": "d527b429-de86-4928-a58b-70610c967892",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9ccebf81-e4f6-4167-87b6-cd171fea3a83"
        },
        "item": {
          "id": "9a68b2b0-5d8f-4bf0-9f30-5cce33ef1c4b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "22f0d2a3-da10-472e-9982-543e56c50159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3dea8d-3afc-45b1-9095-e7cdc2dabbfb",
        "cursor": {
          "ref": "802963ed-2486-410e-a9c5-0af6cf3bbfea",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7563a19d-3f87-47ba-ac10-d9fd01c52d1e"
        },
        "item": {
          "id": "9a3dea8d-3afc-45b1-9095-e7cdc2dabbfb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f03a33c1-80fc-4c97-831c-09ebdb1838e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6538108-95d8-4fcd-8828-1930e27da26b",
        "cursor": {
          "ref": "905ab398-ad43-49cb-81db-2aad0ddf1469",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ad7a913e-7d20-44b3-bfe7-4cc002ce1095"
        },
        "item": {
          "id": "d6538108-95d8-4fcd-8828-1930e27da26b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "de94870b-8341-413e-8554-a4b7c1bcc9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050f2a21-7842-4f62-af4e-f05cd463d047",
        "cursor": {
          "ref": "d1b70e87-9b0a-496d-bf6d-c9d44f1d822b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e53d247a-3032-4a2f-a99d-007cbe088196"
        },
        "item": {
          "id": "050f2a21-7842-4f62-af4e-f05cd463d047",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "35976c91-ece6-4f08-a2ea-1bfb3f2c7875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47869473-5388-4fb4-b384-a2514b1b9bdc",
        "cursor": {
          "ref": "a288d438-534c-44ec-8ae0-d509d42484a9",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "824cdb4f-a005-4ede-a0b5-a251c8811f86"
        },
        "item": {
          "id": "47869473-5388-4fb4-b384-a2514b1b9bdc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8cba2629-200a-4b5f-8b89-94e447b54e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ef7c74-e2b0-4346-8f2a-ea657b11d191",
        "cursor": {
          "ref": "35aea1dc-7956-4bf6-89c5-d80812258d77",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a3eab47c-46be-4cbb-b6fb-eca8b4df9b44"
        },
        "item": {
          "id": "54ef7c74-e2b0-4346-8f2a-ea657b11d191",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "035d0094-dcba-43a7-ab6f-63cf41a2d1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96d11d4-0a1f-4900-b90e-8e99eb6fea9c",
        "cursor": {
          "ref": "b57f0452-f21e-4c39-82c8-a2f3d03c4d7e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d59ed553-a75c-4e28-8feb-fa068ef30ebc"
        },
        "item": {
          "id": "a96d11d4-0a1f-4900-b90e-8e99eb6fea9c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "30719b3d-4eaf-46be-821f-e39e51ac8356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f09cbb-5b74-4507-8479-019a7d44e402",
        "cursor": {
          "ref": "a8c379c4-717d-4e0f-a792-04c386b569ab",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "46e34437-a409-453e-b49b-b51e5c9620bd"
        },
        "item": {
          "id": "c5f09cbb-5b74-4507-8479-019a7d44e402",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "195ecb0b-4330-4057-930f-90c00918da09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b63b62-775a-4c08-aebb-51faea4951fc",
        "cursor": {
          "ref": "9ac33bd1-397d-477d-b591-ce87319f0c8a",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "db0abe31-1e45-42c5-86f0-701c816ba7c1"
        },
        "item": {
          "id": "c1b63b62-775a-4c08-aebb-51faea4951fc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "aef130c6-3fa3-44f0-a563-31deefcd46cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a09e0e6-d37f-4914-8d29-170b26950e82",
        "cursor": {
          "ref": "1257f9c2-d5c5-42f9-953f-83734b50d0f8",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "42f84a5f-eecc-41e3-a859-2458cd604066"
        },
        "item": {
          "id": "0a09e0e6-d37f-4914-8d29-170b26950e82",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "af577fcc-14af-4015-933a-ec40b905067d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3204d85a-6c9e-4fc4-ba10-4a5b7fa2fade",
        "cursor": {
          "ref": "3c5c999f-12e8-4ae5-8cfa-1a4fd53131f2",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a69713cd-d25e-4d79-a14c-66dee14d0f08"
        },
        "item": {
          "id": "3204d85a-6c9e-4fc4-ba10-4a5b7fa2fade",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7cf85520-43b7-425b-95e1-2a51dda7dd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd58cccd-d48b-47f4-bd95-4a42f38fe09d",
        "cursor": {
          "ref": "2ae92c11-56b1-41be-a193-47aa8f9af6d4",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a4cdfa39-9024-4641-a371-6880a0aac2cc"
        },
        "item": {
          "id": "cd58cccd-d48b-47f4-bd95-4a42f38fe09d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "78ac1ad3-7dea-4ad3-933f-b116f0940ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43af1856-ed3b-4925-ab30-bfa85479b3ca",
        "cursor": {
          "ref": "8b28cf28-11a1-423d-ac6e-325d3d5747d3",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1eebb911-2ccc-4fc4-970e-c182322ef773"
        },
        "item": {
          "id": "43af1856-ed3b-4925-ab30-bfa85479b3ca",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7450e432-5006-4b49-b386-5af3b6d44d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8aab0d-851c-42a4-85aa-11096a5e4c50",
        "cursor": {
          "ref": "019dcdd0-3cb6-4c33-ada7-9c6390face44",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b10b8884-f349-4fe0-bb61-9ed45887e03b"
        },
        "item": {
          "id": "da8aab0d-851c-42a4-85aa-11096a5e4c50",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8d118696-2e0a-48c6-b334-7488be487cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e10ef84-6287-4590-96ec-20359b0e2275",
        "cursor": {
          "ref": "1dff8c08-b1be-4ecf-9c66-d56bfe4802ff",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "aa62dec6-2ab1-486a-bc1f-0b88e3ad95de"
        },
        "item": {
          "id": "5e10ef84-6287-4590-96ec-20359b0e2275",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "addd36f3-93d2-424d-ae19-61fc3920f07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65834b9-6477-4494-95f8-c1187e45ae75",
        "cursor": {
          "ref": "9bb20257-4ba4-472e-ba58-9cd76e7efbcc",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "be45feee-daf2-4391-8f5b-a8af8fd417fe"
        },
        "item": {
          "id": "e65834b9-6477-4494-95f8-c1187e45ae75",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9ebb310d-70e6-4669-a4d7-e54fbe6fd290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9d5657-7f10-4dd0-8b60-0360799c49ea",
        "cursor": {
          "ref": "03810240-47de-4c67-ab13-5051e3f5f060",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a0612923-4768-4278-a145-901209a82cf8"
        },
        "item": {
          "id": "bb9d5657-7f10-4dd0-8b60-0360799c49ea",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e3559072-6fc6-447e-b511-9ac8856c9f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83034ef-7be7-494f-87f0-6b4a3be62f2c",
        "cursor": {
          "ref": "5081512a-66c5-4762-b289-e287b6c39f38",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5089b9e8-ebc6-494e-9510-fc02f925da6f"
        },
        "item": {
          "id": "e83034ef-7be7-494f-87f0-6b4a3be62f2c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0a7eee8c-35a0-412a-9834-3af2bf01856d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7bc9a6-6e0b-499e-a1ed-bc3c40ce431d",
        "cursor": {
          "ref": "7edbbdc0-685d-4843-89e9-4cc40ee67798",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dcc256ac-05f3-452c-bdd6-3e426f4b9b6f"
        },
        "item": {
          "id": "1e7bc9a6-6e0b-499e-a1ed-bc3c40ce431d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5e1e4a38-beef-4f7f-8e85-612c8d11f0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daece331-a77a-4bed-828b-f53dfb344590",
        "cursor": {
          "ref": "8572cf2b-0862-4e14-bc69-d46fd98174ea",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b2fcf969-d447-444a-a059-8d221a197f61"
        },
        "item": {
          "id": "daece331-a77a-4bed-828b-f53dfb344590",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3353a5d7-19f5-4faf-b619-4b44fb3fd869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebabda25-463a-40ce-8192-9d2c1e2712a4",
        "cursor": {
          "ref": "75d5929b-2562-44e7-ae08-797110475d0f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "82efd555-cdff-47b3-84c6-85d49fab9247"
        },
        "item": {
          "id": "ebabda25-463a-40ce-8192-9d2c1e2712a4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7f51fa3e-d8cf-4a2e-960d-45803f5c25e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a2b748-0fa0-40d2-9c33-94c00e67894c",
        "cursor": {
          "ref": "a40ac5a6-2dea-4be6-abaf-b4f60b456db3",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3ce2496d-c50b-4c57-aa8b-45a0e766accd"
        },
        "item": {
          "id": "40a2b748-0fa0-40d2-9c33-94c00e67894c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "def6cfe6-029b-4e73-be25-d9097c74469e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aa6346-d94c-4e61-9d7b-5fb3da18437e",
        "cursor": {
          "ref": "0d4af16b-1a20-4ae6-a5eb-c544191f1e92",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dc01f94a-304a-477e-bb4b-2b976962e656"
        },
        "item": {
          "id": "74aa6346-d94c-4e61-9d7b-5fb3da18437e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1e325efe-05ef-4263-8663-eda694c6ce98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d41192-7405-46c2-971f-d1906d17628a",
        "cursor": {
          "ref": "e2f341a2-51f6-4150-8784-5c2a9c50c8f0",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "792a30ee-da01-4653-993e-fafab436e243"
        },
        "item": {
          "id": "06d41192-7405-46c2-971f-d1906d17628a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f610f0a5-5333-4370-bbd3-7489cdb62248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e85719-0072-4d97-bbe5-811ec6917cd6",
        "cursor": {
          "ref": "4c02231b-88d4-420d-b250-48efde5a2086",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8828bc15-063a-4188-b518-5ccd79649922"
        },
        "item": {
          "id": "25e85719-0072-4d97-bbe5-811ec6917cd6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "67be2d4f-703c-4e55-a152-2b3c5afcad51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0609596b-bc66-4754-8eef-e2102b6f9926",
        "cursor": {
          "ref": "e1ce78fb-a640-4a6e-b6b4-1e63c626a62e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e9d40230-70bb-4230-96ce-dbb8987cd2f1"
        },
        "item": {
          "id": "0609596b-bc66-4754-8eef-e2102b6f9926",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1943d4a9-928a-4b63-8c73-8677aa487f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da55f8a-1d52-4ba3-843b-321b1ae760ca",
        "cursor": {
          "ref": "3421db4b-90dc-4a96-a0e7-9cafc685320f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "928d03cb-d186-4b5b-aca5-5aee52c4644a"
        },
        "item": {
          "id": "6da55f8a-1d52-4ba3-843b-321b1ae760ca",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "21e1de76-5255-412c-8108-bba87274f62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed217c74-34ef-4163-8111-95ff504283ab",
        "cursor": {
          "ref": "b4c0b9a5-a71b-4c30-9859-4af8216c9e13",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8a830437-3218-47f3-8471-6cc2db4020ed"
        },
        "item": {
          "id": "ed217c74-34ef-4163-8111-95ff504283ab",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cac2deb5-b289-4002-a4cf-538d494fbd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1c262d-0dd6-4b80-af6b-92feed6800b0",
        "cursor": {
          "ref": "8204a9c4-d6f8-454c-aaa6-919ea31b94c7",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b344c294-e9aa-47b1-aba0-86766a8278ec"
        },
        "item": {
          "id": "af1c262d-0dd6-4b80-af6b-92feed6800b0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c7fba113-a75e-4150-b2fb-fd214405ebe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cc4209-71a6-4ee3-9365-c44eebd89dd3",
        "cursor": {
          "ref": "6ad5d696-9e9d-4eeb-83e4-9eb921796b2e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dd3bee63-7707-4119-9f5a-fc801ec09d47"
        },
        "item": {
          "id": "53cc4209-71a6-4ee3-9365-c44eebd89dd3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ecedb1e3-754b-476d-8531-6179e3186fa8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafb83fb-4e49-4d28-b4fa-dbac525ae859",
        "cursor": {
          "ref": "f8e0b230-9082-47f5-91b1-924d4fe8e1fc",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "353fb0ca-28e3-406a-9b7c-ac2606412bcd"
        },
        "item": {
          "id": "eafb83fb-4e49-4d28-b4fa-dbac525ae859",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2b767a49-5b80-41de-b9ab-7b0069649dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b041dae0-c1be-41e5-b434-d1a8a4dae858",
        "cursor": {
          "ref": "02e248ac-df63-42f9-b4c2-e8cd69e6eab6",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a62b4e80-7d1b-4e1f-9b8d-61aa6f9f94ea"
        },
        "item": {
          "id": "b041dae0-c1be-41e5-b434-d1a8a4dae858",
          "name": "credentials_issue"
        },
        "response": {
          "id": "38ff7110-b9a1-42b9-9443-1c45375c97d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4c4c183e-74c2-4798-a063-42ba8f6fa595",
        "cursor": {
          "ref": "d0b9d7c3-10db-4602-9821-0e1dd8a4a6d5",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "34c04125-f194-413f-abf9-bbd73ea9a966"
        },
        "item": {
          "id": "4c4c183e-74c2-4798-a063-42ba8f6fa595",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0d38ec9e-d95a-48e2-b644-7f23b78f15fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e1e18813-cf25-4031-aa93-70df348ec411",
        "cursor": {
          "ref": "d95c9f87-3d94-4a58-ae56-fefda1f9644c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6e0cd1e1-8ced-46ed-be3d-153b2a67d400"
        },
        "item": {
          "id": "e1e18813-cf25-4031-aa93-70df348ec411",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1002a8a7-e67e-483e-a2e3-40498a4fd703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2fb93778-88cd-4f50-b0ba-13364a0bfe59",
        "cursor": {
          "ref": "09feb115-f76e-436d-bcad-48385d56c617",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "efda78b5-730b-4c77-89f5-9f34ef7991ef"
        },
        "item": {
          "id": "2fb93778-88cd-4f50-b0ba-13364a0bfe59",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8e2b2b21-9bb7-480a-8f38-95f014173bfb",
          "status": "Created",
          "code": 201,
          "responseTime": 4738,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0dc460-3679-4876-a632-a4be0f08b7fa",
        "cursor": {
          "ref": "11722d12-a1cf-4b93-a70a-d85d696e37cb",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a26e6c0b-cb50-4300-933c-1254983973e8"
        },
        "item": {
          "id": "2f0dc460-3679-4876-a632-a4be0f08b7fa",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4a09a19f-1fe2-48ef-9cef-f32b27e3722e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "08a8070e-0081-46ac-814f-d61502481c0f",
        "cursor": {
          "ref": "57e46dca-b00f-478d-965a-86e67888ac51",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "769fd274-4e8c-4e63-8622-f4d49bddd9f9"
        },
        "item": {
          "id": "08a8070e-0081-46ac-814f-d61502481c0f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "eb7a5d91-1ce7-48a8-88ba-8bc7b5a777bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1b0b93a0-fa63-4f40-9c6d-5eb1b4682164",
        "cursor": {
          "ref": "5518d89f-5779-4cef-8201-8d254edf4d91",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "006341bc-f9b4-4978-85c1-fbb2f24191a2"
        },
        "item": {
          "id": "1b0b93a0-fa63-4f40-9c6d-5eb1b4682164",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b1f49449-5267-4f5a-ae41-0746e430f333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5918d7-2bf2-4a20-ba36-1a5a1077e9aa",
        "cursor": {
          "ref": "2fa9cf79-52a6-40df-ba83-8a5bc1bbd0e9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9d806fad-39ed-4dd0-b673-22109382ef71"
        },
        "item": {
          "id": "ec5918d7-2bf2-4a20-ba36-1a5a1077e9aa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3ebc172f-94a6-4eda-b92b-c910ddb26ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c71bd79-41f7-4ba8-8606-9f0333e89c34",
        "cursor": {
          "ref": "a5c7c36c-4dc4-4d51-8137-bb946baa711d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "33129718-c820-47fc-a72f-002357803b9c"
        },
        "item": {
          "id": "0c71bd79-41f7-4ba8-8606-9f0333e89c34",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "322901cf-5a26-4376-866e-3ed1dceee3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6093c97e-4047-4a00-8c13-502626cd45fc",
        "cursor": {
          "ref": "0fcc054f-2016-4d37-adad-f2df87df6eaf",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "167f6f7e-f5cb-4957-b155-ca51bec2ab27"
        },
        "item": {
          "id": "6093c97e-4047-4a00-8c13-502626cd45fc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5a971247-a322-4126-8cf6-6c728ff81e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffa5f89-ac6a-4169-86d9-e959398fa4b6",
        "cursor": {
          "ref": "be325e00-6c62-4989-bd5a-f8a1e79e2100",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f5f8f079-a616-4635-bfa1-b596630a66a1"
        },
        "item": {
          "id": "9ffa5f89-ac6a-4169-86d9-e959398fa4b6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f116a383-69cc-4b95-b00a-71d537704762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f00b18-5d10-4b69-8fb0-59d38ee67a81",
        "cursor": {
          "ref": "8b567f04-c085-41b6-86c4-51587e69163f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e77a4059-7010-45e3-aa28-d00260022777"
        },
        "item": {
          "id": "98f00b18-5d10-4b69-8fb0-59d38ee67a81",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "24e67998-677e-4cb5-81b4-c2ee64a6b921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ac2f72-6510-4d12-86e6-b1611c1f1b49",
        "cursor": {
          "ref": "7bf86c8e-79fc-45ba-93c9-e016111a0492",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c0cae18b-3ae0-41a0-8fd2-68e7f32281e0"
        },
        "item": {
          "id": "a8ac2f72-6510-4d12-86e6-b1611c1f1b49",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "74e268e1-dde2-455e-82d0-fdfcbcfaa36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633664ad-262b-4c19-9587-affcebe80e37",
        "cursor": {
          "ref": "bd43e9c4-d7aa-438e-82c3-488662d66ec2",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "158921a6-eed2-41b9-8e48-9cab653af25d"
        },
        "item": {
          "id": "633664ad-262b-4c19-9587-affcebe80e37",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6b0cfa91-d151-438e-8cb8-84bb21587e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859c0f7d-504d-43a4-b351-1c7a0d37fff7",
        "cursor": {
          "ref": "c1c04d2d-fc40-4cc7-85a9-2054f72d9828",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "308d939d-8164-4bfb-88cf-a8fef113007c"
        },
        "item": {
          "id": "859c0f7d-504d-43a4-b351-1c7a0d37fff7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c74dc706-d328-4ac6-bd7d-18da57b012fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81963aeb-1634-4750-bb67-f012cffd6332",
        "cursor": {
          "ref": "f045f374-16d1-4ec6-b462-2d141875740d",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "57d80c57-21d7-4565-a89c-9c0d06747f41"
        },
        "item": {
          "id": "81963aeb-1634-4750-bb67-f012cffd6332",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0d47175a-84ee-4e54-b2d5-6f0bdb8dbf60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5631004-471f-4694-9242-b17c471c925b",
        "cursor": {
          "ref": "b3929b18-56ea-4b1f-aeb0-dde9ec8d4b97",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "60fd5821-cf18-4b8e-aed0-86dbdab7d7fd"
        },
        "item": {
          "id": "c5631004-471f-4694-9242-b17c471c925b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6a26ee71-971f-46c0-923c-b0858c9334aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9e6259-92a2-458f-9c3b-3e12002cf8bd",
        "cursor": {
          "ref": "2babf5a9-c143-4823-a429-2c1dc84b1681",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "239853a9-385a-416a-991f-537eb9fda84e"
        },
        "item": {
          "id": "7b9e6259-92a2-458f-9c3b-3e12002cf8bd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "95908788-6ff5-404b-ad23-5ebd868727bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23724f0-67eb-4cea-b114-1dd58105094c",
        "cursor": {
          "ref": "86f7b785-1900-449a-a89c-01b0d929af10",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4d09b658-2b21-4e3e-aab1-f5fed7e035e1"
        },
        "item": {
          "id": "b23724f0-67eb-4cea-b114-1dd58105094c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ebe3dba9-c57f-4037-be9b-a4e574fcc168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f7da0f-6d6c-48f6-bf63-9326dda6fbce",
        "cursor": {
          "ref": "c25eecf8-85ae-4697-93eb-4e2841a6db94",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "adbf8fb6-196c-4613-a50e-0de9239dbf88"
        },
        "item": {
          "id": "b6f7da0f-6d6c-48f6-bf63-9326dda6fbce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "774d33c8-da77-4c53-a05c-622a84ca39f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24259f3d-588c-4d34-8183-8bc4b3c7f6aa",
        "cursor": {
          "ref": "986dc978-7fee-4a68-8986-c4f15cee2728",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1fec8c73-1f02-4109-8765-2cc0e242ac46"
        },
        "item": {
          "id": "24259f3d-588c-4d34-8183-8bc4b3c7f6aa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8c5958be-cf03-44a1-9c59-ec092927b7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771bcc8d-ee77-47bd-b6ce-a190b5d1c1e8",
        "cursor": {
          "ref": "ab283681-9413-4e86-9b5e-b517860f3330",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e6119015-6648-4e6e-a6c4-cc45fae2b733"
        },
        "item": {
          "id": "771bcc8d-ee77-47bd-b6ce-a190b5d1c1e8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1ef14616-5acc-4ba2-8ff2-74edc917b2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c63fbe-4247-4200-bb29-fcf6b65d89bf",
        "cursor": {
          "ref": "66060392-34d4-4acc-ad21-138857b851e9",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e903b0fe-6289-448f-857d-5be2eeabaf44"
        },
        "item": {
          "id": "82c63fbe-4247-4200-bb29-fcf6b65d89bf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9e437c41-4e6f-4801-ba28-2a8ce035f06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98299c33-6322-46fa-aee7-e3925dc0ad20",
        "cursor": {
          "ref": "764bf221-bc3f-4bea-a491-7291b8a5b441",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c1d27e87-4b3f-44e9-9681-3b18d6aba8b5"
        },
        "item": {
          "id": "98299c33-6322-46fa-aee7-e3925dc0ad20",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "75c8af7e-9fd5-4bb3-9be3-115a5bb0820d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99c4cf2-f176-4d25-aad4-38dc7f805409",
        "cursor": {
          "ref": "11f65186-bd77-4766-8333-27b15f30cf76",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "57e29b94-5edb-413e-aac7-1ae3e830b6be"
        },
        "item": {
          "id": "c99c4cf2-f176-4d25-aad4-38dc7f805409",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9422ca07-f5b0-4e13-986b-b820fc32d692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1badaed6-6ec6-4175-9af9-edfba968afd0",
        "cursor": {
          "ref": "16518d74-317c-4a07-b2d2-d3a3504d4249",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a1ff63f6-a583-4f97-9dbe-dff75f7982df"
        },
        "item": {
          "id": "1badaed6-6ec6-4175-9af9-edfba968afd0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5fcee958-a28d-491d-ad59-9b115d9ac6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3a59ce-0419-4150-92a1-5024c80023c1",
        "cursor": {
          "ref": "22022fae-8a67-47ca-9e6c-80a9b6fdad7a",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b9e33764-01b1-4828-851c-fa96d822bba0"
        },
        "item": {
          "id": "7f3a59ce-0419-4150-92a1-5024c80023c1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "068aab2c-824d-4ead-b4b8-655379ff5f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1532f76-80aa-4dbd-8394-b7877b193e44",
        "cursor": {
          "ref": "c328c8d1-8ecd-4792-9519-158715d68f33",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1c4b6e88-edab-4622-bdb2-946a75af9715"
        },
        "item": {
          "id": "d1532f76-80aa-4dbd-8394-b7877b193e44",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f7cd6871-f119-47f5-ae5f-c0d344bf2b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c658817b-4a51-4ce1-84e5-30244eabd33e",
        "cursor": {
          "ref": "af8acdb2-369b-4d0e-9209-8ffb5899c251",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7402e40e-7463-4255-a19d-26f870e2d227"
        },
        "item": {
          "id": "c658817b-4a51-4ce1-84e5-30244eabd33e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "48d19800-76c5-4b59-9bae-b67c35154ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4688497d-663d-4e22-83ce-63e4ff357d48",
        "cursor": {
          "ref": "b9b451b8-764d-4ac3-92f4-994cafdbf663",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ebedff40-b6b4-45d5-a945-8ffc9caea7bd"
        },
        "item": {
          "id": "4688497d-663d-4e22-83ce-63e4ff357d48",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "681ea987-0f9b-42b2-bc43-abd091be7e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ede820-7107-438e-a9f3-1103bfec8b6e",
        "cursor": {
          "ref": "d02c4175-03d2-43c0-9db2-ea0889b6638f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d49d0eb7-fb4e-446d-a322-faa9f27b21e6"
        },
        "item": {
          "id": "b5ede820-7107-438e-a9f3-1103bfec8b6e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "66f0c152-7f23-4477-9546-664f6732d82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c3ba3f-6039-464f-ae62-ec41b030ab83",
        "cursor": {
          "ref": "a43877e2-6e21-4c0a-9046-c588cd92ee8c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8b9ad00b-5a0c-4ec5-9211-0c6ec197de5c"
        },
        "item": {
          "id": "22c3ba3f-6039-464f-ae62-ec41b030ab83",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1da635c0-9219-4fd3-8893-04506b357a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da5ae5c-ba28-4b4d-b89c-6b0d5c679997",
        "cursor": {
          "ref": "687b52eb-6a2f-44af-95ec-308025d6b1d4",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4c09d9ab-9116-4eba-b98a-950fbafa3ec2"
        },
        "item": {
          "id": "8da5ae5c-ba28-4b4d-b89c-6b0d5c679997",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "039083ee-f565-4f46-ac76-1b6c7468edda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e4a055-c053-467b-9d67-5586343d676e",
        "cursor": {
          "ref": "b623908e-6eb1-42cc-9cb2-322643bc8efe",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "37ebd722-b47e-45d2-9339-2679b21f13a4"
        },
        "item": {
          "id": "76e4a055-c053-467b-9d67-5586343d676e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "be9cc65a-b4bb-41c3-bad0-6e2fc9cae3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821be499-b3a2-4805-b473-e9d7989d3954",
        "cursor": {
          "ref": "b6a8a012-d6af-4cfa-9985-998f0aa0348f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8bff0eca-afeb-4896-8641-6db111479e11"
        },
        "item": {
          "id": "821be499-b3a2-4805-b473-e9d7989d3954",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "954d3966-3105-4790-a60e-a6f074694cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b93738-ae58-4247-a74f-a2c4b51987c4",
        "cursor": {
          "ref": "4f833f3a-ad6a-4862-9280-bbe4a5cd8abc",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b3a7e4e6-167c-4fa5-bef1-8c06a28f3d92"
        },
        "item": {
          "id": "80b93738-ae58-4247-a74f-a2c4b51987c4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "aa2ee88a-9838-46f7-be63-b5a180fe813d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213a32d9-d0c9-48cd-843e-18a64a7dfa53",
        "cursor": {
          "ref": "278a3816-2c00-4787-95c2-6618c4ff9468",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "de7a9f03-ad27-4516-87f0-7c5ef634de9c"
        },
        "item": {
          "id": "213a32d9-d0c9-48cd-843e-18a64a7dfa53",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "66e0b1bd-0d73-424b-a831-128e52f56c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220e2ae5-c996-4967-ac99-3b69dde5c54f",
        "cursor": {
          "ref": "5d62776f-361d-43d8-8e48-e6eb27563653",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dc5561a8-ff9c-4b17-8009-bed9758b2f96"
        },
        "item": {
          "id": "220e2ae5-c996-4967-ac99-3b69dde5c54f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6752e595-672a-4a4a-bbd9-5fa51cca4e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90d1e21-81bf-44ad-bcde-67b63fabd3db",
        "cursor": {
          "ref": "5ef09688-4855-4b14-94f4-d59b57bb0cc7",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "976cc1be-b57f-41f3-983c-4689c380b66e"
        },
        "item": {
          "id": "f90d1e21-81bf-44ad-bcde-67b63fabd3db",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e456d07a-2f1c-4ecc-8592-9a9cbd457889",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fed95c-0996-42ef-a0c3-df0cd076dfa6",
        "cursor": {
          "ref": "6e70be91-be44-4146-bee3-c38ce77c0fee",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e6604375-4623-4d08-9402-6031e82f5db3"
        },
        "item": {
          "id": "92fed95c-0996-42ef-a0c3-df0cd076dfa6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c9282c6a-5249-4ebc-a875-31ae25f162b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31166467-014d-43ac-a118-afde0d242095",
        "cursor": {
          "ref": "622606be-dd7e-4d0e-a719-d20e9125dece",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e15c4002-bb55-4e07-bafb-fdae848aef47"
        },
        "item": {
          "id": "31166467-014d-43ac-a118-afde0d242095",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "03fcdc03-526c-422c-8042-3df1c99ae64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1736b5-2a94-4890-a399-f85336280c2e",
        "cursor": {
          "ref": "fe6e6195-f008-4604-bb3f-3f2f63da3fdf",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b194aa43-8b09-45bf-9bad-e8523ecd2ed0"
        },
        "item": {
          "id": "3b1736b5-2a94-4890-a399-f85336280c2e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7ad2d828-fa16-4a6f-b980-7ef3d283f5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfdf0e8-497b-4049-b8ab-8ed004a7a85e",
        "cursor": {
          "ref": "453cb80f-f61e-4e19-9ec5-de799472719b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a40d5210-58d8-4a6a-b315-098218b7adb9"
        },
        "item": {
          "id": "2cfdf0e8-497b-4049-b8ab-8ed004a7a85e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4566a4cb-e3ad-44f8-899b-9206d299787d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99157d7-f484-481e-a682-06a4ad2f290f",
        "cursor": {
          "ref": "3dd20039-044d-4713-a657-dfbe87b2980a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9306cad7-8894-4b77-bb2a-561244306262"
        },
        "item": {
          "id": "d99157d7-f484-481e-a682-06a4ad2f290f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9c0c0405-b663-4edc-abe7-f7e630afaa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c30e70-5bdc-4a17-8dff-9a4e63fb6d21",
        "cursor": {
          "ref": "8b42be1c-1c9c-4cd8-a463-35886fc0cd74",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c744fe12-bd0c-4f02-a2f9-6aa47b2b7d9c"
        },
        "item": {
          "id": "43c30e70-5bdc-4a17-8dff-9a4e63fb6d21",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c73bd28c-95e6-427f-bf17-17a52786f3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619cb400-e6dc-4f0c-a998-208045281191",
        "cursor": {
          "ref": "fa0977b9-223b-432d-ab63-77f6859fc03a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "889f0be0-b204-4309-ad0a-6f466757875d"
        },
        "item": {
          "id": "619cb400-e6dc-4f0c-a998-208045281191",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a2a0ae07-449d-43a2-8ab7-7dd88a853f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f168b1c-8a89-4672-91f2-c7badbff8a40",
        "cursor": {
          "ref": "0f7fcfba-b81a-4a02-93a8-4724a720f2fa",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "37f962ac-e968-434e-9772-e5ce1e7faddd"
        },
        "item": {
          "id": "1f168b1c-8a89-4672-91f2-c7badbff8a40",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fe2ff48b-c5fa-4436-b7db-cd7aec2e5fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68b76da-c2cd-4ba1-abe6-d7efda0505fe",
        "cursor": {
          "ref": "ba0e4d9b-fe03-4884-b6e0-eb327e02ff3a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ef9d0e2d-368a-4845-98cd-c61ba4783752"
        },
        "item": {
          "id": "f68b76da-c2cd-4ba1-abe6-d7efda0505fe",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "39feb358-bfca-4d51-8f24-bec75f5497f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcbc939-9b3d-491a-8006-4740b8c74e2c",
        "cursor": {
          "ref": "3ed4ebe3-756c-4b8f-a6e1-5ebda756a4a6",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "80d240d3-56cc-43ad-8aa6-ce629ebd8afb"
        },
        "item": {
          "id": "fbcbc939-9b3d-491a-8006-4740b8c74e2c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f6ae4587-b030-4fb1-b699-3057d5b09cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d652c668-4755-43b7-90fd-29d2aaf1b773",
        "cursor": {
          "ref": "50ebdf96-da46-414f-a380-894df93b2e6d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "46b42c66-e7a0-4549-8e45-80d971394d08"
        },
        "item": {
          "id": "d652c668-4755-43b7-90fd-29d2aaf1b773",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e43a23d9-b453-4d9d-8f2e-a7b1bcf9de86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb078d7-7b54-41e0-87e1-1e8c06d1d792",
        "cursor": {
          "ref": "f683f8f3-0eb9-43d3-bb82-5b68c578dc01",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cb584ab5-3e54-48b7-8435-5d0b25f0b1ef"
        },
        "item": {
          "id": "7cb078d7-7b54-41e0-87e1-1e8c06d1d792",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "46a5cf4b-d518-45c9-9a25-cf154b64e419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11238172-20df-4e9b-bfc9-6f225bf6f626",
        "cursor": {
          "ref": "fb04dfa6-44b3-4f6e-86e7-cedb57a7e035",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9e2ed62c-c933-458c-89c3-1e32ac556f6a"
        },
        "item": {
          "id": "11238172-20df-4e9b-bfc9-6f225bf6f626",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b08aaee6-4fde-4746-ab42-6241e0b0dce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f31f010-e5ac-4489-a2c7-a0eca9c5ddb5",
        "cursor": {
          "ref": "7adb2329-8400-435c-b69a-3cf08a9e6a1a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "06a04349-a7fa-4999-b002-b5827ed044dd"
        },
        "item": {
          "id": "4f31f010-e5ac-4489-a2c7-a0eca9c5ddb5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "df42a0d8-eb65-4421-96a2-26cb02a82ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb481de1-c22b-4a88-b246-909497fd9044",
        "cursor": {
          "ref": "76070fc5-50dc-4e6c-bee4-3b842b811b07",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5880fb92-6ce9-44e9-9eb6-7f25463d5984"
        },
        "item": {
          "id": "cb481de1-c22b-4a88-b246-909497fd9044",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "aee08416-3b94-4139-83c6-2e8d33988913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a9a953-ab3c-46f2-ab3e-71b0c26dd2db",
        "cursor": {
          "ref": "efce6c3b-a3cc-45c2-ba6a-356cf9a2002a",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8a0e0d8b-101a-4aec-94a1-8937b15c5ca0"
        },
        "item": {
          "id": "10a9a953-ab3c-46f2-ab3e-71b0c26dd2db",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b96eaa9f-fcc5-44f8-bd8a-2ba527b2b75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bc6295-6948-4cb2-ad6a-21d1130c0ce7",
        "cursor": {
          "ref": "45fea627-ffa5-44ee-9b95-f2a28eb15db4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "96ca429a-fd5e-4934-a7d3-dd71b15bb5e7"
        },
        "item": {
          "id": "d9bc6295-6948-4cb2-ad6a-21d1130c0ce7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fb5269c8-1c6b-49b4-8612-197d10e33786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7233a4ab-d1b6-4acf-ab85-89be2f000750",
        "cursor": {
          "ref": "2fb95ebb-0804-47f0-911e-c86a5134ea32",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2892bf71-02a3-44f9-96c7-c3e4ee9659f1"
        },
        "item": {
          "id": "7233a4ab-d1b6-4acf-ab85-89be2f000750",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dc77b9f3-5d7e-4665-8dd5-2c291adfd9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02f8411-3091-48cd-af06-7665728633a1",
        "cursor": {
          "ref": "4a8abd8d-e104-4a8b-91a0-aa36c408d28f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f250de53-07de-486b-8eee-16769d74f12a"
        },
        "item": {
          "id": "a02f8411-3091-48cd-af06-7665728633a1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5ff2fed3-5eb9-46ff-9166-f7d7361bd4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13427137-81bf-4fcf-92d9-6a17b6857c88",
        "cursor": {
          "ref": "c2b5d49a-1fee-4ed0-9d3e-323639030517",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "74bd302f-2e00-4880-81e7-93ada073ca9b"
        },
        "item": {
          "id": "13427137-81bf-4fcf-92d9-6a17b6857c88",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "897757ca-f62a-4788-aea3-79f9e6739ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3b6433-a8d4-4200-bfe9-3686657fbd93",
        "cursor": {
          "ref": "ec74ed9b-5d99-4802-96ea-faa39bdfff80",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9621f31d-98bf-4e10-9815-4abea39f1d8a"
        },
        "item": {
          "id": "1e3b6433-a8d4-4200-bfe9-3686657fbd93",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b5a1593e-bd91-4395-9c6b-2b4cc58a5a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8e5bf1-6641-4b63-926b-72516e01a499",
        "cursor": {
          "ref": "ee022d1e-9c9d-42c8-9576-3813b27cdd14",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cca191b9-a5db-48b0-be17-7c8e4d19418f"
        },
        "item": {
          "id": "6d8e5bf1-6641-4b63-926b-72516e01a499",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "eec27062-6f41-414a-bad7-8d638c41853e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d6c1a3-33f1-475b-80d3-a87a93e9a0b2",
        "cursor": {
          "ref": "1f23d6a3-9602-47fe-954f-3b3f22a53521",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "33707a48-4ed1-47d9-89e8-0bd43f48652d"
        },
        "item": {
          "id": "f1d6c1a3-33f1-475b-80d3-a87a93e9a0b2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f6544ac6-ebec-4167-b09b-a0a417dc9000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3220ba56-ef87-43a9-a5d9-ab4151e2d4fd",
        "cursor": {
          "ref": "a3a676b0-f173-43a6-a6be-510530d695f2",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d85ee7e8-8068-4d51-958a-ed1633d844c9"
        },
        "item": {
          "id": "3220ba56-ef87-43a9-a5d9-ab4151e2d4fd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3057a7e0-74ec-47d5-bfba-500d1417c67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244653c9-dbfb-47e7-a42e-4161bfa4b64f",
        "cursor": {
          "ref": "c4ed7f71-9bc8-4b86-a8d8-c24f08b290d6",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d2fe76d6-6dc6-4d0b-bfaf-efc6e2db1f07"
        },
        "item": {
          "id": "244653c9-dbfb-47e7-a42e-4161bfa4b64f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "58220484-e2ae-4c08-897c-fe5f079d8cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28c2087-70b4-426d-814b-e5dec4e49b3c",
        "cursor": {
          "ref": "8e2a3024-88a7-4f7f-bed9-4715d3bad237",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "942aa2dc-bf57-4d17-bcd8-fdef73cb3eec"
        },
        "item": {
          "id": "b28c2087-70b4-426d-814b-e5dec4e49b3c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d593ff13-a64e-43bd-b359-685ce77d9d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e6e953-649c-4e02-bf39-1daf3aff41eb",
        "cursor": {
          "ref": "f1498aaa-2034-4dbb-a271-dbb2be1f31dc",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8ec29984-b8ca-4293-827b-308fbf3c7e3b"
        },
        "item": {
          "id": "29e6e953-649c-4e02-bf39-1daf3aff41eb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e411597a-067c-4be1-96dc-99b49e83264a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d304d5cd-feb6-4453-9d6a-66d27bcdb1c2",
        "cursor": {
          "ref": "580bee37-92da-45fa-ac74-c376fad11d4d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4a1ecc59-3fac-4764-aced-1fd9ad9f9e6e"
        },
        "item": {
          "id": "d304d5cd-feb6-4453-9d6a-66d27bcdb1c2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "45c2385c-5b34-45e4-a9c3-b06fa8a7dd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578b29c1-e807-4d8c-9fa7-ec58f82de830",
        "cursor": {
          "ref": "09ee371d-4aa7-494c-9171-bf5d497459ad",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cbe6c6f8-89b6-4856-8cac-dcc47f9fa2a8"
        },
        "item": {
          "id": "578b29c1-e807-4d8c-9fa7-ec58f82de830",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "405dee88-5033-4f8b-95d5-a669ac618265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd424d6-2fa1-4429-a4c4-9cd0e98d9cac",
        "cursor": {
          "ref": "f955d1f8-9100-4c3a-b9f9-acf00f01e4fe",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "12ac7370-ec7d-4c14-a7ad-51f82d9b7b86"
        },
        "item": {
          "id": "afd424d6-2fa1-4429-a4c4-9cd0e98d9cac",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7422f99e-53ff-46b8-ab08-72f2575f6c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0550c80-cca5-4e71-955e-2c0c1767e21d",
        "cursor": {
          "ref": "a985af00-b519-42cd-93cf-4eb1aa7ae64f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fc1c5f48-c207-4ff2-8491-359ebc9f95d6"
        },
        "item": {
          "id": "c0550c80-cca5-4e71-955e-2c0c1767e21d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "acc7fd4c-4338-4aaf-a7ca-dfa497bbe3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b14b7d3-57da-4a3e-a4f9-922360e48cc5",
        "cursor": {
          "ref": "332ee2f4-3f43-408d-8af4-d53f40a67917",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c64aad28-d3e2-4f3a-b638-676a32a15dcf"
        },
        "item": {
          "id": "1b14b7d3-57da-4a3e-a4f9-922360e48cc5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e6f9fbd1-99f6-4fa9-bd89-a1d7b515813c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d135d07-d0d9-40d9-8fa4-8c90c6fd508a",
        "cursor": {
          "ref": "2b5fdbc0-685c-4554-9eae-6dd76c42c55c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "176df260-96c6-4f37-87a9-6c92d4ef7bed"
        },
        "item": {
          "id": "1d135d07-d0d9-40d9-8fa4-8c90c6fd508a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "077cc8ce-8866-4db7-b4cc-77daf4bad9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb84c1fa-a6f0-464e-a79c-3efeb2f5229b",
        "cursor": {
          "ref": "6e728d33-7db3-4be4-9776-501f53d25a65",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f9401db8-d41e-4b5b-8d2a-3f0562aa024f"
        },
        "item": {
          "id": "bb84c1fa-a6f0-464e-a79c-3efeb2f5229b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7264bc46-8ede-4f7b-843b-146628b0caa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2906dcc5-7b8f-4b26-b6fa-e3077f82820c",
        "cursor": {
          "ref": "48816293-db5e-423a-af54-590a6c4b4fe2",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a38dac1f-3415-4457-a301-c8a04b8828a2"
        },
        "item": {
          "id": "2906dcc5-7b8f-4b26-b6fa-e3077f82820c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "adc8a7eb-d1e8-40cc-91fe-c794d5e526ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1856bb10-dacf-4f56-b380-5abea214d4e7",
        "cursor": {
          "ref": "a106a629-ddda-42c0-aa6a-29bd2a51a5a4",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "48ecbd4b-b986-46a1-818b-7f320ddb036f"
        },
        "item": {
          "id": "1856bb10-dacf-4f56-b380-5abea214d4e7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8fcc980a-7919-4c65-a666-754f2a5f68e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce4d7fb-23fe-4d04-ac86-d17bf8a6b7f5",
        "cursor": {
          "ref": "77fbf802-2900-47ac-a939-b410f9431d9a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "112a74fc-d524-46a1-8837-27d001e183a4"
        },
        "item": {
          "id": "8ce4d7fb-23fe-4d04-ac86-d17bf8a6b7f5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ccd1de5d-b7a6-411d-9789-47b463c3bcef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c159dc-e4b6-45a7-a6a7-3828cab6760f",
        "cursor": {
          "ref": "c85d977d-037c-4278-ac73-fd8951dd6a62",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "da5692a2-931d-40b0-b8ef-c2210fba1f05"
        },
        "item": {
          "id": "31c159dc-e4b6-45a7-a6a7-3828cab6760f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3052026b-603b-4f76-b29b-411d479e3da1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af973ac-743d-4e12-b7b1-836f3efec234",
        "cursor": {
          "ref": "292db702-9873-40bc-b560-c8150d9f7940",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7aa7b993-e36d-48a7-8c17-6e3c6e737782"
        },
        "item": {
          "id": "3af973ac-743d-4e12-b7b1-836f3efec234",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "37ddda14-9a66-4c19-9efa-9a800de0c439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175ee7f6-e8a4-4044-b187-2ead8361fb51",
        "cursor": {
          "ref": "8fcd283f-bb89-4163-813b-aab24b8059d6",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "15489604-d07d-4371-81db-8e496ceaf4d4"
        },
        "item": {
          "id": "175ee7f6-e8a4-4044-b187-2ead8361fb51",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "046c4895-21fb-421b-8fd2-6b108a8b6600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4dc0b9-bc82-4271-83b8-cc451a2e31da",
        "cursor": {
          "ref": "51adf097-210f-4104-9670-c17eaf9443b3",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "dc4f4500-40de-4249-a004-aa12c35a1754"
        },
        "item": {
          "id": "0e4dc0b9-bc82-4271-83b8-cc451a2e31da",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "221ca47d-969a-424a-9e81-710483f90bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075deffd-6a9f-475a-a42f-c88d0efc3719",
        "cursor": {
          "ref": "1dbaeeda-a2c5-4ae9-b452-745ba2b9f2e2",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "47732bf4-002a-45f2-bedd-9e3a646defb4"
        },
        "item": {
          "id": "075deffd-6a9f-475a-a42f-c88d0efc3719",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c7bedbe9-434e-419b-bd55-4312e7fa3793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b861d0e4-6226-4082-8f4d-0710466b8537",
        "cursor": {
          "ref": "0cf7d8d5-01da-4541-8a3e-132500c59ce6",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "61a45d37-c579-4592-a033-b6d287879e87"
        },
        "item": {
          "id": "b861d0e4-6226-4082-8f4d-0710466b8537",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6208495f-4c7b-48f5-928d-f5cc384d81e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dbfd7c-9a39-48dd-84fa-56105cf0837d",
        "cursor": {
          "ref": "ba88cda5-27b6-4104-889e-84e7d524b6d7",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "24a02fd8-bac7-4196-b6e2-2d554671135d"
        },
        "item": {
          "id": "00dbfd7c-9a39-48dd-84fa-56105cf0837d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "90570a25-4ab6-4a7e-aba0-520dca0f2bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4510c17-795a-4549-bcb3-22e105ba9c55",
        "cursor": {
          "ref": "c0b5464a-d781-4e09-8bda-029075605e15",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c1f813e1-f2d0-4644-a926-1096c09609b7"
        },
        "item": {
          "id": "a4510c17-795a-4549-bcb3-22e105ba9c55",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d123145d-9be8-450d-8746-8da48f430ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a05a1c-7ffd-4b72-a28e-a0475fd88bf8",
        "cursor": {
          "ref": "440148a8-4f6d-401b-93b4-d7c6585b311e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "86274eec-ea95-46de-8b07-c9f5f546f349"
        },
        "item": {
          "id": "d4a05a1c-7ffd-4b72-a28e-a0475fd88bf8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "67089615-785d-471b-bd8b-8231a5cb4f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d869162-3e98-4098-8469-88cb690e3f85",
        "cursor": {
          "ref": "2e3212a5-7eb5-4e63-ac9d-61b07f1a7706",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fe32658c-15c7-4ddf-92d3-f7ec186e7ad8"
        },
        "item": {
          "id": "5d869162-3e98-4098-8469-88cb690e3f85",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e7de8862-e3c3-4901-b24f-5091a74f2dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e7763c-9d52-459f-bfc9-632e46b3a948",
        "cursor": {
          "ref": "6aaaea50-ed81-4e12-a26d-28e798af3362",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "af5b123e-aedc-4d69-936b-13f13654c1ac"
        },
        "item": {
          "id": "09e7763c-9d52-459f-bfc9-632e46b3a948",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fbb4bf72-e69f-44c5-8a23-ccff5109bae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d9a777-43d1-406d-bd49-b0df5724380e",
        "cursor": {
          "ref": "eaa4499a-634e-4e0d-bd86-1f621abc90c5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e451e1f8-cbed-4c52-9ba6-4411904be768"
        },
        "item": {
          "id": "03d9a777-43d1-406d-bd49-b0df5724380e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9d87c699-6762-4092-b422-7e99e0dcec4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8d652d-6550-4322-b783-a9431c7074d8",
        "cursor": {
          "ref": "1363ec32-facb-4c7c-b31e-44a80cf85598",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a297a03b-3cee-462b-b4a3-c60609c9c20c"
        },
        "item": {
          "id": "ca8d652d-6550-4322-b783-a9431c7074d8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "46002801-fbc9-4a55-8117-6336399542b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46d3879-ed56-4535-af32-d28726b1da0a",
        "cursor": {
          "ref": "42ae6e3b-dddd-4258-b474-f62688252e14",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7c79dd40-5cf2-4efd-a5c0-8ef5bf29e04c"
        },
        "item": {
          "id": "e46d3879-ed56-4535-af32-d28726b1da0a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "002ccfad-049c-4bc1-aba4-ab14a80fdb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dc87a4-2d0c-44df-92ee-7336064359b7",
        "cursor": {
          "ref": "68810e56-b03e-4227-9d1c-7452faee67fe",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c6800899-7f4c-4965-aaa2-4cfa9181f33f"
        },
        "item": {
          "id": "33dc87a4-2d0c-44df-92ee-7336064359b7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5fc2da25-b886-410a-a4d3-1d3367118a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5131045-ee54-41e0-b354-b46beb3653fd",
        "cursor": {
          "ref": "ca6b6c09-e3de-456f-9356-7679f22e21d9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8e4f18ce-eb0c-49f0-9db1-792a104d903c"
        },
        "item": {
          "id": "a5131045-ee54-41e0-b354-b46beb3653fd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a3b8ea32-8daa-4601-a070-dadb814fd1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe5539d-708f-4edd-a3b7-bceb3519b1a0",
        "cursor": {
          "ref": "8362e300-3e3b-4868-bc87-226fe98eccc2",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "58d70980-0f00-46ea-b304-3ce791926869"
        },
        "item": {
          "id": "dbe5539d-708f-4edd-a3b7-bceb3519b1a0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "680e9463-aa73-4772-8645-b0f028de8f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8f5c71-30ad-403a-a257-fb78abe12700",
        "cursor": {
          "ref": "ea360938-d425-4535-9d0a-4b41a0d8e0cb",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "30135838-ab77-4ccc-8bb3-9476c310a846"
        },
        "item": {
          "id": "bf8f5c71-30ad-403a-a257-fb78abe12700",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "741ed93f-ee84-4c18-965d-125c7dcbc886",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "02e3b3f6-7507-475d-9e7c-bdfc54db2365",
        "cursor": {
          "ref": "d922d5e4-e56b-453b-89d4-5bcab40e8810",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4e65c089-40da-4841-9d11-c1e94085c9f9"
        },
        "item": {
          "id": "02e3b3f6-7507-475d-9e7c-bdfc54db2365",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dc66e945-020c-4d18-8ea7-51df0efa7dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1996f50-543b-48ec-8558-47cb667e072d",
        "cursor": {
          "ref": "c7b1ebb0-256b-40ce-b387-ba248dab8952",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "72733fba-d131-4edf-a2d0-9148434fd4db"
        },
        "item": {
          "id": "d1996f50-543b-48ec-8558-47cb667e072d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "70cd2fe6-483e-48af-a874-cb0882eb4d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f52f36-926e-4e61-9bbd-bad5c9f8e968",
        "cursor": {
          "ref": "0b8900d6-d1e9-4295-a0fc-fa21c21b9521",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "005b6af6-24e0-4f3c-b43f-4a782e5a04a3"
        },
        "item": {
          "id": "72f52f36-926e-4e61-9bbd-bad5c9f8e968",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1f08dc57-beff-4e58-9a86-bdb23571e9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a07747d-1555-4f8c-b3d4-d5cfded8b9da",
        "cursor": {
          "ref": "c7f2299b-5a7b-4213-b73c-f3b3aee654f6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "42157638-1cd0-4612-80b8-52c6ee031f0a"
        },
        "item": {
          "id": "8a07747d-1555-4f8c-b3d4-d5cfded8b9da",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c753ebec-8a43-4271-a455-8cd93417be02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca157a56-34fc-442d-909f-7fd0434488e7",
        "cursor": {
          "ref": "61cc36c7-830c-4e4a-80aa-f3d0fd3fb38d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5bb7bb50-8c5e-43f6-84b8-280c55620438"
        },
        "item": {
          "id": "ca157a56-34fc-442d-909f-7fd0434488e7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3ab17c4f-7fc1-4d02-9481-3dba107eb0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562f025d-aa30-48cb-8444-b231c4c5f40a",
        "cursor": {
          "ref": "ff3baf7e-3120-4e4d-a798-934336027544",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7c09a32a-be60-405b-99bd-0e2c8914ae8f"
        },
        "item": {
          "id": "562f025d-aa30-48cb-8444-b231c4c5f40a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3d73911d-4730-4ffc-9c38-e2dad5330d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b40572-387b-46b2-b8b0-c252ef68144a",
        "cursor": {
          "ref": "1115b0bf-cb38-4cbc-bdb4-c2bba1df57a6",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "60664017-a2f2-40f8-90d6-5c2e92435f78"
        },
        "item": {
          "id": "e4b40572-387b-46b2-b8b0-c252ef68144a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9ad30b99-d064-4c68-9b2d-c079c43ca1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d00f51b-2857-400a-bf1b-f1a12b141489",
        "cursor": {
          "ref": "40fc3813-21fa-4737-a538-f2ccbfd3f010",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8970cd5b-b50c-4e76-92a4-d1491d211198"
        },
        "item": {
          "id": "8d00f51b-2857-400a-bf1b-f1a12b141489",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "80c77e1b-0bab-4298-8cbc-c45d7c0ca4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7579f24-19f7-4a07-84f6-722fa1cb0277",
        "cursor": {
          "ref": "6257822e-c11d-4478-ba16-0c57bf2543a0",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1fc4630b-d74c-40b4-972f-a1e8327fd617"
        },
        "item": {
          "id": "b7579f24-19f7-4a07-84f6-722fa1cb0277",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f5974265-2f9c-46a9-acf7-fcda62a5129a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b33508-6ffc-4e9d-9208-49dbd2cf90d3",
        "cursor": {
          "ref": "f0deb970-8350-44b9-8f7d-6b688fd3da8a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1c02ac6a-1243-4b64-88fd-91c2fd1be697"
        },
        "item": {
          "id": "67b33508-6ffc-4e9d-9208-49dbd2cf90d3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2958f584-e02a-4edb-8da8-ac8f1c4f5fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835ecf90-bcba-4663-8df3-0d9c3131ccd1",
        "cursor": {
          "ref": "95369b47-586c-4496-ad2e-25da2e642790",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "479b523a-11ec-4199-b118-1cc474566fd5"
        },
        "item": {
          "id": "835ecf90-bcba-4663-8df3-0d9c3131ccd1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3e836c51-96c3-4d31-9897-14aecb369852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d20ec9-ee05-425a-aac9-63c375389c87",
        "cursor": {
          "ref": "b497ca26-4162-4579-81f0-0604e397981c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "056ca443-19c0-4b47-8c1f-20698d1934df"
        },
        "item": {
          "id": "b6d20ec9-ee05-425a-aac9-63c375389c87",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "666eab4d-2fc0-47ad-a237-cab7a9c0a8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1541c1-c3d1-43c9-b7bf-5f09c64381d5",
        "cursor": {
          "ref": "74bcb6af-4487-48c9-8cac-fdf29adf5020",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fe890491-676b-427c-8132-a2fbd63a3191"
        },
        "item": {
          "id": "de1541c1-c3d1-43c9-b7bf-5f09c64381d5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0bba10b3-2417-4aea-9e8a-e4ee321f2460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e5f0b4-867d-4011-bf49-f1c2de0a2c2f",
        "cursor": {
          "ref": "e0bffc35-b794-42f2-a72d-02f7761d4438",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7a97a7b6-2eab-4745-a950-f7abab924295"
        },
        "item": {
          "id": "62e5f0b4-867d-4011-bf49-f1c2de0a2c2f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "14df24f6-b61c-4036-ab41-74111fd95d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c49f7fd-b241-4471-b997-220655a7313b",
        "cursor": {
          "ref": "8303cfb6-d245-4058-981c-dd9101f29b00",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "71b904dc-1796-4a6a-813a-69ac2e3a0262"
        },
        "item": {
          "id": "8c49f7fd-b241-4471-b997-220655a7313b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0d060912-ade2-487e-bdde-9ac37e72e598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e60836-1ae1-48b5-86c7-02e03e32ea8a",
        "cursor": {
          "ref": "c3b6d9aa-9b2f-499d-ab06-567def605755",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9fe45559-4f23-4954-9cb9-b60e00578303"
        },
        "item": {
          "id": "88e60836-1ae1-48b5-86c7-02e03e32ea8a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c1554c25-7881-4677-8c9a-645991f4924d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c7c52f-f692-4198-bfa8-f8abbe5bf5b8",
        "cursor": {
          "ref": "e12cf1ec-95a4-41a6-8884-695edb09df18",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bf5a5c02-f0d6-4b7e-8164-9410987a8958"
        },
        "item": {
          "id": "a5c7c52f-f692-4198-bfa8-f8abbe5bf5b8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e04aa834-b527-4c1e-8b32-c73e14ceb980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7714719-e1b6-41d3-861c-25cc06505996",
        "cursor": {
          "ref": "28695235-6da0-4129-8c01-7f3a0c4242ba",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "43451df9-cb90-4c48-8ed2-501fa0e0609a"
        },
        "item": {
          "id": "d7714719-e1b6-41d3-861c-25cc06505996",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f63286d0-2779-44e5-87be-653255ab80cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cce9c5e-71a1-4134-99e1-dab443cfacdd",
        "cursor": {
          "ref": "fb44d797-6c16-4da4-aa4f-3e24ca1b42ac",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f7ade2bf-24e2-4e38-aacf-c0be096af822"
        },
        "item": {
          "id": "6cce9c5e-71a1-4134-99e1-dab443cfacdd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dbbcbc7e-ad20-4875-abb1-e0b5da17b757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89990dd-6904-43e2-8d16-581c125ba2c7",
        "cursor": {
          "ref": "4d82f2e0-2eda-4e7a-a756-21436f0c9728",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f4fd773a-1db6-4fea-80f7-1b3a543c1691"
        },
        "item": {
          "id": "f89990dd-6904-43e2-8d16-581c125ba2c7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1971de24-75a0-4dbb-8c2c-38ed83334022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b3b23d-4a0e-46d2-8e62-86d37dc5d2c4",
        "cursor": {
          "ref": "e0481129-4a00-45cd-81f5-6ddd865ff051",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "41ac4504-ab68-42a3-a6f7-bc854ee954b3"
        },
        "item": {
          "id": "95b3b23d-4a0e-46d2-8e62-86d37dc5d2c4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c6c3ecd2-280a-4aab-806a-2eb3b9ec6967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4bbeef-356d-4e02-ae1b-ec06eb50d02a",
        "cursor": {
          "ref": "c3613d15-eb13-4181-bc6e-79988882dbbf",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "54b59a54-786f-4a84-9705-2e3014fe8e58"
        },
        "item": {
          "id": "5d4bbeef-356d-4e02-ae1b-ec06eb50d02a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d1113f1f-770b-40d9-add1-ff8f76f812b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b210485-2a17-49c5-9111-6c6ce87d4841",
        "cursor": {
          "ref": "638939d1-45d3-43a8-b362-2da192584705",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c6b3ccbe-348b-4a7c-ac9b-1aff3833268a"
        },
        "item": {
          "id": "2b210485-2a17-49c5-9111-6c6ce87d4841",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "71e003f6-58bf-4dcc-ad97-35d6c0d09ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730146db-8842-437e-947a-1d884475d7c4",
        "cursor": {
          "ref": "c30eb5a0-857c-4632-ac6b-29896d5d5ba8",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1000659e-90f9-4d00-933d-2476db49d39a"
        },
        "item": {
          "id": "730146db-8842-437e-947a-1d884475d7c4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d77a7271-648a-4f3d-8e37-e9e88862c9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b693a44-1cf7-4d0e-aa34-085853b7d679",
        "cursor": {
          "ref": "45809fc9-049e-4fff-8963-bb76e753ec0a",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f3fc6cd0-71c6-419e-bff5-bf0fbc46fe2d"
        },
        "item": {
          "id": "8b693a44-1cf7-4d0e-aa34-085853b7d679",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d2ab0525-84b0-45e5-a0b8-f0b0cacc5247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5de2f4-8f8c-4161-9e78-85b5c322260f",
        "cursor": {
          "ref": "5f1b9e2d-721d-4b7c-98e4-58dcb2f5ffec",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f3861c04-2daf-4551-b7fb-5fde5b9c58cd"
        },
        "item": {
          "id": "5f5de2f4-8f8c-4161-9e78-85b5c322260f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9507f1f6-fdae-41d1-a2d2-15ed3f86d367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33aaffc6-79fe-4e1c-a466-2d7a849a5c3a",
        "cursor": {
          "ref": "dfab49de-2bf1-4fc2-9ceb-7f291baf2691",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "713e063e-6d05-4926-967e-594f7d62f529"
        },
        "item": {
          "id": "33aaffc6-79fe-4e1c-a466-2d7a849a5c3a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b48b185a-01ac-4055-9102-ebfba539fc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b4113c-df58-4316-9c45-5db0c41e55fc",
        "cursor": {
          "ref": "dced37af-605e-42a2-806f-dc3096d35456",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0d64ac62-cddf-4b00-987d-379558fbf3c5"
        },
        "item": {
          "id": "e1b4113c-df58-4316-9c45-5db0c41e55fc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "69e6559c-e2c5-4cdd-9fe0-d70417608715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2045c6-71d0-47d0-983c-de14e058cb5c",
        "cursor": {
          "ref": "9d249bb3-8dd8-456a-be55-b9def2e5a997",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e296fad4-4724-47c6-bd03-6f2298101ae1"
        },
        "item": {
          "id": "ca2045c6-71d0-47d0-983c-de14e058cb5c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "37cabd05-350c-45da-bb14-f9c44a2befb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4a8daa-55dc-47d4-b4c8-431ec329aa7b",
        "cursor": {
          "ref": "fb78e5a3-546d-48c2-9028-9dc33a29ea6e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "726d0cb6-30a4-4f45-8cfe-b0f3d151cc2c"
        },
        "item": {
          "id": "3d4a8daa-55dc-47d4-b4c8-431ec329aa7b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "74c1468e-0031-46e1-80c4-f59685684008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3991f96e-5a68-4a47-a444-55d7639469c4",
        "cursor": {
          "ref": "e4f3cf98-72b2-446b-80d9-3334ea253fbd",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1b0a0bf9-a9af-43b5-b753-dd1c0d766186"
        },
        "item": {
          "id": "3991f96e-5a68-4a47-a444-55d7639469c4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "75b0e85e-27d4-4d2e-ad79-a72a3eccca30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd145d8-9bb3-4859-9c80-dc6384f7153b",
        "cursor": {
          "ref": "a6e67af0-85ee-4e94-b013-25425466dac0",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5a3aead7-d52a-4dd5-bd86-36c2f4eea632"
        },
        "item": {
          "id": "9cd145d8-9bb3-4859-9c80-dc6384f7153b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e95ebd3c-17a0-4679-85a8-0ce496662284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c375a51e-d567-421a-940a-89cfcba68bf8",
        "cursor": {
          "ref": "06acf8b3-0e92-43e8-bad9-a6f9ae987af9",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0552f64c-ff0c-4fbe-a2ce-1681a5328793"
        },
        "item": {
          "id": "c375a51e-d567-421a-940a-89cfcba68bf8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bfce092d-07b9-4435-b3af-3514c75f5271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0477ec27-dd1c-495f-bb4d-28bff79ec067",
        "cursor": {
          "ref": "de6578cf-e886-455a-acf9-5adddf12d2a5",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "741e815c-323b-4d01-97f3-5fdf317b4b22"
        },
        "item": {
          "id": "0477ec27-dd1c-495f-bb4d-28bff79ec067",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "93de205d-0278-4465-846b-9360ea39481c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bcdcf6-34c4-4c0e-ad33-a9aa0b364b0c",
        "cursor": {
          "ref": "fde7c736-1075-41fb-8404-67233f39d777",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0ffb6603-8df9-4ff4-be7a-206b9e221f68"
        },
        "item": {
          "id": "e5bcdcf6-34c4-4c0e-ad33-a9aa0b364b0c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bda7f6c8-fbd9-4476-be49-5570d3f4efea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d49212-2b6b-41da-bb22-91b1b0b0379e",
        "cursor": {
          "ref": "12c3896c-279b-4d7e-8997-b24d32ac5857",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6e4f8ae0-0b3b-4183-ab4d-0de4a870c317"
        },
        "item": {
          "id": "38d49212-2b6b-41da-bb22-91b1b0b0379e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6ded3540-176d-4419-8baa-1d802bb0fb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50c9a3e-609f-493c-9022-8f7c9b572e14",
        "cursor": {
          "ref": "7aadf0e2-59f1-48c0-a488-283712560dd9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b7ecab1d-872c-4525-b56d-3b48d89df8dd"
        },
        "item": {
          "id": "b50c9a3e-609f-493c-9022-8f7c9b572e14",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e0a4294a-78f5-45a6-87f0-e79e82e72c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6d0651-29fe-4c60-ad38-c4606fd82f0b",
        "cursor": {
          "ref": "1c127de7-6ef9-4aa5-9814-fdc7d576b3aa",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "001bacfd-46ed-4fdc-823b-643d5ea868cf"
        },
        "item": {
          "id": "6e6d0651-29fe-4c60-ad38-c4606fd82f0b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9d6ddb21-e216-4b0a-9d00-3e1fc983af0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0566f72-5cf7-4c5f-a904-dedf4ad42076",
        "cursor": {
          "ref": "0bb7d93f-4a89-44c2-8be6-0c9498761740",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "62b9ffc1-a04e-413e-aeb1-1c364ad79b6e"
        },
        "item": {
          "id": "e0566f72-5cf7-4c5f-a904-dedf4ad42076",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5b5c8db9-e752-4468-a2af-0175f0370538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2a99c4-aacf-4374-ae2d-fa0c41716aaa",
        "cursor": {
          "ref": "b4e4ad44-1aa1-484d-a6da-c097c472abe7",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "aa6a0be7-828e-4f63-ad36-dc41c5ee59e1"
        },
        "item": {
          "id": "7e2a99c4-aacf-4374-ae2d-fa0c41716aaa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "30ab1f09-8845-4b78-8a69-bc2e9921cf34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bdf6dc-453d-428f-931b-16c93050c1ac",
        "cursor": {
          "ref": "f6506e9d-c337-46d3-8b22-268a706d6f1d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "592c152d-8531-4035-ba35-3d60ea10409a"
        },
        "item": {
          "id": "72bdf6dc-453d-428f-931b-16c93050c1ac",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c927254e-cdab-4102-8386-8ba92a9987b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5279bcb-7a31-412f-9843-232675907302",
        "cursor": {
          "ref": "e10e9540-c9ba-4229-8b6b-16e4683f97ce",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3830f237-e806-4490-977c-51f76b63760b"
        },
        "item": {
          "id": "f5279bcb-7a31-412f-9843-232675907302",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a945e243-223e-46b5-8c4f-c843edb41d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cda125d-25d5-445a-bb81-ccb3e8438dba",
        "cursor": {
          "ref": "cd3315b1-2fa7-428c-95db-41d6ea2000ed",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4d9ef8fc-9a13-4d47-9429-18910a4f7cd5"
        },
        "item": {
          "id": "0cda125d-25d5-445a-bb81-ccb3e8438dba",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a4833b66-961f-4797-bef8-411907efee36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cbb8d1-32e6-4faf-84d5-cc40f6122050",
        "cursor": {
          "ref": "9f62279f-8e2c-4dd1-83f8-f013ed80d112",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fd3798b3-828f-41b4-ad82-914d35590b61"
        },
        "item": {
          "id": "47cbb8d1-32e6-4faf-84d5-cc40f6122050",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a28e8f01-dd45-4f7a-b475-717dc5967b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80307e46-31d7-4ccf-9fcf-d938e5a75ca0",
        "cursor": {
          "ref": "fc2906e7-015f-46f1-bd28-d61e5c26d188",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5b4f7766-0695-44fd-8808-1f9a54cc5dc4"
        },
        "item": {
          "id": "80307e46-31d7-4ccf-9fcf-d938e5a75ca0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cd97f97e-2a97-45b6-92ac-9321894cdac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c75ee7-11e8-4abf-b7ca-6faea5b2b22b",
        "cursor": {
          "ref": "d1610ee5-b217-495d-ae2f-742639830541",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "05b45135-7772-4278-832b-24f09cbc955b"
        },
        "item": {
          "id": "55c75ee7-11e8-4abf-b7ca-6faea5b2b22b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "50399d3c-9ce1-4cc9-bca3-96b09a983fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa6fbe2-8061-4da0-88e0-016f52ed5a9f",
        "cursor": {
          "ref": "4ba3da15-5905-4701-84a5-7f6c31d3d0ce",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a111051a-6c69-4286-8d03-f3be7a610d8a"
        },
        "item": {
          "id": "ffa6fbe2-8061-4da0-88e0-016f52ed5a9f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d302bb71-8f81-45da-93f9-760b4063ae52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba822fa-7f04-47a8-8eac-47da7b49b22c",
        "cursor": {
          "ref": "20e9ccbd-7f34-4fc0-858e-c70e7af5ca41",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "549b6208-7d71-4189-8a46-fd49970f92a3"
        },
        "item": {
          "id": "aba822fa-7f04-47a8-8eac-47da7b49b22c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "11885110-0795-4137-9a78-63af08db55a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf14c04-dc63-41bc-b324-54a54c752df4",
        "cursor": {
          "ref": "d760ef19-083f-4f38-a1a7-fa4310713e89",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4b5643d6-443c-4f20-9d8b-7c4f8a422f0b"
        },
        "item": {
          "id": "8cf14c04-dc63-41bc-b324-54a54c752df4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "88c2e02b-d8ec-4e3b-9a83-218fc27d9615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a6d6c3-7fbc-49b1-b0d2-ce8dbcb440b6",
        "cursor": {
          "ref": "78ac0d7c-190d-4e02-8374-a7e281188a95",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7164ae1f-d04c-45ef-a819-290ead18b88b"
        },
        "item": {
          "id": "f4a6d6c3-7fbc-49b1-b0d2-ce8dbcb440b6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1edd331e-193e-406a-aef0-0d1018128f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7d8788-e8db-40f7-92ea-a5830c1aead5",
        "cursor": {
          "ref": "3f62ad53-7a90-46e4-aaea-fc466382d8f0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0ec888de-e17a-437d-a26a-9faeb36852e5"
        },
        "item": {
          "id": "5d7d8788-e8db-40f7-92ea-a5830c1aead5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "86f83e5a-0618-48bc-931f-c8f8394e4d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20a3ef0-fa33-4ec0-b76f-7e71ea0ca521",
        "cursor": {
          "ref": "01d83a06-d4f5-457b-a83c-5df9a3d833bd",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "694e548c-f978-4c56-aaad-f9b770cd6d87"
        },
        "item": {
          "id": "b20a3ef0-fa33-4ec0-b76f-7e71ea0ca521",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "090ddb66-4827-48fa-8fc5-b12af9ca53f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7d20fe-2889-4b3b-b876-f99b8adf4674",
        "cursor": {
          "ref": "c72d9b29-4397-49a2-9cd0-8e6201c8483c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8ac684f8-49af-4cf4-bc35-c22952008629"
        },
        "item": {
          "id": "bf7d20fe-2889-4b3b-b876-f99b8adf4674",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "05018e9a-358e-43fc-9ba2-d948cd426a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924c60c9-6f99-43ae-8f32-e05e5c9683c4",
        "cursor": {
          "ref": "16b0f1f9-9b51-499c-a800-8b05f1dcd7bd",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "906f5f25-6c2e-41cf-aed6-c32505e760a5"
        },
        "item": {
          "id": "924c60c9-6f99-43ae-8f32-e05e5c9683c4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fa6b3b43-f760-40c5-8e5c-c1a91c12f7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba5367e-85c0-4929-8788-4ca7effd6eaf",
        "cursor": {
          "ref": "511a662f-2423-4a2d-91db-8c77dd635a18",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "12e7869d-df86-45fc-99df-c5a092b67451"
        },
        "item": {
          "id": "5ba5367e-85c0-4929-8788-4ca7effd6eaf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2c39dc10-01ce-4b8d-9734-67aed7c2a194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b785e448-22fd-44be-a750-008053824c4f",
        "cursor": {
          "ref": "bf3ab12c-90aa-4fb0-a942-c7d87c9eee4d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f5c39262-9553-4cc4-8755-a625614ea1f0"
        },
        "item": {
          "id": "b785e448-22fd-44be-a750-008053824c4f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7be96813-59fb-4a92-acda-9c64c335abe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea62fc08-e5de-4e75-9b16-88b64c72ffd9",
        "cursor": {
          "ref": "88ab98fd-94e1-49dc-9a4f-453598eb5f7b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "579e32d7-4745-4ed6-810c-0f3566d9fb4c"
        },
        "item": {
          "id": "ea62fc08-e5de-4e75-9b16-88b64c72ffd9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1e4fd609-5014-4377-822c-3b590fab0102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a129d1e-d179-4b5b-823d-8a3f78b5d735",
        "cursor": {
          "ref": "986f2f8d-75e1-4d05-bb34-f5fb73d8c61b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "812b2938-4749-4e9e-b41e-c648945d4612"
        },
        "item": {
          "id": "0a129d1e-d179-4b5b-823d-8a3f78b5d735",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "aca1d778-6f95-40de-8f51-91cebaec4c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8439c4-db05-4f25-83b0-b5b4a91bb442",
        "cursor": {
          "ref": "bd0dbe48-eef3-4912-b6c3-881235b8e057",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5b5e1be1-b9b1-4f1a-8b5c-042d45e8770e"
        },
        "item": {
          "id": "4a8439c4-db05-4f25-83b0-b5b4a91bb442",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a6c77084-6512-49b0-bae2-ac85f336d2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defdd51d-3f93-463f-b669-6bd5d392c608",
        "cursor": {
          "ref": "7939bb1a-a604-4909-9b1f-ac36fed538f2",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c1721d08-7cee-492d-9e07-ccc473569831"
        },
        "item": {
          "id": "defdd51d-3f93-463f-b669-6bd5d392c608",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4f1d577d-bb45-4d03-a1ca-bab3d9a69abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1037d84c-b5fd-4591-92d7-089e1c5482c9",
        "cursor": {
          "ref": "3cf12bb1-4523-4508-87bb-476c7340e3f9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "33f84d74-a280-4c2f-b812-8fb4d369cfb9"
        },
        "item": {
          "id": "1037d84c-b5fd-4591-92d7-089e1c5482c9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3501ab70-d093-4c07-8bcb-754d114dab08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b77ae2-2ef0-49a7-b963-6c8e88c3bf1e",
        "cursor": {
          "ref": "954de2b3-147b-45c5-af8f-b05f763c685c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "cd905b82-94e7-4fc7-8077-5a66522176d5"
        },
        "item": {
          "id": "60b77ae2-2ef0-49a7-b963-6c8e88c3bf1e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "48a67b3b-c38f-425d-a2dc-183ae5b90f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eb1c3d-3cc7-4ca7-bb6c-b862b39b8c35",
        "cursor": {
          "ref": "32c5ddcc-ecab-4774-b170-62c77a35618d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6f7783bd-ed0e-460f-8edb-3cdc911045da"
        },
        "item": {
          "id": "05eb1c3d-3cc7-4ca7-bb6c-b862b39b8c35",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "480602b3-2cfc-4eb4-9e8d-dcbd03cf0825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3b7ad6-3b14-4245-8860-c393c7799d3a",
        "cursor": {
          "ref": "2ee2c4d1-c9c2-43f6-866d-097bda4098c1",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c7788c51-f4ad-45fb-9eda-78fa06bdfd39"
        },
        "item": {
          "id": "0c3b7ad6-3b14-4245-8860-c393c7799d3a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "618351b0-c2e7-40f8-aafc-330b089d447a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edd4c92-f957-4434-ac7e-2f3d7f6c9bce",
        "cursor": {
          "ref": "01028c65-de1e-4001-9f6d-0cf70b8851ef",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a36e4bcd-927d-479b-9e48-2f08e4377348"
        },
        "item": {
          "id": "0edd4c92-f957-4434-ac7e-2f3d7f6c9bce",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "692bd74e-d9cb-4444-baf7-7950918866da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81f1e0f-eca8-4ff1-a605-1700350cd5d8",
        "cursor": {
          "ref": "c9f734fd-da50-48eb-b37a-237cf4bea585",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "92c3fac8-52da-4a15-8244-b4e6889089c9"
        },
        "item": {
          "id": "a81f1e0f-eca8-4ff1-a605-1700350cd5d8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cf57e81d-34c3-4651-9b2c-74c0dfe2db04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78815f85-1717-47f0-a42d-ecc5a719c67d",
        "cursor": {
          "ref": "b64b4114-fc34-4981-89c6-ee4bd659be04",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "41af24f8-3a5c-4993-94bb-215e192f824f"
        },
        "item": {
          "id": "78815f85-1717-47f0-a42d-ecc5a719c67d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0942b301-3c70-4e7b-a743-23a498a17a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd98cf4-4ef1-43af-884b-a477f995f001",
        "cursor": {
          "ref": "fae7435d-e893-47c7-bfbc-4ae328226d4d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9ad17491-5024-487e-8891-831e7b2c58e3"
        },
        "item": {
          "id": "efd98cf4-4ef1-43af-884b-a477f995f001",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7bb62327-445b-4f4c-a23d-4fe0dac3f753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a688fc-9e84-4a3b-9b59-84591bbb3ab1",
        "cursor": {
          "ref": "9337651c-d047-42d5-9abc-f5ef49689eb8",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "317c34b4-f7f8-45cd-9a97-cefca769fe9d"
        },
        "item": {
          "id": "93a688fc-9e84-4a3b-9b59-84591bbb3ab1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e09f99b1-855c-48c7-9671-6c14fb0d2d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01c23c2-0c4b-4f9a-b118-4a75e148aca2",
        "cursor": {
          "ref": "fbcbe63c-db17-4f5c-aa9f-13880c542da3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a9f0f641-6fe0-40e8-b45b-a87279395a47"
        },
        "item": {
          "id": "b01c23c2-0c4b-4f9a-b118-4a75e148aca2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3602be40-7362-4eff-8201-4cd97eb78d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58af0af9-f8d6-42ee-99c5-eed971314343",
        "cursor": {
          "ref": "ce0e9f54-402d-44df-a20b-52418d469698",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "12925c2d-5277-4716-b652-44aef487c799"
        },
        "item": {
          "id": "58af0af9-f8d6-42ee-99c5-eed971314343",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5bf006fd-4eb9-48c3-a5d8-0960c1caa3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420ba99b-84a9-42ab-8a8e-25ac6d9398da",
        "cursor": {
          "ref": "f69f4bc2-5607-4b17-a6be-1d6fc5a97833",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2ede14b1-05a7-4268-8c02-7ca64d45e29c"
        },
        "item": {
          "id": "420ba99b-84a9-42ab-8a8e-25ac6d9398da",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e80f8858-6ebe-4b6e-b7be-fa613a4bf52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d78e01d-7c6d-42b3-ac64-f991a2e9d5d5",
        "cursor": {
          "ref": "699d88dd-8c9c-43cb-8029-f616a175c413",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "30e079e5-683b-4706-ac9a-da6651a4b3eb"
        },
        "item": {
          "id": "9d78e01d-7c6d-42b3-ac64-f991a2e9d5d5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "90bd6652-680b-4b80-8c7b-84f69ee53ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67870e9-5465-43fe-86e0-20da584523b7",
        "cursor": {
          "ref": "e2a55778-1691-4835-bc30-f25825f97e31",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8610e7cf-5b64-4670-9a3b-9ca4f8fd8ae5"
        },
        "item": {
          "id": "c67870e9-5465-43fe-86e0-20da584523b7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cafd8866-c6e9-4869-bf29-96f03c828249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e94697e-e57e-41e0-ba12-45ef4c16632c",
        "cursor": {
          "ref": "cb571208-1d59-4a81-ab92-91f562793fd4",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3d3e34a3-bef6-42d2-9caa-698e42f8063c"
        },
        "item": {
          "id": "8e94697e-e57e-41e0-ba12-45ef4c16632c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "22d002d8-d46a-4ada-8d7b-5595d8d7371d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2affda-28c1-4d02-a110-1d4ac86494c5",
        "cursor": {
          "ref": "8ba66a88-cdda-471d-8243-fb42cd94880c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ca45a42f-f07f-48dc-8c8d-23bb3cbadd68"
        },
        "item": {
          "id": "9b2affda-28c1-4d02-a110-1d4ac86494c5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1140a1b7-1d61-4e81-b9a9-ecaa4756377c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30673a49-131b-4893-9acf-e1318592db88",
        "cursor": {
          "ref": "e22ba172-0d43-4ef1-8ca5-2f36dd2657d2",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1785c943-8172-4f6a-8a1d-3b38a524656e"
        },
        "item": {
          "id": "30673a49-131b-4893-9acf-e1318592db88",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a6338ed0-0c77-4e3e-a04b-c49359f3ed01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7d2b7e-98a6-4d88-a115-3f443fe827c8",
        "cursor": {
          "ref": "73e7a067-2029-4a6b-8004-8cd70ad5ebe9",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ca143a4d-ba05-4452-89b2-60b010291250"
        },
        "item": {
          "id": "ff7d2b7e-98a6-4d88-a115-3f443fe827c8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f48353be-2587-4dec-80e9-b47736c36590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcc9411-f720-4832-b7f9-d7a3bb582dd2",
        "cursor": {
          "ref": "af1c1176-b1b2-466a-a426-4b1bb672df38",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b7db5623-4f41-482d-b4e6-fbfff2dd7b94"
        },
        "item": {
          "id": "9bcc9411-f720-4832-b7f9-d7a3bb582dd2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d212d1d7-6188-4203-b5a4-807671c98069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611e3822-cc25-4f78-a478-c2c00af39819",
        "cursor": {
          "ref": "a325d335-4516-4c0c-a0e5-85dac0cd3211",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2d570904-2d7b-44fc-aeb1-bf1953135108"
        },
        "item": {
          "id": "611e3822-cc25-4f78-a478-c2c00af39819",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "634f505e-b442-4dd7-a0ad-881e6623b745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96177dc3-fc77-4695-bb47-fcd94a1a06dc",
        "cursor": {
          "ref": "026da6cc-c61b-437e-a46a-dc2fd7614872",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1489bf04-b2ed-4671-b41a-1c123b0f6b6e"
        },
        "item": {
          "id": "96177dc3-fc77-4695-bb47-fcd94a1a06dc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "724c8243-e6ae-436c-ab58-fe79bed9c2f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3750e982-2b5c-43b3-abdb-45743746c64d",
        "cursor": {
          "ref": "33fcc22e-e941-43bf-8201-f8a5a2042e5d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b1918e9d-c884-49c2-aed1-31f607e15e3b"
        },
        "item": {
          "id": "3750e982-2b5c-43b3-abdb-45743746c64d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cf624c13-a9ec-4acb-9fd9-c76c886e0ab6",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d096aff8-767f-4ed0-8116-ea789c2230d0",
        "cursor": {
          "ref": "d6204a2b-c118-486f-add3-39dea098354b",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "00ef7510-19e2-4f44-b74d-204c317ef17c"
        },
        "item": {
          "id": "d096aff8-767f-4ed0-8116-ea789c2230d0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "90e2aba4-7de7-4ab0-a4c1-f7e7dc4f95fa",
          "status": "OK",
          "code": 200,
          "responseTime": 3221,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3df58d-89ff-47ad-8397-a28328ea12dc",
        "cursor": {
          "ref": "28ad2988-51e1-4edb-bf14-3e1b13a9ed04",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "29795c8f-d5e5-4468-b06c-76d9b1f79a4c"
        },
        "item": {
          "id": "4e3df58d-89ff-47ad-8397-a28328ea12dc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1a9329c4-5d78-4e05-85bf-02b234a6cecf",
          "status": "OK",
          "code": 200,
          "responseTime": 2788,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c193d942-01b2-421d-808f-abb7b9c72fa2",
        "cursor": {
          "ref": "2b7d7750-d7b5-4833-935f-cbefaba44ff4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "620e6ab1-109a-4a56-b223-1108a0bf9faf"
        },
        "item": {
          "id": "c193d942-01b2-421d-808f-abb7b9c72fa2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b35cc62b-9e90-4fdb-ae24-b661a2001f84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c193d942-01b2-421d-808f-abb7b9c72fa2",
        "cursor": {
          "ref": "2b7d7750-d7b5-4833-935f-cbefaba44ff4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "620e6ab1-109a-4a56-b223-1108a0bf9faf"
        },
        "item": {
          "id": "c193d942-01b2-421d-808f-abb7b9c72fa2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b35cc62b-9e90-4fdb-ae24-b661a2001f84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a09ba5d-e06b-4720-b278-0186ad1058c9",
        "cursor": {
          "ref": "6da79c13-1991-48c2-b1d3-3dce35306b63",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "dd85d582-d382-477e-8a2b-aa511271bac1"
        },
        "item": {
          "id": "9a09ba5d-e06b-4720-b278-0186ad1058c9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2ef13323-2ef1-46c1-9972-f46d276ac044",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618f450b-3e85-47f9-89ce-e78b2008993d",
        "cursor": {
          "ref": "f76b4178-1e6b-4b97-a9d9-3e0e20929139",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "f999b422-06c0-49de-afa4-19f407d50ae8"
        },
        "item": {
          "id": "618f450b-3e85-47f9-89ce-e78b2008993d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8a742289-73e2-4963-b433-adbc046c1806",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}