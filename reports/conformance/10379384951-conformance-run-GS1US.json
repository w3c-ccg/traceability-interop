{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cbb157c3-ebe5-4938-87ef-6b78fda78012",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c724e135-5b88-4fbf-8fd8-476dbd740e77",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5615feaa-1204-4120-8fa3-64f7fc2e7141",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6b39a846-e4c6-4180-a8be-1d22b2b0a5b5"
                }
              }
            ]
          },
          {
            "id": "22db967a-a686-41df-af1e-5027522a3106",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6505bcd4-93d4-4042-88b2-2d6b24581978",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4ee9c705-9b1c-4513-8445-fdbe66f3a0e6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f557c593-cf21-47a3-b28e-8b09005748f7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b79c31a7-6bbe-4b6e-ac3a-d682790a5b1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4532d02e-a448-4fc6-93b5-e4f5d8696fe5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c45101f3-5935-43e7-ba9b-eef249e4ed58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ba5c0ff-fd02-4313-a460-3f6530cdd1a1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91645b5f-4ee5-44f4-9239-a0da3f9586e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1a160757-ad02-4f8e-82c2-2af79005870c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea41bd63-9c1c-4ffc-ad85-1e49df2106b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b39459f-68cf-439f-a718-0695d0533d6e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7a8c0a6-5d9e-44dc-a1c4-28b137267540",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4cf2efaf-cf2f-49c6-9f0f-7ff57a064d47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff2b5fe9-8098-4a33-bd9d-19a0b123538e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a037380d-55a6-432b-9e4d-b04ffc869971"
            }
          }
        ]
      },
      {
        "id": "43a50a9a-32d7-4351-aa5c-c05eeb827d7b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c01f44cc-a3bd-468d-a73c-0395de3d7c62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b690b7b1-722b-4cd5-855f-80b3a84a9e1d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71e70d44-0c0b-4a31-ba56-ed0fbece61b9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a042bc9-0cce-4ed9-a280-8770bbf72472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "095e29ee-5d44-4870-9bc3-deb7b77c41fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb30080c-4895-4c06-a540-58dfa5d90a97",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78532575-4f77-482a-97d4-876aff5266c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca40d514-e729-4b67-896e-021795322bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a2378b-abac-45f0-b887-937dff921ba2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13455b77-ea6e-418f-88a3-91e249f9944e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb3deb82-aecc-4fbc-b1ff-8632e060796f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d95bd24-3c69-4a27-969f-acd769b64b96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a16df6b-e2a9-4d99-8886-3be3061c6dc5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935bc2c1-29ff-40b6-8502-8bc5a2a7acfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6dff960-2782-4dca-8163-978894e249d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fd04f6-92ad-4257-95dc-d08392437aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5ae43c-e13b-47f0-83ca-14cb75dff313"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3dc19dc5-c541-4f73-98a8-be7feab71475",
            "name": "Positive Testing",
            "item": [
              {
                "id": "80e41c59-8d7c-4c9b-8f43-a32703e32da0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97d3987b-f053-499f-8e65-9b88f6d921a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "88a4d3a3-4baf-41e5-8ae3-edb7f78dedac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c26df114-07ac-4152-a698-95b060cb664a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "412e1d4e-34d6-4f5e-991e-e98787941fc7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ec39a61-52e0-46b0-baab-fb852363369c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e882f1a0-ebe1-472e-a1d2-335252a9c422"
            }
          }
        ]
      },
      {
        "id": "de7d46c9-4819-40c9-9cdc-b2f8a5993e1e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f76ec1c8-8842-42f7-804d-23fb401de1be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c8bc70c-53b1-4850-b7bc-55a817481e91",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "96fa3a12-370c-4ee8-8fbb-5e5623b5a4e9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398a7fc3-3ddb-40f0-b2ef-889c9957fdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4d3042-948d-4a9d-b7d7-72c1947d1ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ede42d3-3224-43db-9725-9fbd33b1ff53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68bbaac9-c71f-4ed4-a92d-856efcc99f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b6e8fc-ced2-40fd-8dcc-921ee1f89516",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e2ebfe-499d-4109-be76-3c744d224573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a3c1fc-e51f-451c-aea3-a8a34f83ac90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecbe10d-6885-47a7-a863-6089736d22c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "964dada9-8101-4eaa-9f8f-bdf50e3c7d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52ff4e9-5f0c-4a25-a1b0-55dd01b4a673",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0c58ca-afe6-487b-8d21-828a71e483e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5acdf9-2659-461c-9147-51d83e247292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39727dd4-75d6-49b6-a90a-6a8acbf4a757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b75d47f-a7b1-4c09-96ca-2340c64fbc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d7c094-61e8-4a61-883b-d72cb23b74b8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c45f489-9104-4c08-92ff-3dd4ab00b3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60e4b9e-90c4-4b96-b664-60df4a47eee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1156cabc-20de-4fc4-8090-189df3847774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9af7aa7b-a2c4-46bc-8379-0b49090efad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16c9cce-1ee5-44e4-9e41-ad36e3528a01",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10aeeada-69ad-4fce-b437-329a71db7816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b094b0a-e120-49d9-af2d-7cef23d89b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e43bb9-173e-49e6-8c7f-27a68628a0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3517157-9b40-46ac-9391-9e4cacb0a664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a031f726-3ff3-494d-94ca-54e8d61fae94",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762d6c6c-120f-44c9-9644-8c15dfd6d824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cf400d-00d8-45fd-894c-9e959aabcb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbe91fe-bf04-4416-84db-b3eef4fba2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "931ea46c-3792-4b97-8a44-e87a4ec09a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684cf6ea-89f2-4320-a3a1-8cb45a64077c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5870e8c7-1951-4847-b89c-5530275fed98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615a1cea-6f64-4833-b667-a4a573e4052a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f5cd4b-f8ca-44be-92e3-e25eeb6a60bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b253067-53a1-4941-a0c8-82f8128c770c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1b3239-537d-43c0-854d-b5b1eb063d9e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4b1ad6-a745-41e8-9b1d-d824c8c54e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28afad9c-8244-428a-99ff-47e153107d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1225f939-79bd-458d-99df-e32abb6826b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "673a3b60-57fc-4e10-89c6-611dfc89cc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbd9430-fb17-434b-a6e9-6d5198bdb98a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a560e9-75fb-4916-a573-5df052d17ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96360a8d-9e89-4cbc-9b52-30519f9bf82a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af049728-bf4a-45db-bda4-2830d2b0cf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3816fe77-6f2e-41e2-ab1b-c3217d4e3c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db3b953-97a2-4c30-af66-2f05743746a9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a122f562-b382-44c3-8566-bac3664c8f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defb8525-bfea-4daf-a3ff-0298134cd91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39488eaa-9ed7-457d-a447-3dacbde61137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e261b7c6-9106-439a-82e7-ec993c34b995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623b5b9f-9097-4e64-990e-9cc7fcc70b2b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0229a5-e66f-4526-9755-b3afca62d632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cd3f38-ce3f-4559-beb9-8ed72c4fc201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c400532-be1c-435b-a4a8-f10bef67bd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06ea25ae-283c-4efd-9dd3-f44a0dc0ff68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80593f7a-c609-4d42-899a-4abae9473aee",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ede217-a137-4689-818c-6aedde991afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e68273-37c1-4499-b0d8-6093061e3763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b535c1-83cc-482f-b248-081672a68b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d62076c1-16c5-43ff-bcbd-62865704b7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c3edd4-3ab9-4ffa-8449-d6739b710f65",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c59303-074b-4f14-bff5-90dd3136cb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b78cde7-0134-4ac7-9b37-03d8179b11c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd05aedb-07b8-49d0-8fe9-101e44d6de1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3f6cc27-5211-4c42-bb61-eaa9a3e5af9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f3f740-4b7d-4b78-9f48-de01da78dd86",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fe2235-43a4-48b9-90b8-b5e1e1a174f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949c03d9-ae91-4337-998d-9e28d37a6649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3871139a-0bb5-46a8-81ed-7ef388b0b121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35397623-64c3-41f5-83c2-27a4ccd5514d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f1ccbf-cc19-4eef-9d51-d0ee88068a50",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048e2d32-4c14-4381-a376-9b2771d5bb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73dc8c8e-64a1-4193-a07a-0233d08dc4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d43a36-bce7-44d4-a2df-05c74eef2ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5546376b-f5dc-4481-9774-d6509c123245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14831eb1-9988-455e-b8f9-a5759024f9a6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbc625d-2e39-442c-9b93-06c29716f080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d5f626-dbbe-4b1f-908c-a440a56b7b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07af3520-ead8-43ef-b936-c55526b83958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4229c896-2eca-4ef3-ab63-bdfb1760309c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e27636-9718-4e63-9f79-4fd802e45646",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d8081d-17b8-4719-888a-d3799c70efaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07f3ce2-d9c4-444b-ab7c-4548844ff50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e546f62-34b5-4821-8dc8-3e7247bca0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51c12509-95a1-409a-929d-2ac83b9cab65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808902f5-aa81-4399-994b-d746064d7913",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aa6646-1624-45d1-a9fd-3428ceec57c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3ab4f8-3e25-4c19-86fb-7275e818fcda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35af309-b94a-4f39-9eb2-f7bfade7f4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfa9ad7-94e5-405a-b1f4-10c79c0bfac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08539b36-d61e-4aa8-9719-797bb9625b6e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ec3f33-b048-4bc0-8ede-f9744a8b177f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a93eb0-1710-4db6-b058-0ea3b040f9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0712dc33-1286-4b8d-acf7-7d5bbeada64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f65376-0056-454f-99ab-8855c1c6697a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ff962a-a93b-40e1-b8e9-5deb656a7faf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6638405-c300-4479-96b0-f052b806a63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0371d7d-13f1-40dd-8d4d-a8fb1ce9f757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c224c83-e355-4f6d-b05e-d1bb2183ce95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd7fdf1-5e34-4e7a-b791-4e0880c070dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16859803-3ac9-404e-9e1c-ca4042dbb9a5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a4795c-690f-48e7-bb32-f01bc1714c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4253ba-5bd1-46e2-908d-655f77828ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c66f373-6abd-4c92-809f-6ce1f13291af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15e500d2-343f-4adc-83d5-9b9d387a7e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac514b07-43ae-4bc8-82e6-e35dcdd608dc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56149cf3-8482-46c3-a769-8ed9412c2d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb7f2c7-0b71-4000-8567-f7ac5bb5026c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819adb7f-dc10-4bf9-a326-a30d0f2548e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44e05b94-bb1a-4298-a924-52e725613354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3047d17-204e-4bef-bc83-2d053a2efa85",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa657c80-1010-4090-a09c-79100f054a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49667fc4-6606-435f-b77f-74fad1249dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c0159f-0b82-49fb-baf1-ad49ac88f487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66cb191a-0410-43d2-bd11-b60023b0140b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4e7bfa-cb18-4861-9740-f4bf10803c12",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43e451c-9110-4ada-8207-5353ee09f364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bf9243-53db-4638-9def-35a276c5afcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b2a7a7-892e-49fb-b60c-1bb0bbe95451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb5b509-571b-4964-a8ad-54d7b2de17ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f36857-cc05-48e8-915d-fb4f2f115914",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810ed58f-c3f2-41f0-8161-9f5b0d3e6f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f858787b-ee38-421a-ac45-af36dd23e2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fe2620-dede-42ff-a3dd-c76a2c4141d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a5db5f-6645-4e65-ba6b-193601adc8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e79618c-d23c-470e-9764-b333821327e3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe35f87-8dea-4596-b1be-dfe3ce274eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081e2de1-2b6c-41ec-9456-9fd2b4462447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2711d5d4-6bee-402e-b07c-3f70060ca8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec690b0c-f204-4d1c-9ad1-397d14b85f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a15f015-9a12-47b2-b65b-af4e878b52f5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e41fe5-3950-4f09-b64c-295ef62b071f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954a0851-fc50-4a9e-83dc-a725c7a41fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbfaac9-0218-4968-a5b8-d4838348bed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d5f572-774e-455f-83b8-8f69631095b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee31470-f660-42c0-93d8-0aa641d541f0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b870c11-1dbf-4106-9408-7617768fdb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487d587f-2b26-48fc-a84f-89e4d2c3f75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75f7829-5d4a-47a3-93eb-bd077c16a10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95db34f6-ec1d-473c-ad73-5fcbb5851107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efdd122-ff56-4498-a8e5-b8f988c022d4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948fe18d-aa6c-40d8-a2df-cdcb924de034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf4007c-380c-4057-9a94-331522c89ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0890b371-017e-494e-a338-3e60ae000f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40d8ef9a-f88b-469b-a80c-35641170c4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bf8baa-3148-44a5-bc4b-086eae0205fc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c753f136-012e-45c8-b5e8-391dc05862bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce733c1c-2c62-4393-a64a-d0fda6f19c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab66b60-58bb-49eb-aafb-0cbe35099040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "209360cb-d367-4386-83aa-b1c854fa97c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993f8f43-ea11-48a3-9b8b-da0fdf084c6d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78579c84-28c6-4f22-bff0-f952814417d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7df203a-1ea9-4f6e-a069-0366b26b01e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c23af3b-cafb-4ae6-b587-574d43be3215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a970a735-c44b-45d9-8497-09ce76f3aecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da8c37e-adbe-40f2-81ed-4547a3fe29af",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c7a29e-c321-400f-9338-808475e3ce38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5271c4-cc58-4b2f-a164-9b02069ff3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94aa9aea-f053-4992-9f58-abe448e82e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31185ddd-60a0-4387-98a0-70ede44eac4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f923579-44e9-4b11-acd6-bbfb6160eeec",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4502b35-0996-4347-9c76-d580f85efe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668534d1-8918-4b1b-ac28-800ffa16a1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db62d699-3a16-43f2-ad7c-1bbf34171d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa01655-963f-4827-ad18-2280ab3ed952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073dd5ab-43e9-4828-9031-5d8c5814755e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7ec60c-2fe0-4493-b98e-a0eebb152b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6c9ebe-1acb-4d1b-a775-bb5bc453eb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d73f38-1997-47f2-905f-d64b1115d6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17668189-827f-4dfa-b52f-9a8c2153f703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54dd15b-ef22-48e4-9814-6e1ee6c8700f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f60d7a-8d62-4892-8814-8c1e87852b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9828c66c-c3e6-4a78-b439-092fe2ea1951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5eb3092-dc8c-46f8-a2ff-1c992cb462a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7be1cd-a524-4fd4-8491-85a1ec28980d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecaeaaf9-3dd1-4b90-9b8d-500d83e82371",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bb8f55-bc9e-4178-9dfa-26d3f72347fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f704d251-f7cf-4b74-a43c-c14977c37b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690c9e42-1e6c-4c28-9889-395fca39e2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f52bf79-eef2-4c20-8b66-2fe80912bc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de22ac1c-0870-4774-b493-c2617a15bdb6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeda1400-b86d-47c7-ab14-8b14350e4d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f648bf00-a28f-4831-b83e-40a9adefe461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4785f118-52fe-4ae1-924d-b3cae020458c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37533760-4cff-4f73-9967-3760a8ec638c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3288807e-1ba6-4f9d-a54c-61c30afc9deb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b833e5bf-8bb4-4575-9751-b7e7b6c2fd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e1f444-6398-46d9-abb8-6b385d8d9dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e143426a-d762-41d1-9290-4acf32ba1245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9ed096-e70d-4d2a-a540-ecbaddb6977c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19dd15ad-06ff-4666-bf83-eade01edb384",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98d0caf-5afd-47db-b403-1c1a37d151d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f668ff0-311e-4dbc-aee8-1fabf5509411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afe704e-0301-4ec6-99c8-5e2b8313804a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "707574f4-e012-4cb8-ae23-08db672d00ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8af6f37-17ed-4aee-829b-f6d07f5ec025",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5add150-e36f-416e-8e48-afd33288ed8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e397e85d-37e3-4c37-81d2-5b304e3d6def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8567272d-c2c1-4a38-845b-f2d234cdca16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "54006970-b51b-43fe-8eb6-cb71ebf8ce21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263362e2-d3e6-4fc5-bf46-5878e9359afa",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cd7c13-9083-4881-bf64-b8318e51ddaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6995f5b-4524-4ee2-a448-9c0f06e4d1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7894d6-dd8d-4ece-a633-b2f8784e64cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d92f372-a88e-4f81-be31-59502230a545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0b9504-f472-42bd-9467-37781e6c26b4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e88ebf5-b733-4e06-a9fa-35a6b9d7f306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ff49c9-2cfe-4ccf-b88a-89b300084f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b91164-e3f3-49d8-ae8f-5cb61745b02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "12cad4fe-7ddd-4471-aa41-6cb72084213b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4d5463-b5f5-4773-8956-2b6ba91c466b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4340727-b26f-44c5-a486-4ead11bca8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efaa303-385b-4487-8840-4d80a7adaa1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a6b2fb-1c06-4e88-ae65-0c01330915c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c42ef40f-a791-46c5-a9c9-e3db850a2c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b949de84-3101-4b11-b13c-cf93020fb41a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead66e45-add6-4f83-b031-acced888cd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e577827e-f844-4b19-ac3a-d742f25fd172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3725d3f0-9595-4644-a618-abbb53ab39da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7c141c-9324-4c9c-b1b9-c13cd4994aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ff7bc3-2563-442b-bd4d-b57f5758c066",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6452db71-b118-47e4-a9c1-5e86c892c189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05360d62-3df0-44f1-beba-cfbd153fa798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630b5210-0518-4112-97a5-cad67352469e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3beb9aa-76d0-4d62-aa87-3c465a33bd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea33c2b2-c45d-41a5-a3e5-077910802e06",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f18869-6b08-4e9d-ae2c-b44e4118e830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cd8e3b-00d8-4fbd-b906-ff6ad8b045ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23df125-ccf8-4e14-8db3-2394aaba6c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "224b848c-d877-4233-8ea2-08456cc6c9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09efbd66-22e8-4980-bb8f-8a868179a5f6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039be88b-ba34-4a42-ae7a-99ebc7367ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0952f8ee-4bf3-4370-b103-8b87a6a4a2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72008a10-9289-4788-b88d-68a8805a44f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd3640d-9dc9-448c-9014-758d355ea0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57523a2-e2f6-4fc4-b6e4-71003da6700d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8570f953-2fee-46fa-aeb5-807022f61688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213a8c8e-9d41-44de-81b1-87268f5a8c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a8c2c2-c890-4c47-8478-a88248e6c42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddfcf38b-1137-4f14-9562-b030654cfb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e07e23b-b769-413a-8075-fd053645bbdb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befae8a8-2944-46b9-a215-9c48d3452028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e5e8ab-256c-48b3-ad69-ec29bfd0d5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edbac28-ce1d-4c51-8500-9917b3e1dbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cda24de5-8600-47e6-a231-2fcd897ebc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61885ea-93dd-4f3f-8ec8-fbc494d6be59",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43704573-d7ce-4c9a-8cae-1883b636ff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd81cb14-a844-4724-bd42-af68b8efb163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25be90f-b0f8-4317-8613-af1484c1ad9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da577f9f-07f7-4c57-87dc-836d85f68d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b1beba-1dbc-4f62-a395-c33712b1f390",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f629a0d-3454-46bb-b3b2-fdc16cb98ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffba4a2b-c4ad-410d-a9f1-01bd60d66bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27b1159-a05e-46e9-bc3b-a82fa063ba23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "32426296-576a-4784-aa90-1a5ea9f4adfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbac67cd-feeb-461d-bf3c-e82c2b14c319",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd144b60-c83c-440d-82f3-0804d956a3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3578079-793e-4bc9-ac13-afb63254830b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683f9fd7-915a-4676-a608-847cb4990e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66fa66e3-da05-4d4e-a573-1466b75b13e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a95846-4d63-489b-a245-b5bdc4b93ce6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a26e343-15c1-4327-bc89-458bbc2f83a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfbc684-e851-47af-8d8c-a0dba984aa83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a44f81f-abef-453a-889c-56bd9c196190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "945905e6-c363-49d6-8dcf-3eeaf6c1824a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb050e0b-f383-4457-9db6-c8ad7ae7a68d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b59de2c-7fa6-4431-b7e6-607e0101b442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb408d4-c78d-4d9b-bd1d-ce6b4141afde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6018de-de95-49fb-bc9e-906e32c223a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4113a9ac-e408-40ef-afa1-67689ce08ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f754ba2-985e-47e1-b34b-83f84a9d1c43",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551e0184-e768-4495-93c6-4fa03c2c9515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186d2b96-d3b5-435d-99a5-8c0331531999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b74c24-f47e-449c-b722-3a7e86aba053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1f8d79-7ba6-43ad-b384-95fe506f85d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bf66f3-bb9c-4077-8d3a-0f489b1be460",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7885e2-956e-4bb4-bf04-475f719dc90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c72dd9-76f9-4a9e-b01c-01707972b94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f5a6be-1e81-4753-964b-9936fdcebd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "21c42255-b330-4442-9b3f-e5b77d04f75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bef317a-5d19-479d-8e75-e47f7655e482",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a16fca-564b-4317-adda-1b65734d869f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338012bb-4716-4053-9b77-76400621c174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af06739f-fdf7-46d7-8ab3-c8bd1f4cc468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "240bb97c-115d-44b8-ad7d-8e0ce6db321b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bb9e7a-02b8-4755-a388-9835994fae76",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121e16e4-d49b-41e5-9b9f-35e1c18dd7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e42884-6a73-402e-a528-2bb0fe8423d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6a8bd4-184c-4ad1-942d-98e5a0ca0a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a59f2d4-f802-4a49-ba88-a8713a52f3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0cdbf1-b78f-49df-b63a-074a1ac67cdc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d272a50-72f2-4b5a-b1a8-ec92acd444a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20dec56-fff6-4198-8186-ddcfef7a7bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caec7972-b771-47fb-8511-7011ae916ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4602a97-2a4d-4904-84c7-c03de212f6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c52f212-9c06-44ef-a884-e105b5c18b8b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66221be-430a-412e-81a7-3d997bc89983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ffbaab-b6d9-41dc-889f-d8f750138b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e140697-781e-4086-bf65-8f667d5de222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "46cc1341-336f-4316-9b26-e59464f598dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb56984a-826d-45f7-9de1-47c177318bc5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107d3d4b-4070-4b54-be74-276170344667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c853d4d9-432e-47ac-bb77-22b5060f90bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de57ee1-63cf-4020-bccb-3ba1d604f5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "39ec8742-30b2-40a2-ab34-31187db318cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7401869d-cb7f-4f87-80bf-ff67d2752046",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4daae913-1d1c-47b4-86b7-86ee43ea9f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91376c68-662c-43bc-b570-4eade7f6c135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a269e158-9844-4066-b4fd-3091f0abe026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e590812-c0fb-46c9-bee6-3a6ca75e9b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa64bfd0-e966-467c-a48f-69eb93a0526e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9bab92-2e75-4284-b61d-f52551133c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe42701-e8d8-445b-8622-db3c7e59bb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e0cd33-9142-41eb-868c-026964d7d5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "60ab0ffe-cf7c-47d4-83c7-9d50f75ff2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf27e037-488d-4fe0-aa43-ac31d732709f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71448625-7937-4c59-8ad8-2674e24c4319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004c839d-a303-4201-a27d-f1234566aff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef4a597-2290-4a93-9706-504f2ed79bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e92674e8-cbeb-4208-a34d-4f5032a97594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc6c1be-c5b7-4511-88e9-dfa0056835e9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147ee161-b0b0-4846-a7f7-b914e384b2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937c7849-bb1e-4c0d-873c-920576a70ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7772421b-b5a2-4fb6-93f4-d88e3c22ea0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a613d68-04e7-4ced-a9f5-787e1adef26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f30ecc-45b4-4623-bc30-e8428bdab81d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4ad8c2-ebc8-4c00-a239-d36fbeb1110d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cb37c2-6c48-45a3-a0be-668d82b251da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d208f033-11ff-4039-a56b-3faba0c66027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a50ff26-cb66-48b7-afc7-56d227b0f324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d4e976-34a4-4b7a-9f78-8338e633256d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735cc120-e399-45b5-9e45-30f7b1d3c5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f84f32-40e5-4ae0-8def-3394bf8d25b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24627dc-e51f-4891-9c80-7ea3a7d79298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd3a42e-ca31-493c-8256-831a7037162c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e80df2-26a2-4a10-b65c-4e8f87df460c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a492ca-6410-406e-861e-e47f4fd5d15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260bc482-dd39-4af5-acae-8da00f3b68af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47858f8c-2ee4-4bb9-8352-9cd0ff77ba21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "95dcc922-e5ab-4152-bdd3-4f8646f68798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b09595e-5451-4390-911b-db529f4b3714",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4405f0ce-668e-42f6-ae1f-471af728ffbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306dbe13-edd3-465d-96c6-e9dfd733be74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a297f875-9c9a-4014-b3b8-15cfa2069b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f791ec6-e1b6-43e5-85a8-dfe2ea904a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496b937a-ba60-4b8c-87eb-9e007beed9f0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193a364d-3db9-4595-b0c4-414fe7cbb677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7fa012-0e81-4070-b0b1-18164b3a168b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9792097-4439-4c25-b0d1-9361bb429b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e8d8e2-669c-4758-9ca7-fd31533d74fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c6f017-ff52-426b-8760-1810b6793687",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e3e163-c58c-4e79-96cf-c6f8b018c0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af09a9cc-eb96-4033-8509-e9f6700ee3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0881f8f-42e0-4660-9e1a-2e57f032b514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e1d083-958f-4142-9a21-fb33fdd1111b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d93afe-cd2b-4a42-b889-7e3f4f10af3f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcd955c-0297-4491-9791-a7fcd47ff830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9c47ed-cb13-41a0-ac30-84f7f1d4b214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3593b1a7-51ea-40b4-a989-d2e41af67fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28217a8b-fbf1-46c5-bc47-f2d59bac85ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca2c158-9183-4ddc-9270-c006b97aa57c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03587b5f-a3ac-4e9e-bfab-36fe26f97309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10023b2-4cb3-4f6b-aa90-21fb62250023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f03bc17-e979-43ef-858d-ef3d6bd22326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24383050-fe61-4737-8c37-e244a85f1c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885e1f40-8275-4a47-bf53-3996c715e9ec",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0804f55-e606-4e75-b103-0009137ea3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ad1aae-2b07-4ec9-bded-9442dec17c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b152668c-851e-4d1a-bc84-8ffa771ccc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb30568f-0235-4576-b6d5-c8e232e12ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0d29d8-f19f-4c71-b869-31ec9eaa9ffc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9352ce24-9c32-4f3f-8cf5-4c8ac37372d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500fa427-59bf-40aa-85b6-a346a846f37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb43ac02-739a-4382-8fa5-eb2f0027a2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20041d8a-08d9-4805-9e80-cbbf8bb64cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc6a658-beba-4d60-bd4f-7e40e022d1d4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bdc591-ecb8-4a03-9902-25091877a9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72ce96d-3f0d-4b8d-aaa5-9663d2e7199b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c43fcc-781a-4b47-badd-4be145fbf98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "046fec24-97cb-40c9-9c5c-c93ed7951404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77495d7a-2ea3-4083-af45-62d68ba5d391",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e982dc0-0d63-4e16-94a9-c0707146fb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078f96a2-0b58-4c14-8360-f3c2575dfb55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94272b6f-ac21-4a5e-8ea0-8900e982e16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0815b1e9-1917-4ddb-99ad-322767bdf70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705fa4d4-7f05-4e87-8904-2968afedd16d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec22d6e-4ad8-4129-9805-fb5734159c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781206e3-9cf4-4a62-b77a-96752e62ca7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a09007-989a-4b9c-8cdd-c47089631742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54c9be98-e56a-494d-86cb-2e3898edbcff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13772904-b0d0-41c5-ba14-6e507ff0f1f3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d08b1e-eab2-4be6-9bbc-b41789a472e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef9f3f5-7bde-4246-8c7b-5c32070c51cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c838e6-5420-4fdf-a531-368fdbd2c34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cccfbb1c-f264-47b6-afb4-27c9ab33ca00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dbe318-b4e8-49dc-89f4-b75f684a7e62",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b335e9-10d9-4297-ac69-1af79b62cca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271b1e7a-5237-4047-962d-061c97500e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a530506c-f211-49ea-bbc3-64607041abed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "663b142a-7a36-4a1a-9433-e2433f8d82a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776811f2-f79e-436e-8050-dc9293d6587e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ad2bee-d9ad-4a38-a91a-116b21c6ffd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e63f41f-6bac-4a0a-a798-aeea6b4acc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eef9c97-f831-42e6-9dd9-e4deb5f46ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fab5fbe-22d5-4ef6-acf0-9f61accae966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a917914b-7102-480c-9b48-6ba6042ea456",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61f8509-65b6-48df-84b0-8ac9546ab5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1d566a-8552-4d01-ad9a-93112b2b9c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0721312-e53f-46d7-b22d-fb2ebc33909a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f00e2c2-16f4-4cdb-8143-d45c51db7f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313af345-d8b4-4bd7-b013-2647407762cc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f494fe9b-4825-4d59-bc36-d166288fa726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25219a4-7e59-430a-b12d-96442c37ea0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbce2006-4252-4cc7-aacb-3866465065ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca79f148-eaa8-487a-a517-aa5bbac918bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7021d071-cbfd-46ee-a6f7-2383dcf80b0a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7675d9aa-06dc-45c2-bd84-d99d63fcdf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f4048f-3404-4417-a6a4-5e30f10d1fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7b785e-9a14-44f8-ada7-dc75c02b8313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65af205a-263f-4ae7-94ac-58faa7defcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036533a1-763a-4dae-a728-a941a122b610",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea71fb1c-9037-450e-8c37-477071a8622c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a6c201-bcc7-4523-be76-e692315638f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766eef45-e9ef-4ce6-933d-32ea9587efee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1381cee-e69f-48d7-be70-fb4e7268422e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4524bb8a-380e-47ad-b2cc-70d52ec5e5a3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d504714a-fe83-4af0-bfe4-ffd5c217f031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e484e90f-d4bc-4aa8-bb68-7dd6df4f47ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a94724f-80d2-44c8-b276-6e2ad415ae2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e410eed-b358-4beb-8f27-2e2341b7e42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbfeb5a-94d8-4d88-a67b-c8cbb1d66747",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff539807-88be-4934-b1c1-fe21608d0add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a733644-9a8f-4580-a062-188c0e96aa5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9993f12-ce78-4bc0-9584-3569befb83f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d739851e-791b-4133-aeae-b4d8e0b75c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e302c227-f97e-4be3-b72d-8d404dc61d2e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feb9109-b1f3-4cfc-ad84-ff5395e495de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8530b7ca-c346-430d-866d-f273d2d50d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4013f65-b465-402e-bad8-21300a10a1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "71cb06a9-c8a9-4aa0-b7b1-96da53655887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2d65a2-f1e9-41db-a596-829c24ef51cc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c37d86-e0de-4038-bee8-d6c747ca7f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8741cebc-34a8-494b-8f57-a968a7ceb1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c426b789-9e0b-457b-980e-944eb15f165c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f26e0a6-2c98-46af-ae71-e0ba52883dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1be77c8-5ea9-4b3e-97b4-161ee59bfe52",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f37029-2730-48d2-be73-d9d9fb7ac64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81719414-f1d1-441d-856b-55fccac9c80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c426e3-193b-48d9-9ddf-c1643e57acc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "32734035-04ec-4591-8208-e427f72b7b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc11ca4d-0b88-452f-8c6b-3ebd32ab516a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee78a78-16a2-4ca3-b3fe-bb95066ac524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed288816-079b-4890-9780-ae42f215b1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e7c711-be29-4e62-9108-f27fce70c78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "89ed29da-bbaa-48da-84ac-070944dd1d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1df454a-ef59-43bb-8cab-cafc6c0e7616",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4ef50b-b31f-49d6-80dc-d9c8bcca1b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "824ac25e-b8d2-4141-815b-26d24293b183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b8c98a-fc5c-4b9d-b030-e0cff282f6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "05328348-b8c3-41c2-89f2-2a11f2c521ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d386c198-2631-40f3-9e3b-0739226cb0b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cad82d79-9302-4700-83db-b922fe1e172c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222a1502-0c18-4055-99eb-4dabd954ae7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d4cf526-a140-408f-bb91-e3e197af3e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bcf3a5-fc43-4743-b02c-b2c986cb558a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de01683c-6dfe-4b12-ab2f-6ea669a418eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d223d010-e589-4478-a33e-2d1b53f55101",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9abcc8f1-aadc-4567-8bb9-444218471568"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cac39cf-c8c4-48ce-9440-7dd6e9360f24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7df9fae-7aae-4ee6-a52d-5e965d64e9cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b880c174-a441-42c5-9691-8d0e9063bebb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9867d399-ae9a-44e5-a214-c624456fa7c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e8e9b35c-3be0-4611-b91d-b78513b6fd58",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c2c9de0-759c-4180-8e05-51466a40e26b"
                }
              }
            ]
          },
          {
            "id": "c1be594b-598b-4999-9ee4-3fca71875b64",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01059a66-c3c9-40c6-95d8-f74d12738742",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "db29317a-5bfb-40d4-81d8-f115aab280e3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47afef2-d2ed-41fa-85d1-2127a3a0cc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7da23f48-6865-4d10-b1c6-d9ed26c3841d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f12975-7cf9-4e4e-93e3-ac918c749c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e9b8c5-9458-464e-9555-74353b20b68f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7176ea0a-5d45-4fac-b4aa-36ac5c369e5c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c70b1e22-7190-4b8b-9cd2-d22acee738d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "729c1c61-f53e-481f-8787-fd664a37f45f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9644c61b-4fda-4a00-a738-8b63f02071c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a124d58b-0757-48e8-b053-8d8057a99883"
                    }
                  }
                ]
              },
              {
                "id": "0441d0a5-04b7-454a-a926-757859273294",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86282a47-3e58-4adb-b388-847fbe7b870e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2187fe5c-4472-4332-bbf4-36903b8b9818"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "824ee6d2-910a-4ba0-8b2d-53c8fb293f56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0b3168f5-bcf8-434c-8371-548c9a257b8a"
                    }
                  }
                ]
              },
              {
                "id": "28112c79-cc7e-4cab-83b8-0f6682e8861a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f0dab6c-0fbf-4b9c-9edd-b5a5910a5a15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "000e2a29-6fac-4f9c-ab4f-f33a0da7c10f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55352209-0a6f-4427-bd20-2848d9938fa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d2ebb940-3a1d-47f9-9d5a-b4e6e76b6960"
                    }
                  }
                ]
              },
              {
                "id": "10115b26-e7e9-4507-a81c-abc4b111c7c1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dbcdf8c-6b94-4b6b-b3a7-8e75bb255116",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d3025a6-fabb-40ce-8e61-8ac03bd90ebc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebfbfadf-c003-4ad5-8531-88a42af791f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "59e87cb5-32f9-45a7-afa1-547687f4eb3f"
                    }
                  }
                ]
              },
              {
                "id": "ee15d809-263e-4315-a346-2306c5ac93b6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "389dfe88-c9c8-4e24-a0ff-bf0098a5d5a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4eec4d17-ee93-4f1a-b7c8-a8dee0dc9374"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c35f4d0-a8e5-4061-8e70-38d0397509eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b946b149-00a3-4c3e-9871-23c1e70b2ca3"
                    }
                  }
                ]
              },
              {
                "id": "75bae9be-0413-48ff-9047-8a5cec399bf0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81b0311d-0997-4e15-92d1-3068e8dfed0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bea3dd52-35c5-4863-84de-134f39f3b0c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "847c79dd-1018-4f4c-b2e1-ae68522d8dc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31a99626-c2a8-4081-bd44-e4340148cbfa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f03722ad-b163-4eab-a431-7ac7b9ca4725",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64151084-f17e-400b-a618-1b7ac24fac99"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1cdeef19-a1ac-4b94-afe4-1d6afe9d2ce0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c4f93a2-1c09-457a-92ea-fe8af6d4af91"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7058cc30-6539-482a-b6cd-2e02e34f349e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d23ef8ef-9375-446e-b238-6c76cd95abb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2301d2cb-d1da-4871-84b4-97490465124e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63c98929-ce11-4974-99fe-9e25ac1fee36"
            }
          }
        ]
      },
      {
        "id": "0d7d939f-5b04-4ff3-9011-f3639c781d97",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "63872399-b965-44bd-8f3e-2d1f651adf7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cbc3b3c7-0987-481f-94e5-9f9800dc8af9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7eb9aaba-2659-4013-a39a-8104290e696c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5986f78a-e594-4e95-b0da-b8fbc13fe726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5448baa1-4bea-4eaf-98b0-84633c606ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8cb6f6-35e5-4ade-b73b-cc484dfb1baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c7ba87-b5fb-43d9-abc0-0f2d208a806e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3178c6f1-1739-4e2f-ab0f-31be2d1c6fc8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffac957d-0e52-43bc-a014-25abaf564a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca90d781-4e06-40d2-8e8e-909f9a98d0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85cf4c9-95f7-4fe3-a92e-4210a9d1b8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "582589db-5eb1-4a16-92c6-7ae3255c886d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9149d585-025c-4ff1-ae13-90f26f678664",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36367a20-5c73-46f9-9c11-95abef252fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbc7f61-0344-4c22-bc1b-6a8a68332d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913a6391-9422-42a0-a2f1-691762aa7b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8dbb49-c39c-43b9-b0e2-9d306aa8405f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66544020-17f4-4101-910d-c88094912ead",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50c8d0b-bfc0-4ea8-9edc-4ed651bbb128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79460ac-c633-4b17-b7f1-cf6952f23d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587fb63e-cb0d-40dc-a961-7fadf9161e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3208aba2-1355-4b80-a124-12199e82851d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f184fb56-c643-4f3e-a75a-5163edac4a70",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9196bf-a696-4a64-acb4-575377022c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d6e22e-1a4c-4828-ba32-32a0f996931a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca59bed-2037-41d3-82e9-18c9041049d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a578a15-2dc6-4edd-b1e5-d6b8effe31ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f4fed8-86ce-4353-9072-9372867c1c24",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a5a674-363c-4faa-9879-afdc2301427c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed301aee-c278-40bc-8036-cbd160a31b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2cd5e5-5663-4420-b1f5-27028390298c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc0f630-8b8b-48f7-862c-7154392cdf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f32cc2b-e584-4df3-9f4d-4e5c33d062dd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae601bbe-a731-4d5e-ac91-e1565e8c94d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943506cc-c725-4425-a162-d2b09f4a46a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01b91c7-be06-4c93-8212-0944a1ff1d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "925ae200-5e3a-45a3-84cb-9c36e86d264e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dd4ee8-a7c8-450b-a4fc-eaad08f3b502",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356989af-047b-4b1c-b3c9-08b6e5bbf477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8e98cf-e4a8-409f-a7bd-1b704ffc9e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f9c42b-1493-4954-aa11-35a89b407682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "126ccb32-5197-4b61-ac6b-48affa9c1585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3bb7e5-29f0-4a4e-aa46-c0a323344015",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45abdc7-15e3-4669-9d4c-338837921228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c4d01d-e8fc-461b-a15b-9ec2dc086c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f042ee28-71b2-4b1c-aae0-65fe14022dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "547b5e1a-a060-454c-b33f-037331364767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31caded5-3a9d-4e50-851d-3f76f6c0aaa6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a00dd1-a66e-4d3c-a56e-1023b85f1629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e45ce3-c7e1-4183-b8fc-6daf27e72c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0683685-c1a8-4966-8cec-279f0cd92bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57b9b751-987d-4032-93c6-6ee77891b8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f79ce8-67df-464d-a673-55ba51dd8aff",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0392b922-ab4c-4e9c-884c-e9000696ada0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8c0239-6ce0-4a39-8793-448edcf78572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b6ff5b-0f11-4a60-a04b-2ba76df24239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a583399e-d8d3-49ff-8889-5b66dfb2b7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce47c58b-3386-4d85-87ba-5d1097e8dab2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6c607f-0507-43c2-9649-2b3e1497c327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e00fbef-d272-48f2-bdce-f45311119f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ce0810-89b5-48d7-812c-cb04f2176721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a541600-9aec-458b-8ece-8f7cbf10c8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50cf874-e3da-443d-96da-b4a9bc2a0e39",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5eb6ca9-7cef-4b14-b30a-31e383d37a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb4e455-6663-40d2-bd09-1a3a801cba57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d59428c-adeb-4e0f-99c2-7d6ae94fb2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee73ab50-cc68-4424-9217-b5a4d2ded29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c859fe0a-5fc2-4e05-ab63-aeb59554f777",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14aaf94f-014e-49e2-89ff-6f46f4385a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def9eb1a-c73b-44dd-9c05-20a8236e0e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d38a5c9-6e89-446c-905b-84473ef71b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d6935a-9259-420f-8d5f-e746cfeaa5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc261cdc-7675-40b6-8ff9-23b3d506c609",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22592e85-50ec-4c11-a6a2-6385af62eb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0502e3-c6ac-4639-b053-79ac74647370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71dad4c-c92c-484d-8b9f-31e2dc010696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea58f60f-24e4-4857-89c4-e192c1816b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89133d5-e7b1-4861-9ad1-4b770d3b69ed",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0000e6da-ef49-4a93-b606-b2a2e46115d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6601eb-3ea5-4554-98be-5ca0934c67a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d336ae-a183-4456-b2b9-0543217fbe45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "637d9246-a71f-4502-93d6-1d2f7a419648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df22825-d0f3-4321-b29f-410b542d5bd3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b03448-5705-49ea-8d7a-29d842c0f10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c851b1d5-ef7e-4a0f-8d18-3eaa2d7d7d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37504b5-4145-43b2-a71b-b9b1e0e9b106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "60162aeb-a032-4664-8df8-65aafa2cf767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab59909a-27c8-45da-af5e-78b10bf1c416",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f735e74-f3ea-440b-b6b6-d075ca28475b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb8c7a4-9d58-42c8-9df5-e506da1bb0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb770450-5451-42b3-a753-129465a6c96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "83a29907-afbe-473c-855c-6c9525cf6707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d10484-90f3-4fce-94e2-3bb0801cd2a9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68600fde-4474-44f4-a11c-b711ff102b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203919b2-8504-4a74-82ef-0a8ecf38ae0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c318c66-bfa3-4996-af94-14c48d273289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76aa274c-dc35-40f8-9d6c-1912ba9a50b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4f3864-b182-4635-9306-b44ab056eea1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83918e49-0b19-4d3c-accd-0ca029648016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250ba881-7f14-4ebd-90c9-37c0d2ac0e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da114948-447a-41d9-bc93-2031988032e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bee8637-74b8-4bd5-85e3-d78b9c091136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8b8e04-a5c4-43ba-bb3e-558e2b4b68f7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7807a21a-1ddc-4466-bcab-9931de7ef285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bd914c-b2f8-4396-a6ba-45d40cc17b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4303b93b-f1f0-477f-8676-d6af62cce465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd00b8f6-70d7-49c5-9c1a-0edbb74b9165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f9ce8f-cb44-4bc6-ba9e-cbb987ad07c0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3580ec-75bb-4bde-869f-a4bf950b148e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d708b0-6342-49e7-b9b6-0877bb5de507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3e471b-13a7-4f90-984e-ab715b3cfba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09bb6355-9ca3-4a82-86b0-ef3678e642ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78982b1f-640c-41f7-8cea-5c1e00663628",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec30344b-4def-4669-8711-5138f07b130b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b14137-101a-4c0c-8fc3-255bfa3f6a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933c5317-ec03-48b4-ac4a-6756c3d42e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0bf4928-07fe-47ec-ab22-0567ef0133f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cda8cd6-9a8b-46f5-bf76-2e3fd834bd9b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e788e98-19f3-4d17-a455-16097eb1bf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8bd47b-4e13-44a1-84fb-9f6594129ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c619a5f-59d3-4f9c-b170-abaa5a87661d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60949373-04a0-4bad-8ac2-5c47b66cceaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4250c2-1da7-44de-9bc9-4e195aba3287",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d9abc6-0be7-4eae-93a5-0c4f7b28777c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd27010-893c-4f1a-8634-f11643a25ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34ebcce-300f-4d44-af37-e1bbd267fa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a505c110-fa05-46a6-9083-f0f90e53c071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcdf8d2-33ad-48a0-b2c1-136062337178",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e73d712-7841-4614-98d1-b64853e2d454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fefd71-4010-4397-8ade-82bdab54257c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966602af-9ea6-454e-8689-263d56d4fd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e21f34fc-ccd7-4ec1-b8ba-8f635065daf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257f2cf5-d095-41e6-b287-ce59b2904125",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37045dbf-04c8-413f-92c9-030a1ea2a457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42756eb6-b48f-48cb-bdd6-3d12f87d4e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74faf4d0-eaca-4125-8b51-2ca383235865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "313177b2-5e8d-490e-8568-c0724c36c9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e65db9-fc78-4390-8f74-dda63aa99151",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994f82e5-a273-475f-9986-4be218c23c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099941f1-e5f2-49de-b388-11f06c0dcbd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9378f12f-d4eb-425a-8d37-cd5c92e593d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e54c78-2fe2-4a25-81b6-b6a9e0e691fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e230ed-f428-4aa5-8b01-9a1443b0b221",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea27e7c-133f-425d-9daf-46d28f77ab90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9d9e48-277f-455a-8748-67d034f8086a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f99f22-cf85-44e8-8806-b86b3350a71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a36f4b86-5789-44f0-907d-48edc93665f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f70136b-1e51-40d6-8d15-0535b8df56cf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b658e678-e295-474c-858e-00d853dc0b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aff23c7-db7c-43eb-9c44-dfc9d2d3e300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63372745-c2e2-42ac-96e6-d9bb92f68504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6b1450-5d92-414d-9bf6-17a643ace74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196e2dee-d879-4ce5-a07e-2614d6a6e978",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae77573-6253-45d1-826b-ceb1048a4d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d755a0-5bcf-455d-afdc-002719a831cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3356233c-ea36-43a4-9bfe-489a10d293f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7fe6605-c420-4614-95df-9275b97f20af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bf3c38-2efc-4a3c-b95c-f47d63c8de0c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7ad284-0ea8-4d3c-b6b7-bbd7411672ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7c3b53-2bae-423f-a6e2-c178c6a49f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1d9e3a-603c-4ad1-96d4-6a42ac297896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9db3b92-d4ea-4d1c-a652-5e0e20015a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35614527-d426-4f00-9272-614762c83632",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6015eeb-9d1d-467d-8c64-6c00010afbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90674ed8-9e91-457b-ac3b-2b72c06f1ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653dfad5-d2b5-4ce0-b050-d255928df7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f00e0b32-c7f3-4824-baa8-5d95368f508e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91fabf0-7fb3-42c7-8a44-59863bbd1d28",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e6febc-0461-4525-adbe-03a4022ccc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84dacf91-7c69-4a9f-ba0b-e6dc428ec305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b747d2-dac8-4231-a58a-715668ea0ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cecb2a2b-0c40-41a2-bcca-b3602ecf1225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14da9e66-3aae-41d4-8bb8-e9b8835e2034",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5504153f-6b9f-43b3-b99b-ebbdfee8a200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d4319d-2d54-43c3-9b86-5089e1de2193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b2dbf0-94fa-4c5c-99d5-1d4f0d7940be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a600a21c-b298-45a4-a479-cf69be29b852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400bf980-ebc3-4b7b-a413-1b24d2c37b0a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a5369f-f831-4e4d-bba7-3d3fef93c10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3cbc06-d9a7-4baf-b855-701e89250104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1599291-e8dd-494d-86dd-f832931f09ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e209a51-eac5-4332-b254-91adbcb64f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5883666b-9d44-44c4-be38-33031050d843",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0735dfd5-16a5-431d-960d-4f98d135f00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5e6af2-5539-4704-9327-9dd1d20f3a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6256a9d-884a-4a78-80e5-6b302586f963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6430b96-7284-49b2-8067-a9bf93c6d43c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed23977c-c18b-4dd5-91de-117fea29a5a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "acf83b59-85a4-4021-8b6e-1b0b4278c5e4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793e4110-4aad-40ef-b804-4135a9970857",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9401ae47-cefb-49db-8c33-d9b43c703621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0477233-6bdf-4c83-9a37-2c1840451642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "395a3f01-a97b-434b-a363-f7ef35bba3ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30f5f456-02e1-4551-984a-9791308bf42a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a993a6ec-4657-409c-8c69-40d488710504"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b129fb24-5fa6-439d-916e-46c4a4637285",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ab6804d-d7a6-4ee8-be57-993c022fbfae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d764fcc-66f1-4f5b-820d-aaebf3d385ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b940c0fc-9276-48f4-a250-203f982a8a24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b58f165-571a-4c4a-831a-292d7d4b3e08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2706bf8d-9c70-4516-9c13-dc8290d533c5"
            }
          }
        ]
      },
      {
        "id": "d260e9ad-1113-493e-86d8-f7744ddecbc4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d2221284-ed76-4cae-9715-985f66e9baaf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b63f927-1277-4b91-ada7-9c35865eb5f5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "463a38a7-f20b-410c-8426-3a4a45d3ad53",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa8b5ac-7f1c-4257-bf46-272334428779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1076848c-e77c-4e72-93e9-524934d68974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c8ee8c-e4c9-4dc4-b43a-d58af76962c2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6e06d9-35cc-459c-844a-243246dd09e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f366ae03-4331-422d-8d19-989083f10450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae8d975-64f2-41f1-87e3-5fb363f4be18",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21de0827-af5e-46a7-b343-b58ce73b1a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68215324-9239-41c7-8a8e-82644747979c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8558c368-c9ad-49b4-a034-549283d6b1e5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c293d5a7-c86a-42e0-a175-722ad3447701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a6795b-ab0a-4c9b-b724-ab780974885c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c422e76-64d2-4a87-a371-d1719830d0e6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5db384-4b5d-4a09-a38e-6a7935f4b6b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8489a0-b700-4b7d-9217-15c50db51c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c74bb25-73de-46da-9be8-7c1914ca9fa8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25a7d3a-3749-4b65-8fed-3480f0265791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197e8e81-10cb-49fc-9af0-d3c85b2ab4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429574e3-6b32-42c0-864e-a1fb10f9c947",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683a1a0e-e1e5-409b-aa2c-801e9447777a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0770324c-4d1c-4744-b6b3-990e6f75b4bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f212e6-bb33-4a2d-9a53-329cffced6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0cc9fef-7f7e-4444-bc38-45ea8a0a7b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be325208-7c21-48af-9eec-f50d014c26ad",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbb33a2-8ef0-4969-84d7-741f95b214e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd8ebf7-8976-4690-8725-d9ec388e7fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f40a5a7-3ae0-4c48-9dfe-3069152fe224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9cb489-16a0-48f9-a642-01db93900869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97dc57e-0181-491d-9050-9ba67725e9b5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f497c48d-59c1-4315-82f4-afb5253bb407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac43a38-d03b-40a6-b737-8377a4e4e6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e64546-98ed-44b8-8bd4-3f6da59d970a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8445be8-b2a9-4fae-9a14-c2ead067e014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e105beab-5bc9-4da2-abc2-61cd48e69670",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a2206c-2726-4368-9d03-a8b63a03a2db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b32a4471-c580-4383-99a6-86421de82603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e676b7-e8a3-4ac9-a501-1297e31888a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c853965-4be7-40f8-b8b5-30c6b4c6b341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea40be5-09ba-41c4-aac0-238798b86aba",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11ced64-6c3f-497c-8a1e-cfa29f8f136a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b29027-cd05-46e2-9d13-0fbc6cb86350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba3472b-0dcc-4468-a597-4e085e21204b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2336d1-a99f-41ae-bb53-6665ee12ab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529df655-78ec-404a-be47-8edff7882af6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede87cf2-e246-4e9b-b234-b9898864d54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c34043-aec2-438e-be07-9991f53946b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bc52be-9ca3-481f-9711-e07657ad309f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d847bdcb-24d8-44db-b21a-2240de4c3b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9257d9-5608-43f3-90fb-f2d4a256f802",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d3c3b7-3364-4021-9f06-54c8d6dee80a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bf66b76-9065-4ed5-89bc-7a3bca283bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402f6269-1cbe-4826-8aa6-7db442ed2795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a663ce-dae4-4e11-9328-1d823e560e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3b5aa2-5768-4b75-a85b-b6d2073359a4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c7d151-9839-4b80-a322-4e24ddeb209f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef196f22-a016-4128-8e63-60af6edb9ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d97a97-c0e4-4d7b-a713-4204be157703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a651e3-a593-4ebe-83cc-cf0a803af9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25890b75-f8fb-45ac-9165-5b81547aa4cd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48011477-71c7-4c47-bfe2-de0f5522a135",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "356c0ccf-9f6a-4af0-a30b-494a3d5e0c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa67502e-cb8a-4c1f-ab98-660c09ed9585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceed70f1-e375-4096-b318-a15f8996b8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdb6ba4-6386-4442-ba13-258d80669cc3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7357dced-d43f-4097-8878-22820b686961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17428b21-e96c-4762-801e-eea9540df928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8298630-a582-4ed6-b6b1-b7e31e32f114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f3b4b6-0331-4c02-8024-024c07822bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989dc101-509c-4d7e-9cf0-1eb849a64201",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e8504a-1718-420c-aacd-163bda89a8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cf267a-480d-432b-85cb-6ae8d360dbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aab04e-d350-4e26-80f5-440bd927bfa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48e7dba-a7b6-4ed8-903e-41a2340e519e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d297f97-03d0-4a5f-bf03-17162847ba06",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9642ce1-554d-45c7-918a-1c48d2c12269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00be2b49-0861-4259-a943-f729b193166a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74fb6fa-0e83-406d-b4dc-679117d51592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a0ba2b-bae9-488c-aa58-6ec2688bcf32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416ceab4-ac99-4ab9-b51d-dbde0c18a209",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459ba5ab-6c43-44e5-8a57-79f76ec7353b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12207ee-a841-4956-be90-67206313204e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261547d4-060a-492e-8709-a3ab23b82b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d054858a-1a62-4686-8591-33d7bba6f0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76b6f5d-437e-4857-af0e-f37f7fe3828f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddeedbf-cc5d-4e1e-9eea-bc4aa54578cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ae6c72-9a88-4894-8044-052f0c0f13de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0f7ccd-fbed-4b8a-a6cf-d2c075c1b2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ef2cba-df74-42d9-99a5-8079a9c0a4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96465e5-4bd4-4deb-a425-d545d7bc3acf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee45696-0854-4bd7-ba5f-5139f6d543ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67001318-daac-42f4-ac22-13f48b5dc64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945ecbd9-7e3d-4b5a-9532-afe9ab701087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5df622-89ed-4174-8115-ea1677c48783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca459ce-4755-44b3-b807-f2da88b7b221",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd892ac-72e9-4b05-86e3-cc34e000c8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e4f2e5-166c-41b6-83f2-230805e9d69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee2851a-c0bb-4207-953c-5dcd000471f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25dbdf37-ec5c-4718-8886-f0249aca6b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f57f6e8-de10-46d3-8332-81079393f590",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce7abf5-ad93-4baf-9ad1-e8b763ccb2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72040dcf-1aa1-47b3-aa04-48885ba7774c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a077c1ae-d86e-4b5e-abb4-99d739bf7b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f276158-64d2-49ee-ade2-f7d8463da746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e146df9-d6e6-4f92-af78-cab869fbfa04",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41762e9b-74b9-4484-bc9e-35077edf3ccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e83bfe-e6cf-468e-8516-4df59bd11887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582413dc-4828-4673-8952-6aff97ff9225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87638554-5be9-4e12-9454-80c8f95644a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abd75b0-cadb-4799-8b46-359d3f5893f7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3718ea93-07d6-4f4a-a0b6-f3397329912b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64f13766-80c4-4c6c-a8cc-4eaf014bed7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f250ee-f529-4027-b4be-5664ca432ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fb4d89-6a75-4fc3-83dd-98d7363110e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d7b6ad-deaf-4b60-af5e-ebec2ac98bb6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31eed78-2087-4e81-a873-8442558313e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "125fa863-13a9-4dcc-94d7-b760679300ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d023b6e7-307c-497a-8160-69afa237b82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042ae222-0b9e-4513-a5ef-fe6e6463e50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01526f31-a743-4480-b0cd-6ba53127c039",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902f1585-755a-4c13-8af5-b6924878a84b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aaeb1de-df06-4e83-a6e6-b945dfceebb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef05ec5-3cc9-4048-affb-66042623e8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a4bdf7-f9e0-4ea0-849f-8c4340adc92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fe4194-919d-4f3b-bd6b-fa0826a8c64a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f6cf22-375e-430a-a6df-39e31bbe9601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5189e020-3ca0-480a-9244-bcf3c2b14dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab96356-e951-44aa-8e3f-6bc0403d2191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bf9569-a75f-4551-8701-3b0eeedb7113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d738159-4e17-4a8d-8ad9-7b4d5fefc131",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8363a5cd-f3d3-4b00-b443-730d7e0d750f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62b15b6f-6cb0-48a8-9cce-f67eff4f89ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a3f1e7-9892-446d-a18b-050bb7413ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a84b0a-7b75-45e2-8380-7d714f2cccc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f935f513-9603-4c2a-9ee3-6790c592b566",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38210eaf-332e-437e-b9a2-ee8410638ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1596e1e-76e0-4d3c-bc15-d028cc7b8b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1efbf61-983f-434c-8c39-8e2e1ed7e864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093349a0-8f75-48df-a0eb-9c9584639c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0341baf-93eb-4ebe-8200-7334d91d29e0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57513e95-0f9e-432d-8db0-8c6905210e9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc9bfd51-f42a-40d0-9a4d-b29d0b3df5c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e9334b-f7f5-47c2-9620-efa56945c338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7a127a-77bb-4a2b-b9f4-9fbb8b45a1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e36043-eeb4-4c1f-b04f-eea1d0d6c2f9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09577e1-39db-44fb-bb5c-45efb6e50930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e9ad411-ccac-432a-8e45-5fb6ab531f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e157c3-aca7-407b-acff-921b06e3df69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06e9233-e39e-40e8-83ef-508512b8714a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0562f8-d9ad-40c1-9777-a6de8555d65e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875f5c9c-3718-4d5b-b352-66f2e6cc1eaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2c80fe0-b5e0-49a3-ae0a-7e573751bb4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74aa4e08-455c-43fd-8100-a6740cdf319d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66b8710-27d4-486f-8984-204b7412fad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3943facb-8b64-4375-a347-52d7bf7a01b6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40d7745-17d0-493d-8e25-884874cf427f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed872884-2417-4bb2-af19-d397eb5c99f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7f62a4-8168-42de-bd1b-e7779223b0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be27e55-cf4b-4342-93b4-a32b66c35814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f33c28-2672-420b-a927-205146dae51a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdea0f8f-89e1-459a-b23c-6efc2f928c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285c6f3a-648e-4957-931c-daa09aea1faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b7a910-055f-4218-8870-5fba0425114a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89f6514-d723-4396-b66f-e05c426798f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744440c2-1881-417e-a852-2b6837729c86",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb78ecb0-7382-4879-b4f0-0b1e2ee80fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e2f5b3-4282-40bd-b71b-7f8def5eda1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de8f095-b887-4c37-b703-e7e9653ca0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f09cb0-5dba-4f6f-8af1-ca58243a72c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958956b6-1726-4138-9b75-2a9a04087c86",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf412345-acb9-4c49-85c3-3bccf54ee840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6131fb-afae-47f3-8ab8-9c74e3d8aa9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97ec005-0b5b-43af-baa1-e698794aa319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5229459a-bb1d-4894-b65a-c9d50def0d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104dc4d7-5b35-4dd5-8513-1153b9d4eacb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffbd189-fa3c-4595-bbf2-b713035f47ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834083bd-fe42-4944-a8b6-dbb1acbafde5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2917e4f0-6e5d-4d04-b86a-56f10cbf1e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623587ea-3c8f-4fb9-a9f4-fd1e276c2f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a456a2-90ac-4aa9-bf71-88e769988026",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2569658-1698-4074-9156-1daa26ba7893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efd72e9-1d18-4861-ac5f-26fac29c1edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e841318-737f-407e-af52-9feaa5387dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06cf7f71-2356-4dca-84f2-6b07af689a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f36ca8a-790b-472b-93e2-a66661ad0be2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a66697-c683-462e-aa2f-c68ab6c5a8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ef3a56-f865-4fe1-8614-b7a72ab69698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182426ee-b5b8-4ecd-8a4b-7e700c6bfe6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83284a7-3c4e-4fcf-a3a4-9b7e4293f67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9c4be6-ac05-4342-be48-06ec062d6b12",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2200a0-78de-413e-98b2-9c0cd4adc03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ee7de8-8718-4b2d-abee-557fb0074e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eac7589-1751-4ad7-86a2-5de8705128c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff82c71-75ff-4bc5-8e23-d15f298790d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a05e75-d934-4e2e-b8be-90f1f6bb3f74",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379ca80e-546c-4815-b942-52e9049fb056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a516f90-cc88-4fff-85db-c2d6c0da3c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5f1384-9a59-4ad6-b31c-1825c40c9897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d47ee0-df80-4f3a-8837-8ae28d42e9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef23cc95-1b79-4201-822f-84a4d60f2ade",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63e8eeb-0a2b-48d2-8000-3c219bcf8f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e868d30-3995-4138-8380-d2812cd17e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bc44bf-3a47-4030-a5e6-44a1ecfc8b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89de9888-9b07-4523-8071-8e1d6fee1311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecb240a-4f39-4076-a117-56cc1d0ad503",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8ded37-7905-4099-b6b3-c9d0d4beb3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378c6390-e111-49e6-afa7-93b21d553694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d51ea0-9e9a-427f-b4b4-6afaa860c6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d17785f-34ef-441a-8d13-46e4eb62db07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbb95d0-6ccf-4134-ba49-671c89b1b3c4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b67cc1-95ef-4608-b4bf-4c2c807688f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ebe87f-0a75-4cea-b53f-fa64db59f7d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89678850-5a0f-4580-ba12-24c149e21ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27176112-251d-49c9-9825-030370be47d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ad83d8-03dd-49ab-b3eb-b0cc42288ba7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ada8e6-1294-422d-b8e4-bea0001810a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b44896-582a-41c6-b140-7e36a35544e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36eba8c2-8f0a-4979-b82e-7a92f49d9889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799b8d62-26ff-4b64-a2c8-d13b2e7b3ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaaefd0-4193-447d-8ccc-7478e5fd5d21",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93efe2c3-410c-4684-a316-18dce69c5dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147b979f-2395-443f-b331-106cdd053ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f7a713-83f2-4d88-866a-c75aef43dc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80afad86-57fe-4355-996c-315c35d3463d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8141ef48-ff0d-4754-83c3-79c84919da56",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31803b5-c2a6-4383-a969-7e881bfceac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cb7fcd-033d-4ed0-9354-89bbe9e07f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9123eabd-312d-42f7-8f02-da11b89aab99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31fe8a16-a8f6-4635-83f0-a1064a816594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd33936b-3ef8-43bf-a624-8ff0fd57add9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad165d9-cf66-442d-afd4-42dccf5b7962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290f9781-46d8-4492-878f-62291fa97f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7402bafd-bba1-4e81-a9e5-e810b7dc94b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22715bf2-df88-406a-9bbd-da5e0d8f4eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87098bc7-03dc-4ad0-8af4-30bf2ff9ed7d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4390f31-4c97-431c-aebf-67cd199f251b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6019a64-b661-4485-9d0b-83d49a9ad6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad05e20-58cb-4618-a9b3-8c187041305c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c4647d-032e-4556-a8f5-b331e6a5b427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d53d7a-e1c2-4e31-b84b-f61b0d6f6f31",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead071c7-4deb-40e3-a843-de8c993927e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb298f8-0f29-4a0a-ada8-f976c0374291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66f53aa-02b0-4e80-8b63-37780219ede9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2dd6be7-de48-4eaf-9c6b-69538de9a0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab54b84-ccff-46f0-9f1b-436e7a521edc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dc2e00-5802-40c7-8ae1-7fe4c16096d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ef98f5-3af9-488c-93ea-c384c7c0e133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2199c82f-6b8a-4bb8-971c-535faf72b2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df60e78c-5fb8-48eb-9a88-1dab88019fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fcba0f-64d6-4a11-8b34-f540415c8165",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9d4ee0-7018-404c-b738-30fe306603a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dcd7630-ff0c-49db-8316-496c3ce5b973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2387040-854a-42a6-9efc-896f588c120a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f15ac7-d7cb-4e1b-8fb2-98452f88dfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51df6ff8-b72e-4302-919c-cc75a73a665a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3428f9f2-3311-4e44-b55a-33bb36e61240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543392d9-a7ad-4bd8-a6da-e3f661e06426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150e74d1-e1d5-4f12-8bba-c59237ba7688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d0291f-4e2c-4f6b-9c63-fc47a8ed331f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46288e92-75f4-44c0-81e1-227157f9cbde",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c731bd9-827a-408b-b7e9-595d86eb386a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c6abee-4d29-4000-8d00-1a4b42766e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13edc9cd-40d7-4bd1-a948-47404c27a923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27238e7d-0e7d-45ac-8d09-d72190adb6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f9744f-96db-4d00-b6ba-d4087fa2c67c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b0ac20-63ba-4a4b-b2e5-40cd9a3a8366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb21665-228c-4f77-bbb9-623e87ed3eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840d45f5-5a57-4b7d-934e-daf5e024b68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5af6be-1011-4884-b5a4-fca405953683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9387130e-c534-4e87-84a7-66f1dd4b6a1f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835e8afe-64f6-48b8-a2b2-35e05d8186d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed2ab0f-9bb7-4d2b-bba8-8fb82e33a3f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca839af-28f3-4285-a1cc-4cc742a376ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5869820c-4c65-4018-b8e3-815d2be14b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3e7785-9337-42da-9878-5e573a6600ff",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4297d2-907d-4cfe-be41-5b4fec83894c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb0cbaf-e723-4fac-9aa3-44c9b9b87b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d315cb-4a04-4201-819f-7247a1f55e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87803a6e-9bb8-439d-9f46-ee7411a70039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d0af5a-7cf9-4013-ad9d-996e6a077824",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3478173f-0c01-48c3-a7de-16238d2800b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53d6b87-ee4a-4c1b-bab9-cf8cbd1ac25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61437f7e-27b6-437a-b889-812f1112fa2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f6e08e-51d7-47cd-8785-b676096bd40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a194663-0865-4801-9706-25b35912e76d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8890f67-3d77-4628-858c-258cd582f06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da538d0-04b0-43a6-b0c1-a8db8eb59908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f715fa38-4c8d-406c-a6a2-321b014ebf72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b416c676-9d7c-4c75-8a47-358fa7d9dfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a8d2f7-609b-4c0e-a379-9cb778ec6bcc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fa0379-ddb5-48c6-9be0-e311c8e6f00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7774cd3d-8926-432a-8e01-7ed6c03f288e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6078a942-bc5f-4b63-903b-721a05754886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0374c8bc-94fd-438b-9476-e5b8afef2c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f67fb08-0b49-4e75-8868-374c55eee724",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59d6c5d-efb2-45b1-bd6e-3eefcef37c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c708acf-a303-4794-a8ec-3276c4d5326b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e672bddc-5791-42ec-8b3b-cb70f18cd1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a412633b-3ab7-47ea-9b14-816fb319eb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19985dea-cdec-4051-a66a-a3b92bac9e99",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3bb547-99b4-4445-9833-f9b3b005ee3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0a001e-4e3e-4da4-9620-3015134d8156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a46a14-09bc-4e3b-bb32-56ce96f29e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bccf8353-701c-4e3e-adea-9c249193dc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6f6135-77f3-415f-8a95-6f695d699422",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485aadfc-5d5b-41aa-bbe1-1fc5c454d890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c708f3-9a77-4cbb-a291-e28dadaed014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fd5d6e-138b-43c0-a52c-c3ba7d63a215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51edae7a-3536-474f-b096-22557612cd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d89b0c-2b04-4bc7-81a2-4a49ebdabf4b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f612a321-c7b9-44a7-82b4-0aec0b6ab6f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "582a5a2d-d31e-4d36-ac56-ea7831392c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcde37e-fd81-411a-a66e-6d873be2ed8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cae5019-87d6-4e54-86cf-614d80ffc995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1776ee1a-4a61-4365-a15a-33332cab879f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f78cec-9f14-4516-a84e-a3377e5ee6fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f10c13-cc79-4074-9757-7bea0147f903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0c15a0-9e3d-40ac-a6a2-6a31528cae99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee57dc2-8d32-47f7-ab52-b08b7eaf0d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcc69b3-b9a4-4ee0-bc15-81a131cd0038",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c31e58c-b9e6-483a-9cb0-18e68094e341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80eab5eb-7c38-4d17-b6a5-86cf4e5b6360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee55f904-cdbe-429f-b1b3-a45379ae735c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb60270e-5761-4468-ad95-4b5af58e7b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35111a1c-0120-473f-ac71-d37bb0c28b30",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7a29fa-af4a-4345-8106-f2f162fceef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a71d23e-20a9-4d73-93b6-76d88c509da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aaf43a5-4a59-45d8-9b53-59180a09e1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f8b0fe-963e-42ac-a903-528ac1fb5676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6031115d-1c1d-478c-9da8-18be6e3893f0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d967d4b9-6ee2-4b2c-a954-a932affa23be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e63915e-0fe8-4478-b9d6-9364c13b1097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bbb34c-9ae1-4347-9610-6b72ec235371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55facfa-b72e-4750-b03b-4f971bb86ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65ee6ed-ebb2-4861-861a-530696fe1be4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6763879-6543-4486-9da0-14bca7a6b694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "239dc910-f15c-41c6-a739-40c1c1c0731f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80a1ddb-5f13-488d-a23b-9ac0e4482e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef1d29e-7b5a-49d9-adca-6a619bed07a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b60920-8847-469e-b796-16099f3170f0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3506012-8606-4c7c-9acd-a6eea32c853d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "916269c9-c95f-41c4-9a77-7949c3874e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78985f9a-1fca-497b-a395-30fe491aff53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15e1190-2c5e-4ae3-97ab-01ee9ca0dfa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fd8e83-6252-440f-bafd-ca6242a0bce8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddc3f03-a81b-4a40-8f0c-5a0e3086a393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3852c2c-d7e2-4502-83f0-0ea4ebe014d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc2e2b2-b02e-41c8-927d-4eade40f1883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c076dc-cbf0-4fc2-b064-1f743d225c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0730071-40a8-4939-84a6-4336434a3ecd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cb7d85-477f-46e5-9230-3333729ecdc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eae3e60-a9b4-42a1-b163-2f2bb52330db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c105a45-fd45-4cb4-8b91-b99f10c809d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df82dd3-e0bc-4666-beb3-47667ff5dc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cff8554-c062-4d8a-93bd-6f2c0b0dd2d0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3689b1b1-be86-45a7-a593-05b01fbf5120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b4bcb80-d82e-4c7f-ad0b-92f81efd021d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdca3b47-b906-4e80-818b-932236089efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e9c08a-b438-48d8-8a36-9ae20d412d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac6a178-13a4-40df-b033-af0707ac4e69",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b02a24-3e32-488a-b98e-0b86da36c812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04097209-60bf-4376-a129-2e09dfae81fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8d4bd1-965b-4343-abd8-e60360721c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3505853-d263-4318-a4d6-23dc89548ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04db8bb-aa48-4f3e-841c-31d930177c95",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962b59a9-ba0b-4050-b997-4795beb5ec7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e4aeb0f-0e79-4c8e-bfbd-36b2f4f5708d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "750b696d-940b-4a23-b509-fcc9262a0c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84462431-24aa-4765-85ee-da72285af659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fe3735-b087-49c7-b19c-a0dfe4229534",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063cd5fe-cf7a-4afa-8231-63dfaf1658e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba7364c3-55cd-4a2a-be72-542b2b21bd4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01842b68-34f1-4f25-8b2f-66f63f17aca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48cd188-a102-4f38-8ce0-9a17ca517ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58354949-19cd-4153-bfd5-52c47e7359b7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdf54e5-9630-41dd-9772-39886f45be42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "385be8f9-53f9-4cf9-9a4b-9f6cd0a00b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d976d0-e748-4c31-b26a-6f68552a6a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f431c217-4628-4cd1-8600-11b6aa2d60b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da0bca4-798a-4083-bbf2-7742fb9653e6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa774d3-7590-47b7-b4e9-60e21538c40a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3907eb1d-b82c-4dd5-874d-3881e139bf1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef450fe-d370-43db-b4fa-6594591b76fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1654691-b567-4407-9de2-fd357ae9ff97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c4b7fe-ba1a-4cf1-b14b-931bc0cfd25a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bcb916-62fe-4cff-a93c-3e48d9ee6c87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33a1ce14-3e1f-4aad-b228-7e68b1773c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e7f215-c3b6-4a80-b862-1947e775199a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a653a05b-ba07-412d-aff7-3750fbf48d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5f48a5-99c9-4c19-b3eb-30bc718915f3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40edbc7-24ce-463c-b5be-44d3c3feeb8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32d084d1-8d1c-44a6-84fb-c45fd1c90995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296e7575-24b6-4c4e-949a-a5bf87648091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6790c2cd-46df-4d3d-9efa-de2a9efbfb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81dfb31e-b253-433a-9453-1a792a392d2b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62322f87-d445-49a8-8390-4e889cb03362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea7b4e7f-2db3-451f-b572-c58ebf02f7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50503578-e529-4ee6-ac07-c58a27c16f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f34832-352b-4a20-bca5-85cf06d33007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15ea576-add6-4c83-ba0d-2eb6ace3260e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102f672f-2383-4978-82c3-84bbc0e0dccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba3b99c-b4ca-4dc2-822d-28e5305232b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cf86b7-1b3a-4a87-8c56-cd6347ba528c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40db9c62-0716-4e3e-890f-451dd7c01781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f78c9d7-ad35-4d75-90ab-14511b72015a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360d4c59-4c48-4f88-b33a-22b2818ab876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eb9ebee-4487-45a0-81a0-6e2aedd29c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2059ccce-bf7e-447c-a017-6d6e533c9084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c875f57-1607-45ef-9c88-e050f96f2453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcb88e9-6c0f-45c0-b76a-71e5796d58c4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91071f28-c0bb-4a02-bd07-d5e0e868d9f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "669d1a42-a249-48de-9a5f-b17d00ac7b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619483ba-56b6-4195-ac1f-fc2a73728150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dbc8b3-c9e3-48f6-83dd-cb4a0a0092e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a389646-597b-476e-803b-593042021a6d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e52da00-2ccf-43cf-a64e-68d7c292b8dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6d9fbdf-88cc-49f9-bde6-4e103c6750ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b815e7aa-0443-4c56-a8f0-3cd7c170e452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd3a971-8708-44ab-9fe2-10f34c990242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c2900a-8b37-4f95-a681-1aa2d84b929d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe586b95-23c3-4be7-a169-141afd856978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aa4f71f-3b45-40ac-8d0b-23286bfd8704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799fc6f9-eb4e-4692-bfae-0178fe4c6af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e1f5b3-5158-4fc5-a1e7-77b39b1a8d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1774a4b-0d54-4f23-83e0-726819b95f0f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdf7a3d-b499-410a-afca-d8d0a90858a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "056dbcf8-9c7e-4906-a4e6-955dcd8b6362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845c291f-c065-4d70-80b0-08c3bed34865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa51180-4d36-461c-94ec-474479dee720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0160c5a6-c61a-4323-96ca-1b305c8ff955",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c08cb7-5f8c-46a5-adfb-e5f3680650a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f4ebb9b-c1b8-4f59-8578-523b7b02fab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9851d5-aa12-401e-9337-c0a526fc627a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810951a9-2b63-4a13-906e-b6c85c495f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50eb45b4-2c1e-4532-b087-6d140df0606c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ceb8c5-2cde-489f-99a3-c0bda13ab29d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d04af751-43d3-4983-97d7-9288025372d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bbe258-1395-4c69-ad94-3e88a4ed5dbf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c6fb94-3a05-4c9b-bec9-74656cc401bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00193d33-d54a-441d-95e7-352c3eb9eb65",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e21ddc-868a-40fc-aab8-577919d31bae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d643717a-6a0e-456e-9582-daa143faa382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244b9c08-0ba4-4583-abb2-f5caf48cc066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfaaa279-9ec8-4a10-82cf-8ce6153bf7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660fb0d1-02aa-4598-a521-50c433b93171",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59121464-6709-4b4f-bbf5-fb066af4cb5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81aed5cb-f725-49ee-82ae-284ba80bc51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7367a0-cb71-46c6-a9b7-c7b5ce1a7e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714dd829-f0dd-4627-ad45-ced4d1feafeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820b3865-0fcd-46a4-9c8a-637551b2c00a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6d4be2-1d9e-460f-89db-385e8ec850ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32b734ab-d6a1-4989-872a-f852c1351132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846296da-6b7c-466d-ab1c-902164fd94ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7b145c-9db9-4b5d-8159-f244e9652a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ec323c-1209-4c61-8ea0-d1fc944c372d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e603a91-ddc4-4989-b065-341587351dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4237f625-e5af-434c-acd0-0f0a5cf8326b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718a61c0-74af-4e60-bb08-b2a700ff9c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d9e289-72bb-4459-91d2-c053e3c0a1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfff7a40-8f80-48ba-bbf2-f87c12656d69",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5978a55-27a5-40f8-8cfa-63e49c0e65d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b220b40e-6d4b-4c47-bef0-65850526f56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3f8f6b-fe76-4b51-a54b-0ba6e626a9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a52e1f-2d18-4346-9e84-841d0afa76b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12277b7-213e-4247-a0ed-99c69ec5a791",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d29681-39b2-4f28-a272-6c22f6c2897a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aa1180d-cc41-4454-8fff-43898dcaad7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041052ee-d6ff-420f-9bda-93b7c31ab562",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cc2d0c-bd23-47af-874c-54383e07e51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763c32fe-0c60-45f9-a7d4-dd5e6b04071c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64d9504-ecce-4ed3-98d2-771b551da8a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23a1934e-2b58-4343-9f93-7b04ca4229ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d95a97-7756-4e66-90cd-7d60cb34716e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd88a8b-673d-4607-bca1-1221ed5aaed5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1389ce34-7fa9-486b-9f9c-00f692912182",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91d81ef0-793c-4a87-8d28-eeb7042bca40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5b28e2d-5b75-4499-91ed-7fdd1a84a9fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ce8977b-a856-4ef8-96b4-583565d655dc"
                    }
                  }
                ]
              },
              {
                "id": "1146c446-afef-43ff-afb2-98984134818e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8389a81-e99f-41b6-bf19-44e83be845de",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67400b4-fd13-4f36-8f5b-eac7dfe859f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2f2f9af9-7b71-421d-9b87-784fc2f900bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7368919f-8d51-419d-8851-44ac352bb737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19c854ac-f04b-4f69-91c5-315223b2ea4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d3326bf-9771-4c25-bb52-e0c095842974",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b662d03-2986-47e0-92ad-cde7392dc9fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dfb4256-aee5-4996-b440-f72837a02ad4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db714d0b-7c31-49fc-bcaf-7b3a83617d2a"
                    }
                  }
                ]
              },
              {
                "id": "aceb62a6-6ec4-4eba-8b46-c7a197f8c5e8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c49efb61-b112-4a9a-b96c-69806c07ec78",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2d9dcf-599a-4907-991a-0b94e5952739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "97eb2594-6289-46a7-8e16-4bf39bd97549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03df6878-0466-45a1-bca1-3e451660bd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5a93ca-2ff4-4398-89c9-c6e6d719e6b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "86cbeba9-7704-4a23-ab5b-ef4a9b656a34",
            "name": "Positive Testing",
            "item": [
              {
                "id": "acbd4dce-71f6-481d-a568-38fe5f46931b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaf884de-9550-43c5-a304-834a254720e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f6bf0e2d-3dd8-4d6f-969d-13a13dd33d5a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94db7eee-d9d2-4455-8743-366293fcd00d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49ce2d4f-9cfa-4bb5-b2ab-21504859b732"
                    }
                  }
                ]
              },
              {
                "id": "2954c00e-8e80-44a4-9e8b-940724b100ac",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ccde32c-432c-4e81-90be-a9302812566a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c762a19c-f25d-4f68-9881-f5b7e9b56122"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e203435-bd68-46dc-a38a-04eb4a8f4f09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9268e2de-7714-4983-9d90-2ef61877968d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "574e5fa3-889b-4b0f-803c-2bc9dc8122d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cc869a7a-ec2e-4804-8163-ac215042ef82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd3b7af2-db20-4c99-a00b-82b33aa8a32c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8f8d987-803a-4f12-aa5e-a8ae184e3017"
            }
          }
        ]
      },
      {
        "id": "56975c1a-ab27-465b-8246-52a6c739a854",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f5123501-3d36-4f6c-9aa7-4fae1e7efb09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ccd430c-48c0-4bd1-a0b8-2cc47983a26e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9557656-42b7-41e1-af4f-f8e5a9ad260a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cace4b-b171-471f-9a76-2de170b40a88",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b40f5dbc-17c6-4c4a-b2f0-eae871f0bf4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dba722-cd69-4695-9035-0438062e66d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e9181e5-2a49-4e85-be92-a649c7bda3d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "905dc1de-1858-43c5-a6bc-fb5b2b215226",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "392bd9e4-e629-4367-8b9e-1e39f854349f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dd52e0b-e60f-413b-85b3-6e883bcbf43a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79822595-806e-4ff8-a099-183986b5daa4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39ec7a05-024a-4aef-9025-30c4f91ece5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a0a3b379-3a6b-413c-95aa-0b7ef869f0f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64266833-a445-49c2-b027-055e2746389b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "527fd33b-4b24-4f62-9811-847039bc319e"
            }
          }
        ]
      },
      {
        "id": "a02e0875-353d-4ff4-83c3-39cb44f3773b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cbae9fc7-56b8-40e4-a533-93d86a7ebce2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1df147a0-c3d7-4c74-9994-062829fa0924",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efca7c6b-6ab6-401b-bee2-3c85d477077b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e04515-a6b9-4ce1-9415-a96d8b5d036a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "182c83ed-f942-49e5-b4ef-c751aae4c7e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8582774b-2a5f-4e0c-b8e9-19f0a43d149e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8eedf95-af41-4336-9880-b162885c4b37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2b1d7b0-2135-4ab9-888c-7603e17a11cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44142342-c34f-4daf-a8e2-70d806c539ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "798be5d0-6e1e-480b-9bb2-ed306ad4ff6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c561548-ebeb-4505-92a2-f7979a4dc3f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23b74ab6-6979-43e0-9983-9fe9751c098b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c4bea0fa-2711-4abe-b3b6-ddd18558faad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a640a8da-411e-4c9c-aebd-cb750663fea8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c44f8133-c3b3-471c-afee-b30ab4544e7e"
            }
          }
        ]
      },
      {
        "id": "13ec0a07-580c-40a7-bc16-175381a69397",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "489c4630-0453-4aee-85d1-6db07afcf1c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8cbf4fb1-bd4e-4601-8fb2-cba55f74f1b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b055ede-913d-4c5c-b7f7-c2b8e2617fb3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faad819e-2624-4007-8214-246c01931520",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "091dcc9a-f0af-4b48-93be-c60c50d13955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b2063b-2289-42dd-adb1-8faafb8f44ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3438d114-e259-4601-931d-b2b64425e157"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c768eba1-9f79-4899-a0b8-e0b4e5910f6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "247a4382-de50-4097-9cbc-1be16e306d1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd546ad0-eed9-4399-bc08-538ca9f4893e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c9a4d81-2e6e-4584-b51e-ca83bae86dcf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95295b78-08df-419d-bd02-5fffaf3e9a57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "39bf210d-495f-45bb-bf83-e0ec4d3c0407"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4aff9225-d6e4-472c-bac4-8d650e7535b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a44b6e36-df7a-428e-8900-b196828976cb"
            }
          }
        ]
      },
      {
        "id": "90bfc094-e5b6-41dc-a34a-33c196ab1f79",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76c15d84-52d8-4aab-af7a-eb13c7a13d4b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a7dbff6-fa34-4daf-8ae6-81f3e2699fae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "488b4c0a-9044-494c-b489-7248162e14b2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "114dcc07-b0bb-492e-baa6-01b4eb328189",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71736011-8097-44f8-b1dc-0b9c947dac5c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 98.37301587301589,
      "responseMin": 4,
      "responseMax": 9271,
      "responseSd": 658.6682118032647,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723596047732,
      "completed": 1723596080714
    },
    "executions": [
      {
        "id": "c724e135-5b88-4fbf-8fd8-476dbd740e77",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9d0d02bd-329f-443d-86f2-36d0cc3806e4",
          "httpRequestId": "9a18439c-aba0-487e-bc9f-2eebcd721cda"
        },
        "item": {
          "id": "c724e135-5b88-4fbf-8fd8-476dbd740e77",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1592322c-4fbc-4029-bfa4-993c52c3e7ba",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "22db967a-a686-41df-af1e-5027522a3106",
        "cursor": {
          "ref": "011675d5-24fe-453d-9cb3-052b16872147",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7a5c2d9c-8188-45d5-b56b-a8eb76ac33fc"
        },
        "item": {
          "id": "22db967a-a686-41df-af1e-5027522a3106",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d141dc3c-ee79-4d1d-a99c-031a154a36b4",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "4532d02e-a448-4fc6-93b5-e4f5d8696fe5",
        "cursor": {
          "ref": "69928767-3e9c-413b-aa07-e3c905c41134",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5465c618-2bcc-44ac-b3b5-8d0890bec12a"
        },
        "item": {
          "id": "4532d02e-a448-4fc6-93b5-e4f5d8696fe5",
          "name": "did_json"
        },
        "response": {
          "id": "06aa0446-068f-4271-8f52-92acdd16c6e1",
          "status": "OK",
          "code": 200,
          "responseTime": 198,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e70d44-0c0b-4a31-ba56-ed0fbece61b9",
        "cursor": {
          "ref": "72aa3e32-86de-4b2c-8d83-84f9281d6421",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e967f3f2-9d65-4a84-afe6-58a0aaac92bc"
        },
        "item": {
          "id": "71e70d44-0c0b-4a31-ba56-ed0fbece61b9",
          "name": "did:invalid"
        },
        "response": {
          "id": "9e80f8c5-4724-4ba6-a127-5babf5b010c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 280,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e70d44-0c0b-4a31-ba56-ed0fbece61b9",
        "cursor": {
          "ref": "72aa3e32-86de-4b2c-8d83-84f9281d6421",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e967f3f2-9d65-4a84-afe6-58a0aaac92bc"
        },
        "item": {
          "id": "71e70d44-0c0b-4a31-ba56-ed0fbece61b9",
          "name": "did:invalid"
        },
        "response": {
          "id": "9e80f8c5-4724-4ba6-a127-5babf5b010c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 280,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb30080c-4895-4c06-a540-58dfa5d90a97",
        "cursor": {
          "ref": "d338bad3-cf75-4e04-9d87-669d48bb9315",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "68cb66ac-ba0b-4eb0-8873-6805835bdf80"
        },
        "item": {
          "id": "bb30080c-4895-4c06-a540-58dfa5d90a97",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1e1088bc-1b9a-4eb5-b04d-c18979db2d9b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a2378b-abac-45f0-b887-937dff921ba2",
        "cursor": {
          "ref": "b6641336-5fa3-44c9-96da-7d1a4f29efe9",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "52e10801-dfae-44f9-95a3-83d7eae7c877"
        },
        "item": {
          "id": "54a2378b-abac-45f0-b887-937dff921ba2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "21ab0d07-1441-478c-9cb1-0e19289c8add",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a16df6b-e2a9-4d99-8886-3be3061c6dc5",
        "cursor": {
          "ref": "91ee8f19-3e88-4590-8710-39c6cb57ee2d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1b06ab8b-c08b-4788-9884-7d880826f73c"
        },
        "item": {
          "id": "5a16df6b-e2a9-4d99-8886-3be3061c6dc5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "039222fc-a245-4c46-8745-8c13a0d79b94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e41c59-8d7c-4c9b-8f43-a32703e32da0",
        "cursor": {
          "ref": "996fd3be-40e1-4027-a8d4-cde8749e1c91",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4df28497-a0aa-4d12-876e-26e597b8e68c"
        },
        "item": {
          "id": "80e41c59-8d7c-4c9b-8f43-a32703e32da0",
          "name": "identifiers"
        },
        "response": {
          "id": "a470dcfe-4d07-4979-aea6-787f93e09a45",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fa3a12-370c-4ee8-8fbb-5e5623b5a4e9",
        "cursor": {
          "ref": "a5e0a5a0-8521-4b26-8b55-e30a811187be",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2eeb1d13-3179-44ef-8431-7f89752dacda"
        },
        "item": {
          "id": "96fa3a12-370c-4ee8-8fbb-5e5623b5a4e9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "73039173-d09c-420d-a6f5-46a91da9befe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b6e8fc-ced2-40fd-8dcc-921ee1f89516",
        "cursor": {
          "ref": "8f23c35b-286c-4d05-8ce6-d7950fe85cfb",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b62905c9-6497-4997-9d5e-e51f15fdde7c"
        },
        "item": {
          "id": "20b6e8fc-ced2-40fd-8dcc-921ee1f89516",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5ef1745f-a690-4e35-95fe-a4547efb5676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52ff4e9-5f0c-4a25-a1b0-55dd01b4a673",
        "cursor": {
          "ref": "7cef6901-2440-4d7b-8c12-fb5d4e27e30d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "da84140b-c0f4-42b7-8c58-4088fffab830"
        },
        "item": {
          "id": "b52ff4e9-5f0c-4a25-a1b0-55dd01b4a673",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5b2df4ec-13ec-4352-8c50-c598812d5f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d7c094-61e8-4a61-883b-d72cb23b74b8",
        "cursor": {
          "ref": "b1f0930e-f213-4741-b9b2-552082a6762f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "73ecd4bd-cad5-47d1-ba5d-0ca3928919b5"
        },
        "item": {
          "id": "21d7c094-61e8-4a61-883b-d72cb23b74b8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b8a38933-15c0-4408-9466-d2b88e3830b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16c9cce-1ee5-44e4-9e41-ad36e3528a01",
        "cursor": {
          "ref": "446c9446-47f5-4c9d-a965-e3d86fd3afe9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2735091d-3f93-4c2d-810c-f8878f040dec"
        },
        "item": {
          "id": "b16c9cce-1ee5-44e4-9e41-ad36e3528a01",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bffb8e02-a293-4f8e-9063-fc212b50135f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a031f726-3ff3-494d-94ca-54e8d61fae94",
        "cursor": {
          "ref": "9fa1a8fb-ee57-4673-b5ce-71fae1483f0f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4903fd70-6887-4a52-95ec-08b0dc0a3a28"
        },
        "item": {
          "id": "a031f726-3ff3-494d-94ca-54e8d61fae94",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bba70782-e0fd-4209-abf9-f61898516a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684cf6ea-89f2-4320-a3a1-8cb45a64077c",
        "cursor": {
          "ref": "6964a58a-f49a-4e62-b9cf-ba0977966d76",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1acc12de-a47d-4272-b49b-18b2d3209585"
        },
        "item": {
          "id": "684cf6ea-89f2-4320-a3a1-8cb45a64077c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e1541121-2987-4047-95e1-af8b324b6446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1b3239-537d-43c0-854d-b5b1eb063d9e",
        "cursor": {
          "ref": "e00714c6-9626-44a0-b015-8bace125709c",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "de0970b9-91e8-4ee6-aaf4-681b8d50334a"
        },
        "item": {
          "id": "7d1b3239-537d-43c0-854d-b5b1eb063d9e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c85924da-3126-46ca-b1d7-ac1cfe836d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbd9430-fb17-434b-a6e9-6d5198bdb98a",
        "cursor": {
          "ref": "6d4eb348-5e79-4bec-85bf-2e7e083f5b8a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "836a57ed-e014-417c-8d71-544c87ea1271"
        },
        "item": {
          "id": "7dbd9430-fb17-434b-a6e9-6d5198bdb98a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e95930e9-60e6-40dd-be50-c72ebe460d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db3b953-97a2-4c30-af66-2f05743746a9",
        "cursor": {
          "ref": "5a67372c-b005-4731-85d4-3b17a10c4555",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4dc7bff0-f543-42f5-bbaf-6c522f5e6def"
        },
        "item": {
          "id": "8db3b953-97a2-4c30-af66-2f05743746a9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "93372546-c76d-4b21-8c21-e2810e80bd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623b5b9f-9097-4e64-990e-9cc7fcc70b2b",
        "cursor": {
          "ref": "c1b03714-deda-4ebc-835b-9d7cf66e3e9f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e0ca57f6-3a61-47ea-b540-e19f2a12ccdf"
        },
        "item": {
          "id": "623b5b9f-9097-4e64-990e-9cc7fcc70b2b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cb8a183c-e0c1-48e5-96f4-f65af792560f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80593f7a-c609-4d42-899a-4abae9473aee",
        "cursor": {
          "ref": "2012480e-76a4-4ceb-bba0-f90c239544c0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "562238e0-0152-46ab-bbdd-b6fe7d4b4136"
        },
        "item": {
          "id": "80593f7a-c609-4d42-899a-4abae9473aee",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "234a3ea3-e676-40a9-82f5-99d10ce8a4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c3edd4-3ab9-4ffa-8449-d6739b710f65",
        "cursor": {
          "ref": "b17b2428-414e-4c28-a989-81e03fbb18c6",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3590d4f5-b98d-46ce-b8ab-e974df802ee5"
        },
        "item": {
          "id": "e0c3edd4-3ab9-4ffa-8449-d6739b710f65",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "03cb69c2-5564-482b-86d4-69db6b62f2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f3f740-4b7d-4b78-9f48-de01da78dd86",
        "cursor": {
          "ref": "7d12add4-d915-4528-b17a-8baeee16652e",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2909a700-32fe-47c5-b138-96aa7f135f41"
        },
        "item": {
          "id": "f2f3f740-4b7d-4b78-9f48-de01da78dd86",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1ff6454a-1ebd-4937-b411-0d4bf956c180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f1ccbf-cc19-4eef-9d51-d0ee88068a50",
        "cursor": {
          "ref": "e63930a5-c552-435e-abd9-164625af1f34",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fffe3af1-8ec6-43ba-8dd2-117b8dca7008"
        },
        "item": {
          "id": "22f1ccbf-cc19-4eef-9d51-d0ee88068a50",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "52530456-a079-4cb0-a586-ee9bd7555aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14831eb1-9988-455e-b8f9-a5759024f9a6",
        "cursor": {
          "ref": "6321df97-be2e-4538-8720-475ead84ade1",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c5b25a07-f249-4327-9099-4bc7eb4b0aa0"
        },
        "item": {
          "id": "14831eb1-9988-455e-b8f9-a5759024f9a6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "20f20990-2e00-43fe-80c6-c649efec251e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e27636-9718-4e63-9f79-4fd802e45646",
        "cursor": {
          "ref": "e5d007ab-8e85-4fe7-8b4b-9c52ca15df23",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0a0b45d6-9d69-4887-b448-8d57a0f31654"
        },
        "item": {
          "id": "c1e27636-9718-4e63-9f79-4fd802e45646",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f3b1c794-dc1f-4f64-8ac0-4dde6b62f982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808902f5-aa81-4399-994b-d746064d7913",
        "cursor": {
          "ref": "d6cbd044-57ea-457a-ac86-0d7d047824fa",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1881d7f4-26cc-444c-8cf2-e41b318164b8"
        },
        "item": {
          "id": "808902f5-aa81-4399-994b-d746064d7913",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "aca53d49-7a12-47ed-b6cb-deb45fb393df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08539b36-d61e-4aa8-9719-797bb9625b6e",
        "cursor": {
          "ref": "e6c458e0-75fe-448b-bdd2-e7ab78a82505",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ec569914-86c5-459f-b78b-dd499fdfcec2"
        },
        "item": {
          "id": "08539b36-d61e-4aa8-9719-797bb9625b6e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "54f13c07-3dd0-4939-aff7-d05c5998f929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ff962a-a93b-40e1-b8e9-5deb656a7faf",
        "cursor": {
          "ref": "353e678b-b137-4f21-b45f-ff18d0f00cbb",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "99003cf3-fe46-454f-958d-3793fc444ef1"
        },
        "item": {
          "id": "d6ff962a-a93b-40e1-b8e9-5deb656a7faf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f587a5e0-e86a-4beb-a881-eb9bd2a0720d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16859803-3ac9-404e-9e1c-ca4042dbb9a5",
        "cursor": {
          "ref": "9526dece-c4b6-4454-a187-dd47a473aec5",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4613caa0-d223-445f-8737-3f8f3f93d8ff"
        },
        "item": {
          "id": "16859803-3ac9-404e-9e1c-ca4042dbb9a5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2c5b92b9-8ed6-4b33-be7e-428023f082c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac514b07-43ae-4bc8-82e6-e35dcdd608dc",
        "cursor": {
          "ref": "502918e1-a17d-46fd-b0d7-33932db3e68a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d2b7877d-b4fb-446b-a2a9-12db4ed8a72c"
        },
        "item": {
          "id": "ac514b07-43ae-4bc8-82e6-e35dcdd608dc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "143119be-a491-4a4a-811c-477bdabda9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3047d17-204e-4bef-bc83-2d053a2efa85",
        "cursor": {
          "ref": "35ab48d9-2185-490e-8ac1-86e6e8b05b99",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2a57cca2-ed20-44c7-9192-80b96cbd2542"
        },
        "item": {
          "id": "c3047d17-204e-4bef-bc83-2d053a2efa85",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2f162149-cfe4-4581-a78a-2bc7d07b5558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4e7bfa-cb18-4861-9740-f4bf10803c12",
        "cursor": {
          "ref": "9a50f13e-f90b-4bb9-aa38-32d586a8c454",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "278372ef-b7d0-4f04-b610-7c9d4f2a8fd2"
        },
        "item": {
          "id": "aa4e7bfa-cb18-4861-9740-f4bf10803c12",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e8073430-5636-4a37-97cf-395fb8927e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f36857-cc05-48e8-915d-fb4f2f115914",
        "cursor": {
          "ref": "704817c3-6cb6-4f91-9327-241750bfe18f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "74b9d95c-56da-4f20-ae1d-8d53d0342996"
        },
        "item": {
          "id": "c3f36857-cc05-48e8-915d-fb4f2f115914",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b9b9c46a-a699-4e51-a65e-69e12a497fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e79618c-d23c-470e-9764-b333821327e3",
        "cursor": {
          "ref": "163cab38-234c-4cee-926d-f1869a894963",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4af2645b-894d-4033-a6ba-384da86c0534"
        },
        "item": {
          "id": "4e79618c-d23c-470e-9764-b333821327e3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2caf32d1-1da2-4b46-a747-690ba9f351f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a15f015-9a12-47b2-b65b-af4e878b52f5",
        "cursor": {
          "ref": "1f3929eb-7e32-4d76-b42d-d03428ad8048",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "970accb5-cbc3-454d-bc2c-41d7ececb1c9"
        },
        "item": {
          "id": "7a15f015-9a12-47b2-b65b-af4e878b52f5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dd3f26d1-bdef-4e14-afbb-a434b71b42ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee31470-f660-42c0-93d8-0aa641d541f0",
        "cursor": {
          "ref": "476cd9ef-0d7b-410d-add9-811315464673",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ced8e650-359f-413e-b1cd-0f6792cf2581"
        },
        "item": {
          "id": "0ee31470-f660-42c0-93d8-0aa641d541f0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c8b507c8-a79d-404d-a196-7036701a6329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efdd122-ff56-4498-a8e5-b8f988c022d4",
        "cursor": {
          "ref": "7f512a0f-c348-4f6e-beec-417fbf5072d7",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9e516f2d-9f9e-456a-ae1b-46d8235d328c"
        },
        "item": {
          "id": "6efdd122-ff56-4498-a8e5-b8f988c022d4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "58c4dbb7-bc96-4bfa-914e-1bbc92ebfc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bf8baa-3148-44a5-bc4b-086eae0205fc",
        "cursor": {
          "ref": "e3cfdbbd-8a44-48ce-89e0-d327fdc73f35",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "db2a591f-bf1f-41f9-be2f-f6a273181920"
        },
        "item": {
          "id": "54bf8baa-3148-44a5-bc4b-086eae0205fc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f0aceaf8-54c0-4fcc-a6c8-aee37a6fbcbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993f8f43-ea11-48a3-9b8b-da0fdf084c6d",
        "cursor": {
          "ref": "2c78f754-8917-4784-8e39-ebe2cb3d32d0",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6dcdb966-2295-4387-bc25-87f9cec3f184"
        },
        "item": {
          "id": "993f8f43-ea11-48a3-9b8b-da0fdf084c6d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7ccb1d15-32a7-43c3-9651-fb1242ebe05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da8c37e-adbe-40f2-81ed-4547a3fe29af",
        "cursor": {
          "ref": "49b315d0-cd61-4d6f-9acb-9cc0892b5195",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c454b9a2-c7da-474f-a4d3-834ccf74d651"
        },
        "item": {
          "id": "3da8c37e-adbe-40f2-81ed-4547a3fe29af",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9cfa993a-f4e9-490d-98cb-dfd8083c06c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f923579-44e9-4b11-acd6-bbfb6160eeec",
        "cursor": {
          "ref": "2d6dba12-b2d0-4b85-a4ca-0ebeab09c030",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "158a56e0-c6b9-4c55-a79c-789152626dcb"
        },
        "item": {
          "id": "6f923579-44e9-4b11-acd6-bbfb6160eeec",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "50d06bd0-4964-430d-9785-f9c2aea75b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073dd5ab-43e9-4828-9031-5d8c5814755e",
        "cursor": {
          "ref": "4f02d2a6-d1da-4ea1-870e-4644c2c86eaa",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bac30265-eeeb-4fe5-8987-bf475ae8bac1"
        },
        "item": {
          "id": "073dd5ab-43e9-4828-9031-5d8c5814755e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "501e8368-7a01-45fc-b41b-6d27d09829af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54dd15b-ef22-48e4-9814-6e1ee6c8700f",
        "cursor": {
          "ref": "829788f8-6497-4522-a8d7-6056f73b4562",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b77afa70-99b9-44be-bc95-1eee806c0225"
        },
        "item": {
          "id": "b54dd15b-ef22-48e4-9814-6e1ee6c8700f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4a03476a-3d6a-48c5-afa9-d1b78fcee359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecaeaaf9-3dd1-4b90-9b8d-500d83e82371",
        "cursor": {
          "ref": "8a546212-7856-4841-a02e-e41fa23c8838",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cf1eea41-3e5d-4c48-8de1-b870f28c8b3a"
        },
        "item": {
          "id": "ecaeaaf9-3dd1-4b90-9b8d-500d83e82371",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f29baa24-b90d-4f9a-a73f-abc8800137bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de22ac1c-0870-4774-b493-c2617a15bdb6",
        "cursor": {
          "ref": "33743ce8-6e57-4886-90b5-a9ecc28f3b9f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "abeca25e-69a9-4252-a782-ade1b87b71db"
        },
        "item": {
          "id": "de22ac1c-0870-4774-b493-c2617a15bdb6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "edc118d8-4bd1-47cf-89f3-3bf2b0309e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3288807e-1ba6-4f9d-a54c-61c30afc9deb",
        "cursor": {
          "ref": "e5751599-db2c-47c0-af7e-aff9261ca973",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f28c3fd0-a9ad-48fa-8986-3729b6098e38"
        },
        "item": {
          "id": "3288807e-1ba6-4f9d-a54c-61c30afc9deb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b5bdbf48-b6fd-4fbc-aa1a-29b8c0c9475e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dd15ad-06ff-4666-bf83-eade01edb384",
        "cursor": {
          "ref": "d77fde98-c040-4986-934d-d05453b6343f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0d9ed7e9-18df-47c3-ad17-e68418276210"
        },
        "item": {
          "id": "19dd15ad-06ff-4666-bf83-eade01edb384",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ea6caebb-a129-4699-a4e0-019e7d00e531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8af6f37-17ed-4aee-829b-f6d07f5ec025",
        "cursor": {
          "ref": "3566592a-4023-4451-b923-031ec3884c98",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eabe09ec-1c8c-4d10-8c44-1ed9c684c478"
        },
        "item": {
          "id": "a8af6f37-17ed-4aee-829b-f6d07f5ec025",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7f5884a6-8717-4c91-ac88-163349332e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263362e2-d3e6-4fc5-bf46-5878e9359afa",
        "cursor": {
          "ref": "3c004775-821b-4b05-a545-12387585b869",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0ad747e4-75ed-49b2-85bf-40468f149ff5"
        },
        "item": {
          "id": "263362e2-d3e6-4fc5-bf46-5878e9359afa",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "95d14aba-4145-4665-932b-ddf94dc123af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0b9504-f472-42bd-9467-37781e6c26b4",
        "cursor": {
          "ref": "3496f713-6805-4b5f-bde5-8c95bd670d42",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3a697119-4d9e-4926-a877-baad2e05a29e"
        },
        "item": {
          "id": "cd0b9504-f472-42bd-9467-37781e6c26b4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "37cc25da-410a-4612-bb99-ccb912ac3be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4d5463-b5f5-4773-8956-2b6ba91c466b",
        "cursor": {
          "ref": "51bcf6f0-bbcc-4fcb-988a-ff5cce935b07",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "009b9154-b2b1-473e-a498-c68b51b94c37"
        },
        "item": {
          "id": "ce4d5463-b5f5-4773-8956-2b6ba91c466b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c184090e-4937-4d62-8c3c-70077b936d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b949de84-3101-4b11-b13c-cf93020fb41a",
        "cursor": {
          "ref": "e59627ba-455a-44a2-bd69-82baabd4c517",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ecaf39d3-e952-4f0c-899e-d10c53e53f19"
        },
        "item": {
          "id": "b949de84-3101-4b11-b13c-cf93020fb41a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "306469bb-3a1d-4f5a-9322-5d971f98f698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ff7bc3-2563-442b-bd4d-b57f5758c066",
        "cursor": {
          "ref": "ebaf3f86-e0e1-48f2-8805-b1eee5c8ce4e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ad4b16ae-9283-4361-a77b-1bbfe5bef780"
        },
        "item": {
          "id": "94ff7bc3-2563-442b-bd4d-b57f5758c066",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6bfbf198-7351-4da8-8bd7-52c6b0f097f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea33c2b2-c45d-41a5-a3e5-077910802e06",
        "cursor": {
          "ref": "0d231ae9-6e86-4ccc-b23a-fec2545a927e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fc069d58-59ad-447b-a23f-1827252aadd9"
        },
        "item": {
          "id": "ea33c2b2-c45d-41a5-a3e5-077910802e06",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b776ef4b-542a-4040-b527-2484e4b444ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09efbd66-22e8-4980-bb8f-8a868179a5f6",
        "cursor": {
          "ref": "a501087b-47e0-4db0-bc52-0a004f9b8c72",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2ae4a940-5546-4226-b23f-330274eed365"
        },
        "item": {
          "id": "09efbd66-22e8-4980-bb8f-8a868179a5f6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "30f1d710-aaab-4063-86ae-66779e67bbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57523a2-e2f6-4fc4-b6e4-71003da6700d",
        "cursor": {
          "ref": "cafe99ac-b787-4ea0-96dc-552c90289647",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0152d95f-2a58-4e15-91d1-3346668484f5"
        },
        "item": {
          "id": "a57523a2-e2f6-4fc4-b6e4-71003da6700d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "687e4bd7-6933-4eb9-a5dc-5c3cb491a554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e07e23b-b769-413a-8075-fd053645bbdb",
        "cursor": {
          "ref": "3773327d-1263-4039-bc22-2708d6c0eb9e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fb2a1d10-87a5-423a-9a78-a17abea6c770"
        },
        "item": {
          "id": "6e07e23b-b769-413a-8075-fd053645bbdb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "551fc830-2620-43b6-86e0-eba57bba551d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61885ea-93dd-4f3f-8ec8-fbc494d6be59",
        "cursor": {
          "ref": "23243b16-e337-4fea-9d98-74a97d1a3d7e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bfd24ec8-0e5b-4402-93bf-adcd73ceb37f"
        },
        "item": {
          "id": "c61885ea-93dd-4f3f-8ec8-fbc494d6be59",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ac595e03-d2a5-4019-b659-93f540ff2563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b1beba-1dbc-4f62-a395-c33712b1f390",
        "cursor": {
          "ref": "d7bf2a5f-68be-4a80-8eba-1b8724d91d7f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b1ccf1aa-130a-4618-87ca-c61289cda644"
        },
        "item": {
          "id": "25b1beba-1dbc-4f62-a395-c33712b1f390",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "01ca84c4-5548-4227-a092-596dc982bc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbac67cd-feeb-461d-bf3c-e82c2b14c319",
        "cursor": {
          "ref": "399d87fc-3867-4a93-b810-b7fc066473df",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e1c035d4-65cd-49ab-8451-3ba1e0f5f55c"
        },
        "item": {
          "id": "bbac67cd-feeb-461d-bf3c-e82c2b14c319",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a3f90db6-d778-463d-8659-64fc9c074569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a95846-4d63-489b-a245-b5bdc4b93ce6",
        "cursor": {
          "ref": "e3e36c7e-b4bd-4344-82a5-74bfaa237e9c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e165458b-3ea5-44d3-bf69-b7f840276eac"
        },
        "item": {
          "id": "01a95846-4d63-489b-a245-b5bdc4b93ce6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5cf8989c-d172-45c3-a101-1dc7f05e397b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb050e0b-f383-4457-9db6-c8ad7ae7a68d",
        "cursor": {
          "ref": "b0dc86b6-93e8-462f-ab44-a0c1a532a201",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2008b420-69ba-42fa-b028-1296704f42cf"
        },
        "item": {
          "id": "eb050e0b-f383-4457-9db6-c8ad7ae7a68d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7c512850-e509-434d-b134-1286754e10ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f754ba2-985e-47e1-b34b-83f84a9d1c43",
        "cursor": {
          "ref": "d0cdb8c3-9322-4d93-bf03-804787135c07",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0d9e676f-335f-44a3-be57-224e441533d9"
        },
        "item": {
          "id": "4f754ba2-985e-47e1-b34b-83f84a9d1c43",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "668dfafb-7be4-495f-9807-6d2e2ad1bc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bf66f3-bb9c-4077-8d3a-0f489b1be460",
        "cursor": {
          "ref": "5bae91c5-19fc-4fd8-9dc1-aec18bcff807",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "033d016b-622c-4f61-8478-a0c3cf71948b"
        },
        "item": {
          "id": "d3bf66f3-bb9c-4077-8d3a-0f489b1be460",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7b8b0897-d548-45aa-bd9c-57b46b9cd2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bef317a-5d19-479d-8e75-e47f7655e482",
        "cursor": {
          "ref": "d072837e-328b-455e-a0fb-b73ee40de7de",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0b90ff05-c645-423c-888e-7ae852a43152"
        },
        "item": {
          "id": "3bef317a-5d19-479d-8e75-e47f7655e482",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "46817398-6a82-43dd-a3b5-e90e4c71ffcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bb9e7a-02b8-4755-a388-9835994fae76",
        "cursor": {
          "ref": "9d84895a-e166-451e-abdf-574dd1987908",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "59dd36e6-661e-43f6-93fc-965831eec303"
        },
        "item": {
          "id": "49bb9e7a-02b8-4755-a388-9835994fae76",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "778804ae-53a8-4d55-8e9a-1e85c2fb5f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0cdbf1-b78f-49df-b63a-074a1ac67cdc",
        "cursor": {
          "ref": "bbdca422-6b83-4a96-9caf-e65c53e54fef",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f6f225f5-d65b-4f60-8595-62d055152c1c"
        },
        "item": {
          "id": "af0cdbf1-b78f-49df-b63a-074a1ac67cdc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "eb30f779-c2fb-4c8c-8a10-4a0bde259b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c52f212-9c06-44ef-a884-e105b5c18b8b",
        "cursor": {
          "ref": "9a7e5f1a-9eaf-4fd9-9412-1c140d7c1496",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "927bf808-b869-4640-8859-9fff2d930aa6"
        },
        "item": {
          "id": "4c52f212-9c06-44ef-a884-e105b5c18b8b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d24a9f25-cbf7-468b-aea0-ddcc62485b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb56984a-826d-45f7-9de1-47c177318bc5",
        "cursor": {
          "ref": "3047ab51-3986-43f1-8dac-bb168107eca9",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9ac3920a-0df3-4cfe-872a-436a53fb4715"
        },
        "item": {
          "id": "fb56984a-826d-45f7-9de1-47c177318bc5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "eef21961-9756-4c54-bb4e-5614f93a73d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7401869d-cb7f-4f87-80bf-ff67d2752046",
        "cursor": {
          "ref": "201ce179-58a0-45f9-bef6-523d2f1d3dd0",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2e6f6bcd-ad22-4e93-b5cc-a0dbf3274502"
        },
        "item": {
          "id": "7401869d-cb7f-4f87-80bf-ff67d2752046",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "723ac93e-f055-4a0a-ba3b-deceecf19559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa64bfd0-e966-467c-a48f-69eb93a0526e",
        "cursor": {
          "ref": "0f8a3533-9f3e-49b3-ac78-0918c708bd56",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9b6dbb83-5a59-4501-9207-fbb6e835a660"
        },
        "item": {
          "id": "aa64bfd0-e966-467c-a48f-69eb93a0526e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bc7878c4-861e-4e8e-afa1-2d2b9d5d0ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf27e037-488d-4fe0-aa43-ac31d732709f",
        "cursor": {
          "ref": "47397074-742c-4365-a979-ae93daf92393",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7b405209-afd7-4f40-b771-79fb69f322ad"
        },
        "item": {
          "id": "bf27e037-488d-4fe0-aa43-ac31d732709f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e7ab5889-c348-4a49-b1ad-b8ffc1bd4bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc6c1be-c5b7-4511-88e9-dfa0056835e9",
        "cursor": {
          "ref": "f677116e-f207-4098-9bf8-e76780b09708",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8a90c6b4-2040-4540-a787-2e6d4737aa94"
        },
        "item": {
          "id": "7bc6c1be-c5b7-4511-88e9-dfa0056835e9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "983e3897-bf2b-4b59-b51b-f369c89948a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f30ecc-45b4-4623-bc30-e8428bdab81d",
        "cursor": {
          "ref": "cc5bd4b6-5c4b-4658-823b-7c11530c403d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e9faf984-31e1-43d2-99d6-17d42ba396b6"
        },
        "item": {
          "id": "99f30ecc-45b4-4623-bc30-e8428bdab81d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "000e4e8f-0f1b-4a65-9a08-d019af125bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d4e976-34a4-4b7a-9f78-8338e633256d",
        "cursor": {
          "ref": "9479cdf9-b9cb-4210-813b-d20b84f81b57",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f916f235-7f4e-42b0-b2e4-59d6c7410198"
        },
        "item": {
          "id": "29d4e976-34a4-4b7a-9f78-8338e633256d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0c4fe7dc-cb73-4fc6-b770-fde443a20636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e80df2-26a2-4a10-b65c-4e8f87df460c",
        "cursor": {
          "ref": "89a3348b-8452-4dfe-9e17-0b55ec8c37bd",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "140c3899-75e3-4a54-8336-6b9526808460"
        },
        "item": {
          "id": "12e80df2-26a2-4a10-b65c-4e8f87df460c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "74f57799-b020-4493-9022-12148ea233d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b09595e-5451-4390-911b-db529f4b3714",
        "cursor": {
          "ref": "6eb268d2-2eba-43e2-a494-f6ed0a9969d2",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "230bb35e-781b-44e5-8712-d7822afc545b"
        },
        "item": {
          "id": "9b09595e-5451-4390-911b-db529f4b3714",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c1b66cdc-02b2-4b58-b54a-2abe5b060664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496b937a-ba60-4b8c-87eb-9e007beed9f0",
        "cursor": {
          "ref": "68e28425-e053-4366-8982-08cb8a1e91e4",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "eccde0bb-4107-447a-961c-85f11d0d7f70"
        },
        "item": {
          "id": "496b937a-ba60-4b8c-87eb-9e007beed9f0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7808e1cb-6e10-4c90-87f9-1d5aa899e198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c6f017-ff52-426b-8760-1810b6793687",
        "cursor": {
          "ref": "a0e0826b-df19-44ac-a974-cfd939a50026",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "068e6b65-56df-45d4-bfb0-fadba303518f"
        },
        "item": {
          "id": "55c6f017-ff52-426b-8760-1810b6793687",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1f3936f1-433d-4f66-9a5c-16b12278e6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d93afe-cd2b-4a42-b889-7e3f4f10af3f",
        "cursor": {
          "ref": "4e9902d0-1f74-45a5-8503-822ebd90351d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "aecc4454-6e36-4911-9d2a-d16bf0991647"
        },
        "item": {
          "id": "e9d93afe-cd2b-4a42-b889-7e3f4f10af3f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1fd8d3ff-a231-45b7-9ee9-6a19d524e762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca2c158-9183-4ddc-9270-c006b97aa57c",
        "cursor": {
          "ref": "b5c02938-d727-4385-bcd1-7eb1daab57c3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "999536fc-c0f6-453e-9e53-04d4b9fae197"
        },
        "item": {
          "id": "1ca2c158-9183-4ddc-9270-c006b97aa57c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a6b00ed5-c4fd-4e39-a339-a611ffff6202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885e1f40-8275-4a47-bf53-3996c715e9ec",
        "cursor": {
          "ref": "686f8395-5e4f-4927-be64-debbb3f1c45e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2560c66d-368a-401b-9282-884050ba21d1"
        },
        "item": {
          "id": "885e1f40-8275-4a47-bf53-3996c715e9ec",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "dbf551f9-8f39-4480-851c-b794ddf85fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0d29d8-f19f-4c71-b869-31ec9eaa9ffc",
        "cursor": {
          "ref": "ec4cb83c-65cf-4c26-8c3c-36179f3ca254",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c9e842d4-3636-40db-80f6-fcbce5baf33f"
        },
        "item": {
          "id": "9d0d29d8-f19f-4c71-b869-31ec9eaa9ffc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "56b24435-ba09-4d6a-a76e-4e8a7c4da888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc6a658-beba-4d60-bd4f-7e40e022d1d4",
        "cursor": {
          "ref": "7b7ef934-fc78-4122-817b-ff66954479e0",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6dbbdd23-7788-40fe-a061-412e78429ff3"
        },
        "item": {
          "id": "dcc6a658-beba-4d60-bd4f-7e40e022d1d4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "24007884-0389-4f2d-9a9c-0d0799c99dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77495d7a-2ea3-4083-af45-62d68ba5d391",
        "cursor": {
          "ref": "99ce7952-c948-4b54-b1b1-089d93f9b755",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dcb4771b-e615-4fab-8491-ab7efc28c927"
        },
        "item": {
          "id": "77495d7a-2ea3-4083-af45-62d68ba5d391",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "14ea16bc-a421-45e1-be85-ef0e154cf7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705fa4d4-7f05-4e87-8904-2968afedd16d",
        "cursor": {
          "ref": "2a58b486-6624-4fdd-8964-c36613402ac9",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "710a030c-f153-4323-b407-57c894bcb03b"
        },
        "item": {
          "id": "705fa4d4-7f05-4e87-8904-2968afedd16d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fd18863a-9ed2-456b-a36a-9789433fa7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13772904-b0d0-41c5-ba14-6e507ff0f1f3",
        "cursor": {
          "ref": "d28cd168-8707-4a5e-9212-71cd13aece6e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "38aaf736-ddbd-4a87-9283-73215b3671d4"
        },
        "item": {
          "id": "13772904-b0d0-41c5-ba14-6e507ff0f1f3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "eddc7dd4-fa1f-40f5-89f2-1356a6473b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dbe318-b4e8-49dc-89f4-b75f684a7e62",
        "cursor": {
          "ref": "2acdb0ca-dc6c-41db-a344-dacc64a001bd",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0d3a955f-b8bc-4fa4-8cf3-380e8d163c90"
        },
        "item": {
          "id": "80dbe318-b4e8-49dc-89f4-b75f684a7e62",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f7e29183-abaf-42f5-b869-3a5f9901e31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776811f2-f79e-436e-8050-dc9293d6587e",
        "cursor": {
          "ref": "cae268da-2fd2-422b-820b-431a561756cb",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e89e732e-8f71-4319-9fa7-6e77d18982c1"
        },
        "item": {
          "id": "776811f2-f79e-436e-8050-dc9293d6587e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9106fcca-e307-4e3f-a5ab-0beda1da703f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a917914b-7102-480c-9b48-6ba6042ea456",
        "cursor": {
          "ref": "6cb2d215-f857-492e-91d6-9a537d92c543",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ee4f0709-272a-4594-b8a2-81dec588aadd"
        },
        "item": {
          "id": "a917914b-7102-480c-9b48-6ba6042ea456",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "797583e0-8a50-44d3-83ed-f71c7f82d00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313af345-d8b4-4bd7-b013-2647407762cc",
        "cursor": {
          "ref": "590c69d5-7b6d-4c8f-95b4-8a03abe77f46",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "29444cb0-0dd9-4608-a919-7add420be956"
        },
        "item": {
          "id": "313af345-d8b4-4bd7-b013-2647407762cc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "79d3e80c-a1b4-469d-ba6e-0977f88c9199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7021d071-cbfd-46ee-a6f7-2383dcf80b0a",
        "cursor": {
          "ref": "cc9bef0a-1b4e-433b-81f7-0c2b6a11ce42",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "095c9c14-df2a-42ea-97c6-4fdf62a717d1"
        },
        "item": {
          "id": "7021d071-cbfd-46ee-a6f7-2383dcf80b0a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4a4527e1-421f-4c17-a352-ba9be086edc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036533a1-763a-4dae-a728-a941a122b610",
        "cursor": {
          "ref": "ecb7cb15-0edb-47b6-b90d-9938bc85f328",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "88664ee2-7528-4ca3-84d1-e8c89a0991ab"
        },
        "item": {
          "id": "036533a1-763a-4dae-a728-a941a122b610",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0ec89c29-ede2-45a9-a873-19ec76f3f55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4524bb8a-380e-47ad-b2cc-70d52ec5e5a3",
        "cursor": {
          "ref": "de1790cc-ce9d-4b53-beb6-74dfab2f9199",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3571204f-10e5-4748-932f-205fb210ea8f"
        },
        "item": {
          "id": "4524bb8a-380e-47ad-b2cc-70d52ec5e5a3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b274b0ee-534a-43a9-922b-19fca6f33899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbfeb5a-94d8-4d88-a67b-c8cbb1d66747",
        "cursor": {
          "ref": "986bcc53-2086-419c-bfcf-7669d30d0fb6",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b28f35b9-3655-463c-b0d3-14be0ee62861"
        },
        "item": {
          "id": "cbbfeb5a-94d8-4d88-a67b-c8cbb1d66747",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2bdb9cbe-712f-40b6-91e6-2920b04d96a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e302c227-f97e-4be3-b72d-8d404dc61d2e",
        "cursor": {
          "ref": "a6a875ae-15f0-47d9-88f3-88e99f9a72cf",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "30a9e746-17ac-4dee-93b7-c21e24129683"
        },
        "item": {
          "id": "e302c227-f97e-4be3-b72d-8d404dc61d2e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a4b8500a-bb28-4c48-9a5f-50cc265ca316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2d65a2-f1e9-41db-a596-829c24ef51cc",
        "cursor": {
          "ref": "b3093922-9191-4715-bbc5-69384cb70153",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a5892e45-eeaa-4e82-a2d2-8beb3b836721"
        },
        "item": {
          "id": "2f2d65a2-f1e9-41db-a596-829c24ef51cc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d942ef48-1c76-4be6-a4c6-7a12ef27734f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1be77c8-5ea9-4b3e-97b4-161ee59bfe52",
        "cursor": {
          "ref": "321c8199-3374-43cd-b0ab-b5c56689f6b0",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cf07b7b8-72a9-44f0-ac5a-a2a331dda3bb"
        },
        "item": {
          "id": "b1be77c8-5ea9-4b3e-97b4-161ee59bfe52",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b35341f2-e366-4333-9e94-aa3888b8ea2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc11ca4d-0b88-452f-8c6b-3ebd32ab516a",
        "cursor": {
          "ref": "aa4c36b6-bf53-4919-af4a-4d0bf33a18c1",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c03892e3-790e-46ad-ba4b-1c659c3aeeaa"
        },
        "item": {
          "id": "dc11ca4d-0b88-452f-8c6b-3ebd32ab516a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c213e58f-2b1a-413a-af8e-6857d88ca13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1df454a-ef59-43bb-8cab-cafc6c0e7616",
        "cursor": {
          "ref": "c9c2906a-e2b8-40ca-a10a-39bf5972e019",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e8e921d7-7d4e-4988-91f1-71beb71d9507"
        },
        "item": {
          "id": "a1df454a-ef59-43bb-8cab-cafc6c0e7616",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "62eb3f51-6d6a-4039-ade1-e349602580f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad82d79-9302-4700-83db-b922fe1e172c",
        "cursor": {
          "ref": "de3b63e2-93ab-4652-b839-19874b027ce9",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "48bb200e-73f9-4f21-b0ba-cb6291382a93"
        },
        "item": {
          "id": "cad82d79-9302-4700-83db-b922fe1e172c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "81d730e2-6430-43d4-b16a-38d1ddcd2642",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db29317a-5bfb-40d4-81d8-f115aab280e3",
        "cursor": {
          "ref": "87920b33-da07-4431-881c-b38d96c07daf",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3c0603f5-a86b-43be-8a21-e3d8a2fea4c4"
        },
        "item": {
          "id": "db29317a-5bfb-40d4-81d8-f115aab280e3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9a7c0f24-66fc-451f-a7ce-b49e6b035001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7176ea0a-5d45-4fac-b4aa-36ac5c369e5c",
        "cursor": {
          "ref": "3e167b8e-7f75-4bba-8a5c-adb3940d3a49",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0e37c2ea-9917-49c5-85c6-b2b8282d52fc"
        },
        "item": {
          "id": "7176ea0a-5d45-4fac-b4aa-36ac5c369e5c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1070f377-323f-4e5b-ac26-8638092d53c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0441d0a5-04b7-454a-a926-757859273294",
        "cursor": {
          "ref": "e916cdaa-cc78-4aa4-b681-0192318db70e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8cc32647-d2b4-42f3-9d55-9734830dafa4"
        },
        "item": {
          "id": "0441d0a5-04b7-454a-a926-757859273294",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "06fb6af7-58fa-417f-8e1d-06cfac15cd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "28112c79-cc7e-4cab-83b8-0f6682e8861a",
        "cursor": {
          "ref": "6c7cf748-11a5-4138-b2dc-fd5cfa43066d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1ca2cbc9-91a8-450e-9580-c08b4230e2a7"
        },
        "item": {
          "id": "28112c79-cc7e-4cab-83b8-0f6682e8861a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1def6b80-8d85-4717-b71a-74bb3957182c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "10115b26-e7e9-4507-a81c-abc4b111c7c1",
        "cursor": {
          "ref": "950a6904-5be7-4892-8b87-9682c1dec12d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b309be1d-fcd9-4ec7-a92f-045be8e606fc"
        },
        "item": {
          "id": "10115b26-e7e9-4507-a81c-abc4b111c7c1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ee0a41df-94e3-44ad-8f96-1fe80fa91e13",
          "status": "Created",
          "code": 201,
          "responseTime": 9271,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee15d809-263e-4315-a346-2306c5ac93b6",
        "cursor": {
          "ref": "53d349e5-bb23-4382-a0d2-7a38c9c8b599",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b6f14321-7f9c-45f3-9869-4fbb93ed8480"
        },
        "item": {
          "id": "ee15d809-263e-4315-a346-2306c5ac93b6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "409afd43-15e6-4651-a416-45d84b107497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "75bae9be-0413-48ff-9047-8a5cec399bf0",
        "cursor": {
          "ref": "07839afd-9290-45ad-81f2-7d44d3b5999f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "42a96032-2fe0-4669-8c58-5a9bd9d2655e"
        },
        "item": {
          "id": "75bae9be-0413-48ff-9047-8a5cec399bf0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f870c241-3978-4dd7-8603-9f87b088b533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7eb9aaba-2659-4013-a39a-8104290e696c",
        "cursor": {
          "ref": "044a4dae-49ec-4717-b9ea-421966a0ca82",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2c6fd26c-7b54-4a42-81cf-ba52706e0077"
        },
        "item": {
          "id": "7eb9aaba-2659-4013-a39a-8104290e696c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "77092a79-0594-4e67-b1f1-545751ecbfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3178c6f1-1739-4e2f-ab0f-31be2d1c6fc8",
        "cursor": {
          "ref": "b30ec9e6-b442-466e-845b-780d003dcac9",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6965e4d5-9b2a-484f-91e6-a5c9f462ac91"
        },
        "item": {
          "id": "3178c6f1-1739-4e2f-ab0f-31be2d1c6fc8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "99055004-dc8d-4410-bdf5-413a97cd5965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9149d585-025c-4ff1-ae13-90f26f678664",
        "cursor": {
          "ref": "15f68b7b-ea9b-4eae-b648-a1cc8e92e6a8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9474bfb6-3868-4575-9b12-6773cd5267f4"
        },
        "item": {
          "id": "9149d585-025c-4ff1-ae13-90f26f678664",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9dc522f8-043c-4376-ac24-e01e27a9c0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66544020-17f4-4101-910d-c88094912ead",
        "cursor": {
          "ref": "d32553cb-88b5-421a-9231-b2ff6e588735",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8f2fe223-2eed-4f41-800c-2882973b2975"
        },
        "item": {
          "id": "66544020-17f4-4101-910d-c88094912ead",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "36bf2242-089c-4c3e-9370-5caab68ae7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f184fb56-c643-4f3e-a75a-5163edac4a70",
        "cursor": {
          "ref": "93890dfb-ffdf-49fd-ac3c-df3235f241d2",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bcbd109e-f980-4039-a0e4-1998ba3415b1"
        },
        "item": {
          "id": "f184fb56-c643-4f3e-a75a-5163edac4a70",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cc93b45b-690f-48ab-9ae7-c3a67d853010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f4fed8-86ce-4353-9072-9372867c1c24",
        "cursor": {
          "ref": "54e5bb88-e079-4be4-81d8-d1280a62eb31",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d14231c4-73d5-4f65-be7a-6a1c93868bf0"
        },
        "item": {
          "id": "75f4fed8-86ce-4353-9072-9372867c1c24",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1bee6324-e7de-4cf3-adc4-386498bcc98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f32cc2b-e584-4df3-9f4d-4e5c33d062dd",
        "cursor": {
          "ref": "6f0f8a0e-859d-445b-b120-9f608726ca99",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9c8d632a-f66d-4eb8-9628-385472d81fae"
        },
        "item": {
          "id": "4f32cc2b-e584-4df3-9f4d-4e5c33d062dd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c4b31d6a-f3e1-443c-85e0-88184e0fa1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dd4ee8-a7c8-450b-a4fc-eaad08f3b502",
        "cursor": {
          "ref": "5cc96f54-b826-4938-bc1b-21d6002a7ca3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dc58e4d1-92cc-4bbf-b0a6-f92f71c827d9"
        },
        "item": {
          "id": "d5dd4ee8-a7c8-450b-a4fc-eaad08f3b502",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2424a547-b331-4983-8952-dc69b63d0c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3bb7e5-29f0-4a4e-aa46-c0a323344015",
        "cursor": {
          "ref": "4091ea5b-3918-4b4f-9f9d-8a68c57c68e7",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b16f95eb-9a0e-439a-82e8-8163af3fa1e3"
        },
        "item": {
          "id": "6e3bb7e5-29f0-4a4e-aa46-c0a323344015",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8c942dce-ff1a-4687-ab10-4e5cf2aa039b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31caded5-3a9d-4e50-851d-3f76f6c0aaa6",
        "cursor": {
          "ref": "ab1ac14e-92ef-4114-93a2-f9fa01a64b49",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "aae40648-790a-49f1-adca-aa2ea94303bc"
        },
        "item": {
          "id": "31caded5-3a9d-4e50-851d-3f76f6c0aaa6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2db85726-68f5-465e-b163-d41723944155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f79ce8-67df-464d-a673-55ba51dd8aff",
        "cursor": {
          "ref": "3c6363ce-c649-44e0-85af-3e7495fd48be",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e26aed30-b41e-42e5-bd1c-88edb4a82096"
        },
        "item": {
          "id": "83f79ce8-67df-464d-a673-55ba51dd8aff",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0114b6fd-b856-4a49-952c-bad72b4f114d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce47c58b-3386-4d85-87ba-5d1097e8dab2",
        "cursor": {
          "ref": "6f6eeef0-bc3e-40b3-9684-f636f4e81575",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "05b85e58-6a9a-4051-96f3-f5b75465d7bd"
        },
        "item": {
          "id": "ce47c58b-3386-4d85-87ba-5d1097e8dab2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2d5e1d12-2573-4c2e-bb10-768c00906087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50cf874-e3da-443d-96da-b4a9bc2a0e39",
        "cursor": {
          "ref": "40ffe172-e707-48e0-bb62-b90614fa060b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "42b72912-cbbe-4124-8dee-11a0fed58e5b"
        },
        "item": {
          "id": "c50cf874-e3da-443d-96da-b4a9bc2a0e39",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "93b3c329-4912-43d4-b65c-21ea5bf519d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c859fe0a-5fc2-4e05-ab63-aeb59554f777",
        "cursor": {
          "ref": "9675367e-bb31-40d7-83ab-a8c91d1d59cb",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5c94423c-5db3-46ae-b4ef-9b600b041767"
        },
        "item": {
          "id": "c859fe0a-5fc2-4e05-ab63-aeb59554f777",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bb3d2bd6-473e-4c66-9c35-86c8496b7f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc261cdc-7675-40b6-8ff9-23b3d506c609",
        "cursor": {
          "ref": "d49008ed-4fb8-4567-932d-3a95777fcf9b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3ebb8c54-f71e-4660-a70f-edc00a0762ad"
        },
        "item": {
          "id": "dc261cdc-7675-40b6-8ff9-23b3d506c609",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e6a21594-7b66-4cd9-a1f7-0a05c9b787c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89133d5-e7b1-4861-9ad1-4b770d3b69ed",
        "cursor": {
          "ref": "e5534586-69da-4500-8b25-b107218437d8",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "99bcf4be-728b-44d6-a625-54316ed7b5a1"
        },
        "item": {
          "id": "d89133d5-e7b1-4861-9ad1-4b770d3b69ed",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b74672d1-6595-487b-a936-12e9ca2dd6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df22825-d0f3-4321-b29f-410b542d5bd3",
        "cursor": {
          "ref": "6a717fc5-ff42-49d4-8c56-988334031c88",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ffe9c36d-b9b7-4d88-862d-2f2223f0baa9"
        },
        "item": {
          "id": "9df22825-d0f3-4321-b29f-410b542d5bd3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9a0459e2-e671-4be3-81f4-f970ab55a915",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ab59909a-27c8-45da-af5e-78b10bf1c416",
        "cursor": {
          "ref": "af86c464-73c0-4160-989e-4f097385e379",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "76347f9b-137f-4c5a-b725-4d7221566320"
        },
        "item": {
          "id": "ab59909a-27c8-45da-af5e-78b10bf1c416",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "56061416-ca9f-4098-9344-325de9998f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d10484-90f3-4fce-94e2-3bb0801cd2a9",
        "cursor": {
          "ref": "14cdf550-a9de-4983-8cea-6015aa41b38c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "40fdc34e-3ac0-4ca3-a64b-659bdf82fa67"
        },
        "item": {
          "id": "90d10484-90f3-4fce-94e2-3bb0801cd2a9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2f734914-ef5e-4f08-b766-5f4a95beaca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4f3864-b182-4635-9306-b44ab056eea1",
        "cursor": {
          "ref": "6a73b094-3782-4d28-a233-28f4e625fab0",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "54c317b5-a647-498a-85b6-70bc2db466dd"
        },
        "item": {
          "id": "ab4f3864-b182-4635-9306-b44ab056eea1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c2c1459d-248c-4c09-85a0-c1546d6da95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8b8e04-a5c4-43ba-bb3e-558e2b4b68f7",
        "cursor": {
          "ref": "5ae9b180-7c72-42b0-a6ca-2bc9e837ab96",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4e3a11ab-869e-40d0-9f94-0daed01d019c"
        },
        "item": {
          "id": "ee8b8e04-a5c4-43ba-bb3e-558e2b4b68f7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b1cbb105-d2b4-4f60-9d87-9745b39187f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f9ce8f-cb44-4bc6-ba9e-cbb987ad07c0",
        "cursor": {
          "ref": "5782c0be-8fe8-4e77-9a1a-29f85f30db90",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7650a0af-67fa-48ca-993f-88306aab4c00"
        },
        "item": {
          "id": "61f9ce8f-cb44-4bc6-ba9e-cbb987ad07c0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c71c4d1d-a59f-44a5-9f2c-a2bede1fb48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78982b1f-640c-41f7-8cea-5c1e00663628",
        "cursor": {
          "ref": "aaf5c06c-4805-4d6b-b555-b7be8f0c9b9b",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1b0d6713-b981-443f-a9ef-53e6da26c044"
        },
        "item": {
          "id": "78982b1f-640c-41f7-8cea-5c1e00663628",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "55810c62-dcde-4650-98bb-22e4a4084aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cda8cd6-9a8b-46f5-bf76-2e3fd834bd9b",
        "cursor": {
          "ref": "8487f28e-420c-4371-abf7-3606b449ab90",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "768fb98c-6d8d-4e6d-b813-2ddd4b181ca3"
        },
        "item": {
          "id": "4cda8cd6-9a8b-46f5-bf76-2e3fd834bd9b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4876619b-27ed-43b8-aecd-0058d91d6d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4250c2-1da7-44de-9bc9-4e195aba3287",
        "cursor": {
          "ref": "8ad3a0e0-3f8a-4496-b525-8ad3f2ae83aa",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3ede6b38-eb56-4673-8450-71283856c73c"
        },
        "item": {
          "id": "0c4250c2-1da7-44de-9bc9-4e195aba3287",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f950bbc0-cc96-4e2f-a062-b4d64b3e56f7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 24,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "1bcdf8d2-33ad-48a0-b2c1-136062337178",
        "cursor": {
          "ref": "1adc7daf-e7e1-4eba-8ec5-6e636cbee92a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "de07a3f7-5ee6-4f23-a5ee-9db52337c51e"
        },
        "item": {
          "id": "1bcdf8d2-33ad-48a0-b2c1-136062337178",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c2735c3f-6c51-4581-9596-5399573a296f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257f2cf5-d095-41e6-b287-ce59b2904125",
        "cursor": {
          "ref": "b4549daa-ad1f-4e82-8c97-571e3ebd1a5b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ac0657e2-1444-4b26-8fe1-89b1692662eb"
        },
        "item": {
          "id": "257f2cf5-d095-41e6-b287-ce59b2904125",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a2df776e-c689-4949-8eaf-6c8000621f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e65db9-fc78-4390-8f74-dda63aa99151",
        "cursor": {
          "ref": "95a40051-f3cc-4ad7-be23-9e404a62c272",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6b87bd63-bf91-410b-b19e-70f7ec777b9e"
        },
        "item": {
          "id": "00e65db9-fc78-4390-8f74-dda63aa99151",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "74bd0ce8-3bb5-4334-989e-7e64bfb6c3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e230ed-f428-4aa5-8b01-9a1443b0b221",
        "cursor": {
          "ref": "a8c7a729-480b-47e0-b7ab-442a13181789",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6e6e8fa1-fe50-41aa-9f92-1bd2340acc92"
        },
        "item": {
          "id": "80e230ed-f428-4aa5-8b01-9a1443b0b221",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e0a8c576-d571-4636-a677-d4e03f0d73a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f70136b-1e51-40d6-8d15-0535b8df56cf",
        "cursor": {
          "ref": "1d8efe30-4e54-44a3-9a04-2eedfc8c7ae1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dfbd2f67-d12a-4294-8469-3aa955e1218c"
        },
        "item": {
          "id": "0f70136b-1e51-40d6-8d15-0535b8df56cf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c044d3b-2d44-49b4-9ac3-7c9e37defdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196e2dee-d879-4ce5-a07e-2614d6a6e978",
        "cursor": {
          "ref": "2a5666c6-7f77-4a6e-98cb-e6052e5828e3",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6d210f62-c201-4ae7-a290-f04f19f2bae9"
        },
        "item": {
          "id": "196e2dee-d879-4ce5-a07e-2614d6a6e978",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0b07e737-ea68-44b4-882a-3b0409320d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bf3c38-2efc-4a3c-b95c-f47d63c8de0c",
        "cursor": {
          "ref": "0408b8ed-444a-4481-a29f-966955bdf14e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8217d753-9208-44ec-835f-f2204a6c4de5"
        },
        "item": {
          "id": "a2bf3c38-2efc-4a3c-b95c-f47d63c8de0c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "25420980-7ee2-4f50-98eb-7ba395b38819",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "35614527-d426-4f00-9272-614762c83632",
        "cursor": {
          "ref": "0f0ee2b3-1a07-4918-bdfe-9b4485f04fb0",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0cfb2473-6f11-447d-a8ec-f5810840213f"
        },
        "item": {
          "id": "35614527-d426-4f00-9272-614762c83632",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b83d1329-2f1d-4201-8d2e-bad643558b03",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "a91fabf0-7fb3-42c7-8a44-59863bbd1d28",
        "cursor": {
          "ref": "efe789fe-2850-43d4-8a03-962a2b12ba42",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f2c8f771-7327-4df6-87d2-209149b6a466"
        },
        "item": {
          "id": "a91fabf0-7fb3-42c7-8a44-59863bbd1d28",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fee6e33a-d01e-4651-a6e7-891dd8b465d2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 392,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "14da9e66-3aae-41d4-8bb8-e9b8835e2034",
        "cursor": {
          "ref": "d4777ca4-f302-4c9b-8482-457e41659016",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8146eef1-7b38-4c36-b63b-c495b2e3001b"
        },
        "item": {
          "id": "14da9e66-3aae-41d4-8bb8-e9b8835e2034",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3864e7f2-e676-4bca-aa55-7a533639a246",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "400bf980-ebc3-4b7b-a413-1b24d2c37b0a",
        "cursor": {
          "ref": "b2574029-71cc-421a-a7f5-4960b18b5879",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "951c425b-27ae-487c-8cd0-b5943bdece7d"
        },
        "item": {
          "id": "400bf980-ebc3-4b7b-a413-1b24d2c37b0a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1f8d5107-4e41-41ed-a9e8-2d476fc4673e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 24,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "5883666b-9d44-44c4-be38-33031050d843",
        "cursor": {
          "ref": "b2d7df3a-0872-4356-a33f-223cbab0ea42",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f2d47324-7557-4587-8eb4-a6ad7e9fe058"
        },
        "item": {
          "id": "5883666b-9d44-44c4-be38-33031050d843",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "05146cc7-a973-48f5-b80e-6d2d890428e0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "acf83b59-85a4-4021-8b6e-1b0b4278c5e4",
        "cursor": {
          "ref": "93b8e59e-128b-4edb-8afb-ea85607ad760",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7a7623c1-6195-429b-b61c-cd35b5101c68"
        },
        "item": {
          "id": "acf83b59-85a4-4021-8b6e-1b0b4278c5e4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2b63e34a-6ac5-42d8-aa8e-7ed69f142d4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463a38a7-f20b-410c-8426-3a4a45d3ad53",
        "cursor": {
          "ref": "fb1c3d87-d5d1-4db3-8b0d-22aa8c847955",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "54c1d98c-ac3e-4bfc-aba1-6a5842224834"
        },
        "item": {
          "id": "463a38a7-f20b-410c-8426-3a4a45d3ad53",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "16b96061-76fe-4205-bbd7-20718e9a2735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c8ee8c-e4c9-4dc4-b43a-d58af76962c2",
        "cursor": {
          "ref": "cee91172-697c-4e9c-9016-b916980fbf96",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "317caa63-2a5a-4ccc-a718-d9c03c1434ca"
        },
        "item": {
          "id": "33c8ee8c-e4c9-4dc4-b43a-d58af76962c2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "646fc695-d9f2-4c3a-a9d7-0e035f89a274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae8d975-64f2-41f1-87e3-5fb363f4be18",
        "cursor": {
          "ref": "4189dffc-a524-4210-a358-20c6291b88fe",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d1bb2329-2d0e-461e-8f3f-653e80f57a46"
        },
        "item": {
          "id": "bae8d975-64f2-41f1-87e3-5fb363f4be18",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ada19e0d-4c0a-41bb-b0a0-60ea065ba591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8558c368-c9ad-49b4-a034-549283d6b1e5",
        "cursor": {
          "ref": "8080114e-7dd8-48fc-90ca-d0e17f7b0162",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9d3655ca-5dc8-4a6f-a804-0064d8846e82"
        },
        "item": {
          "id": "8558c368-c9ad-49b4-a034-549283d6b1e5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dc0f7976-10fc-4537-b7d6-6aa6137653e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c422e76-64d2-4a87-a371-d1719830d0e6",
        "cursor": {
          "ref": "5c904ad5-4ba0-4b3a-95ec-89ec8b2e74a9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d19876d1-9156-4f5f-a7f5-bda5efb7728a"
        },
        "item": {
          "id": "4c422e76-64d2-4a87-a371-d1719830d0e6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "abb1ef34-ba38-4990-a517-8f1b3d3cc099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c74bb25-73de-46da-9be8-7c1914ca9fa8",
        "cursor": {
          "ref": "e34535c1-c506-4718-b198-8f28ed2541a7",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "08b66590-c1e7-4e74-b243-71c270e014bf"
        },
        "item": {
          "id": "9c74bb25-73de-46da-9be8-7c1914ca9fa8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "485e74bd-a62f-411b-a8f0-3c3c8e2a15c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429574e3-6b32-42c0-864e-a1fb10f9c947",
        "cursor": {
          "ref": "0b649256-a760-4b20-9937-fd089a50c290",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e13e7a55-45f5-42f8-9ad8-33478a715fda"
        },
        "item": {
          "id": "429574e3-6b32-42c0-864e-a1fb10f9c947",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0ca66989-7e8e-4a9d-8a43-04a6d376746c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be325208-7c21-48af-9eec-f50d014c26ad",
        "cursor": {
          "ref": "2cff8413-8a75-4dcb-bce6-37c6b772a3ce",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ae03cd27-1c32-48ad-949f-b4f0eb65ea84"
        },
        "item": {
          "id": "be325208-7c21-48af-9eec-f50d014c26ad",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "295fe464-071a-4391-b1b1-6c952e4a24db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97dc57e-0181-491d-9050-9ba67725e9b5",
        "cursor": {
          "ref": "895cdf5b-f4fb-466a-9406-3c974d28ba30",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "40298193-f47b-4a12-88db-2f5fe5bddb99"
        },
        "item": {
          "id": "e97dc57e-0181-491d-9050-9ba67725e9b5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d97a45fb-fb46-47a9-a725-6f3b646367cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e105beab-5bc9-4da2-abc2-61cd48e69670",
        "cursor": {
          "ref": "3480659f-e739-40c4-b2b9-fe0877a5dee9",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "016add1a-7299-4fae-a6a8-687ac17641c0"
        },
        "item": {
          "id": "e105beab-5bc9-4da2-abc2-61cd48e69670",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "de0fdff1-aac4-4997-adfa-cbf6e11eb5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea40be5-09ba-41c4-aac0-238798b86aba",
        "cursor": {
          "ref": "669bddb6-97ad-41ae-8d8b-29aa45ed7e6f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5d7d39ce-fc0d-42cd-b6f4-e6fa1fcf55a8"
        },
        "item": {
          "id": "eea40be5-09ba-41c4-aac0-238798b86aba",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "724aa61c-8026-41dc-adaf-30028977046b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529df655-78ec-404a-be47-8edff7882af6",
        "cursor": {
          "ref": "b0a7617a-ec2d-4070-bca7-a5e1ef34a4eb",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "49395a84-296c-4431-a242-a598c6d92915"
        },
        "item": {
          "id": "529df655-78ec-404a-be47-8edff7882af6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "625dedcf-8fec-428e-87f1-3fba20cedc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9257d9-5608-43f3-90fb-f2d4a256f802",
        "cursor": {
          "ref": "1c1287f7-c1bf-446c-8c5b-6a3da821c0d5",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "41e81432-987e-4eb6-a642-47fd1a8618be"
        },
        "item": {
          "id": "6d9257d9-5608-43f3-90fb-f2d4a256f802",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "625b668a-6a90-4620-b6a0-5d369bceefad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3b5aa2-5768-4b75-a85b-b6d2073359a4",
        "cursor": {
          "ref": "52672be2-6d5b-400a-b3d8-153cbc860155",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "41cf560e-7c9a-4a99-94c1-247c359d1477"
        },
        "item": {
          "id": "3e3b5aa2-5768-4b75-a85b-b6d2073359a4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3505f375-73be-4511-add2-4f8258f30ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25890b75-f8fb-45ac-9165-5b81547aa4cd",
        "cursor": {
          "ref": "6e6f95ec-7fa1-4b09-acba-6bf9e43f5bb0",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "41c566dc-eac1-435c-a6ec-cb640fbbebce"
        },
        "item": {
          "id": "25890b75-f8fb-45ac-9165-5b81547aa4cd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f287fcdf-f6ba-46ca-9392-b4c5ea4f682d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdb6ba4-6386-4442-ba13-258d80669cc3",
        "cursor": {
          "ref": "298f4519-0742-4397-bd8d-92591bc0f229",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9070c948-6e5b-4aad-ab22-592c8a5b4717"
        },
        "item": {
          "id": "cfdb6ba4-6386-4442-ba13-258d80669cc3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8672b327-90b4-4cc5-b1c9-db924379906b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989dc101-509c-4d7e-9cf0-1eb849a64201",
        "cursor": {
          "ref": "bc8eec11-f320-4260-a8b6-2e584a410bef",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3945f736-ce37-4078-8ed4-f5e7a5df23fa"
        },
        "item": {
          "id": "989dc101-509c-4d7e-9cf0-1eb849a64201",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "013a4b3d-2ea4-4ded-b71a-367260924d75",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "2d297f97-03d0-4a5f-bf03-17162847ba06",
        "cursor": {
          "ref": "c4884033-7e1e-4b0f-a6cd-1c8186a104b0",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cabb38f2-5442-4d75-846b-a004f85c0a24"
        },
        "item": {
          "id": "2d297f97-03d0-4a5f-bf03-17162847ba06",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0a31158d-5140-48f7-aaf1-4d41a5e3acdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416ceab4-ac99-4ab9-b51d-dbde0c18a209",
        "cursor": {
          "ref": "313727a5-ce71-4a90-8748-54385ef34865",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f2b15679-ab52-410c-a02c-06ee506166e1"
        },
        "item": {
          "id": "416ceab4-ac99-4ab9-b51d-dbde0c18a209",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "701cf1fa-6d18-463c-a154-3de2cc7f8fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76b6f5d-437e-4857-af0e-f37f7fe3828f",
        "cursor": {
          "ref": "fcf4c88a-56db-48ce-8b3d-67fc64e61bd0",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ef790167-486c-4559-9f5f-8056a394fcde"
        },
        "item": {
          "id": "f76b6f5d-437e-4857-af0e-f37f7fe3828f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dbfe9bb8-e25f-4a1a-946f-d983361fa35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96465e5-4bd4-4deb-a425-d545d7bc3acf",
        "cursor": {
          "ref": "11864802-a449-4b57-8661-cb4c577eadea",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "22d0a57c-84a4-4b16-a1c0-2b73a92410eb"
        },
        "item": {
          "id": "d96465e5-4bd4-4deb-a425-d545d7bc3acf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "30cc52a6-6554-46fd-a47e-ff4f360aff68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca459ce-4755-44b3-b807-f2da88b7b221",
        "cursor": {
          "ref": "33d2cebc-70d6-45e7-9c64-77f902eec4ed",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "573664b8-b038-4edb-a363-4ba7cf4fc675"
        },
        "item": {
          "id": "bca459ce-4755-44b3-b807-f2da88b7b221",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2e7d970c-8173-4f6c-a450-505beed88415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f57f6e8-de10-46d3-8332-81079393f590",
        "cursor": {
          "ref": "e46aae80-a99d-455b-93b5-e4ff62826196",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "49302c42-b69b-4e36-ba37-5439444987a1"
        },
        "item": {
          "id": "0f57f6e8-de10-46d3-8332-81079393f590",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6a05b401-d059-48f1-8843-c333b99ec3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e146df9-d6e6-4f92-af78-cab869fbfa04",
        "cursor": {
          "ref": "e04b3c75-416f-4544-a881-db882f337e31",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a8780267-b634-4fbf-9c64-336bb543ea45"
        },
        "item": {
          "id": "1e146df9-d6e6-4f92-af78-cab869fbfa04",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "54539eae-dc39-45b7-a0cd-473acc6af50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abd75b0-cadb-4799-8b46-359d3f5893f7",
        "cursor": {
          "ref": "63961a3b-6b38-4d04-947a-11ac56177b85",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cc4cb85b-f735-4d46-8650-7de1b562e48f"
        },
        "item": {
          "id": "1abd75b0-cadb-4799-8b46-359d3f5893f7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9cc8004c-7083-4a41-b68f-4f4013148f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d7b6ad-deaf-4b60-af5e-ebec2ac98bb6",
        "cursor": {
          "ref": "3f032558-f618-421b-b153-c596d3da4a7b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7e371145-a155-4835-a610-528e4fee7f31"
        },
        "item": {
          "id": "98d7b6ad-deaf-4b60-af5e-ebec2ac98bb6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "77549c25-d3b0-47aa-9117-5209f74f23da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01526f31-a743-4480-b0cd-6ba53127c039",
        "cursor": {
          "ref": "69a5ece9-2f78-4ada-af0f-b3c2eec8e00f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "96711dc1-ed02-45c8-b38e-b95257cdf2e1"
        },
        "item": {
          "id": "01526f31-a743-4480-b0cd-6ba53127c039",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6355ce3d-45cc-415f-bbb8-c6319f774dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fe4194-919d-4f3b-bd6b-fa0826a8c64a",
        "cursor": {
          "ref": "6ab7d4a8-00e2-4302-b9c1-5115955be18e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8656a00b-1546-44e3-a8a7-ebfefc8b5041"
        },
        "item": {
          "id": "e0fe4194-919d-4f3b-bd6b-fa0826a8c64a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a9d9af14-0f5b-4241-ab2d-96aefe3885e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d738159-4e17-4a8d-8ad9-7b4d5fefc131",
        "cursor": {
          "ref": "8fc21223-7e4b-439b-b355-a824a94c7a0e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "65ddf9c4-7724-4d82-bb68-6a2af3387846"
        },
        "item": {
          "id": "7d738159-4e17-4a8d-8ad9-7b4d5fefc131",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e8500712-6d93-4552-b36f-ddd9dd2aff0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f935f513-9603-4c2a-9ee3-6790c592b566",
        "cursor": {
          "ref": "fce09732-487e-4bf0-8a9e-1c396a6b8f26",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "daf9e3eb-e0eb-4954-9ca4-74bba7c20319"
        },
        "item": {
          "id": "f935f513-9603-4c2a-9ee3-6790c592b566",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1e841cd4-9b99-4137-8a54-6cb0c3aa2e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0341baf-93eb-4ebe-8200-7334d91d29e0",
        "cursor": {
          "ref": "405a7d5d-62a0-4f65-9754-b282a202e2df",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "71e677fe-832d-4aa7-a9a0-648bd55b5cbc"
        },
        "item": {
          "id": "e0341baf-93eb-4ebe-8200-7334d91d29e0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7a20a293-d034-46ed-8edb-d1f07aa53db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e36043-eeb4-4c1f-b04f-eea1d0d6c2f9",
        "cursor": {
          "ref": "332c54e4-125a-44b2-b6c7-42f0649389e2",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1e135ff8-9df0-4013-bfe2-4e37289c6828"
        },
        "item": {
          "id": "99e36043-eeb4-4c1f-b04f-eea1d0d6c2f9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fd05c108-5f97-4f57-b88f-d5004a05ad9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0562f8-d9ad-40c1-9777-a6de8555d65e",
        "cursor": {
          "ref": "3a9f2c6c-b8ac-4c5e-ada9-10928caaf470",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3d33997f-f677-4593-9936-bb7eec2c455d"
        },
        "item": {
          "id": "0c0562f8-d9ad-40c1-9777-a6de8555d65e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "92dab4d3-7484-42d2-b746-2f791603da9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3943facb-8b64-4375-a347-52d7bf7a01b6",
        "cursor": {
          "ref": "abcf9d7c-a752-4362-854d-5fa1b15ae5f8",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7ac7817f-8049-4ab1-afa3-b761cf3034e7"
        },
        "item": {
          "id": "3943facb-8b64-4375-a347-52d7bf7a01b6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "60b7a057-0189-430a-9b4a-aa96e92a8507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f33c28-2672-420b-a927-205146dae51a",
        "cursor": {
          "ref": "19e53949-56dd-4eb1-9997-ce0ccd3b2230",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "62b8a771-4df5-4f25-b401-aacf46e3a2a7"
        },
        "item": {
          "id": "55f33c28-2672-420b-a927-205146dae51a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8b21a03c-446f-481b-84d9-9f11f4290038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744440c2-1881-417e-a852-2b6837729c86",
        "cursor": {
          "ref": "540d8a74-51cc-4c89-ac69-5b54526c9820",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9e7117ba-7adf-47d3-ad0b-176d93d3aede"
        },
        "item": {
          "id": "744440c2-1881-417e-a852-2b6837729c86",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4ea1c1eb-f7fe-4fa3-932f-008d17f3a092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958956b6-1726-4138-9b75-2a9a04087c86",
        "cursor": {
          "ref": "c40a58cc-7ca4-4fa7-8476-e837d732e4a3",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2fa0e0ee-b402-4163-8ec7-cf1350af88b1"
        },
        "item": {
          "id": "958956b6-1726-4138-9b75-2a9a04087c86",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0d0e753e-50a1-48b6-b1b1-dad1dd2c7748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104dc4d7-5b35-4dd5-8513-1153b9d4eacb",
        "cursor": {
          "ref": "aea29db6-f9d4-4132-a086-3a4fec2a2032",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c1deb0fe-6da3-4568-a3bb-24717ccc3d4a"
        },
        "item": {
          "id": "104dc4d7-5b35-4dd5-8513-1153b9d4eacb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "47b9feaa-5984-48ea-802b-019353534148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a456a2-90ac-4aa9-bf71-88e769988026",
        "cursor": {
          "ref": "6817e9fc-834d-4126-a317-73004f3a0526",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d1038d58-e4db-4048-9e76-834d354a4235"
        },
        "item": {
          "id": "55a456a2-90ac-4aa9-bf71-88e769988026",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "df4b8758-3949-4d7a-8ee2-03d41ca6dc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f36ca8a-790b-472b-93e2-a66661ad0be2",
        "cursor": {
          "ref": "70bb0e56-b6b2-43f3-b6b6-faea6abe1b87",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "86805e77-55e5-40d7-8af5-c75d6b9bf478"
        },
        "item": {
          "id": "4f36ca8a-790b-472b-93e2-a66661ad0be2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "17c902b6-050c-4d98-9713-6dd3cd89e4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9c4be6-ac05-4342-be48-06ec062d6b12",
        "cursor": {
          "ref": "8d1d46c9-c644-4c76-aaaa-e7767768976d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6622eb82-c51f-41fd-b53d-6ffd494c6d2c"
        },
        "item": {
          "id": "8d9c4be6-ac05-4342-be48-06ec062d6b12",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dffbf6a3-f7dc-4ff5-8f1b-a9bb08984c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a05e75-d934-4e2e-b8be-90f1f6bb3f74",
        "cursor": {
          "ref": "39af5af7-a80a-4a2e-9f20-c7d3bc90bc3b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f344af74-871f-4a82-8b4d-31c6382a8693"
        },
        "item": {
          "id": "36a05e75-d934-4e2e-b8be-90f1f6bb3f74",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "04a51da2-2682-4a84-aad0-8cca50d9b117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef23cc95-1b79-4201-822f-84a4d60f2ade",
        "cursor": {
          "ref": "6d25abd4-7f0d-49ae-8f5f-54d18e78aa51",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "002756c2-2b41-4a18-9a8e-0cf69839a47b"
        },
        "item": {
          "id": "ef23cc95-1b79-4201-822f-84a4d60f2ade",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f7183729-569a-4205-86cd-47246a46d7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecb240a-4f39-4076-a117-56cc1d0ad503",
        "cursor": {
          "ref": "e9f665af-3742-425c-8204-913a2d434cad",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b22fdd07-4f28-4022-b15e-c7f3ee2db1b7"
        },
        "item": {
          "id": "cecb240a-4f39-4076-a117-56cc1d0ad503",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3a45a8d2-c1af-4e82-a1c6-f627b471f612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbb95d0-6ccf-4134-ba49-671c89b1b3c4",
        "cursor": {
          "ref": "99755d11-0b6b-4669-8eba-61064a27f5e6",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "844bbba6-2b68-4d0b-af35-6edb2421e6b8"
        },
        "item": {
          "id": "2bbb95d0-6ccf-4134-ba49-671c89b1b3c4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6629047f-b49d-4129-967e-27d71f45e543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ad83d8-03dd-49ab-b3eb-b0cc42288ba7",
        "cursor": {
          "ref": "341f927f-80a8-4cf2-a442-b5fba6181843",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9549dcf5-0e9f-44b8-96d4-a2817e30dcfc"
        },
        "item": {
          "id": "14ad83d8-03dd-49ab-b3eb-b0cc42288ba7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "07781784-e0eb-44af-9229-ade1dd38a622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaaefd0-4193-447d-8ccc-7478e5fd5d21",
        "cursor": {
          "ref": "dfe8b366-f766-4673-a991-204e532213b6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "138b4c39-9571-488a-ad1e-9a9cd73e6074"
        },
        "item": {
          "id": "6eaaefd0-4193-447d-8ccc-7478e5fd5d21",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1f15bf5f-3e94-411a-82eb-6c83c1e644e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8141ef48-ff0d-4754-83c3-79c84919da56",
        "cursor": {
          "ref": "a937c94b-1286-490b-9f22-24b1b5411e71",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bb5ca525-c3d1-4f26-8704-58bc060498bf"
        },
        "item": {
          "id": "8141ef48-ff0d-4754-83c3-79c84919da56",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "846a3c34-aeae-4972-af27-5983dabdbadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd33936b-3ef8-43bf-a624-8ff0fd57add9",
        "cursor": {
          "ref": "3e90d34e-cce4-49bf-85f0-97419380b486",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "de3e01bc-367d-44bd-919a-4301532a6314"
        },
        "item": {
          "id": "bd33936b-3ef8-43bf-a624-8ff0fd57add9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "97574675-4c86-4941-901f-7f3780fdcc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87098bc7-03dc-4ad0-8af4-30bf2ff9ed7d",
        "cursor": {
          "ref": "a6ee3808-d536-49b5-9a60-4cd16f0f17bc",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3a6f8486-670f-47d5-9c9f-a90fc7480966"
        },
        "item": {
          "id": "87098bc7-03dc-4ad0-8af4-30bf2ff9ed7d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c531361e-eeb9-4510-8ef8-2e4371ba10bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d53d7a-e1c2-4e31-b84b-f61b0d6f6f31",
        "cursor": {
          "ref": "d07050fe-8292-4ede-aeea-54eb3de7eb3a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "914b70ab-62cd-4722-bd2d-d87c9975fde8"
        },
        "item": {
          "id": "28d53d7a-e1c2-4e31-b84b-f61b0d6f6f31",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bab5835b-b87f-415c-826a-6ff8404dfe84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab54b84-ccff-46f0-9f1b-436e7a521edc",
        "cursor": {
          "ref": "ec17e5ff-d50f-487a-98fa-714c76613412",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bb88b955-3114-44dd-85df-755e0d52f1dc"
        },
        "item": {
          "id": "9ab54b84-ccff-46f0-9f1b-436e7a521edc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2212f4ad-cede-4a8a-afe0-9537edf275ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fcba0f-64d6-4a11-8b34-f540415c8165",
        "cursor": {
          "ref": "c74f559d-3a75-4717-adae-ba50d90f93fb",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "554dc4ee-7899-457c-8ce9-524b5d0d9dd9"
        },
        "item": {
          "id": "28fcba0f-64d6-4a11-8b34-f540415c8165",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e46b05dd-74dc-4220-a9a4-47847c3f19c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51df6ff8-b72e-4302-919c-cc75a73a665a",
        "cursor": {
          "ref": "3ce60c76-a186-4823-800e-cdc04fd5e6a7",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e8eb304f-b49e-44ba-ad48-a0a7ccb64860"
        },
        "item": {
          "id": "51df6ff8-b72e-4302-919c-cc75a73a665a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8a0906c7-31e5-4326-8061-c50e8edb6c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46288e92-75f4-44c0-81e1-227157f9cbde",
        "cursor": {
          "ref": "a1b741c1-e434-436a-8623-1701404fff65",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "09088bb1-d2b6-4d06-aba9-121ac0f03d02"
        },
        "item": {
          "id": "46288e92-75f4-44c0-81e1-227157f9cbde",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d6668258-b870-491e-b066-efe292b8055b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f9744f-96db-4d00-b6ba-d4087fa2c67c",
        "cursor": {
          "ref": "0672d83b-1439-41a4-bf62-b1982bfcf90a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f32e8214-ca0b-4fad-b7df-23f2d49dc1b1"
        },
        "item": {
          "id": "12f9744f-96db-4d00-b6ba-d4087fa2c67c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "637a2c30-2a3b-489e-88d0-40ac3d782da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9387130e-c534-4e87-84a7-66f1dd4b6a1f",
        "cursor": {
          "ref": "095004bc-64ab-4227-8b26-efe651c1c76a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f17ff69f-71b3-46a7-96f5-e8728249475a"
        },
        "item": {
          "id": "9387130e-c534-4e87-84a7-66f1dd4b6a1f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cb458536-61af-4507-9321-463d025b72a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3e7785-9337-42da-9878-5e573a6600ff",
        "cursor": {
          "ref": "cd55728d-22fa-4fcc-a462-7db431b3b874",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8765b15b-150a-4840-b2d5-97b5af79d8c4"
        },
        "item": {
          "id": "df3e7785-9337-42da-9878-5e573a6600ff",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c93232a2-d878-4ec0-bc78-928479d6a2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d0af5a-7cf9-4013-ad9d-996e6a077824",
        "cursor": {
          "ref": "76e3d9bc-e27c-440c-805d-ca091020f29d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ad31d7ab-8c83-452d-8a1e-f841aea04d83"
        },
        "item": {
          "id": "81d0af5a-7cf9-4013-ad9d-996e6a077824",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "af4cac50-f15e-434e-b12f-651dce9cd4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a194663-0865-4801-9706-25b35912e76d",
        "cursor": {
          "ref": "78d7a7b8-a08e-4123-8a84-dc9061c5a4cd",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6f7f90e3-1e29-47f7-bf72-6fb4e535f3c8"
        },
        "item": {
          "id": "5a194663-0865-4801-9706-25b35912e76d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "181c1267-19ea-4654-a968-6a27b16d5eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a8d2f7-609b-4c0e-a379-9cb778ec6bcc",
        "cursor": {
          "ref": "8604ba3c-916c-43ce-bf8b-2657e55eb313",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5f4061f3-8e65-4aa5-b070-df3f0eaddf60"
        },
        "item": {
          "id": "d3a8d2f7-609b-4c0e-a379-9cb778ec6bcc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a76465b6-707c-4f03-addc-9fbba2d62140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f67fb08-0b49-4e75-8868-374c55eee724",
        "cursor": {
          "ref": "763d0f5e-3f0e-4d24-9357-2d86cd194bc6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "51fea68d-2d2d-4654-9dee-425ccd116c67"
        },
        "item": {
          "id": "3f67fb08-0b49-4e75-8868-374c55eee724",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "588badad-dd5b-42e9-b02c-0e231d37737f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19985dea-cdec-4051-a66a-a3b92bac9e99",
        "cursor": {
          "ref": "4f183044-7f59-4a80-a3cb-48a718d4d034",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "958ec149-3e80-4601-8784-9b097743435a"
        },
        "item": {
          "id": "19985dea-cdec-4051-a66a-a3b92bac9e99",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0fd6813b-acde-4534-8222-8c7b0d083322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6f6135-77f3-415f-8a95-6f695d699422",
        "cursor": {
          "ref": "d6e20a37-0925-475a-a507-892bced5d8f9",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "06318973-f315-47cb-bd37-642a791edbfe"
        },
        "item": {
          "id": "4b6f6135-77f3-415f-8a95-6f695d699422",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4b9cf2bb-b6e6-4065-b0f6-324902b78d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d89b0c-2b04-4bc7-81a2-4a49ebdabf4b",
        "cursor": {
          "ref": "3ac599a3-cd2c-4868-bac4-82db8ba5e049",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bee71050-62ba-46ed-817a-46d52f265c41"
        },
        "item": {
          "id": "38d89b0c-2b04-4bc7-81a2-4a49ebdabf4b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2490ceeb-f81e-4e2b-98bf-0bf7b90f939e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1776ee1a-4a61-4365-a15a-33332cab879f",
        "cursor": {
          "ref": "51f5a22b-6fe3-4840-aacc-ea2d4db393f6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7d27da1c-c62f-4692-a1f5-61428e62697c"
        },
        "item": {
          "id": "1776ee1a-4a61-4365-a15a-33332cab879f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b6407e77-5ec4-4ede-b069-52c447db02ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcc69b3-b9a4-4ee0-bc15-81a131cd0038",
        "cursor": {
          "ref": "526f38e6-44fb-43e7-b78d-aef425c03193",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b84c3fa2-3fa8-4d4e-bfcb-3af0e531e414"
        },
        "item": {
          "id": "6dcc69b3-b9a4-4ee0-bc15-81a131cd0038",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c08f9a08-e097-49ec-abac-1ea5f2d4925f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35111a1c-0120-473f-ac71-d37bb0c28b30",
        "cursor": {
          "ref": "af4e5588-e699-47a9-9a5c-a7e5209cdcea",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c8f5880a-cf9d-4d3a-841f-554d1f0e37b3"
        },
        "item": {
          "id": "35111a1c-0120-473f-ac71-d37bb0c28b30",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dbfeadb6-1dcf-4aa7-84ad-bfd222565f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6031115d-1c1d-478c-9da8-18be6e3893f0",
        "cursor": {
          "ref": "20d54b95-5b02-4d4e-b700-63d74ecdf0c1",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b6506c5e-8ddc-4ab6-bc4a-1a32f03576ce"
        },
        "item": {
          "id": "6031115d-1c1d-478c-9da8-18be6e3893f0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4aaf977b-d45c-4960-8ec6-f5dba33356f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65ee6ed-ebb2-4861-861a-530696fe1be4",
        "cursor": {
          "ref": "3f6e5a75-2b38-4bc4-93d4-50a85cdb18b9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "594ddcdc-803b-4f05-9fd8-f03678b83bd0"
        },
        "item": {
          "id": "d65ee6ed-ebb2-4861-861a-530696fe1be4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "16ce180a-caf6-4032-aec1-401104e81391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b60920-8847-469e-b796-16099f3170f0",
        "cursor": {
          "ref": "b0f267fb-f497-478d-9060-b8d21051346d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e1c1ab75-fa25-437f-a75f-4c0ec99a73eb"
        },
        "item": {
          "id": "06b60920-8847-469e-b796-16099f3170f0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f0bf0058-57fe-46ff-89d3-cc36078f1527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fd8e83-6252-440f-bafd-ca6242a0bce8",
        "cursor": {
          "ref": "6623ed3e-18a5-42d5-9a9a-767ecf994d58",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f03fdc0b-e7d5-4920-ba86-56c639381aa3"
        },
        "item": {
          "id": "36fd8e83-6252-440f-bafd-ca6242a0bce8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8a5fb627-74cb-4bc3-8791-e33588328ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0730071-40a8-4939-84a6-4336434a3ecd",
        "cursor": {
          "ref": "7d5bf7f5-aa8b-4e58-a836-c381996f4762",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d935c0ed-d1dd-4f69-b773-e330ec29f7b7"
        },
        "item": {
          "id": "c0730071-40a8-4939-84a6-4336434a3ecd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "20139e17-e59a-4df6-9a42-0483f42178c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cff8554-c062-4d8a-93bd-6f2c0b0dd2d0",
        "cursor": {
          "ref": "ba0a43a6-26fa-4413-849b-d31c993e3ccd",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0cb6b8fe-6bea-439b-b648-12be6b0e1731"
        },
        "item": {
          "id": "8cff8554-c062-4d8a-93bd-6f2c0b0dd2d0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "66825938-5199-4822-9640-0a177a97250d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac6a178-13a4-40df-b033-af0707ac4e69",
        "cursor": {
          "ref": "57d3149f-b401-4cb3-a55c-c1928c224dde",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1cadc37b-3b20-4b2b-914c-0c6678f78e07"
        },
        "item": {
          "id": "2ac6a178-13a4-40df-b033-af0707ac4e69",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d33051df-b154-40ac-89cc-43d60763ca1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04db8bb-aa48-4f3e-841c-31d930177c95",
        "cursor": {
          "ref": "b3ac412e-a5bf-45e2-a85a-f424c533f0be",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e73911d0-a7ca-4670-bc37-ccec17d64568"
        },
        "item": {
          "id": "b04db8bb-aa48-4f3e-841c-31d930177c95",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9578bcae-c20f-48fd-bbb2-af286845e0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fe3735-b087-49c7-b19c-a0dfe4229534",
        "cursor": {
          "ref": "c0785513-259a-4b26-bdb6-4c27487a9074",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f07c9ad4-894d-47fb-8c2e-67be2cda981f"
        },
        "item": {
          "id": "e8fe3735-b087-49c7-b19c-a0dfe4229534",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f86f4f73-1a99-4745-8d99-964d204b39c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58354949-19cd-4153-bfd5-52c47e7359b7",
        "cursor": {
          "ref": "8c962df4-36eb-4238-bb29-8bf0f4aeacea",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8394de98-9ae0-45d5-b6f7-e7cb5b166f7d"
        },
        "item": {
          "id": "58354949-19cd-4153-bfd5-52c47e7359b7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0750188e-44d4-4fa5-a030-06dadb483a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da0bca4-798a-4083-bbf2-7742fb9653e6",
        "cursor": {
          "ref": "3b33d227-703b-4543-9c5b-95411c82b3cd",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a7cbdd27-f0fc-4ebe-ad24-e66e0ef79485"
        },
        "item": {
          "id": "6da0bca4-798a-4083-bbf2-7742fb9653e6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "19c536b0-3c3d-463c-aa5f-50f8448b3bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c4b7fe-ba1a-4cf1-b14b-931bc0cfd25a",
        "cursor": {
          "ref": "d61605ab-ee89-4fc1-8383-415c1cfe08a0",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7cf6a424-7063-43f3-81b5-2b1b6fdf0940"
        },
        "item": {
          "id": "64c4b7fe-ba1a-4cf1-b14b-931bc0cfd25a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "640838ae-a475-4517-a820-3f0fc858b7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5f48a5-99c9-4c19-b3eb-30bc718915f3",
        "cursor": {
          "ref": "aea9f009-52e4-4c6c-b630-1db1ddb32531",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2b77bbb9-aabf-45fa-84a4-66da09616eee"
        },
        "item": {
          "id": "3f5f48a5-99c9-4c19-b3eb-30bc718915f3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9724fbba-4b10-4e20-99c9-1acd9c6227e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dfb31e-b253-433a-9453-1a792a392d2b",
        "cursor": {
          "ref": "47325143-5f8c-4dd6-ba58-a8ed7b8e655d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "782722da-b48c-4192-83c2-e3c0dc02bb73"
        },
        "item": {
          "id": "81dfb31e-b253-433a-9453-1a792a392d2b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d0824cfc-8e64-4b12-ac22-c88c7328f9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15ea576-add6-4c83-ba0d-2eb6ace3260e",
        "cursor": {
          "ref": "20526c41-7717-4907-b44b-a6fa12adde06",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "51f84e88-e6be-441e-8f4d-3016c88a4b59"
        },
        "item": {
          "id": "d15ea576-add6-4c83-ba0d-2eb6ace3260e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f0deba3e-18f9-4615-a6c6-cc655fbb333f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f78c9d7-ad35-4d75-90ab-14511b72015a",
        "cursor": {
          "ref": "2e0ceba1-2fd5-413b-93a9-986c32b2d3ef",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "64ea96f0-cdcd-44c6-aac0-f9a12057ce06"
        },
        "item": {
          "id": "4f78c9d7-ad35-4d75-90ab-14511b72015a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "809dccdf-d1de-4b2e-82f5-75984b169549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcb88e9-6c0f-45c0-b76a-71e5796d58c4",
        "cursor": {
          "ref": "a9079faa-d18d-4480-869e-10ff97714da0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7a87f03e-a927-4d71-b62c-981886b10910"
        },
        "item": {
          "id": "9dcb88e9-6c0f-45c0-b76a-71e5796d58c4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b6dd73de-d36d-4e0a-b08c-a17cfbcecd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a389646-597b-476e-803b-593042021a6d",
        "cursor": {
          "ref": "958b58ba-ffcc-48a8-aa71-9b2d2f66d1fe",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3e196fbd-083d-448c-b1cd-fea5ea76cea7"
        },
        "item": {
          "id": "7a389646-597b-476e-803b-593042021a6d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "19ad2e64-ac98-44b9-a55d-6f74f86b9ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c2900a-8b37-4f95-a681-1aa2d84b929d",
        "cursor": {
          "ref": "1709cfc1-c6e0-4436-8e67-56c2e7a4cefe",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0f5ff423-f33d-4ae8-b85f-d232fcedad9a"
        },
        "item": {
          "id": "f5c2900a-8b37-4f95-a681-1aa2d84b929d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bd283101-51d2-4541-bd92-7095680c36e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1774a4b-0d54-4f23-83e0-726819b95f0f",
        "cursor": {
          "ref": "d4eaea05-2d7d-4d7a-b40e-8ccfe7248946",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1ba34d3c-16f1-4a57-9411-4aa79d702a41"
        },
        "item": {
          "id": "f1774a4b-0d54-4f23-83e0-726819b95f0f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1a056e5d-94dc-4128-8a3b-f5a2a9277d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0160c5a6-c61a-4323-96ca-1b305c8ff955",
        "cursor": {
          "ref": "70c5641c-6933-478b-be30-2f58073c6029",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "233a7c43-98c7-4e83-8c35-eb03110f6d7e"
        },
        "item": {
          "id": "0160c5a6-c61a-4323-96ca-1b305c8ff955",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8f5cedb8-7d29-4def-b841-06ac91b334f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50eb45b4-2c1e-4532-b087-6d140df0606c",
        "cursor": {
          "ref": "82321709-b84f-4cc3-b541-9d4c8dd03136",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4deca19a-dfe3-43fa-aad5-0962ba74a0ba"
        },
        "item": {
          "id": "50eb45b4-2c1e-4532-b087-6d140df0606c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fa4b569b-bf8d-4e68-878a-76a3181508a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00193d33-d54a-441d-95e7-352c3eb9eb65",
        "cursor": {
          "ref": "8416c169-3fef-438a-8da8-83271bc785bc",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3afa7f74-220e-4be6-b76a-5559e900413a"
        },
        "item": {
          "id": "00193d33-d54a-441d-95e7-352c3eb9eb65",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "eed24a7e-1005-45e6-8b5f-b0c5cf557ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660fb0d1-02aa-4598-a521-50c433b93171",
        "cursor": {
          "ref": "aacf0511-9257-48f7-a82b-086239872bea",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "72a90c4c-8e22-4450-bb81-164e65476637"
        },
        "item": {
          "id": "660fb0d1-02aa-4598-a521-50c433b93171",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8d650f4c-c23e-4c83-b70f-90a13ae2112b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820b3865-0fcd-46a4-9c8a-637551b2c00a",
        "cursor": {
          "ref": "bbddd4e1-b57f-4843-8136-0f504ab3625c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f9e7b16b-b6d9-4ba3-ae7e-a08b9e201db3"
        },
        "item": {
          "id": "820b3865-0fcd-46a4-9c8a-637551b2c00a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a6249a5d-c3e6-4d60-8c04-f9ee06c58088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ec323c-1209-4c61-8ea0-d1fc944c372d",
        "cursor": {
          "ref": "1348e4d6-a342-4fbc-8cf9-c50e9fbd9abd",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4af3410b-944d-4b9f-a140-4b79eed3f1e3"
        },
        "item": {
          "id": "81ec323c-1209-4c61-8ea0-d1fc944c372d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c71deaae-1260-40e8-b4ab-9a7e87985ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfff7a40-8f80-48ba-bbf2-f87c12656d69",
        "cursor": {
          "ref": "d06fd381-b9f4-4f0a-858e-35f9dcc8e8b2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9e58cb51-e151-4641-b3dc-68d3d7b866e3"
        },
        "item": {
          "id": "dfff7a40-8f80-48ba-bbf2-f87c12656d69",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "34e441c4-a00c-4c9c-be13-04d2321a3b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12277b7-213e-4247-a0ed-99c69ec5a791",
        "cursor": {
          "ref": "38c84fcf-9a52-4946-a983-4f5cd4dc6f62",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eaa0569e-e363-4272-9c58-a477460f93f1"
        },
        "item": {
          "id": "f12277b7-213e-4247-a0ed-99c69ec5a791",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b9c6e615-e65f-41e4-a9aa-dd72938704d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763c32fe-0c60-45f9-a7d4-dd5e6b04071c",
        "cursor": {
          "ref": "453a0e8f-7a1c-475b-b27a-4c67a5c57fb7",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ea97f7f0-b230-4451-b52d-a9cd1af8b8a2"
        },
        "item": {
          "id": "763c32fe-0c60-45f9-a7d4-dd5e6b04071c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f3246455-baf5-400d-a5b4-e7378334e1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8389a81-e99f-41b6-bf19-44e83be845de",
        "cursor": {
          "ref": "f02b1bb5-44a1-4228-be4d-aa3192b0fc05",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fa3efe75-7aa5-4d1c-b445-01d12a3d0196"
        },
        "item": {
          "id": "b8389a81-e99f-41b6-bf19-44e83be845de",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "45ec9206-f65c-4506-899f-acccf19e4e1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49efb61-b112-4a9a-b96c-69806c07ec78",
        "cursor": {
          "ref": "d9ddd476-60eb-40d5-9b76-6384d668d716",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dc5536cb-86aa-40c3-a7b6-60893a1158a9"
        },
        "item": {
          "id": "c49efb61-b112-4a9a-b96c-69806c07ec78",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "04462751-3000-468d-9810-377b43dc8d8d",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbd4dce-71f6-481d-a568-38fe5f46931b",
        "cursor": {
          "ref": "65173517-4ee9-4b69-b5a7-dc076ecd2fbb",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6ba582e0-4145-48f1-81c1-db08cd7acb19"
        },
        "item": {
          "id": "acbd4dce-71f6-481d-a568-38fe5f46931b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7dfbfe81-316e-475e-844d-5c9275cca1c6",
          "status": "OK",
          "code": 200,
          "responseTime": 3131,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2954c00e-8e80-44a4-9e8b-940724b100ac",
        "cursor": {
          "ref": "1b460058-d08c-4fa1-bee5-8ea992f3e664",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "52d6434e-667e-43fe-8dc8-f63a909adeec"
        },
        "item": {
          "id": "2954c00e-8e80-44a4-9e8b-940724b100ac",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "61808a71-ab8e-49c2-b780-bf1001e1fc23",
          "status": "OK",
          "code": 200,
          "responseTime": 2960,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9557656-42b7-41e1-af4f-f8e5a9ad260a",
        "cursor": {
          "ref": "b3e085b3-3649-4e7d-8923-7ca3b42462d9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cfaefe74-3aa5-4c7c-b429-612c7fbdc289"
        },
        "item": {
          "id": "e9557656-42b7-41e1-af4f-f8e5a9ad260a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4fa2d01b-90d8-4c5e-bba2-31dbcf7a01f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9557656-42b7-41e1-af4f-f8e5a9ad260a",
        "cursor": {
          "ref": "b3e085b3-3649-4e7d-8923-7ca3b42462d9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cfaefe74-3aa5-4c7c-b429-612c7fbdc289"
        },
        "item": {
          "id": "e9557656-42b7-41e1-af4f-f8e5a9ad260a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4fa2d01b-90d8-4c5e-bba2-31dbcf7a01f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efca7c6b-6ab6-401b-bee2-3c85d477077b",
        "cursor": {
          "ref": "12f22547-beb8-4355-9c57-06e45d925c96",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9b1b9643-23c0-47ef-95a6-79495a91c583"
        },
        "item": {
          "id": "efca7c6b-6ab6-401b-bee2-3c85d477077b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f8ea3250-57e7-4551-8f57-370e7d3d9a0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b055ede-913d-4c5c-b7f7-c2b8e2617fb3",
        "cursor": {
          "ref": "a6d5e7c8-074f-40dc-a47d-2b80438e49bb",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "03af0ea0-8fed-4eb3-a5ef-44a3592218a1"
        },
        "item": {
          "id": "8b055ede-913d-4c5c-b7f7-c2b8e2617fb3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b1095665-798b-4525-bea9-fa7f18d21b33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}