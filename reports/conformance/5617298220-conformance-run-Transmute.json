{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bdab7690-723b-4bc6-9807-2cfad06a70dc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ab9e5e11-0cab-48bb-ab98-800e0e4d0d45",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "314ae0f9-a4ec-42e7-ae9c-03a71e434b87",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9c1e99d5-7f92-4f86-ace8-13519a193d1b"
                }
              }
            ]
          },
          {
            "id": "2524c18d-e6dd-4e3c-8056-df1ff837382b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d09aec03-cd79-4791-b518-bb9612df5637",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6f3abc90-3635-41a0-b1eb-915516618be6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9bd8e23d-c4ff-4dec-9e72-7e0dacefa8a2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b9b3b346-7d4a-4911-8735-95561ed5190c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83dd0c94-ea21-48ac-ae03-92527c9f6f05",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7344fb03-93ba-440f-b6ea-5d4a46079df0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aff749d2-c5d0-48d3-9ee1-d4f4f6f1c1fa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c72a4d9-ec87-4383-a550-f1587b0613e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22cb6245-668c-48a3-9cec-f8231e6f6d6b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "314d1a24-df04-4171-8000-c195d34ce1df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f4f6a97-334e-4af0-8550-293cfe88632b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6745b7b-1e75-47c8-9fa1-f60f0dbee7db",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c2ecfc47-63b1-49b8-a898-8ced437099ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f12592c6-6c4c-4905-a7e2-9918a69a3eae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea9537b0-39ed-4b00-88c3-759d9205b07b"
            }
          }
        ]
      },
      {
        "id": "31776ad0-bcab-47ec-994f-c42bb3c24726",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "36bcbf9d-736e-4fbf-9d3d-4d7b80cf1d50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79f92573-5b79-46d3-866d-e1ef9af6bb6a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "360af357-dc5c-4356-9149-db1af324ec2b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801b1fe8-152e-4354-ab37-8e8a13af2a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee5d3135-ede0-41ae-9f91-6e03afc4939d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6005bca-9533-41d8-b96d-617d07aa2867",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5e22cb-6c59-45ae-b79f-5919450d0017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c00008f2-c8b5-45ee-986b-5e1e35be4681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bc42a6-b268-4478-8482-215f2f32772f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098548d3-7f60-426b-aadd-da9398e4a253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9145c35c-16e0-47f7-bfc3-3369074e0d67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b45941b-16eb-4f7c-a72c-1160c149bd89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1a87551-78d9-43ad-8718-51ea3391d1bd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41835f1-1e6d-4e19-abba-206b4b41c77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3918c78e-d676-4a6e-9587-c5ea3fcd6e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d427f7e-7fe4-4f4a-aeaf-ecc55494e365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acfb5c0-0fcc-44a4-a4f2-f43b73453f9f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "56b9f894-6956-49f1-922f-7893805d2bb4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c5dcda3d-24ab-460d-b457-4b584dd93f55",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f4137a5-5671-45c0-9fc4-76d95f21085c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2badfd53-c06c-4571-8427-6cd464baad02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9281c40-03c5-4523-9580-d5a142e50fcd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "da2b4b89-4665-4c68-8e0c-c189255e74c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8319482-b693-4e9a-92af-3f39c0e8c8d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b4bf931-8410-4fde-9884-a364f1b0c89d"
            }
          }
        ]
      },
      {
        "id": "2cf911c3-5b62-4a88-ae3b-e45713377f0e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ccd3925f-bf6f-45d8-ae55-9c2531134b48",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9cf4d22c-1b51-4368-b4d3-0376e083c413",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c33a1871-64f6-4f95-b4b9-698207722c04",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9e62b1-10ea-4c45-9a85-f208f3798da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec7f76d-440b-4d2a-8f00-b39bf19173ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b3e21d-4a66-4d04-9120-1c565c6898e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d8423c7-8fb8-4120-901b-3d46e55f3c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d79e34-44e5-47d5-801e-0058fccdc6bc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19071607-d9c6-41bb-9663-757fcf411851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca09ba9-dc0e-4655-8f5e-b5836ce22790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c46ce8e-d468-45fc-b211-cd6bcb93a0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69bf46b7-c21c-420c-8820-0cb41a99e1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1420a9-8179-43ac-a25a-cd6247936a63",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9d8ab2-47d9-4b95-b2f4-da967c6bc405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1b6a6b-a16f-4239-addd-6b4b7cd1630f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66d709a-43d9-4317-8cbd-7f6af58add54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d78db6ef-d351-4d39-a9af-53f918bad50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242b69ab-2fd9-49ad-8ec0-b6d85a07d800",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddce714-6e4c-4472-9ad8-90a83d80e79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6df421-ebf6-43a2-874e-2d38c8a17a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6923f1-5afa-4aec-8b45-7b56400e9922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f68e2cd-9d97-47b8-85f1-9c810a0853af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1a28d0-d210-43b2-bd1d-2e749dffe811",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67cc935-024d-4cac-a87b-7a8bcf369c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1af587-6b58-426c-8225-7e2c11f1da2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260e0c2e-a6f2-49f8-8fe3-a2f0a67fbe4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9eba6ad1-5f46-458b-bb19-4a75a77c44e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d11050c-f5b1-4fe1-8372-31eed568958b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf930b7-441e-4e3e-98ec-d80c20356c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41733dc2-ea38-4ab4-9544-346969517573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fa2d64-4d41-4c9a-be0c-67097b8e823b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d07a9be7-7503-45d1-95f9-b3f5901ffdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beaca70b-8552-4632-9358-bb39a4bf3121",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f7861d-86e5-4ee7-8fc0-da1845112355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600104b3-5bdc-4e6a-a851-d792c55b6851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a8b7ea-0cd7-4cf6-84ff-06e241f0c677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8073d78e-48da-4fb5-9d27-c77beb055f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e16e02a-c8cf-4c28-9fbf-1b0ec51be073",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b59547-69a4-44ef-91b9-79981134731a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca7f313-698b-4845-a4b2-aaf9483e277e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c179e9b3-3298-48f4-b189-7dfa55ef1f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8278cd5c-57b5-4caf-b383-e54e80fd85e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44540566-060c-47f1-82d1-d70dbe712d7b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573fc6be-4014-40fd-a1f9-50e90ec8c1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b3e5eb-ced1-48a4-ac1b-bf18eb1705d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e8817e-ccc4-4489-96f6-cecb60086825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f610e702-2969-4f46-9161-baa61b3082a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d9121b-bd9a-4b45-9e38-51848039cc1d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11656478-6add-4ab0-8215-253e5dc4fa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9384be6b-76ba-473d-99c6-b9915cfee67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18fb391-8ea8-46eb-85e6-eb98495c56a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2f3d14e-2240-4738-8b8a-b77f0b770ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b69fa2-b0a2-4e22-b576-3de92842dbc2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23e2f1c-54c2-46c6-80c5-46abef546c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9f753f-c9b5-4057-99a5-5cd01bd6dbb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8a7e5f-1ec3-4428-a418-7be4a0e10889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86687c42-e91c-4982-b2b7-9353d2cc949b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743da7cd-18e9-4ea1-bf32-ea43ebb3bff2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc216f9-43f7-431f-ac3a-c017fe5b75c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3331ba5f-42e0-4faa-bb5e-688c6a9fc69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79653cc9-a514-4988-9902-b114b98b48f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6ddd024-540e-498f-9123-594b022ca821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d20db63-9bcf-4c42-8fd1-d874007f6a52",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1e1aba-00d3-4c2c-981f-c7c3da259195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3b2c29-4508-44b2-bdd0-5a59630749ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4d6c25-e5f3-43a7-ba6e-e389faa059c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eabda71-f626-4f83-82c2-bbc2902dbc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21bb33a-d555-430a-bf5b-ce39f18f5d68",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a2101c-945d-4f8f-9be4-fbd942adabd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a14fbdb-3827-401e-a1f7-0fb32b2edb2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83193af2-4e7e-4366-957e-32ec096fa6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc0409e6-eb8b-47f7-9186-b88ea4d6270c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66726f73-1058-424f-b80c-5d01031529e6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260e9f48-8af1-45e9-82fa-119bbe92a059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6649641e-475b-465a-b62d-503668f58689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c623ed5-bd18-4c06-92ea-e19ba38e631c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0497f7b5-57ba-4915-9320-ccafd93abfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7489d06-8a7f-4c95-94c1-bc575a3f1de5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a121b9-e37f-4cc5-843f-cd4baccff1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c3b7a0-d899-45c4-8c11-9baed4cb5f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36240b2-6c67-4aec-956e-4641a93d7031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "349915bd-7967-452f-98fd-c244fa256885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad8b3d0-5824-44a8-b3ae-1ef9eaf90e39",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960c4fce-939c-4450-b678-13d9fe21ad39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168c0169-0780-46a2-ad73-6bbf4b99499b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb50535-1545-46ba-ae91-f72e620a49d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3993e614-762d-496c-b113-3235f5dd79e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a26669-cb8f-4a20-9156-a365d32cc98b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19e1f97-6d5e-405c-b2f6-b92b67383e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767cd442-3927-4dee-ae4d-232a272fd01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a219c13-8d34-4ed7-8a77-55df416c7236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "407ee171-210f-4d2a-a903-af4399b48422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dac325-cd2e-4534-9706-2242cacc7354",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bff0fd5-41f5-480e-a2d0-0c956d579636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7aa39e-9028-45b5-9255-0e30ecfb3e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c7aeac-e7d2-41f6-82c2-cba0ce0492dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa8ad2c-de35-444d-8e91-7da5e6d0e4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de3b5c8-e767-4237-95d1-97a5699cc644",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c61658-835d-4756-b8d8-691646cdb979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7235bd4-7f72-4ea9-bb45-1bd3902f56ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8dcf68f-7a8c-4ae2-983b-8b28d9a663df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa7b349-58d5-4150-806a-f26ce741c02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f129a4b7-2d7e-47c3-a9c0-811373cd8106",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a832cec-6cb1-45d8-8edd-9a0cf451ee0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f0ec2f-963d-4893-bfd6-a92a7b66150b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33383671-9ae4-4305-b462-6585d6586180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54b40ebc-c8e9-44dc-9987-ce19fa2e28b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b6c01a-724c-41f3-bc08-c606a9ba14b4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea6035a-08c8-4ee4-b5c2-70181f47b4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5405d12e-26e2-4f8e-b6b0-a9830b835ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1940eb2-5e61-4fa0-86b2-11445e6a5c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a838b6a2-5f8f-486e-9b08-ba659d7bdd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92414fde-741a-49e2-aa23-5e75e42feeb1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd1b69b-8f00-469d-ae7a-4bc1de469b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f384905c-827e-486d-9462-5aed4001d78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0148d4-88bb-4546-8575-16ecf41b488a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d06731c-3dc4-4415-bdc3-cd19f36d5fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559b2e69-b6fe-4763-a176-491c262cc1b1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c53a82-5e43-497d-ab32-99eccbe41005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791cc4d7-0e98-4834-9e2f-6418dd0df428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f72ddd-64d5-4697-9dab-0b59be2a8d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4d0ad2-63cd-4e4b-b0db-637376bb60fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ec262f-d276-4a4a-86ba-9c98baca7a99",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8390b0a4-53f7-4f05-8880-f1ce368da22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a768bd8d-cc75-4bd5-9c52-2ea20a6f8294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b871df44-4cf5-4214-aa27-cfd7c52fe881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1248e52-9580-4626-81f8-ee591674924c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6763aaa-cce6-4df4-bcfe-7d5653bc379d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07d656d-1293-452a-847a-c1fb23f28a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678b66e0-8631-4c5b-b9a4-e0569e070c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a1a3db-4664-4f36-bf7d-9cf139c68b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7a6273-6853-44fb-b939-81d3b81b6ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5c32e8-1973-4dd9-b692-aa019558cfc8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a195278-ccae-4bb2-a053-fe62bfc92431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dce9c40-109d-489c-a6f1-8cfef7d1d2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51495899-dcb6-43d0-a822-30b39c1c76f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1106995-bf38-4b94-b374-d26fe33e6192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462bc055-49e8-4d7c-8e75-942e1ad9c647",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff4dc45-911f-4785-bcef-5d69c6aa114c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903aa4db-fd1d-424c-a2ae-9c7a1c5c2316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310aaee8-1e6f-4ece-8984-05067c01ae3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aeba7fb-2a61-4ec5-84d5-8b158fa57ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133ad3c4-0696-4149-a2fb-88e9923e6b0e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aeba128-115c-48ff-a605-4f33831b8c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1748e4f-10a5-4aec-ab9f-7e8a3110ead0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f34259-d555-4c85-a599-0cd8f63d0594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8353ea54-756c-4f4d-aa77-9cc8ce493971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b4c927-9f59-4d15-9e73-5dacd8263049",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7fc0ae-1d62-42fb-aea3-f8a43b79d206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6282c987-1b64-4649-ab3a-f6002b5b20c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29564f89-2164-49a3-be32-18d0d9a0bfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb4a0b3-86dc-42ab-a140-3c32b25d565a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196adf95-c7c2-4966-9803-a44652462bb7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3fa538-ab28-420f-a917-2fc7a4e32483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475f8a6a-0b79-4d4e-bdba-02a6e860e9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44be59cf-4a52-421a-865a-29d4b2756664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d893b88-14a5-432d-86e2-e43aa34a6dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84639506-1dd3-4432-8ea4-d72e50f6155d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc4ffa8-618c-4f7a-855a-054b0b4d57fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6d0c12-c983-481d-b687-68d23250ca85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cdded6-dd84-433f-88d4-506d6cde0015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39608dd3-f7c7-4b51-85be-04e28e5e29f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03021547-08c0-404a-a2b9-59404df07fdb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441435ed-6b54-4830-8dc4-92ecb1b1ce24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827fb684-1d50-4180-bc13-28c774d5bdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5481e59-f48c-45af-b879-f19103a2c71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e876de-4df2-45c0-be18-4e0a3a9af24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55e72ac-3411-4bee-b805-2d6176d1dc52",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7299407c-a729-40a6-ab7b-a0d9ded3d8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4ade7a-6e4e-487a-8461-72a16000c31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d86779-0435-4639-ba9b-394e88c73d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffea40d6-8797-40c2-bc1e-2e361e7e9985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661b8372-6323-4006-92fe-1449ccf47a48",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2141b0ce-9de6-4f59-9e64-1b154d853ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc10f60-c9c1-4c1e-89b2-b4497e2108e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca761bf7-3b78-45cb-9706-a981ddaaf902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a03ac194-a791-4d18-bb85-aca0f0473327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c6568d-cba8-4ec8-a085-5f6100ddcd76",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58adfad1-632d-4f62-a4b4-eb2482b6aeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09c8cec4-2f32-43f3-a99d-3fc20c131822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7617ea98-0129-47ff-9ce8-a43fea89e49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "853f2cda-edf7-4e17-88e2-ef7625742eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681be763-b9d8-4568-a65b-665358a8787a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefd69f2-d142-454d-bff3-5fe8e1511b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9854a33b-97a6-4ad2-bfe0-ede8fcd7b6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272bb5aa-1dbe-4f8c-8e92-b73222b4b2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53845d93-9aa5-4d67-a234-682441ee4749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27674fb-a318-41cc-b107-9d0f6f663406",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3def34-0473-42cb-9e35-dea706490fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f3062f-6ec2-414e-9cf9-f1d86d8f3806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3698d2-aa2b-4d67-909d-456b6c452852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d7943b-1d4e-4b77-b98a-e893823fcee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc120f65-2832-40c9-a4e0-cec551f8dde3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5015c86-5fbc-4f42-9c06-7e1cf7d6427c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fc0720-e6f6-4a13-9ecd-4785ff728f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cdf8da-36c4-44f3-8e34-01a84af12f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a414985-bc66-4c10-a103-32b8275f0407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c2c252-ff95-4e84-8a47-052a3ce96ff0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50023a04-0bbd-4cb0-b539-89b9ce870b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba6606a-aeab-424c-8346-fc683910d0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ca18db-a7cb-47e5-a69d-c6ac5ceeb0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa5f288-2d3f-4e53-a1c2-5113e5491e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5311e770-ec74-48e1-99c9-939acee74cac",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f78fe1-67d9-44d1-b337-29e5aceb2077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcf8163-ccfc-436b-a5ac-cbb93618327a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301c2c84-c636-443d-bf69-1a412b385d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6509f7e9-076b-4933-ab57-dd9eaa755a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9f3871-1ce7-4093-8e32-0c8229f9b85d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d33bc6-d8b6-4cf7-8920-bbfecf620c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810bb692-390d-4187-9b45-ee96ec29dfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f811883-f5b1-4c59-a389-42c2283808ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f149c7-d10d-41a2-8b3a-b12999fa2d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc5b372-314d-4a46-9fab-0763b4f7a1b9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9c0191-f948-4d6d-ae04-d4e732640705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb5f02d-f01e-4a1e-8783-9758d989d46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a4030b-3272-4f23-87bf-0e1f50f7f6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "605dfb4e-d758-4346-b760-501f92ead694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2830582-afe3-4d5d-80e9-bdffeef5366f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404ebcea-5127-45e6-a8c6-fe25b7d9d5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efa28fc-0489-45d5-a0ce-8c08144fabfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa49339e-e6c5-40cc-bf40-0fe8e7e0c478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e18eb4b-a3a0-4bd8-902b-f0382209a039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4d374f-c2d4-4d9a-b97d-3cbc36eefd72",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379ec7cf-24e4-4f9a-bbd5-e97ab3e64079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd262bc-4375-4e03-988d-49bf69c134e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0ec829-40cf-4f01-bc17-c4a9dadb6751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bb26c8-5084-4694-acf1-8b708cdf57d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2397b763-c1d0-4ae2-b4e0-8538e507ed3d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42c2cdc-88fa-4823-b700-609168081493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f35e9ac-5550-43ba-adff-5b8e1e885b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d337a88-70c1-4d3b-aa0e-c867df2cafae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89f6a367-7185-45ae-9261-bafb39c8c0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d33e8e7-167c-486f-83bc-aa4a87ea0e3b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b43576c-6fbf-44a7-a87a-0a6980cdba1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ce15bc-bdb5-4f18-8023-2a878d284c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2d99ac-2540-4087-af12-a49903811d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8ea5bc-ad44-4ecc-beea-e84688c97a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8523b29-fb7a-452d-ad40-7527f696905f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c542ba0a-a126-4142-ac5a-09bb946190cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319aac07-3c98-496d-aa3f-a91425d22843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd642cb9-7953-461e-bd8d-117b0a13ab2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d26bc1f-8143-4335-8bd9-84ab1f584f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f8f599-5fe8-4269-b171-f864802b30cf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce43d68-0ded-4539-9bff-1eb90530594f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cca07da-1305-44d4-8d86-b66194e7d8ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef62a256-9a93-4af9-8cdf-c180e992501a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb928948-57b8-4b72-9317-65f30e5af230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188c4ed2-2181-4486-aec1-286b49df70ef",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf080a4a-e9cf-4810-a87f-533c0b152343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84494cc4-fb4b-4dba-8305-cdf36c31ece2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232828d7-dbf5-43f3-99df-f81df2f4c178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41cf6064-7ca1-4279-b722-4c5ed0f08ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd788461-1866-4ce4-a972-c1a5dbc4cab6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2138310f-f72b-413e-ad81-472df37c84b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f027711-b715-4d31-be3a-ca61a0c77095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2f9562-396d-4210-a851-abc416690502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c61ea0-db77-4424-aaae-e645e4410f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6aeb3d2-630a-47d9-b33a-254b8f2da0af",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0a925a-f3a0-4759-b30d-fef69dfab262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d71384-d1a8-4115-a784-337899afa3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce31a8a-4a3e-411e-8329-d2a10a5687e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40120d3f-b2bf-44ac-9e8d-79bd8bc301cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20b95d1-5be9-487a-a8e5-25cf608ebba5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c76be17-e3de-4d7d-9079-ac01acfb6d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b10fa5c-cbdd-4cd8-8f4a-4190ac436722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cef3e5-4af4-4598-93fc-b4e0a8b2d0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c58b0e03-62bc-4eaa-b872-0035db1f179b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36709d80-5943-42d2-9b64-713f564e9183",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159a8a33-947f-46dc-b46f-be97fc557063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73ce897-5915-46a0-aab9-4a3b829ffb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820309bf-53da-4981-b010-bd27c25d44db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d40fe36-dbb9-4c69-adc5-10d06b865e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fae533-35b3-4028-b2ca-b8de3d9d6078",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02365e21-ddaa-4336-a437-4d514676f959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6e3cf6-dbdd-4a2f-93f0-91baecd4c777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f157833a-a35c-404b-acad-0f9224acf6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "535dbe68-ac1c-424f-8d98-495820962990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d8909d-751c-4c87-a7da-bffbbfa12855",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41005767-be80-42ac-b854-1ef3dfbb1cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025bc2a7-785d-4848-b91b-931ed3019273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253fee28-388c-442d-9e68-d0ade6e13612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "772f5a39-ce10-4d57-bb12-f158dc54c62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ceb305-1b31-4980-8062-93d3ff255832",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb49db2d-7d62-4b4e-9be8-418e31021d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e9ee15-72b4-4194-962f-55219889da24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f283b08-3ddb-434f-91d8-4d346e9cff13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a109acaa-cd1c-4162-9c9b-4f486417c066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b4299e-aae3-4674-ad80-f8e7d5030eff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9eed4d-ed27-46af-a17e-5771eedd17ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7419a2b1-40d4-4dd5-867d-1bc97336589a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053774da-a499-4ec0-b767-aa3930ceb85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "642b262e-43b3-4906-9484-bc875b20fff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee95f47d-d3d4-4170-9a7b-8b3135150560",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435eeea2-a0e5-4c56-9068-166c0890c09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9381babd-7f64-4956-8383-6e91bf56a3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d7538b-2172-439f-8f6e-866c376f97f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "193298d7-86cd-463c-b1da-5fb36f01dbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cc89aa-1bed-4219-9648-e227bd79b0f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91072ce-089a-4777-b380-9757be6e0414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2554ea0-1c50-43ff-8a66-cd39f9ab6670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021c7537-1c3c-4a36-a11d-fea6eddeb84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a37f21bd-8aa6-49cd-b544-e36fb014638b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a47181-9efd-484e-91ee-c5a1b0d4863d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905b5f0c-c11c-4b04-89c2-95615ea78235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5612c4d-17da-468d-a577-97b324b5f188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae9af0e-e001-4b84-9b32-4d4dad07b6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "13ae33c3-5510-4ca5-91b8-9e7ee1f24fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4773296a-dca3-4b17-95dc-354dc061420a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a785ecd-3b4f-484e-afa4-b8b027216d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3333e0-ac11-4f15-aa82-edf78678ba5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35eaa8aa-9b12-43bb-82c1-6e3e3973882f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ce1814-0d2d-4044-b7b5-58f0570863b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46a951f-fd5d-4952-82c6-8efa581c394c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdd3c41-1930-41ae-b044-a1cf021854bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae2e20d-cb2b-41cd-8776-50bfd61f1bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08295d5d-b429-43e3-92a0-dd9cc23e3382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5bdbce-4d3e-421f-aff2-989f5f2d224b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8e801b-d017-4729-8e3a-1bd134a0b3aa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6de00a-34c7-4516-a8da-ea0f3a9daf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32657606-e293-48b5-8573-c7c8edb0ec2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138d255c-9c2c-4406-bab5-5ed5c97cf60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d00a02cc-9da4-46d0-9a81-4f050b35288f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8cb6b4-6367-4c10-a112-6e2d60301ae5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99895a7f-dc72-4f7f-8e6b-30d20b61a7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33d29cf-cf77-4e06-92a9-1165d42ae3c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102be863-a8b5-4c85-8adb-d4aa29a9c7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c02ccd37-b057-4d43-980f-254ea1558088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b5eb94-5dc0-40e4-a82f-2234967ce172",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ec6a97-de6a-4213-a81b-c57be5d9d5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132295e4-dda0-4e3b-acbc-51e648ce5c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778ccfe5-a70c-4b66-b27f-805759e7e743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af1be8b4-619a-4b32-889b-a114f7a1f2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3931bc-7d27-46c5-a77a-08f22c5a45a4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a96e3c-2ed1-4809-814b-178a997b4208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85c713f-17ae-4658-9267-3a9ff3250e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80820c94-b7ea-4595-8bbc-d1bfdb902c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "877966c9-5c7a-4bc2-98d4-579688452788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d943c6ca-2936-422f-ba35-4b9c705c0f7d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdbc80e-9488-4bfa-a377-449ade45701a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11de894c-c7f7-4abe-a137-1cd52963e140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d004163-4c6d-4d94-bab7-5ecea1e94977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "54682d11-eb18-4849-8843-36cbaaed6aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a0d3f5-e98c-4cfd-86bc-5ed7c5b6351b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d166f635-0090-48d7-a5f7-fe52ebfb28af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1aaada3-cae9-4f90-b506-e66b61615ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e75485c-6e53-49ac-8298-4e767b30ea8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aea691ab-5e25-4683-a919-522d8809daa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fd0ea1-e3c3-4e79-bac5-1559b0d0ecd7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0917c09-3c63-4d5e-b6d1-e9fc46a8e184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad55f74-4449-4c76-bbbe-233441b4a4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fbdba5-24bc-405f-af41-d3872367a53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a625e3d-e102-495c-85e6-9a1c5cc8ece0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb75103-27a8-4efa-85ae-b72d8ca977df",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3fd623-0f97-4c74-ac16-e40508f0c973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e188365-87a6-4b76-b638-dc154a44ee54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78af8214-57da-4dc5-bc04-70c79318b522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c61bb11-ea73-4ec9-8182-f8064dfe4786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da3d68a-8473-4f5b-8d79-c114e297fbde",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f610a0ac-c2bf-4bcd-8281-6d99c4d74600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f98028-37c1-4bff-9c51-50ca4cdfa502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d3ae29-73e4-44a1-ace2-2a3bc80b79cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aed52249-a13b-4905-aa5f-9b7b6e74e2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35fe647-c2fd-422a-973c-4b8249802cbc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26af35dd-ff19-4559-a91c-76e0e3f662fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec0d87d-c24f-4dfc-b09b-46faa6657dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5baa9dd5-12c3-4c7a-959b-a668a07fc967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bae9f90-1a0f-4663-b972-7b76a56135e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d002064b-7d7a-4bf6-ab68-fe226ea5bba8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32a3512-09e3-40fd-a973-74db16c0d725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a87cf95-b194-4d40-984b-e658fd05f116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf67f731-7a10-4905-b395-bc7e4563f0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34f0f1af-cd2b-4db2-9aeb-8df3eceaeb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54b13b6-cf4d-431d-9c70-a9d6bd81e3a0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ef5720-0e1a-4f4d-b366-00de324523be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9378c35-afc0-46f4-9d7d-d45aa890003c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7082b2e3-6132-4b80-a37f-9240e7b8c7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7369c493-c894-4406-bb5d-cb43d80d0ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c66150c-a55d-4837-a251-c0e4448f60a6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153b656e-1350-428a-9c38-3035c411b348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87079628-a108-4fe1-b55f-481f27aa4117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2dd9a4-620c-45be-95c7-ec25b103571c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a17fa1-886b-4c1d-b16b-3a9e67384b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e97268-4a4a-447b-945a-472e75187e81",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8a5b9f-7f70-486f-8f6e-1ca1eee6537b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8495467e-79f8-44dd-89a7-6ad784daf143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510d1ac4-6e1a-42ff-be54-88787817b7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "712a6179-f2bf-4869-89ba-cef532727d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5c9e7e-d645-4fa6-99c8-e27ef4944f07",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583196a9-6d99-458f-90df-b9aab3b1777a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fa8db0-3103-4799-998b-f55b511977f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e79940-9b5e-4d6a-beba-1ea841254095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1321f5e5-195d-4bd1-a58e-10f51d9f7a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e3da3e-6a50-44fb-a617-46c85a4f13cf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993db29c-8cb9-4786-847d-5b975718cfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bc9a3b-98fc-49c1-9931-38135273ecb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b698ef9-7c04-4c5f-a6a3-b21c9a90c39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e21f581-24e2-4ffb-9c46-5d8a7e8f7c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2cf8b4-5362-4ea3-8a9f-7ca0623cac72",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb28b70-2b08-42e8-be62-6db3aca78d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08461777-761b-45f1-9066-3f6049accb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cc3569-97aa-4337-b57f-be46022a9a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4cc38c-3774-4eaf-88b1-896c6a639bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9ab02f-78a2-4e12-9880-ebb7660871a2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f61a01-0f51-4acf-ad3d-afc1d91a338f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72f7f81-3fd2-4534-9305-903974643bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64b5289-5b41-4117-82b8-74f88aebd75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5bb41a-2ae4-4825-9def-2cdc3b6332b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a26810-8ec7-44d5-98e6-b20abeb6cf34",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660a6186-6f63-497b-ba2b-c4b92546b92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e9ead8-3b8d-4b3d-9bca-64a35d4c1308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771e99d6-18d3-4ab5-bd53-8d99b5beceb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aaacc2f-fc80-4ff0-a654-08902a76b9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359762b2-e5df-4795-ad66-4f8711b1b546",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804822db-057b-4064-8394-3a80ee231406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea7bf9b-6d9e-45a4-ada9-0e6f958cc0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020160da-dfaf-489f-9831-d65597f22a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2189504-442e-49e7-a8b5-0e170227fcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda6bad9-b698-439c-a8e5-a883b4b9d1b0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a100234-adc7-4da2-baee-522ca17fa7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1191e847-8200-47d2-a3a1-359d71ab595a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560462da-d375-4006-9c2e-b66e0693ebce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04379922-3755-4c7e-8bc3-47e124e064e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7152a587-a740-4537-af70-b0005d128580",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6930ad98-f63b-4355-950b-9fec98f5a99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55357cfb-9bf8-423e-986d-427586647963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce02b85-3031-4e13-891c-6016651f381f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd704c2-34fb-4837-8393-f69ee91d6bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24305791-48ed-4b14-98e8-4daf241e0d4e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eac906c-4939-43fe-bb66-c0153447cca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca332cc7-6385-4011-93b8-6415139fe29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d6c92f-4048-47e7-b779-b295c1c5c656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29cafe84-8aab-4da1-ae4b-72120ae2a6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf57b64-550c-4068-b828-5d1aa5b84900",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfb60e9-c86a-4a6c-98a8-42734ed939c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9548b6d-a0df-46d2-8966-bafb4b631cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a00e461-3fa1-42a3-a5ac-24345879e4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "037bc94a-bb0b-4038-bb44-68a1f54c8224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cf50fc-afcf-4ba1-8b28-e5c61d917e11",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf22069-6aff-4606-90ce-f793a043e9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfa9c56-f8f6-4873-a3ce-30c5e2016ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dc27ff-dc7f-4ee5-b383-7e3306df0238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc8ed52f-5716-42fe-a2ea-be07e8925ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05ae389-8cc1-4854-9b44-80027a91ad99",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ca0d14-f4c2-4eb1-9f57-2d8b5f777acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb24ba57-c841-489c-8da6-0ea0c188fd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fabe1f1-1ff5-4c54-bf68-2b4751848620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2baf4421-c759-46fd-8192-e687a90ee2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c957886-bef6-4058-99e5-211a1f84d780",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0533e2f3-847e-441e-9fff-a9dca52e3688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a303575-1538-451b-b4ce-76064ee4dece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6624670e-5d29-41f4-99b9-f4b7ec78fe35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "63ad6d39-5f84-4b4a-8243-88c0bbbe4b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc83455-a31d-4d6e-8ae1-11cef846b0e5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6996fa70-f4ce-4c5a-96c7-45a557f7e45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9525108e-9944-4e49-9420-0cc55e43d543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7d9108-ffcb-4249-afc5-b0b284097d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b229b3ee-9eaa-4a56-ad8d-12e8562c160f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576599cc-e406-4178-90ae-9db563e79ea3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd749213-b15b-43c1-86b4-171ca62490cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7e535884-2d2a-46b7-88a1-b1ad2493036f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802041bc-5339-4861-b254-f663ac0b4e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8528a82e-7c2d-4b30-adda-5c708a4e5443"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69fb98a6-61ff-4a04-93a7-69401b997ab4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d8bd5b9-6eac-4b0d-8a7f-1d9cfef28883",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6450277-b99b-4816-8c8c-0af14f68b67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88150614-dd51-4537-ab14-d56c601e4203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8a3f3c-d4f0-47bb-81ea-e2c41c1b2940",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d654a01-bf36-464e-841d-a1c25bce2454"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "784f0a93-1291-41a2-9f6e-a78504da24ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d161c4d0-8b51-42a1-a4e8-e1a9c91be373"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9968a5a5-477d-488e-ae03-1727a8da5e51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23976e59-e7a7-441e-b320-3e122c005939"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "357dce2d-6d38-47aa-b81e-9392c05d95af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5bafd1d4-1934-4c06-b11c-e26e8388d0a6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "94689d40-efb0-4454-a35e-323b9f9df470",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c7c7788-4de6-4d2b-a831-8bce3a8c3dac"
                }
              }
            ]
          },
          {
            "id": "91c560d0-beba-4499-9fef-8a69196c5968",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3dad1695-c6f9-4a42-a171-62dd4e690bea",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "851e1e0b-08b9-4d9b-9171-cf6d5ef5a786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d215d539-8178-4c12-9270-ef21ed2bcb9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c6a3620-d254-4369-bef3-2a727f88397f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e47cfb16-0444-43d8-801b-d5b5dd691195"
                    }
                  }
                ]
              },
              {
                "id": "1cfdbd05-8475-4015-8f56-b6586b3587ca",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34b664dd-c6d2-456a-a057-a810a97cf43e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2bbfa296-32f0-4ad6-922c-a3714a800692"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a000fb2-4c44-4736-be2b-39606be37ddd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f286a8f-46f0-4305-b222-a802af3c66bb"
                    }
                  }
                ]
              },
              {
                "id": "de946b38-579e-4c7f-b724-187f6608cffe",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "842fffae-2d5c-40a6-9a27-c46df708342f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "708f26f0-1f6c-42bb-b66c-5086b5ade745"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94ce1eb2-7f33-4b03-a0ac-2228fb2c949d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3d07f3d8-b51a-4efc-b6b0-7473c180e663"
                    }
                  }
                ]
              },
              {
                "id": "ded6950d-9860-4a3f-b8f7-47b5463f5f53",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff50646d-a079-411a-ad64-f915d1077c4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e2cafb2-cd29-451b-93ba-bdae4bc47a7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36720973-3145-417f-a5be-499ca1039b2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fdbff5bd-cbdd-45b7-921d-8dbc75e3df9d"
                    }
                  }
                ]
              },
              {
                "id": "2e6291df-3671-4010-8ecb-f535d55f4877",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96258dcf-d048-4751-a9d2-b1d86b10b5d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5252e8ce-5bf8-45d5-b22e-a8ead4b56c6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a98cafce-8b73-4b9d-b20f-f86bdf2b41a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e356c4fa-d3cb-4d2b-a0fa-bf0733b218b3"
                    }
                  }
                ]
              },
              {
                "id": "8cbf438d-eae3-4cd3-8bae-233eaafc585c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "075481e1-39f9-4303-a5eb-edb9e767cf7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06faee8f-1f80-4c27-8597-6c640b5a26ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1cc7362-9f92-4664-bbae-371299b2fe61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1d961bf-ab44-4b88-8500-c0f2acb14f41"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "96891fd5-f862-4aec-904a-355109ea6159",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b70faa6-184e-4084-9678-bc6e3f52acb0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c520b8f-b21d-40bb-8da2-38b979f8e337",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c892379-b0dc-4ecc-984d-71d1e41ac03d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee14dc77-9203-4061-8e84-cab8e8353714",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0882ef17-7c56-4902-84b7-156f817d514b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e7caa2d-a507-4ca6-917f-505bdb6393ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8ffb0f8-6660-42e2-9740-68f66ce328b0"
            }
          }
        ]
      },
      {
        "id": "42964304-df19-4fa3-a3cf-a0e25ed22ea3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "61df2214-1a30-4330-8b7d-5652d664e5ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61bdb9c6-0cbc-43a3-a150-4743eda843a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba24856c-9775-4aea-a846-7f80f6bf4c79",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fb280b-00e6-40d8-a267-25fdf6191944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb445d87-fda1-4ffd-87dd-53543b5f3f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cd3296-a073-4ec2-9b9c-45d21b002f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdde948-d970-454e-af85-479e4f61d936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a2482c-9542-436a-b3e3-ead3e3cbcc9c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf44bc9-ee57-4639-b8ae-957ceb093d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a7ec3b-2111-4f02-af3a-b73bd2d464d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33dbb2a-7bfe-4e58-80c7-84cba03c5a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c40d5eb1-d10f-4863-bf4d-079f51216e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1bf11b-7ae2-4744-b23d-5509f279e0b1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9955b416-f3d6-4087-86d1-fe513ee1a496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26510482-c147-4b7b-b644-3249404b1fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f016cb-135a-4164-bbb7-90c022b94889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "febf802b-7abb-42d9-9e87-1cab6892e3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdebc88-1318-4a7c-b9b7-f65a9ea3537e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b849bf-0b1d-4b92-885a-0beeaac606a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a5f018-22bd-42ad-815f-69a50e07e6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e689d57-4d86-466a-96d8-c3667ef9e6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8664678a-1eee-42c2-b829-db53162ef0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cad9ea-14b3-4d49-9953-ce854d3a54af",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631f466f-7d9f-40ed-a777-b72db5ab7b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f13ada-f9dc-4ddf-9bc5-70ee952aa657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd22b3e3-e9c9-4a58-9112-09fad7a0c955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6f36c3-16f7-4829-8dcc-7d07b318b7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9308d8ed-af34-4c04-ac05-3b7504fbe95f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60395c94-d673-413a-a97e-fc1284955183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f8cd4c-524e-4b0f-b669-39ed4466a557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01d0dbb-06ca-4a8c-86b2-a7c47796793a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39242e50-7d42-4b69-8346-7b4c2ffcffc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52365779-ed1c-4a81-aa76-80e1b81e5064",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ffc12f-dc76-4e72-8127-d97651972b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d676c03d-3c1c-4658-9526-61f984b700ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d00b1d-2a60-48ab-8e14-2d18736ddbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d68022-1c64-4474-b062-0671a48c83b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12d7860-999c-4a70-862d-1e8280f9549c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd10673f-989d-4790-9f40-1a4da1594bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cddd96a-56fb-404b-93f5-18a388322154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebb3690-1679-4a17-a2d1-cd3efbb2dbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "210688fe-5192-4c4c-857c-89d6fe8ae751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb18fec8-6669-431e-a8f3-3171e085809e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7786dad-740b-4da5-aeec-b1a03ae2b76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6983445-3736-428f-b25e-2893e41cc9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce12910f-48ca-4ddd-b9fd-bbdbff27a04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5493ff11-079e-4034-b002-518fe9fc0519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39412805-5caf-4c4c-b61c-595f94355ee0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f716b7-879a-4722-8805-d9cfce7ced33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56da8339-1fea-470e-beb9-ee66dd5ac2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d87781-d4ef-4b4d-9c32-b180c7c94c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c23e026-321a-4b69-b44b-41685af57cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbee717-782d-4c14-954f-725501ad3275",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a0c693-0c71-4873-a641-c1d5da3d83d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbb49b1-b817-401a-91b2-3cbda38c015f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc974cab-78d6-43a4-9a36-ba6bda6051ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "07dc6ca9-4879-4a97-8a74-7b516bc63780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a47055-585c-4c2f-9b8a-45199db2fe93",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f9ad5e-dd07-45f5-a44b-4b10b3e1b75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b098f79-612b-4143-9cb9-34f41a963668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785d381d-6715-4b19-8ea4-3a5d9ef9fa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7afbdd7-711d-42e0-adc9-cab0b8a917b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcc218d-be59-472e-876b-0381b7f6b178",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab037200-9618-47fd-af59-64f6ad8fff38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad0805a-bcc8-41a2-a272-9828ff8874ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46b2377-330b-4424-88ac-6840dabaac90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13cae5ad-b01e-4d54-9399-ccd52d6799e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fd92a6-4407-46ca-999d-21b1275edb55",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd77f1fe-df60-443d-bde5-628c6ae89bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7d9669-f5ec-4a49-8af3-ebd5a163f660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a227bbb-f31d-4f90-b1e1-a4c8946601d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "05b730d7-831f-4783-8722-a313a6580a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db02c205-c511-4e16-b83d-48a0128c590c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9016558-ccc2-4371-97ed-e8c9eb74c6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fb02d5-f4e0-4472-b00e-9c0f05833dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b06486-a8aa-48af-9258-4126e10098ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8488c4-1af5-4e75-809f-625a9688f2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed01b18c-a528-4cf3-b9ee-6307f40059cf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a77f0d-104d-46cf-ab41-9e03c024ca95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c060b8f9-f45f-4ff7-8614-df1eb1f102da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84f88a4-0513-499e-a7b8-317424c984dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b99955-8370-4dc3-bb97-a703d33257c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0132bebb-0a05-4db6-bf65-7829d72f9a13",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d348aeb-eba2-4ec3-95e7-a382cb136ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3de1577-804f-4785-b0fe-655b4730badb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64dbdea-c84b-4b9b-9034-9df7048e6412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4252f13-17cc-4276-af64-2803543d2e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bfcb05-41d8-409d-a8a1-6ae835f3d50f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe1b7a2-d469-445c-ae7e-763549714c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ecb6a3-4ea8-41a5-8bda-6769dc019422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9784de3-deec-4f6a-b2c9-e321cc140cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bc53b3-a68b-4aa7-a3dc-25a4e754a1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7bc71d-24ea-4a61-a300-85aa33927066",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b7bc22-1ad8-467e-a57f-27b77a203d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704d40dd-ee28-404f-a02b-153e782829fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c14c8d-e538-48fb-8f6c-a2b651380cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5ddab8-9f05-4568-b5b4-4a80586b1bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c954c93-26a1-49a7-b927-e46f0bf373ea",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6e171e-35e7-4c81-9c5a-7eba6e1aebef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "837563f2-cb42-4330-8757-d6ff91bb4890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9542cb33-c58c-4027-9a9d-34c01710987c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a019046-60f3-4cde-9ec1-e670339714d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dedf553-789b-45aa-93b3-ad2e0ab04f69",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b1f238-f4a4-40f9-8858-5c1d1e082704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbad124-1b93-44c3-b12d-0ef4b1e60cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be416ea-8263-42cd-a0c6-1db9f48949f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac96071c-0f85-4619-a0e3-3cdb272cbc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6137ae3c-7bf2-46ea-9278-c2aa7d884cf6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95456527-caf4-4882-977f-2fd3d9d4de37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40e3c43-b525-4a61-92af-ba858c885c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4933f4-bd25-4c16-bd03-0adb6476d856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d24c25dd-c13e-4a37-86e0-13c0d9b55611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eae10b8-0f62-4126-bae2-35aa78e067f1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444a9c80-e716-4ef8-8285-8336fabdb58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd652dfa-f29f-4066-af2b-4948e0cec270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f635f0-8fdb-42e8-b8fa-c048dff1fc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cec9cd79-27d4-44b4-9408-e4c5dab9281f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f089fe0-5fe8-46b5-874e-057bf66104f7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76f31e0-e392-47e1-a648-ad6e5726ff98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d15393-9705-46cb-98fa-397b365e8e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cedf441-753d-43d2-a49e-ea029f7e03f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "494eaba8-5f91-41c2-b563-f4e0d1478477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1443574-9071-47b6-b022-f98c29288af4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d479d398-6d9a-487e-a55a-122da20f3306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43a6f7d-e0ab-46f6-bb06-b9966e39eb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a581a73-7ea6-40ea-8b1b-9a9073071de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef182d2-798a-4259-b94b-2ba2c49216d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69b998a-709b-486c-9999-3c9717237fe6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f86c55f-862c-43bb-9e35-7f3748e93c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e04d23a-5c10-49c4-b5c8-36ef7efbbdc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea549a00-d8ad-4f22-bff1-02d27dd1312d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dad8d9c-3165-44c7-8f13-89ceee82148f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5d6e75-25ef-46dd-bdda-51129c8d1881",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee2097a-546d-43dd-8da0-205f551183db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33ec5dc-5893-47c9-9b27-c841624c83b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9792e2c4-4ad0-48cb-a402-6f49609045c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d781cd9-7e62-42fa-afb7-00d185155cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff669e8f-dca1-47db-b50f-a9ed698f02a1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d850b19c-3351-4949-b12d-43b4585f8dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316a3fac-ec85-494a-af35-9fbc950868bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a6b507-c238-46ec-8b5d-41fa9e3f7fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1733787a-7e39-4499-a8a8-1b7621a5707d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132421f7-628f-41d8-9b2d-241814db8138",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57116c78-2edf-4bbe-8120-06503149179a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de17d30-9c36-40d9-9496-1de8b3bb0297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3bce6c-1f1b-4836-8ddf-d0641d20a84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc088e4-fc2c-4994-bf80-c4769b97197d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a46a93e-b02b-4fb3-ac6b-00ef3fd29528",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6130014-d68e-47b1-aa58-4ecaa9da1999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2a668a-f84e-450b-b23f-8e753b256954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17534b24-eb57-4a3d-adc1-1897f0a13991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2992c0f6-3c3c-45da-b236-dc01d546e5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf00b417-795a-49db-8184-f6aa216ec0cb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2889799f-a32a-4370-95ad-2ad5f265d7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56cf856-b671-4a62-99e2-33b128289a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5e1d9c-4b15-475b-87d5-177441ae6d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1ff44c-b7e9-4668-ba9a-ba574c87451c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05de56d9-a061-44b3-b144-70440064f313",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2b5aa3-c082-493a-8d2b-41e58e9e54b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41129b15-0d13-4a85-9fc8-d152581675e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6279ccb-acf4-4802-a0e7-f11b302764e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "700db314-bdbe-47a1-8241-60e0d2474881"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b7aa221-e55c-467b-81a2-c202d12ae374",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2831ad8-8dd2-44ea-8b6b-f26b56b90d1b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74da7b7-0993-4594-a5c8-4bc77487213f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "12fd2e97-8a80-452f-954b-871b5b8a6774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3ec44b-5094-4c6f-84f5-3bfdd56ffb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b21981f-29c4-4551-8a75-6eea215a31a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53efdc07-d4b1-4fcc-9e9e-2761765bc5b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e6047ac-e06e-497e-a92a-00f6ff9b61d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ac3aff6-8fb7-456c-968c-f659151fa296",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a76bd47-dc26-42da-95ea-76af30c075c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cac54a85-6a2e-4277-819a-b5f978011a5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a3dfbd38-0ca9-4ec7-b4b9-a10d704c7191"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a0724a5-e7d1-4d66-aa79-251eddf6e4da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79ce6a87-8ec2-4354-bb01-b13f94f221b3"
            }
          }
        ]
      },
      {
        "id": "bc4b6d64-7051-47d1-a016-d0de814324f4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b18e6ee9-27e3-45b4-aa86-5241c73cc2da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80b8a79b-f6b4-4a7e-898a-1b3f4b58bc0c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "08f24cec-4044-425f-8cac-8ebed9113e04",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c937eb-a87f-43c8-8b5a-254b8f7a25cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817f8caa-1627-4c0b-8fc6-80fcb81e4481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c705c9d3-aa8f-4509-91f8-857a40d661bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "516c12b4-0e90-4a31-8124-bec52e551829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb37758-b215-488f-9f67-59458bcefefe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622051ad-37db-4e48-8760-00ab1e0dfc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaca5209-3a79-4b9b-8a61-5aedaba71d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297217f3-9bfe-4827-820a-9e5a06e8ae7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f212bde4-fed4-40cf-992c-cbfdc786d30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008bda8c-e719-43a0-9261-4af14a2e2829",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16571f51-9c48-4413-bc1f-e5ca4770b157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194b6211-778f-4578-8e35-9e1c94f4fce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfca982-9e2e-4a46-ad0b-b82842374c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef90b69-f01c-444c-91ec-e2fb262fa734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd6d859-5c49-499f-ab59-3ba1ca7db5e2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59559043-dc4e-487b-a580-6094cd85ed8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59464bf9-3cef-4e05-88a4-5e3e2b3582b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8b1d46-6552-4a6f-845b-43b774282e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2aaab8f-c682-4409-9997-a75b0d330b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99319cde-06c4-4155-ae15-f38ef20922f5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da4e85d-b28c-4436-9374-6416e2b15275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a57a174-1ad3-464e-b836-4c6ed8a18728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4ab781-6f3b-475d-b731-302636db0b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9268c39-0d99-4462-858f-918a1636895d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e341cce-dc24-4df1-bffb-9597a56c8722",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abed43a1-42f8-4020-a8bb-ec2992a85855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1937e5c0-8c37-4605-bb4a-8a48b9e4c141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c306247c-7554-476b-9e7f-5b01fac2da8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "443a75e7-9e7c-4e15-b8e8-1450587bed99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44318a5e-88a0-4edb-bf9f-fe2428995356",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac770fc-fbbe-40a8-b629-162fc0483b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22ead0d-b6e0-4e2a-adff-67ff8d080fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04fe4d9-967a-447c-be71-efd8d09fc133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbefc8f2-d7d5-494c-b5d9-2f463bdf7a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c05ad9f-d177-4955-845b-819438105bfd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20009ae1-9631-40c0-8e10-edd267abfd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1968e117-b97e-493d-9cdf-c80d6c416402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f0f9a8-866c-45b0-9200-b4fec71c59ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f986f3-b7e7-49c5-85c2-91066a768f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a80dca7-66e6-4d7d-8f6a-f2554c194047",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364c8908-0a9a-42cb-9db2-f07beab33cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315ac58b-3d55-4c0a-a082-145db51697d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d80104-81ea-4d56-aeb5-f327ebdff9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4648e3-0425-4e4c-8b70-40de6442a730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f317b26-b3a5-4767-aef7-00b891070bd8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0834f6-352f-4db4-a531-267cbeacda35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3d3c5a-ceb4-45c7-9ef0-1a31cbc52806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c1486a-58e9-4b47-9597-635edaddcf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a518cf8-1b6c-4a40-a714-b99b1766d4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f21c1dd-31ee-4dfa-9ba5-252479411995",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552722b6-a7d7-4a55-b81b-4c2d210328a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e48780-c862-4c12-87f1-414b0d5c7017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896af060-f11c-43fd-9f58-8dde4e2243c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "08e28135-5652-4c8b-9632-f8518be3611e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e671681-c429-4249-ac4d-ac12d111ed45",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18699cd6-f178-4a86-986b-84b13ebc6583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6eef8e-bc06-494d-95e4-3c21df62cf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477743ee-61fa-4a0c-9f33-1b83e5b45203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb58e617-f7ab-4ac1-ae9b-411ed3e99acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5cc583-ddc7-4cf3-bb95-fb4fc5cebffa",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844addb5-5a5c-40d2-aecf-6180d2577d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b278d9-9bd6-468f-bd57-52a607df55cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ef51ee-35ea-43b4-82d8-1ee0f6f487a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6769fa-124e-4f62-95fd-a156e3d09913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a28820-43bf-4208-8448-6291e779e5ab",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbe5ea3-f4bd-45de-8881-406133100619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b33cca0-02ad-473b-99d4-a7813ef5d3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b31615-6685-4dab-a242-4cbc5897dc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8e31e5-02f3-44f7-a8a7-c1974bc0324e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36982da3-f9c6-477e-a7a3-9ef1d9e6c72d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2c2014-414a-4954-9775-54defb9db1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7452a7e-abbc-41c6-a8ad-b950290adacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1807da8-57e0-4e7a-806d-4cf348860fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5c0451-3591-40c6-94a4-faa436d01b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94f3b35-f7be-4a31-b3e7-a8cff5e59919",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347f1054-d3c6-49eb-be16-7a8ed3152f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75723b98-b2e1-47bc-adae-831e37f36157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a58e76-21f0-4b86-b147-21e8a586a63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "246c8c6c-648e-40fe-a784-99187eb3daab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91defd9-2294-41c3-8291-994e71a61a8b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab7e8da-a817-4350-80c9-4c15bfa8199a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a3cc8e-85bf-4077-ae68-6e3619da9e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e888fe-2ce0-470a-a680-661f5a7ef60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "10cbd3a5-b7eb-4276-81a7-a6a90ff547a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d275e06-dfb8-483c-acff-ef5e2d73a79b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a45250-8ac4-472a-b603-3b18a454efcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad491d5-d5a7-49de-8406-84d87718aece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67dd035-47ad-415e-b5f0-84c8478ebf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad700523-65a5-44f2-81dc-24cf2a8f1510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312b24b3-9f15-4b26-be54-2a1ad6ba5672",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc9ce7a-593d-45a4-8e14-74aca7763faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcdf793-b0c5-44c8-9506-9b6bd30cf4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f32ca8-856e-4e44-81f0-8d26801a63b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0636458a-3c06-419b-9e2a-218e17c2de7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85876433-efb8-4582-8a46-d77ce59416ef",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baa9a7f-37d9-4c17-9ce4-37c42b81d353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75b9839-f51e-4c6c-a6c5-da1059dd0292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696e3f65-d0db-4b50-8017-50fc22e327dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "753e22b4-7f93-46e9-bded-8d654b92ec68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bead029-9f4d-47bd-bbfb-710b2f60adb8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6c3f1c-ba79-4233-a497-29effae00e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f1bbcd-8561-4584-8815-b0984ccd7700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1aa8f49-1d23-467d-9363-9104597e4865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ede29df2-aeea-4343-b506-747463ec298a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fbfb30-7136-478a-a914-c34ccd85bcae",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822b16db-0599-47fa-8170-b0cd8e886143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8725bab-1920-4011-b3cc-f0947df42f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c77a21-d9bb-41e0-999d-dc71e55c7b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25324ceb-1244-4227-9f31-bd3e9af87402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c717c94c-3cdc-4ee2-af0b-8f993d1be78c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcd5fe6-5c43-481a-a0b5-2fec99c64f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d65d9a-e2f4-4751-86a7-e6f22b8601d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c74e717-85cb-4c77-97fe-fb92758d9818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16b4366f-fd89-4ba9-9982-86e79fb098fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afce5ad-c42b-402a-9e54-da29c408b64c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5424b9c2-8e8a-4136-8b2d-c12d89e1013e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73eab4f-e3ae-4cf9-bb68-74ba83398f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed5f48d-904d-446a-b470-244e61329071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c218e5-26f9-4cb5-a82e-e12dc36f7fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a481b1-ced8-4931-9d3f-6d0a0f120319",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ceecdf4-a310-45e8-ace5-5f9509364681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faefa026-4129-4e8d-b618-63b4f0e75813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7635c7b5-19d1-43a9-8157-e8d299263317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03eaea3e-9527-45db-848d-dc09bf6c389d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf468087-c8b0-4785-9d55-d61fa51be280",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1f10b9-0477-4917-bf11-45cd1cf8aab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddf62a4-cc44-433e-9af7-698a1dfd8cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0f161f-6d0f-4362-bdf5-c3ffffee4d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b22ce16b-dfcf-4934-b32f-f462843f77d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a4792b-02d0-4730-bc85-7b25df859d83",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62bd037-a091-4efc-9205-d72e6916d0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218ac75b-685a-4d4a-97c5-21c153db2b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73f6be4-05b3-4042-ab7e-6629e9b3371a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92635b58-0839-4921-8e5f-468c0ddd9671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816c29d5-1c2e-4552-aa2e-5d4b2a38d68b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a99f923-e41b-442c-aef0-553300e83fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4db711-e321-4ba9-9cdd-3d5ff6d34d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9698eeb3-5ee9-4627-845b-b1247eec977f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f59ffafd-9b53-4a8a-bb8d-5b8158fe6169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef6f5f2-9896-47cd-bb24-65a97dfc992b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734d725b-1253-4460-9e11-19c28ba81a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f27cfd-1b61-4a80-8874-3ca11c940d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d900d6-47d2-49d4-9f81-4dcb712500a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98332b68-0fd5-49b9-b2aa-faf7a9e298a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9af6d6-e44f-49d2-9e2d-64c9479fa048",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac601bd9-e4fc-4c8a-9bad-7725dc2e63b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13f73f9-5f45-4cc0-85a3-7e837895ca15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9d9d89-b009-49a1-99bb-8ca9023f77f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc713705-5843-4e03-b04b-98aa7d0ca011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf68b52-ce66-4676-bd7a-c1e854cd4c4b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a2f248-10da-46c4-977a-6e82619450f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba20242-ba4d-4d18-8374-a07f96d968b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c898a610-9a9b-4d3a-92ca-d25fe57b0ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7acf12d-c637-4dac-9dcd-d9367d3bf657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408fd52c-ef67-414f-a928-0b152a88e065",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652b7709-0850-4ea6-bb82-1f6ede30902f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fddc4558-d050-44dc-bd36-e12b3a2776bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fa07b6-140a-491a-9f61-c889f15487a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebfc66cc-4dfb-453d-ba8a-9de3df9fadc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f2b71e-0275-432d-80aa-5deb69760d55",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966732e0-d5d4-453a-95da-8da3ff9120f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c35345-d041-4d9f-b4b9-2606dd65800e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a2021e-58bc-4e09-a922-c7acea91dffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbce3d5e-b04d-43cb-9332-dfb2d5c4bd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a606043-dbb5-4cdc-a20c-f484a64e475a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1218cc9a-ef8e-46f9-842e-e3856a86048d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b96fae-7aab-46b1-a55e-5538d747f2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d68cb1-11f6-49dd-9217-62e7d1b08771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8aaf859-b6fe-45bf-99fd-c733f8e258f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4f09e0-8c72-4b11-8391-48add4f4c1cb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a1fcc8-a3d5-4b04-8832-974e21365dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4a52de-6b99-48c0-82b6-e86a75570ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d135bd1-4966-4c9b-a959-21fba5ae652d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3cef21c-2f87-493b-9445-fbca545fc8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4024428-f618-403b-be74-c168c32a8493",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f983dd6e-d4ac-46f2-bc88-6743beebeee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2b627f-4341-49bc-8378-613501f753d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aad0d36-b02b-4cb9-83de-500fc6e91a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5286df48-de00-4623-a0db-980cfa66953a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0234bd4d-208e-45c1-bd14-df399bf934be",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24db6539-a999-45ef-83b5-bebc52a0c172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700f4ba4-ef31-40ab-a846-801955e94e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9eef55-3462-41d8-bbbd-628314bf4ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a64714e-dbb6-42b0-8efa-083c7b1438d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "85eb2fd9-3390-43c1-871f-4727411bda8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47b391f2-3570-411a-bd38-5757d4e6a4f3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845e50aa-f09f-452a-b272-10c296e7e437",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1404782e-0579-45f0-960d-273cf7d0a0f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75a2181-2b45-4fff-8849-95add1014532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57899ae3-fc3a-4799-b2a5-4ae66697b496"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40083211-cd50-47f5-9f37-60e38ea7efd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0da2bab0-a6b5-4235-865f-bdf023221140"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2744c14c-cbf7-4253-ab5c-e273700152c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4f497cd-6641-4795-b4a4-9a4def36e919"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e50fe3cf-325a-478d-bcdb-88686f5e32fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dbc94d70-60cd-4ff0-9aa1-76ef6c754d6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cd7910e-4195-4f42-a76c-686f63bb5840",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b13a283f-28a1-4fa5-9877-f05a3e52b799"
            }
          }
        ]
      },
      {
        "id": "d0e4277f-b8f7-4eb7-8819-11e48dad42b1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4f7e7058-1a2d-4fbf-94e7-12c82750e578",
            "name": "Negative Testing",
            "item": [
              {
                "id": "675f913c-fab8-4000-9743-aa844973c66a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2566e214-aa2f-4540-857c-c77ec24c6f4c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef7364d-bfe7-41ff-95de-459ed0130d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4195d0b0-6bcb-4a12-b196-8acab8648d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6674aefd-8b30-4831-a7c0-d53bc5f3a831",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f2fc93-17ed-46c3-8a9f-385fd7b72d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dab37f6-e557-483e-97fe-f0872296d52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da81781-1665-49d5-96ef-29a9a51e5527",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719f0674-023e-4a0d-810d-8a93f9b8d145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfdc05f-1bcd-45e5-87d1-c1d2294bc15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0f2821-d8ad-41ae-b294-089587423460",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7d0d76-9ef3-4cae-8541-bd530d7a28e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1851d045-7f54-4fb2-b7db-e6a5bc31b778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fca9fde-b4b1-477d-ad20-d9e7a172a473",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33cc61e-9087-4f58-b117-dfe54290e5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff50f86-1507-4ca4-af39-390c67b5182a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6c38a5-4263-4bfd-9732-87e135823670",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd9ff14-3ca8-4b80-9f16-b5d750d5c1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc426ad-e7ad-4661-9318-2283984dadf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3533586-d5a1-4e38-99c2-35842d17c7cd",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb39cd71-c65d-4c1f-94b7-bb587c922573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb7205c-2a49-4d76-b420-733ca1bfcc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5118f0-0eb2-4082-8289-8ea5255ed869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c1938c-9eb9-4e9d-b4bb-2bce72a0a79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc15423-ec7f-4c4e-9472-193bb3698f05",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc702f2d-f8a0-4e85-afcc-cee1ce5792e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d8d843-8f5b-4f6e-bbb9-b99fbb0eb19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9636f5-29ed-4eed-b855-a5ce4f2ac512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115f7d90-8f41-4b68-8b16-fc41377a8b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edc7499-7774-43fd-9d79-59d7a3e39ec1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbc5952-4df5-4c8b-a06f-0abc0c11f7f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a29e1861-1a0f-4f49-8fd1-185920e99f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f312b9f-50cf-4c39-8904-c599196a1c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee2355b-f368-4193-9fe8-60f8b66dc3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c02e69-94f8-4d44-9d6d-8b103ffc9cf1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefb2f01-43f7-4c83-b8a0-69a06e33a4d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3609375-ce5a-4505-9b6c-255d7cc04497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c01c8f-f90a-48f0-a05e-393417f9b087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f5ca82-b676-4fb1-b8d5-15858c6917a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a8ee2d-ec09-425b-b7b6-6d6d033f6ef1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85f525a-c23e-4d2e-a0e6-61509135b628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98130d4-22bb-4793-8d78-0a21bce95246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad1613d-e069-4e38-b2c3-2f075540bdd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5fd49d-9aa7-4080-8c96-af0e1fac9d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee3f685-dd85-498a-9eee-1e62fcedf721",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45660a30-8f4f-4a63-886b-2b194634a44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46dc83bc-b5ee-427c-bca1-dff2a228274a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ee5755-a239-4a4e-a0e8-995826519863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812a94c1-7fc1-4ff1-8f86-3e2f81b1f744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01fccad-0aaf-49a8-943c-6af98109e785",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a882a68-340f-4b1a-8167-6f31463e9069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8bfac68-4cc2-4bad-bb48-1434c275a623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c713c512-d186-46fb-9832-6d20000216db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811e52f9-4971-4b97-bc76-66bcae04eea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ddb3fa-5ecb-42c9-8aa2-1ce56d322bd0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d688224-3cfa-469f-8958-506b01d1bb6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c4b7432-8c88-4181-9923-f259c324856e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62285154-76f2-4e7f-8aff-df8a7b2f90c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ab7843-52e5-4743-9ca9-fcb8b835c00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127ea98a-d8b4-480f-9424-06bdb188949f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71dc1dc-8bcd-464e-a128-a9ce81afb4f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42935544-1f7e-4663-bf51-cc82b89b7a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15513aeb-f040-4ffd-b668-fc8b9a298c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08580392-13fd-44e4-b1af-45db068972ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6ada53-7d6f-46ab-a209-4212f441168c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89268e9d-af2c-4a30-b4b2-20db9720952a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c3e8e63-7070-45e0-96f4-beb0e4e55ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ea6855-61c6-40e8-ae04-19c0ee7bfded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d35a24-df6e-40a3-b457-09176d2260be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b591c2-f837-481d-b8cf-759939221873",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb0c7da-ffbe-4547-9c72-3372a5253127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc6fe8c-d74a-448f-8fda-d559cbf26f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f240b4f-8fdd-4188-97ef-e26b13a1e630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60af7a7f-24e2-4280-bfaa-bf8cb035e5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96898d5-6689-4e9b-ae4a-5037c2e95ce3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b29a10-a2df-43fd-8271-578869580a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e6a310-0011-482f-9d2f-53740f37913f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d84c099-9fcf-4929-b3fd-84253e563641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e474c1-760d-423a-ab6f-8925df52b32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b7963b-a1e5-46b7-b305-416cd02a5015",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f9ad98-9b25-4172-828f-52372d985de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae54fe7c-ea0c-41db-b66a-c1e5d4cdd96d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724d2a5c-3fc9-4b30-87a9-13e0559d889b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06275fe-399f-45ec-8327-8b4a282a8323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381ce03f-f8cb-4fee-8b07-c5b0ed5f4d69",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351dea3d-3822-431e-a8fb-62365053ce2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4303507a-4cf9-4503-bd85-3a9c8de1e4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faf7af3-786e-4d26-9359-0a0c8d1c1fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df82f91c-b945-4279-b682-0e8d6d63ef25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631b8b0c-1a05-42e0-baf9-2cf81c4306ef",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779c10ed-d8d6-435a-a47e-f7c9ba16ef2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa54918a-9dce-4210-a813-b3d5fcc1be21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49f8b80-ace7-44f4-9691-3a00d52a38b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bcde75-3227-4e9a-8a75-b1f91e0927a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175f1cc6-397c-4d68-93a1-0582b07a5cd8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de60c79a-4cb6-4af2-baff-4c1e6a1224fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c66d669-80cf-4998-bc6d-06903ad7de8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8d5283-1695-4299-9d9b-b242f4449924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31819bda-5cf5-4695-88c8-c03f130caef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f8b2ed-6213-47c1-9979-9ea384eb43d0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb6b76a-a2a0-4956-9c6f-5cfd9e669060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a9151b-81b1-428a-8d0e-63213c5e066e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17caad74-9a94-46a5-9658-43d05669f3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5e1fa2-3581-4649-9f3e-c3243087916b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7951de-0c5c-4fa4-8b5f-b2e61b8232f1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35842e10-f4e2-4add-afaf-4905fcf8e34a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0523752-3a15-4b72-81ed-2badbdb54c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0290a9a-d28c-4f07-9ad9-f1693ab2dc69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2708af9c-6e97-45c9-abfe-0038b200cd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e471a2-ba51-4721-9aeb-2ca14689d5be",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4881c68-5841-41fa-b68a-62583799482f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7188deb1-2c80-4c0b-9786-279ff96f9c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ec7fb4-257b-4da2-a06a-f72c30db1da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534b5d1d-c4d9-4d48-b617-218b39e3ebe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846a5c95-5c95-46a8-80f6-895d42d1b122",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b71ddb-8c35-475e-b528-4d1030704194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1fa3ab5-e8cf-4aac-be81-81e0836a1d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5f6c66-05f6-4053-b797-2220bb74fdb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df394dc3-182b-4ef7-819d-1502faaa365f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98cc07c-24f2-4f84-b91c-74122e29fce5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82907845-f100-4c5e-b141-78029be33dc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b554c0-bf2e-4c1a-b506-e1acee89b10e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd436cf2-0578-455d-b1e7-076ec54d1e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d97c9eb-f7a0-4118-b1fd-4a289bcec0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76cc656-87ac-4b84-9bd3-b03fa424a202",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda71768-c526-4406-aa73-e725db5b218a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d14b52e-7ba6-45c8-9351-a21460d8fdbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ba31a9-6560-4c71-a2d2-d2575cfa8441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419c2c91-2528-49b7-a196-9469d7b91307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00775fa-c26b-4805-b788-64eff2020a24",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67e54c2-65bc-4075-8dc8-175e80fab894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4349f94a-7fff-491d-98a2-9305d3585927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa750f5c-5a85-4fd2-9f53-a2ca8239d97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3704be19-697c-4864-8331-5572dff16106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f802d7-ad14-4d32-a19b-728252f28aea",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a268d26-ca57-4686-a3da-48fb1bc566e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43905778-6ee3-4dca-9745-f009c43d639e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e1f270-665f-400c-b399-6bb7bab3bcec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa70b45e-8c28-435a-832d-c40d36145c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097b832e-6131-435c-a897-499fa49b10ca",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efb4800-bd8d-4e38-a515-faf1aaf90c32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c85ad56a-89d4-4f24-bb26-3fff66c410e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0802c9c-c523-4b39-812c-76d6727c926d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d29c0d-743b-4180-823b-c9aaa046328e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded7ab0b-8716-4ed3-a532-eb47f515271e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cfe11a-12bc-4d44-b366-e794d1b9f848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e35a9f-62de-42b9-9709-e02bd16b8515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963ecba9-f86d-425c-be82-94f7adda9233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74571107-fe95-4366-b086-32178be2d125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e3700c-4619-48b4-a1c7-0f145515c84c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a80e42-fa43-427f-82ef-ae1e31995434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8db0ab8-609f-41fa-8e83-fecc05825b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6785cae-b95b-4f27-8203-b6829d8d656c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838d5f41-8468-4ec9-9308-2726d903a08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ea4f3a-446c-458e-975a-004def3c754c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd73afd-bb0e-47e1-9f0d-ac2405e606d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1ce70f0-f89d-4845-a5b0-5367a66766ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d351c76-1dde-48b2-9f44-8d9929c74e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2ec4a9-bf12-42f2-aaf2-04dff7136582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556d4f82-05d2-4782-be6b-54d0f651f8b3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b73c73-ac05-4442-95c6-8f8bd79d3583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbdaf91-47a6-47c4-bf5b-d1142f2c7622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6931bc02-bcbf-496f-8e6c-2f02bcae4c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75324a45-151d-4271-b236-cf09e6341f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b030b39-ba42-40ec-b50c-4ce9a5dd5abf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8a3800-e0f3-4d12-aa68-61efdf7f508c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7c673c-6471-430f-b3de-b688d241ff0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83cbe6d-87e5-4054-a6a2-6b7fba0e2987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7671af3c-28dd-4823-ada8-035c7a0ed8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe3e285-183c-412d-8907-8aede16807ae",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ce8724-cd1f-4118-895c-b8cf89367378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2cb0fb-1099-423b-88c1-2965fc630015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e4e8ce-0c3a-49a2-8729-a94e6e7f923d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d40813-5c4b-4e43-914e-828bb68eda70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1069db8e-5bf5-4fb2-b570-03c9335f1be7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791e0bc6-08f3-4202-aed8-8776f6b4bbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5ce73c-fdea-4183-81c3-4c2a55f1ec6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385074fa-78fd-4d34-a155-bb796f090045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64b594d-2208-4247-b141-5031383b0421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec748ec-a4a3-4b87-8b50-f97f9373af0e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2671cf6-6bd3-4964-a415-036f8d02e77e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d684d9-0663-4b22-a8a8-3766b6ff587a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6599ea-61c0-43f9-b001-ebd36495289f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13adbbe8-1a74-4233-9683-5c15698847d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1164d90f-a146-4271-a0d8-d4648e9bd6a0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d71500-8d14-4d38-aa82-dfc3fc72cc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf49e06-3b1e-4abb-a850-da1842b03a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4629cfa-001b-44b4-b33c-871eebb7aa07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7190596d-6480-48f4-a647-b4e466f28abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5f2593-379f-4aec-ada3-34507616f90a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d84e0cd-9a1f-4d7c-8916-834161bdaded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05ee25c-084a-44d8-a6ee-0d0018c1ee40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224de197-7166-483b-8dff-1071b31256ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f870e5-2f10-4ad6-ab0e-701088487e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c1c62d-cfc6-49c6-8350-bee86309e7dc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb292f73-7e5a-406c-9053-fbf695381e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd09df9-4e24-433a-96d2-0f2466544475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cd0681-6c43-4d82-9b24-c8c09dba961c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ef29c8-d017-4888-804f-acab562cd2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2001e54-6daa-45e3-9999-732729053572",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d767653b-b4c1-4705-b0d9-8c2737362774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c59368c-028c-4784-9c9c-b7a48db5a55a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306c939d-66c3-4395-a340-e6184fb8e507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a451edd-3e10-49ce-b70d-cfc4d2293ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dad0f1c-aea7-4ffe-b368-c93dd45e423a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a90a8d-02b1-4429-b2d5-6f1e1609ddc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f326109-e58a-477b-9796-ae13d710ca2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ae5d3d-42e9-4445-91d0-310f1ed0c666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4a741c-79d6-44fb-b791-9ddc06e556f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7027cf-651c-4c28-8f00-bed62c20006f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993333bf-3f54-47c8-b656-b588ae8c0ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ea4aae-dd78-4442-9e05-675bea39d0d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfde16c-ebd8-48af-ae35-017d85106322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a6ef35-2935-42d0-8ade-fd681463a6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f132b3-2de4-4506-ae72-5ee4f1f19478",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0d3528-f147-46dd-909f-1d86a4996732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891bb434-6ce4-4834-af10-11e40abad0b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a31179-9443-479e-a1e4-775f38507267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef30b97-bd30-4038-a464-3c4b0b6f460d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c972465-b61e-40ca-a060-9603a495d13c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a82ab9-53c5-4d30-8be2-76e41050a2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc56547-bef0-4a35-b44e-a8dd3ccfa9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53c3981-4f56-4b35-ade7-5e3603c3ca19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa2cfc1-5c0a-4cb4-a973-621890f196d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e252801-be2d-4f73-9953-954af07fe790",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4e1a9a-182e-4e68-9d31-3e20658041db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fce4974-8c6f-43ca-80fc-b35804833dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8ebfdf-7f20-49c8-b9fb-eea560629fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be7c9a4-b70e-4a4b-829f-00c2593c3af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7009a2be-4cdc-460e-9e3f-593d94eac346",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d4d844-c8e3-4858-b4c1-260f69c8b727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c55ab7-e0f0-4f8c-8dbd-5365b4c053da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3843c373-61ea-499f-8994-d552397895b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44cb1f7-d9f1-4b4c-a75b-7048f0a40b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a65e3db-70eb-4410-91cd-7cc15e70ebb8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69ae857-4242-4508-91c9-73b57066d807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40bb07d8-3761-4ace-86c3-a82b2f268e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e064ff-97f7-4bfe-821a-4d7554693184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada339ee-cbd6-4c97-8336-1937885b91ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbba6386-ea2f-4136-9be6-eb45be7b95c4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d9cc8c-a653-49a9-9b84-5ecf4450ab0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb638e9b-6013-464f-98dd-c02bdbe4927e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9eaada7-f513-489a-8a23-26d40111b060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f579bb2-3e50-498e-bbb8-c3738e124090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11342e62-73a0-4632-9a85-716994e2785c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7e8f8a-99ee-4a0c-b476-46755614a185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e756a46a-b723-4639-8fcf-6996b376ef39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34e5964-ce5f-4f64-8c0c-5418e7fead8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ac66be-0a5a-4c48-9f03-69557845195d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec3845c-52b3-4b7c-a692-b35f517dbfd1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378c4a9d-e6bb-44c2-9e0e-a553321b0523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6c7b9d-82fb-4922-a723-914de4923099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcabe3d-7645-4cfd-aecd-be8616158fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c7aebf-fa5b-483a-a860-9fcf4cb613c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e233a9-418d-498d-b4c5-9ee825b8de3a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62e0214-d0c7-4dd8-882a-953ef5fe9c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c4cf41-f667-4a25-aabd-24aeab4a785e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4e66e9-0598-407b-bd23-763d701e39d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d36136-80ad-48c9-9520-00c4250cbb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840a6d9f-1072-441c-a695-2cdd50bcbe6c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3ed0d3-c6e9-4d81-a2bf-24517c603793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a11e722-5b47-48ee-970b-40e04415cf1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecf57be-89ee-4cce-a26c-184192e0088e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aea7b46-dee9-48ac-8c2f-9b550197ef5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b77097e-4bb1-4ff7-abff-719746f96dbc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20eb7b71-f426-41c0-8db4-cb6fba52c6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3cf109-3cb8-4416-8050-b256326260d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8858758a-afb0-4f38-a049-48abccfd7758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a268d49-85dd-4f4b-b9fa-f3ee90737941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d784ce5e-8d77-4f7c-96a1-891598d2a672",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0169a72-2b60-4b77-b1b4-bee92f2c8596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9c65be-6056-49fa-909b-41c3467e4383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdd7129-d463-47e1-a983-05388f399420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24423284-3856-4e65-840f-e1a54dcf1844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49db6fe3-8f60-4087-a511-d420999d3bd4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0387cbd-00f6-4298-a5c6-c01e6f13fb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd636d7-c413-4c6d-b6a0-6ff0dc878d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f467033-1991-4d3a-9267-ee352b1fa333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d763c33-4c1a-402f-8500-30ba45d407be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c7e283-aa57-4d12-844e-301af60f4646",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838a6fea-a535-4737-ba88-355c1930a469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b52a6a0-00ad-4edf-b407-ad56f319aed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e91b634-ca1e-49c3-8ca8-3abb495a16a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc40b347-4950-4d1d-ba53-83d8ae79843b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dad4c28-9178-4203-9d37-6245a8ff9596",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c583ef-a857-4ee7-b922-49c1eae6002e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59cff9f3-7c87-42c7-afed-6bd04df96373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f535c558-50db-451d-aabf-52181d9e87c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02283776-82a0-4f25-8d37-cf4bf7c4cc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2167d05f-febc-4087-913e-85886ff999fa",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3067d64e-3f1d-4dfc-8485-468aff9ae84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1af4598-c61b-4900-a29d-a5795f42d96d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3ed306-84ea-4c99-a55c-d52f5e3782e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1d6faf-c072-4ab0-942b-d34c9b82658c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685270ac-be90-4e07-955a-ffed7328e3dd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72404c58-0560-4d37-a282-98936ad25ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4cac606-6807-4f30-9e32-252ac372f861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7787162-d42f-4e31-87cd-a832aaaa0f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11a35c4-4f0e-4aa2-9e54-5ca6d9bdd9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77f4082-5e1a-4ba5-aa15-9cc35df0b848",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f7ed22-d486-4f89-9719-178737c9a102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474a27ef-b53b-4f77-86de-f8a88a0daa15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e99abbe-2e7f-49ac-9ef2-6b10ee5ea11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f454f8bc-f123-42e7-9318-ab67fe7b1800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcf0372-ffed-4fe0-8660-f03108eed766",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f6f753-814c-42cc-bb2d-5e224f50357e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e44bb7e0-534d-4c5a-a6f8-eb3dc2c966ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedc7e7f-dd83-4aba-b579-5951244818ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1d37d1-3f7d-4dcc-8297-668f3dd6a56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4dbfd8-bf08-4248-9706-55557bf88631",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbf7453-b1f7-4ac7-aa8a-08a722d97d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbc18556-59d7-4aff-ba9c-c282e79e8768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ed6cf9-e5b3-48a9-a82e-8da3f62f0f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429195c2-9b6c-4222-a31c-7de89bddb195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c85653-58b7-4a6c-bb2f-385d552a7b38",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe6ddf8-ebc2-4938-8e09-df0015be3bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f58bc8a-4a7e-4cb3-8c9a-09b7a2ab8d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028337bb-c681-4bbb-95cb-351d677cfb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6a71c3-df1e-45e7-96a3-f21d51a19847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e1bfc0-da4f-4ad4-ab4a-bb74faabccc2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6475dd8-980f-4996-a074-3b7f1f1ec223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc4b4f49-ba6e-43ab-8a07-0e56a7b85c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9497a5d8-c7c5-4970-af50-2382679440c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d86a86-7542-413f-81ca-87b7a541c796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b94f18f-b488-4daf-af68-23cd867a51f0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401e1f8e-d446-4207-9d20-2ab9d12567e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4900fdd-f7b0-41aa-8f2e-7285014f0be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "107b468f-7031-494e-987c-a967739c8281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93858d9f-22a5-4d0f-a037-00e4c7d85d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960bd669-5416-4708-9746-9c8e4f3984e3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551893e6-65da-4ce8-a3de-8851c633585e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36f99786-9872-437b-a796-7dd1daeef98d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e88ed5f-f28a-4d48-afd3-fda7c9ba7695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d72678-cda7-45a8-ba0e-7e98312c7014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5c1afe-b9a1-4f34-9d9e-41cc10eec27f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d010b0e-a488-4138-8304-e4b6a1f74889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6107ac91-5f92-4ee7-9f54-c6eeb39e45f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d406ed-74a4-47bd-ad22-b9164e10263e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aca0e1e-1da5-467d-b7c3-be832b036859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa138dd0-adef-4c7d-ab08-5d960543db89",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c1eb80-aed5-4723-a3f3-0dfad0109aad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d366d0-70aa-46bf-8e3e-551bc16c940f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d881a5d1-0a62-4c42-b6bb-c93c38973ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af17fd5e-3b9b-4c8f-a893-315a0103f7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dfc7c3-ea0c-4511-939d-219d201cff61",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbcee72-0176-46f8-8471-e1a6a3e6f286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f25d0534-b76e-4410-92b5-2435b8a9bce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8564c5f8-c63b-464b-a2ee-4c55adb53902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9393745d-7951-4107-984e-ae7ac23ff906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f188c6-ab2b-4ab4-9749-c306509be896",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e9320e-bf9e-463e-876b-4dd3e0054fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5223d01-bd05-4819-a24b-63518d219621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2632d87-4917-4477-bf18-5c8a5ab64772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f8c9fd-56a6-4edb-b723-1948269eb512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1255c6e7-69c6-475f-83cb-c9d87edc2d47",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31101ed2-224e-4c72-8f5c-e9ed1739fbc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13b5f7f7-d52e-4237-886c-9fcd7171fbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4626f6-99f7-4c99-8bdf-3a486eabc091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ba09b9-1b94-44d2-a973-5e0daac3bd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e1ad97-11f7-4f7a-9a57-457bf108ee0e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b258afa-23b2-4315-99d9-9bf9be160568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a539ca07-0b24-442d-ae28-6cab1b538f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0a38b0-6a4e-4305-b076-fb75d807895a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b86343-20c0-4a01-87b0-3848fe2bf386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd132184-2069-441b-9444-93d6e139ebcd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4d8996-f15c-416b-87ed-e6cc68e1cc2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0351d1c6-f736-4cf8-9317-e0717728e61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd84a7e9-b895-4825-b8ae-24bb20b909c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85acdacf-0e7d-49dc-b8c8-1df655a37d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e86e37-fcb2-4348-8c8f-40dc27841cce",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e00af0-2fb9-4d5f-a0b7-b2bf7f583286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad1dd86-088e-476b-9e83-fabd64a22da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c099b1-3ca7-4f8c-9c19-e13dd44fbe6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95514498-7750-4f4b-8b4d-84e23c6ee654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa3756a-bcf6-4130-8f87-4e65aa33d570",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9573c252-5311-4b5e-ab44-781bc651b021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21019ed5-fe48-49e5-a7d3-bd3038f905bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0832ebf0-14ce-438d-9465-5173ad26fb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a98e02-5426-44c1-b66f-de63230483eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc1818a-2a61-4b98-8d47-ea509390fadf",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce9abd7-1a5f-47ab-aa19-9474036e804d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c59a2f-b874-44e3-bc1a-1ee70a6cd8e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9963d92f-da88-46bc-b7fd-a1a9c19e2964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1e7b7b-0ba8-400d-aef2-468b2b2f4e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af148f77-2b0e-43a8-bce7-f438deb172c1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ac7d4d-e3d7-4362-843d-0279e8bcbdc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aa832fe-0ff2-4639-95ad-4d0a44d716a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c764083f-027a-4f04-aa14-64af27267a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa9bf9c-f909-4312-8800-2edf6b69f8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a363a1c-645f-44a0-87cb-2330bfac4b9e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6de2e5-6e05-4399-983d-64b77e2b96ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13ccea19-4926-40aa-a792-b151c70a31be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb65c5b-d26d-4eca-8787-261a2e6f8cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab065cfc-bc96-4db1-a188-3f36ab830817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59d3fe3-be45-49c6-badd-36c752207642",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d0de94-2cd8-4a15-880a-d6432cc11f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f053c56-7e4d-4b42-8a1e-749100b395d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f714ac-365d-47ce-bdf4-645bff91d48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0efc9bb-181f-4300-be68-ea34c753e154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba24cb9-231a-403a-a42a-fd73c4761fe9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e8a2c1-8431-46b1-81d3-ca8170ca2abf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f66ad651-e94c-47cf-8da2-a5326ceee5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1172e11-9f79-4f99-b22f-436ff70fde5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319436ec-d5ba-417d-8605-4273890a49d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c111a5-8e2b-4fa6-95ff-2934f02bd255",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc875b1-7687-49b8-a5f5-f1ec0c37398a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbbd9241-cbb2-4d7e-bcde-89ae030e37fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a88a7e-8379-4511-a6e4-1db960191328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2807dc0b-0f4e-428f-95d1-60a230787411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be90a33e-1244-4006-b114-f9c3887956d6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7406e9a4-a728-4c98-973b-95e6a1253091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "088233a0-9e82-414a-89be-174f7d58f0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "195c0c8d-ea1f-4042-9961-c3f38d543732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42df1d7e-0a61-48dd-969f-38d709184ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa57cec-df60-41e3-b279-3b6051df7afd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9cf7e8-161a-4d55-9a0f-20e7051af2dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e9d0abe-bc7e-424b-a4c8-3389c63f481e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cc0218-84dd-4d8d-b69f-30fb8838b987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee18e23-b666-4196-b821-7cd1282cecc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79575e07-9cab-4b09-82cf-8daebac71866",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648a8ffe-3952-4cc1-a5c9-ae0572078507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86d3c806-babc-443a-a0be-32f007138851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996b106d-dfc2-4df4-92a4-a1e507cee4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cb8506-8545-4cda-bbe0-571f8560794f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27791fbe-94c4-4f38-9071-f7bd2858d0bc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656a2694-4d3a-4e7d-a252-76b51f212846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d06afb84-e9f4-48bb-8e92-13ba1087e5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424e4e60-bac9-42a8-b133-0b46cc633e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ed7f37-a867-4d85-b2ce-a5d296377fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6909156f-447b-49ba-951b-67e228f7c242",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9a3a08-4549-4d22-a0df-600a92b213ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c85432-d47a-4f6b-9390-a0e5f27e38fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b4b3d5-4f78-44f4-b07f-c35c058f6dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606d9c42-8b7f-4d7e-9096-60fa2b402fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e42a7d5-d4b8-4d7a-b779-a91c32459e7f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdef6aae-d4f1-4362-846f-98b485ab41c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1132c8cf-6dde-4fa9-b1a0-73d7e24a00f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76166c16-efa9-4e5a-b29d-af21ffb957dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b9f45a-d506-430f-b8d6-3ebf3b1e4149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6aa3ed0-d720-4937-973e-6d300e2344b8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d01ac1-073c-4941-8333-ffe7ce015c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12cfa1d6-a9a0-415b-9838-860c32f36b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31d8ba3-857b-495d-8538-277d93eaec4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38af0cd6-8ff4-4eb0-bc05-44b5e7bf23e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9422fb9a-e3b0-4979-8dc9-b746cd8f3522",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d67050c-28b0-46cc-9b33-33439b2683c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cd0b3cf-815f-4afc-bec3-5a1e72d7e9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d7a5e3-c2f0-4460-ae2d-13a0f025e17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10d4d4b-a6de-40b3-a9ad-4c62a8724685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b857bc-cb1c-44c5-ac55-67e032e5e608",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f5f48c-d056-4ed9-9b98-de509a8ecfb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec99aa7d-50f8-4bba-860e-77a8187283c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681c9ffb-620c-4c1a-a824-7c07d7c226b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3c749c-e712-4146-bca1-0ec40cab3f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc5af87-4bba-4cef-8903-7a7dfc477626",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21d7d4b-a75d-4d24-8aa6-0b034928561e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b771bf6-5493-4cba-a498-7b6487c16abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b41ec48-d7d3-450c-ba02-56cfd1a03e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081c4d27-bded-4d84-9093-bc1b6901f7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da0ad09-8c73-462b-9ba4-2b3a1f0e52bb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36f39c5-cf32-464d-9602-88a0da7bd97b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4def93f-38e6-424b-bb3b-01c008c1bf0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ada303-9f16-490f-965f-5152edfa4f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c418502-a281-4787-9350-314b1280b52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b92516-e408-4465-9347-f95f6751efb7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adb80a1-0220-46a8-8db1-412bc3dab6df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "505ca640-31da-4610-a813-e046515e8007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cfb094-37a9-4b8e-979a-b690b0d65c08",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897d7e4f-3295-4825-a994-6ff1ccfc87d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a8c6b5-8cd1-4c7d-87d6-3e6954be48fa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd42b3b3-2bde-401f-ab71-5e499023e2a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07011bb1-2662-4fce-9501-31af08048016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8820f31-b6e4-4056-9bd1-80cdfc38d494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf217cf-e744-4406-939b-414e638f5764"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f09afa2-f183-48e3-bb6b-dc7750ca16a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b67e6c3d-890a-4c64-b5d8-bf72ec5bb654"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b63e772-6e41-4615-bc4d-ab3279e39f01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e867c92-2091-4107-9af6-0699cb59a67a"
                    }
                  }
                ]
              },
              {
                "id": "2383cfd2-7ec5-4c32-a033-59727f4876b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63300820-5912-44dc-bce1-6bab4536fff3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f962d1-f408-4410-9663-6458bd2359c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "31656dbf-04d5-42be-b301-ad1b83e690eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95f76a1-2b57-4b2f-a25f-3e0006fd332b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eab13a44-e36e-4a26-b060-400a97b80281"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f066c129-aea0-4587-ab45-15ac38e1b544",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e4bf16b-da72-4367-b5cc-590b7eb76e52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "851c7969-7b90-4737-b27a-7312106921bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bc4df3f-fdce-4930-90c4-9cf9bbe19b19"
                    }
                  }
                ]
              },
              {
                "id": "3f2b6506-e7a6-4364-ad08-1e8e92bef75c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3aad01df-a1a1-4e1d-886e-6312634f4e1d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197216fa-8c0b-427d-ba8f-90fa09501852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "db0973cc-d27c-4a64-9c01-42e4bf11fb47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcb0330-3c6d-42a8-ba43-a427f3080f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77826982-edd4-426e-b191-d5f47bff3640"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7945739e-71fe-4c1f-bfae-710a2a79b9ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1114b34-de54-4407-bf3b-8dbd7471a8a6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3bb911e-26e5-4c2b-97b3-90a3cc9c04de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "829fe276-1795-4821-8f6f-14e5f9a8cebe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0371e93-3fb3-486b-bcb4-c9150b6e4571",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bf18a83-7e6c-42fc-aa92-5dcdda8310e3"
                    }
                  }
                ]
              },
              {
                "id": "a11c9d28-8218-401f-868e-345bb205004f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed0a284a-c3e5-4cf7-bede-8e8accf1d4ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5182bea6-11e2-496c-a905-0354baaeb788"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f00e1008-043a-4296-a99c-55a3277f5410",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "141acddb-69ce-4795-b5cf-c8f28fce2e84"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03470747-f027-4555-9d01-a6da8676f296",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7aba49af-90bb-4934-b813-c479a34678f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ff25cad-3870-4eab-9a50-42fb1286daa6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad0697c3-3fca-4e78-bde9-8e6af32193e5"
            }
          }
        ]
      },
      {
        "id": "8db2f65c-6e01-4ced-9b74-773dce64b044",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "27eb6d3c-54c2-4542-b21f-b779e3a59fab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32680bca-11f4-4236-8262-ee74a24a42bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca3d7adc-166f-4dc2-868a-1afacd2de1a6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f13d503-1cd2-455e-9c2a-99766cc48d0e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b02332b7-284a-41c0-8d68-59b660d3c34d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef03a63c-89c7-4b70-b380-c49826251fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "427e2e70-0b8b-4596-bf4a-91c05f061a57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6ed43f6-a4e6-449f-a7fc-2091c4c0902d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f130c228-45fd-4cae-9415-0e606b25c5eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d254cb5e-197b-4f67-8ae1-989cdcf208a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58539443-d603-4fee-82f0-8784b3e67709"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d12d37c0-ef0c-47a1-ae32-f489aaa50433",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "488bc7d9-31d7-4872-88a3-76fbe27e7003"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43fe0e35-3f2b-4270-96d7-f711f9aa05e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9db9598-12dd-4e4c-b879-98a73982b8c0"
            }
          }
        ]
      },
      {
        "id": "3f6621cf-31c4-4c1c-bd92-0cf4b6faa27f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a6b34125-afee-488d-8964-9a13f3e5d447",
            "name": "Negative Testing",
            "item": [
              {
                "id": "745bde86-51fa-4932-aa3e-b36c9ed3c1f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1fcdb47-24de-4c56-b326-d722100cc5bc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b579bf74-590b-40d2-80ef-e539ee0b905e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91ca85e7-f659-4ad8-aa07-5c639adf7dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98655883-691d-4671-964d-cd1a4603c63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10de2327-8e0c-4683-8db5-68fdf212bffb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d84db189-306c-4540-8478-7bb1c1019d22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b30b2eb2-d252-4f46-8331-2b59c0c1cc5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc6355da-ab5f-4d17-ab77-7e36d5d9c54f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45f5c0b3-af51-4fdf-9ca4-20299bff73bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a1214b0-a649-4b07-b462-94f8bf19a9bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6719665c-fd85-451c-bb4f-e8f09bd4c151"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52a23391-5e09-49d2-ba82-733acfe7be5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a521e2b-2011-4e9f-bfb1-7b2ad78445fa"
            }
          }
        ]
      },
      {
        "id": "d85a32c7-438c-4eb7-bd4f-5e8655e36d67",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b579af29-24ed-45c5-acc8-1e1b69dbc089",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a74b39d8-3ba4-42b9-9a6d-57682707cc5e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d666011f-5f4e-418a-a98c-4958c223621f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73f82d0-a9b2-40cb-8195-c418f79bd749",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfa7dfe2-62ab-4383-b5ec-24cfb0c4a555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eda8e15-6787-482c-b147-6da82229bcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c8d1609-a021-44b5-a073-45b9545fccf0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "209ef384-088b-42aa-b3d4-1e579010e2d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52569d5d-75c1-4331-be95-8be0ca601a7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09aec6a0-cacd-473a-bf78-b2ab5762be39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3227dae9-4d01-4586-851f-fd8932a3254e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b5ae781-a449-4f9a-b7f1-dee18bb4f425",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f85f3fb8-fe0f-433e-8c10-d0c6b67eac4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "177d0980-d45c-44d7-affb-ba3e9c68d6a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "759c6376-4680-47fe-8de9-afd27066953a"
            }
          }
        ]
      },
      {
        "id": "8613c164-74c4-4b14-bfa3-c2208f709fd9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "653afa44-e072-452b-817d-4b24ec900c57",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b1cf627-adee-4cca-971e-250f66720292",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "19cbf4af-690b-4333-867f-a13db5fe5583",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aae10de5-1d0f-45b0-bc01-db4c20b55caa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1af63734-1ff6-477d-8379-191eb6068cf7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 250.316901408451,
      "responseMin": 27,
      "responseMax": 6395,
      "responseSd": 406.2526163680572,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689900074700,
      "completed": 1689900158104
    },
    "executions": [
      {
        "id": "ab9e5e11-0cab-48bb-ab98-800e0e4d0d45",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3205c937-9755-4c40-a111-76010fc6f298",
          "httpRequestId": "bdf83000-478a-4200-9327-d32b5d051267"
        },
        "item": {
          "id": "ab9e5e11-0cab-48bb-ab98-800e0e4d0d45",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4b578c94-4dfb-46fb-80ef-695dac81580c",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 0
        }
      },
      {
        "id": "2524c18d-e6dd-4e3c-8056-df1ff837382b",
        "cursor": {
          "ref": "82e4f8ef-7855-4589-969b-af8a0d8d827e",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c5c06ced-dc47-472b-aae7-68de7d91da92"
        },
        "item": {
          "id": "2524c18d-e6dd-4e3c-8056-df1ff837382b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "914b7ba9-1439-48fa-981b-4bab3b17147e",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 0
        }
      },
      {
        "id": "83dd0c94-ea21-48ac-ae03-92527c9f6f05",
        "cursor": {
          "ref": "e333f4e0-cbf1-4377-807c-0eb59ea68cfe",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0ff2c98a-245e-48ee-97e1-4d91cc12955d"
        },
        "item": {
          "id": "83dd0c94-ea21-48ac-ae03-92527c9f6f05",
          "name": "did_json"
        },
        "response": {
          "id": "00902818-3f09-483f-a04b-1eada23f6734",
          "status": "OK",
          "code": 200,
          "responseTime": 1167,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360af357-dc5c-4356-9149-db1af324ec2b",
        "cursor": {
          "ref": "b8b038bd-8f6d-456a-8d19-7ce16bc66ace",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "26ba8b82-97da-4083-839c-2ea2de3aca79"
        },
        "item": {
          "id": "360af357-dc5c-4356-9149-db1af324ec2b",
          "name": "did:invalid"
        },
        "response": {
          "id": "f6ef0c42-d303-4bb1-9ada-244467e49ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360af357-dc5c-4356-9149-db1af324ec2b",
        "cursor": {
          "ref": "b8b038bd-8f6d-456a-8d19-7ce16bc66ace",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "26ba8b82-97da-4083-839c-2ea2de3aca79"
        },
        "item": {
          "id": "360af357-dc5c-4356-9149-db1af324ec2b",
          "name": "did:invalid"
        },
        "response": {
          "id": "f6ef0c42-d303-4bb1-9ada-244467e49ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6005bca-9533-41d8-b96d-617d07aa2867",
        "cursor": {
          "ref": "c15f2992-9da2-424b-93d6-02c0a43e1af0",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d8930a5b-ffc8-49a4-ac76-fe0e4335b382"
        },
        "item": {
          "id": "a6005bca-9533-41d8-b96d-617d07aa2867",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6f9dbccd-3007-4508-bcaa-8695d3d3e1f0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 499,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bc42a6-b268-4478-8482-215f2f32772f",
        "cursor": {
          "ref": "5d4fbc58-1eb6-439b-bf42-b3f57305f40d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e4a03622-b688-4f2a-8d34-626daca5b832"
        },
        "item": {
          "id": "84bc42a6-b268-4478-8482-215f2f32772f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c1b5ed67-22e1-44af-b251-592e1ea17764",
          "status": "Not Found",
          "code": 404,
          "responseTime": 299,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a87551-78d9-43ad-8718-51ea3391d1bd",
        "cursor": {
          "ref": "93d2f34d-20ba-45d2-8113-4d79daf42e50",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0add09e8-e8de-4d81-a83a-35a7ad9814f0"
        },
        "item": {
          "id": "c1a87551-78d9-43ad-8718-51ea3391d1bd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "df3e7a6c-c49a-43bf-87f9-6995c584740d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dcda3d-24ab-460d-b457-4b584dd93f55",
        "cursor": {
          "ref": "48453829-1e00-4f89-affe-82e68e81270c",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1832137b-291d-4f94-9d8c-c0210458d579"
        },
        "item": {
          "id": "c5dcda3d-24ab-460d-b457-4b584dd93f55",
          "name": "identifiers"
        },
        "response": {
          "id": "af465351-e0b1-47bd-b520-f547dca029ad",
          "status": "OK",
          "code": 200,
          "responseTime": 1006,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33a1871-64f6-4f95-b4b9-698207722c04",
        "cursor": {
          "ref": "61a71de4-8caf-454d-8ceb-a47e3f3bdfd0",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3777552f-6ab5-4f3d-93f3-2c9ecf37c0c1"
        },
        "item": {
          "id": "c33a1871-64f6-4f95-b4b9-698207722c04",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "99695117-a66f-4794-9fd8-f08959bd2e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d79e34-44e5-47d5-801e-0058fccdc6bc",
        "cursor": {
          "ref": "793bf370-1fde-43ae-a61f-64fec054baa8",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "958a262d-e960-4411-8fe6-4d97e9824148"
        },
        "item": {
          "id": "16d79e34-44e5-47d5-801e-0058fccdc6bc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "13faaa89-7b82-4dfc-80ea-bb5d77444788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1420a9-8179-43ac-a25a-cd6247936a63",
        "cursor": {
          "ref": "b7fb9e8d-3d78-491c-a293-a8767ce8ed98",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "73a8c9eb-01c0-49ca-84b4-0d96c033fe82"
        },
        "item": {
          "id": "ad1420a9-8179-43ac-a25a-cd6247936a63",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4111b09a-bcad-4f78-aebd-c8522d20b997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242b69ab-2fd9-49ad-8ec0-b6d85a07d800",
        "cursor": {
          "ref": "98ceb24c-b546-4f21-a2ff-6828314f04b7",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ab6ece18-3904-4e2b-a88c-524c7cf919ef"
        },
        "item": {
          "id": "242b69ab-2fd9-49ad-8ec0-b6d85a07d800",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d70b97b5-1981-47d0-8e69-bbd2b4834f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1a28d0-d210-43b2-bd1d-2e749dffe811",
        "cursor": {
          "ref": "4e3c6324-c0f8-46be-9a09-2d603231b855",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "660a4826-bb9e-4c61-bc28-5c24679dfb94"
        },
        "item": {
          "id": "eb1a28d0-d210-43b2-bd1d-2e749dffe811",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d882d910-2d2a-4d8f-8b5b-234b9525f4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d11050c-f5b1-4fe1-8372-31eed568958b",
        "cursor": {
          "ref": "9cf622a1-6b66-4c06-ba4f-6b33a8cfd03d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f2cc9859-2766-4f23-b737-a8f0b2cc2736"
        },
        "item": {
          "id": "7d11050c-f5b1-4fe1-8372-31eed568958b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5e48cef4-7c93-4258-81e9-91c7a2c59f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beaca70b-8552-4632-9358-bb39a4bf3121",
        "cursor": {
          "ref": "88bac4f1-249f-4dbc-aae0-c9c8e983e96b",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "47027632-541e-46a4-b0a5-a7c8bf07f0bd"
        },
        "item": {
          "id": "beaca70b-8552-4632-9358-bb39a4bf3121",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "249f3de1-524c-4a40-9328-52a4b64dda60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e16e02a-c8cf-4c28-9fbf-1b0ec51be073",
        "cursor": {
          "ref": "1bfb6201-f1ea-4415-8169-e146f8d75a6a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f3531ecb-c686-4434-9c87-a3840a56364b"
        },
        "item": {
          "id": "5e16e02a-c8cf-4c28-9fbf-1b0ec51be073",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "38ad70e3-eaa6-4310-8b52-830012bd7e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44540566-060c-47f1-82d1-d70dbe712d7b",
        "cursor": {
          "ref": "01f92a8b-eda1-4e84-8113-60f7964a4d87",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fb826130-e066-4b0c-9a34-94471e4bb47c"
        },
        "item": {
          "id": "44540566-060c-47f1-82d1-d70dbe712d7b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6a64ead0-2f4c-4f4e-a503-708bced0baf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d9121b-bd9a-4b45-9e38-51848039cc1d",
        "cursor": {
          "ref": "4b0db5ba-0efe-4555-adfa-ef43dfd1fdae",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8f8fd83b-df09-4d94-88db-5e9d8e402275"
        },
        "item": {
          "id": "69d9121b-bd9a-4b45-9e38-51848039cc1d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3b5fc2ce-fef0-4c5f-be4c-5661da9bd1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b69fa2-b0a2-4e22-b576-3de92842dbc2",
        "cursor": {
          "ref": "4e700aaa-349e-4ffe-9f9c-27e9f962d960",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bcf5dc6a-8417-48cf-aafc-c587e90fbaba"
        },
        "item": {
          "id": "48b69fa2-b0a2-4e22-b576-3de92842dbc2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "afeac674-9249-4a5a-838e-8d719a427855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743da7cd-18e9-4ea1-bf32-ea43ebb3bff2",
        "cursor": {
          "ref": "6c165260-7e61-44cd-89d1-4a5322855b67",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0139ba75-6454-4337-a5be-27ca388563c9"
        },
        "item": {
          "id": "743da7cd-18e9-4ea1-bf32-ea43ebb3bff2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fd2464e4-adb6-4e28-a3c1-520895d65195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d20db63-9bcf-4c42-8fd1-d874007f6a52",
        "cursor": {
          "ref": "e6ad7899-6d29-4a4b-a1a5-a75beca71fc4",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fc2ab0da-073d-4543-94e5-7667e458a9cd"
        },
        "item": {
          "id": "8d20db63-9bcf-4c42-8fd1-d874007f6a52",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f0964a38-0624-4d48-ae20-c7ffe5ada5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21bb33a-d555-430a-bf5b-ce39f18f5d68",
        "cursor": {
          "ref": "07ee8d6d-ee4b-47ff-b04b-e8039592abe6",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e7ac9656-3e43-4a2f-8b50-6a4029a5f281"
        },
        "item": {
          "id": "e21bb33a-d555-430a-bf5b-ce39f18f5d68",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "261bd342-9379-4dd6-aa37-75f6f8a9d24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66726f73-1058-424f-b80c-5d01031529e6",
        "cursor": {
          "ref": "0c2d12b8-435d-49e0-ac58-35f72f0c41ef",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "98d4b1e9-ab2b-4fa7-bd61-1cf1e4aa68b4"
        },
        "item": {
          "id": "66726f73-1058-424f-b80c-5d01031529e6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "01fe3e98-21ec-409b-b06f-8c56ba763488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7489d06-8a7f-4c95-94c1-bc575a3f1de5",
        "cursor": {
          "ref": "91b5cfd1-155b-4b42-bb88-759a5a3f8dd7",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d3ac1247-1f08-4d30-9a88-76bfe3cf4d58"
        },
        "item": {
          "id": "a7489d06-8a7f-4c95-94c1-bc575a3f1de5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0728292f-cbd3-491c-ab78-15e399fc3430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad8b3d0-5824-44a8-b3ae-1ef9eaf90e39",
        "cursor": {
          "ref": "a7b11f81-31fe-4ec5-aba1-20f7071f269a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fa09b29c-d97f-462b-a176-2d217dee67ef"
        },
        "item": {
          "id": "4ad8b3d0-5824-44a8-b3ae-1ef9eaf90e39",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4d656f94-f50f-499b-b2df-d58f385d755b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a26669-cb8f-4a20-9156-a365d32cc98b",
        "cursor": {
          "ref": "91b79377-db7c-4507-8f76-c8ccb3bab08b",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "dd1fe2e4-e376-440f-8e38-652480b7cd92"
        },
        "item": {
          "id": "74a26669-cb8f-4a20-9156-a365d32cc98b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ef90a701-6679-484f-a36e-142d2bb80930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dac325-cd2e-4534-9706-2242cacc7354",
        "cursor": {
          "ref": "714c2d87-993d-49bf-92f3-1a15cab0e225",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "73ea319f-5ade-4143-a066-9f2f854d31a5"
        },
        "item": {
          "id": "51dac325-cd2e-4534-9706-2242cacc7354",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a22ba18a-aa41-4b90-ad79-404a12c7c636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de3b5c8-e767-4237-95d1-97a5699cc644",
        "cursor": {
          "ref": "73e8e4b9-d675-48e6-84b2-fa7afe098feb",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "393c66b1-0d02-41c6-918f-daa6961e4efc"
        },
        "item": {
          "id": "3de3b5c8-e767-4237-95d1-97a5699cc644",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ce0e2e5f-760d-4d3c-8519-fcd82671ad6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f129a4b7-2d7e-47c3-a9c0-811373cd8106",
        "cursor": {
          "ref": "bd1773ac-6447-4960-8899-ad17b6b16469",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "984acf98-f61a-45ca-be1a-b8fab1b597ee"
        },
        "item": {
          "id": "f129a4b7-2d7e-47c3-a9c0-811373cd8106",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4119fa2b-5664-4712-b3fa-0aa7fbb81548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b6c01a-724c-41f3-bc08-c606a9ba14b4",
        "cursor": {
          "ref": "884c446a-139e-430e-bab7-c62f7b1a6abb",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "de64ec5a-4ba0-43d2-b718-717bb2ea64de"
        },
        "item": {
          "id": "90b6c01a-724c-41f3-bc08-c606a9ba14b4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "49bad9c5-9db0-4d2c-abca-84a956e8e19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92414fde-741a-49e2-aa23-5e75e42feeb1",
        "cursor": {
          "ref": "fd69340d-10d3-4a9e-8bcc-b96934aaf71d",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f29698d1-6826-4fac-a002-4c14f87aff57"
        },
        "item": {
          "id": "92414fde-741a-49e2-aa23-5e75e42feeb1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "621308d4-c4f5-43a9-bf45-7ea489afa09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559b2e69-b6fe-4763-a176-491c262cc1b1",
        "cursor": {
          "ref": "2dfef3b9-17b3-41a9-bbe4-e9c5a06e4dde",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "78ec8d53-3b2b-4bb3-a7e1-b5fd72415d79"
        },
        "item": {
          "id": "559b2e69-b6fe-4763-a176-491c262cc1b1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6191b6a6-e8e0-4fe9-93b5-3d56d261f4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ec262f-d276-4a4a-86ba-9c98baca7a99",
        "cursor": {
          "ref": "a4eab5a2-29e0-49ce-9f6d-ebea7ec58b6b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "eb2ccb32-1109-4e8a-ad38-7622428ca606"
        },
        "item": {
          "id": "75ec262f-d276-4a4a-86ba-9c98baca7a99",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "769a0c4c-63dc-4516-83fc-e18f3482e7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6763aaa-cce6-4df4-bcfe-7d5653bc379d",
        "cursor": {
          "ref": "2eb83a75-038c-483f-999f-037ef078b3d1",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4d9a1a8a-edb7-4056-885a-5ebe94ae91ae"
        },
        "item": {
          "id": "b6763aaa-cce6-4df4-bcfe-7d5653bc379d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "97eaaaa7-fdbf-4efd-91f1-162f32b5e633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5c32e8-1973-4dd9-b692-aa019558cfc8",
        "cursor": {
          "ref": "a57659b5-549e-424a-aee6-b6db54e5722f",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "791331f2-9d23-48eb-884b-2211dfe3812f"
        },
        "item": {
          "id": "0c5c32e8-1973-4dd9-b692-aa019558cfc8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "01394758-7b17-47ed-b6ad-a65d25fcd686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462bc055-49e8-4d7c-8e75-942e1ad9c647",
        "cursor": {
          "ref": "567d9c17-d8ad-417a-b9c7-66cde9dd7ca0",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ecce78ff-13b4-40e7-b690-0410a061e3df"
        },
        "item": {
          "id": "462bc055-49e8-4d7c-8e75-942e1ad9c647",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dc1bef6c-c8e0-48f8-8832-797c25bd47f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133ad3c4-0696-4149-a2fb-88e9923e6b0e",
        "cursor": {
          "ref": "7923a58b-de23-4b5b-8529-0571fcb5f5e3",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6b952dc5-7f73-4b81-8cbc-0d5743af1f7d"
        },
        "item": {
          "id": "133ad3c4-0696-4149-a2fb-88e9923e6b0e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "abb52ba2-508f-4293-8063-fde3c55d5e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b4c927-9f59-4d15-9e73-5dacd8263049",
        "cursor": {
          "ref": "9279ddde-8919-40ec-9db6-cf3400217366",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0fca5707-cee0-427e-aadf-43da92ee55f6"
        },
        "item": {
          "id": "f3b4c927-9f59-4d15-9e73-5dacd8263049",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ae377238-8767-4344-9223-cca85fedf1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196adf95-c7c2-4966-9803-a44652462bb7",
        "cursor": {
          "ref": "90ce091e-fb06-414c-b29b-f2bde14fdcd8",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "21d32fd5-6885-4c68-aca0-03563769b4df"
        },
        "item": {
          "id": "196adf95-c7c2-4966-9803-a44652462bb7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e409f3e9-c190-45a4-85a2-b97da299b34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84639506-1dd3-4432-8ea4-d72e50f6155d",
        "cursor": {
          "ref": "d76ff2eb-9465-4e5d-b76d-c9fa446165e9",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7bfae753-d1dd-4dc9-9500-be277caaa85a"
        },
        "item": {
          "id": "84639506-1dd3-4432-8ea4-d72e50f6155d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a912dede-7b08-497d-8ffe-cce97c461ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03021547-08c0-404a-a2b9-59404df07fdb",
        "cursor": {
          "ref": "e93e0b96-2823-4d04-abea-48685f3cb8bf",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "08bb0615-046a-40c9-bd18-d6b1c20f1b88"
        },
        "item": {
          "id": "03021547-08c0-404a-a2b9-59404df07fdb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9c93860e-e6b3-4032-9330-1b0fafb5c143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55e72ac-3411-4bee-b805-2d6176d1dc52",
        "cursor": {
          "ref": "27f379e9-8612-456b-b508-134d53c37741",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "68840fdb-f93f-4ea9-9ad5-d47b897f01fc"
        },
        "item": {
          "id": "e55e72ac-3411-4bee-b805-2d6176d1dc52",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6a656ab2-d0b7-4cd9-8677-4eb1b7352ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661b8372-6323-4006-92fe-1449ccf47a48",
        "cursor": {
          "ref": "2582b5e6-b5cf-47be-8ff1-04f03520b989",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "283cbc02-9eb6-4837-b36c-01fa9bc51ad1"
        },
        "item": {
          "id": "661b8372-6323-4006-92fe-1449ccf47a48",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "adce81ce-88d7-4033-92eb-0e75e722a978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c6568d-cba8-4ec8-a085-5f6100ddcd76",
        "cursor": {
          "ref": "4b26885a-a886-4d49-a475-a31a009b8356",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2c9b57c8-318e-47b1-9a4a-ddefcc004045"
        },
        "item": {
          "id": "c2c6568d-cba8-4ec8-a085-5f6100ddcd76",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "80cbfbd1-dba0-4d6e-9814-e948a025e336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681be763-b9d8-4568-a65b-665358a8787a",
        "cursor": {
          "ref": "47d834c5-8c43-4345-a55b-031984f2a6fb",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3fd8a52c-5926-4c73-970b-05db3f72cd05"
        },
        "item": {
          "id": "681be763-b9d8-4568-a65b-665358a8787a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e9403820-465e-4ea3-816b-da66e800cd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27674fb-a318-41cc-b107-9d0f6f663406",
        "cursor": {
          "ref": "e6776851-e0bc-4e4c-a251-92416404ecf2",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9e8712c0-d62c-4430-b81a-da22170d638f"
        },
        "item": {
          "id": "d27674fb-a318-41cc-b107-9d0f6f663406",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0aa7119c-983c-4b28-a696-79e0407605d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc120f65-2832-40c9-a4e0-cec551f8dde3",
        "cursor": {
          "ref": "7adb64e0-3b00-4128-bb5c-1e2c04b2c266",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1b989ec0-570e-4784-a5f5-8062d83f9cbd"
        },
        "item": {
          "id": "cc120f65-2832-40c9-a4e0-cec551f8dde3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a938ebb7-bcc5-4707-8fff-17c619c31439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c2c252-ff95-4e84-8a47-052a3ce96ff0",
        "cursor": {
          "ref": "c0684646-c06b-4246-9d8e-b58790455485",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4e7cecd9-e734-4b12-809e-77663aaf8d68"
        },
        "item": {
          "id": "77c2c252-ff95-4e84-8a47-052a3ce96ff0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6a98bc2c-882a-40aa-bf49-b6da2f9956aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5311e770-ec74-48e1-99c9-939acee74cac",
        "cursor": {
          "ref": "d518caa2-09f1-4ccb-9e6a-fbdd446e3388",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "12e82283-4096-48c8-b390-2ef645c289fa"
        },
        "item": {
          "id": "5311e770-ec74-48e1-99c9-939acee74cac",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "daf085a3-2407-4e7a-bf20-3ed55d7485bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9f3871-1ce7-4093-8e32-0c8229f9b85d",
        "cursor": {
          "ref": "e9c3a08d-beaf-4850-82bb-e246e5b3e530",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3d433c96-f299-4a51-a568-424708808bf1"
        },
        "item": {
          "id": "4d9f3871-1ce7-4093-8e32-0c8229f9b85d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "744e68d4-7a14-41d5-87e8-3fec737d080c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc5b372-314d-4a46-9fab-0763b4f7a1b9",
        "cursor": {
          "ref": "9884c792-22be-4564-b71c-bf57b20160af",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a5536c78-83e3-45f1-bb0d-b8f97917e3be"
        },
        "item": {
          "id": "8fc5b372-314d-4a46-9fab-0763b4f7a1b9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2cf1915a-0684-456d-b59a-1a260649cba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2830582-afe3-4d5d-80e9-bdffeef5366f",
        "cursor": {
          "ref": "370991c3-0392-4cb4-840b-81b51ae65d26",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8a48e62c-04cf-4e57-84e5-5cedbc46b9af"
        },
        "item": {
          "id": "a2830582-afe3-4d5d-80e9-bdffeef5366f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "29812af1-0d82-4e35-929d-e4308dc1fd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4d374f-c2d4-4d9a-b97d-3cbc36eefd72",
        "cursor": {
          "ref": "ed21bc7f-84f3-4dd0-bf5e-0e4c79b9823f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c9649cad-a323-4504-86f1-df6e4f9f7f34"
        },
        "item": {
          "id": "fa4d374f-c2d4-4d9a-b97d-3cbc36eefd72",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ec5227e8-6683-4a00-9bad-41ee78f075bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2397b763-c1d0-4ae2-b4e0-8538e507ed3d",
        "cursor": {
          "ref": "2928ad4f-062b-4671-b2aa-02de8292eae3",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ca2b38ee-7485-4c61-9249-6b0ceb5cbc7a"
        },
        "item": {
          "id": "2397b763-c1d0-4ae2-b4e0-8538e507ed3d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d992c6c6-f5b1-424a-9af2-d9a58ff3c6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d33e8e7-167c-486f-83bc-aa4a87ea0e3b",
        "cursor": {
          "ref": "85c702ad-ea0a-469c-95b1-ba486bc83b5d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "44eb8501-8695-4ce5-b299-7976e0f559d9"
        },
        "item": {
          "id": "5d33e8e7-167c-486f-83bc-aa4a87ea0e3b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cb5ce073-868e-4f13-9e8b-0150d23ff66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8523b29-fb7a-452d-ad40-7527f696905f",
        "cursor": {
          "ref": "a758c569-3a2b-4b8b-a7a3-f59f122bf0a9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9f51ca92-25f8-4b44-9aee-0e6af116afc5"
        },
        "item": {
          "id": "a8523b29-fb7a-452d-ad40-7527f696905f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6984c788-0e6d-4416-8994-f056e04cec42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f8f599-5fe8-4269-b171-f864802b30cf",
        "cursor": {
          "ref": "7ac8cc97-8834-42d0-84ef-587910693117",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "29281de4-524e-4eb6-af52-bb8e96405e0f"
        },
        "item": {
          "id": "e6f8f599-5fe8-4269-b171-f864802b30cf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b4ade6a4-f7db-4568-b4a1-dc41558c03b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188c4ed2-2181-4486-aec1-286b49df70ef",
        "cursor": {
          "ref": "3b9f24d7-bff6-4a94-9d9a-ca4796c1741d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5604b26c-afda-41c4-989a-345eec9c12a8"
        },
        "item": {
          "id": "188c4ed2-2181-4486-aec1-286b49df70ef",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d48322a4-b305-4c4a-92e4-e76c301907db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd788461-1866-4ce4-a972-c1a5dbc4cab6",
        "cursor": {
          "ref": "7183fd28-56b2-4cf6-9158-a883c8224b0e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ec14b048-b149-42be-96ea-7390430c64af"
        },
        "item": {
          "id": "cd788461-1866-4ce4-a972-c1a5dbc4cab6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8ec59c15-f3fd-4dd1-bc2f-d499acd921fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6aeb3d2-630a-47d9-b33a-254b8f2da0af",
        "cursor": {
          "ref": "ba58508f-86b4-4f19-aa90-d93f9ccb117b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d6b596da-4cbb-4817-85f6-5d6d9f0f68ac"
        },
        "item": {
          "id": "b6aeb3d2-630a-47d9-b33a-254b8f2da0af",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a31cc14d-4e91-4903-b258-ddefbc0257c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20b95d1-5be9-487a-a8e5-25cf608ebba5",
        "cursor": {
          "ref": "a1d95e1a-418b-47f1-b527-4ec14df817bb",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "68fef77d-631f-4bbd-afff-96866e6bcbc9"
        },
        "item": {
          "id": "a20b95d1-5be9-487a-a8e5-25cf608ebba5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d075d0be-f5af-429f-afb2-eee3087aee35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36709d80-5943-42d2-9b64-713f564e9183",
        "cursor": {
          "ref": "c834bb47-5c6b-4f5f-bd5e-664f220c6f55",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7fdda690-b678-4d90-989f-0ef2b7a67de7"
        },
        "item": {
          "id": "36709d80-5943-42d2-9b64-713f564e9183",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "51ce3400-a720-4748-9c4c-f6d425073752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fae533-35b3-4028-b2ca-b8de3d9d6078",
        "cursor": {
          "ref": "87af1bd0-ba6d-4ed1-84b4-d8b209b7f424",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "82ffab38-393a-47ef-9b90-cf8bcff10c94"
        },
        "item": {
          "id": "45fae533-35b3-4028-b2ca-b8de3d9d6078",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "07e2c93a-519b-4f81-9d94-a9a982bfea94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d8909d-751c-4c87-a7da-bffbbfa12855",
        "cursor": {
          "ref": "59917859-fef2-40b0-afcd-9b827e2b4719",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bf8d9acc-4561-4ef6-ae21-c3cad2b79084"
        },
        "item": {
          "id": "29d8909d-751c-4c87-a7da-bffbbfa12855",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f3ba2939-3dde-4f96-ac0a-7b0e665d8cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ceb305-1b31-4980-8062-93d3ff255832",
        "cursor": {
          "ref": "30e0da71-3f7a-4857-9aef-f1418acf4dff",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0d4f4c92-750e-49c2-bb6a-1f512033e1aa"
        },
        "item": {
          "id": "10ceb305-1b31-4980-8062-93d3ff255832",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "78b274cf-ed0f-4725-9ee5-304420d65f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b4299e-aae3-4674-ad80-f8e7d5030eff",
        "cursor": {
          "ref": "15047ffc-b928-4b4c-a124-91e1441ede95",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "37da94ce-0871-4254-9e86-265b8eec2494"
        },
        "item": {
          "id": "85b4299e-aae3-4674-ad80-f8e7d5030eff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bb9bae68-3227-45f9-9ee2-e4081483d28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee95f47d-d3d4-4170-9a7b-8b3135150560",
        "cursor": {
          "ref": "3212b6a8-079e-4c97-8a06-445c019d9ed7",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7092709c-363d-4a92-9caa-55cf32fa358c"
        },
        "item": {
          "id": "ee95f47d-d3d4-4170-9a7b-8b3135150560",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "062adf48-4660-4a4e-abdf-f3d935230ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cc89aa-1bed-4219-9648-e227bd79b0f1",
        "cursor": {
          "ref": "1d13dded-2197-4ba9-a17e-c47170c199c9",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6796baa2-59a7-4efc-aecd-0f283e37e7ee"
        },
        "item": {
          "id": "d7cc89aa-1bed-4219-9648-e227bd79b0f1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4b2b244a-d4ab-49aa-86b7-932969e6488d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a47181-9efd-484e-91ee-c5a1b0d4863d",
        "cursor": {
          "ref": "a6140679-0a49-45e6-abb0-1fe7dcd738e4",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e4825b8a-e8f2-42e9-bba3-7d031650d77a"
        },
        "item": {
          "id": "a2a47181-9efd-484e-91ee-c5a1b0d4863d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "91d07e55-3cf5-418d-ad6e-739fd68f8dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4773296a-dca3-4b17-95dc-354dc061420a",
        "cursor": {
          "ref": "8275e476-1128-41c3-b8eb-4ff96918c6b8",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f1624c5e-a20b-4829-bec1-ef1758a3165c"
        },
        "item": {
          "id": "4773296a-dca3-4b17-95dc-354dc061420a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f8af228c-459b-458c-a92a-41c711bb7acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46a951f-fd5d-4952-82c6-8efa581c394c",
        "cursor": {
          "ref": "0073f5d6-088c-43f7-b7b1-458860a7a5a3",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e37e5a5a-7609-4fe0-9011-68fcca7108cc"
        },
        "item": {
          "id": "c46a951f-fd5d-4952-82c6-8efa581c394c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "571d862e-b796-4e6e-9259-2ce47542ef36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8e801b-d017-4729-8e3a-1bd134a0b3aa",
        "cursor": {
          "ref": "539d5302-94a6-4cb5-aef0-24d40f1b9f23",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ac900ac1-e4fb-4ccd-b801-5089e54a1c75"
        },
        "item": {
          "id": "8f8e801b-d017-4729-8e3a-1bd134a0b3aa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ee1048c3-9dbb-4674-8fae-49b405540105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8cb6b4-6367-4c10-a112-6e2d60301ae5",
        "cursor": {
          "ref": "838f9762-9bc0-4025-be99-95f8799077f6",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "608688c3-ce9d-4cbc-8810-539db1453bde"
        },
        "item": {
          "id": "ea8cb6b4-6367-4c10-a112-6e2d60301ae5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a11b2c1a-fd80-4be4-b8a4-d9adaa9fee0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b5eb94-5dc0-40e4-a82f-2234967ce172",
        "cursor": {
          "ref": "5abab7d5-2a81-4481-a171-6f889e2439a0",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "70064bc4-3509-4e6a-a51c-b0948aaa4cec"
        },
        "item": {
          "id": "40b5eb94-5dc0-40e4-a82f-2234967ce172",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "df527a39-3e1a-4818-a5ed-033eddd7ed96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3931bc-7d27-46c5-a77a-08f22c5a45a4",
        "cursor": {
          "ref": "6b067965-cfd7-405d-80e3-dba2fc4c71a2",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b73c0652-07b5-47f1-a424-c2636a3bb3f0"
        },
        "item": {
          "id": "ba3931bc-7d27-46c5-a77a-08f22c5a45a4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a4c19b30-e3f2-4d5c-b39e-919129849f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d943c6ca-2936-422f-ba35-4b9c705c0f7d",
        "cursor": {
          "ref": "173ebfa0-fa2a-4e83-818c-ef0658220d36",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9f4d16fe-4c65-48bc-a0af-86e38dffa4b8"
        },
        "item": {
          "id": "d943c6ca-2936-422f-ba35-4b9c705c0f7d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "66e33ee2-6020-435b-b2c7-4785ee6ad211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a0d3f5-e98c-4cfd-86bc-5ed7c5b6351b",
        "cursor": {
          "ref": "1daed35e-a0d4-49f3-9eaf-1442c0148f14",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ec492cf0-d1ee-45ea-a9cf-a56b84faceda"
        },
        "item": {
          "id": "66a0d3f5-e98c-4cfd-86bc-5ed7c5b6351b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "558901ac-30ec-4307-8bac-72a111211bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fd0ea1-e3c3-4e79-bac5-1559b0d0ecd7",
        "cursor": {
          "ref": "f64b1b39-4a5d-4f68-91f4-c07a93fca12f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "35a3d0cb-0e50-4495-b6a4-2750c6b36d20"
        },
        "item": {
          "id": "30fd0ea1-e3c3-4e79-bac5-1559b0d0ecd7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "69209100-f4c9-4eed-bbdc-7120cc54abba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb75103-27a8-4efa-85ae-b72d8ca977df",
        "cursor": {
          "ref": "80619caf-f806-4715-9a92-5230941d2edc",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "263592c2-a94b-4c8b-a7a7-8a2b9351302b"
        },
        "item": {
          "id": "cbb75103-27a8-4efa-85ae-b72d8ca977df",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ca94be7a-a8f0-426f-a56f-b1468f5fc228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da3d68a-8473-4f5b-8d79-c114e297fbde",
        "cursor": {
          "ref": "0ea68999-7991-463d-99fb-6bdec32ca9bc",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e528de77-8277-4253-a84a-3a5f66094d86"
        },
        "item": {
          "id": "2da3d68a-8473-4f5b-8d79-c114e297fbde",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "43730510-9d7e-499e-bda0-24361b4a59b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35fe647-c2fd-422a-973c-4b8249802cbc",
        "cursor": {
          "ref": "ab2af082-6b47-448a-a297-9dfc22f4f0ce",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c8ff70ba-edbb-4bfc-8723-3e6d5ed3845a"
        },
        "item": {
          "id": "f35fe647-c2fd-422a-973c-4b8249802cbc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "93e20813-1215-46cc-a1ee-ce2a904dd7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d002064b-7d7a-4bf6-ab68-fe226ea5bba8",
        "cursor": {
          "ref": "c47e8b6c-ba3c-40b7-a05e-3bbd2dbb51ba",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "aa666d06-3b50-40ce-b990-7bd705221f66"
        },
        "item": {
          "id": "d002064b-7d7a-4bf6-ab68-fe226ea5bba8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "544a3404-3ffe-472e-8c11-02ad5f37cb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54b13b6-cf4d-431d-9c70-a9d6bd81e3a0",
        "cursor": {
          "ref": "34f8f19a-e694-4c44-a699-dcaea383bf07",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d13c53e9-153b-4edc-87da-7931a9b2b576"
        },
        "item": {
          "id": "a54b13b6-cf4d-431d-9c70-a9d6bd81e3a0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "45dd6eed-9aa1-4545-8ecd-74a57b6dceb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c66150c-a55d-4837-a251-c0e4448f60a6",
        "cursor": {
          "ref": "b1ddda26-7849-455d-8ea0-fed00473cca4",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7e2c0eb1-229f-4862-8eb0-d8e0a0dffd69"
        },
        "item": {
          "id": "7c66150c-a55d-4837-a251-c0e4448f60a6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "202c34d4-1aff-49b6-b3f7-ea86180f11ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e97268-4a4a-447b-945a-472e75187e81",
        "cursor": {
          "ref": "2dde9ff9-12a4-47af-a993-6aee01fabd4f",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1436fee3-2037-414d-9fc3-702945e7f7f9"
        },
        "item": {
          "id": "76e97268-4a4a-447b-945a-472e75187e81",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "953036bd-7355-4920-89bb-26900b54c7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5c9e7e-d645-4fa6-99c8-e27ef4944f07",
        "cursor": {
          "ref": "146f5ac4-4046-4809-86b1-79c869fd2673",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b875ed29-c37e-4da9-99f9-3806bb80b34c"
        },
        "item": {
          "id": "4c5c9e7e-d645-4fa6-99c8-e27ef4944f07",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bb74fef2-ffc1-4ebb-bd44-f62759642991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e3da3e-6a50-44fb-a617-46c85a4f13cf",
        "cursor": {
          "ref": "8a1099d0-e37a-4f99-b40e-473e781a8adb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d124313a-01cb-4974-86cb-20e938ed1094"
        },
        "item": {
          "id": "51e3da3e-6a50-44fb-a617-46c85a4f13cf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4a665eb9-e0a7-4186-a3c3-27c1328ed074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2cf8b4-5362-4ea3-8a9f-7ca0623cac72",
        "cursor": {
          "ref": "28d48894-b97c-4ed8-8985-a2baeb87a0e3",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5fed2481-a8da-4e93-96f3-fb6a3ddb497d"
        },
        "item": {
          "id": "3b2cf8b4-5362-4ea3-8a9f-7ca0623cac72",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d6997a19-b54b-4fdb-8ab3-05848a0f3847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9ab02f-78a2-4e12-9880-ebb7660871a2",
        "cursor": {
          "ref": "1b35d48a-989e-4462-ada8-797b7430bcdb",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "963c667e-96ff-4790-b93b-ad0155dedfd1"
        },
        "item": {
          "id": "4f9ab02f-78a2-4e12-9880-ebb7660871a2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b598c377-17f2-4a96-ac9d-fd3335c93393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a26810-8ec7-44d5-98e6-b20abeb6cf34",
        "cursor": {
          "ref": "7bf36f8a-26a7-41c6-bbf9-381dee5dc402",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d9e033cf-1ec9-4987-8758-cec018225ac1"
        },
        "item": {
          "id": "83a26810-8ec7-44d5-98e6-b20abeb6cf34",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7f39c273-7900-4b0d-9c52-6c8772475c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359762b2-e5df-4795-ad66-4f8711b1b546",
        "cursor": {
          "ref": "e873000d-c4ea-48dc-9a30-e85b433cfb7a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9684e2dd-7a9b-4606-8894-c1f950e33eb4"
        },
        "item": {
          "id": "359762b2-e5df-4795-ad66-4f8711b1b546",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3b3d5101-4859-4b7d-a223-fe2014929505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda6bad9-b698-439c-a8e5-a883b4b9d1b0",
        "cursor": {
          "ref": "e481e49b-58ee-4206-b725-cae7eff2403a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a3f68405-d128-486a-9f55-e016d5351356"
        },
        "item": {
          "id": "dda6bad9-b698-439c-a8e5-a883b4b9d1b0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9d3dc702-586f-4ac1-ad8e-47063ad4f372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7152a587-a740-4537-af70-b0005d128580",
        "cursor": {
          "ref": "ee40b469-9502-409e-8f72-cd50313dcafa",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d917e1c7-667d-43c2-b277-0be07a1dc7c5"
        },
        "item": {
          "id": "7152a587-a740-4537-af70-b0005d128580",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4432dd44-b9b1-40bd-a7b0-9a9c0330c7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24305791-48ed-4b14-98e8-4daf241e0d4e",
        "cursor": {
          "ref": "f9f257b2-a976-4a5e-bf2b-1a4a84f3f837",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a0a14d0d-5b2a-44a7-8aa8-92a4901b94a6"
        },
        "item": {
          "id": "24305791-48ed-4b14-98e8-4daf241e0d4e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e691a2f6-1caf-4083-9ee4-1c2d2009abbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf57b64-550c-4068-b828-5d1aa5b84900",
        "cursor": {
          "ref": "a3fbfa3d-75af-48f8-b3ed-e67ee2d0625e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9aa4edfa-a77e-4dc7-a9bd-f098968d16d4"
        },
        "item": {
          "id": "0cf57b64-550c-4068-b828-5d1aa5b84900",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ba516965-4e8b-4838-b700-0c0d15740509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cf50fc-afcf-4ba1-8b28-e5c61d917e11",
        "cursor": {
          "ref": "fa7a6c76-3514-4324-8319-1c3e2f442e2a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bb09e270-e403-4324-9c33-fd9a51296b6a"
        },
        "item": {
          "id": "11cf50fc-afcf-4ba1-8b28-e5c61d917e11",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3901ce14-2566-459d-8885-4104571ade3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05ae389-8cc1-4854-9b44-80027a91ad99",
        "cursor": {
          "ref": "9e29457e-182b-4427-bca9-1309511a273f",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "01b0717a-c305-4e01-aa19-c9ce5dde325f"
        },
        "item": {
          "id": "b05ae389-8cc1-4854-9b44-80027a91ad99",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "98e2782e-be61-4e0f-a65b-257e0f8b51e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c957886-bef6-4058-99e5-211a1f84d780",
        "cursor": {
          "ref": "32d4b50a-a6f4-4ba0-b639-bd2c1b25757b",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e3d8ddd8-2307-41de-adfc-2a8ae3ea6acf"
        },
        "item": {
          "id": "2c957886-bef6-4058-99e5-211a1f84d780",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "39428cca-907f-474a-82e9-882395d4eb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc83455-a31d-4d6e-8ae1-11cef846b0e5",
        "cursor": {
          "ref": "72679df3-33d6-4ea9-9f50-65f29e18a7ef",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "77af56d3-9f7d-4c16-a3e0-8b4a32dfd500"
        },
        "item": {
          "id": "3bc83455-a31d-4d6e-8ae1-11cef846b0e5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a7e9082a-4efa-4fde-bee2-9e768b44e60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576599cc-e406-4178-90ae-9db563e79ea3",
        "cursor": {
          "ref": "263de20c-1a5f-48ca-9cca-5c2516f80e30",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "37fbd703-bde8-4db4-aced-85eb73ee0756"
        },
        "item": {
          "id": "576599cc-e406-4178-90ae-9db563e79ea3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "121a11f4-77db-434f-bcc8-8d46a0a691f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8bd5b9-6eac-4b0d-8a7f-1d9cfef28883",
        "cursor": {
          "ref": "14b72123-cd9e-457e-aefa-cdbb3e96ebcb",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6b7e74b5-7e2b-4d8a-8b11-05220e6b8261"
        },
        "item": {
          "id": "3d8bd5b9-6eac-4b0d-8a7f-1d9cfef28883",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "962493b1-9d36-4bc0-af7c-fe30256bf291",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dad1695-c6f9-4a42-a171-62dd4e690bea",
        "cursor": {
          "ref": "a8c07ae0-3600-4c03-9bc9-5a167d9a4c55",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4e535db0-1598-4ff6-8593-33a2c969beef"
        },
        "item": {
          "id": "3dad1695-c6f9-4a42-a171-62dd4e690bea",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b9770299-eadc-475d-a0b3-08a1536c4711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "1cfdbd05-8475-4015-8f56-b6586b3587ca",
        "cursor": {
          "ref": "e95170f2-b127-42b3-9085-ae1b4fa337cb",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "475d6c9c-4fb8-4003-a962-a6702daf9e3e"
        },
        "item": {
          "id": "1cfdbd05-8475-4015-8f56-b6586b3587ca",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "86f5b288-7d1d-45d7-bed1-9d0d4da623c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "de946b38-579e-4c7f-b724-187f6608cffe",
        "cursor": {
          "ref": "0c40a446-de63-4b3d-87a9-503223bf5267",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "029cec30-768c-48f1-8521-5d7a9d68e5a3"
        },
        "item": {
          "id": "de946b38-579e-4c7f-b724-187f6608cffe",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "41f7435f-1527-49de-b14a-a35d518b2601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ded6950d-9860-4a3f-b8f7-47b5463f5f53",
        "cursor": {
          "ref": "8f4bfb8b-7e81-4984-bed7-fdc3b4e0d921",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4f2df462-7bd1-4985-8b4b-f635a8956797"
        },
        "item": {
          "id": "ded6950d-9860-4a3f-b8f7-47b5463f5f53",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "67a0e246-2c2e-4618-b336-cafcab9b3c62",
          "status": "Created",
          "code": 201,
          "responseTime": 6395,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6291df-3671-4010-8ecb-f535d55f4877",
        "cursor": {
          "ref": "c02e7994-2abc-44bb-9699-83631a31237d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5b530330-0704-46e5-b9a3-652b57aead45"
        },
        "item": {
          "id": "2e6291df-3671-4010-8ecb-f535d55f4877",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e5974108-0bdd-47fa-bd90-379914cafeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "8cbf438d-eae3-4cd3-8bae-233eaafc585c",
        "cursor": {
          "ref": "ebf367d9-de95-4dc7-8ccc-d1443972a8f6",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f1f227bd-9fe9-432d-9f3d-dc69075f812f"
        },
        "item": {
          "id": "8cbf438d-eae3-4cd3-8bae-233eaafc585c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6781458a-511a-47e3-b6a2-2355b9810b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "ba24856c-9775-4aea-a846-7f80f6bf4c79",
        "cursor": {
          "ref": "e58099c5-698b-4914-8f93-a81c68cabcd9",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "41896b88-8241-4bfd-9ca7-b72221771ff2"
        },
        "item": {
          "id": "ba24856c-9775-4aea-a846-7f80f6bf4c79",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3569c905-3d32-4471-ab1e-2e938ff325c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a2482c-9542-436a-b3e3-ead3e3cbcc9c",
        "cursor": {
          "ref": "f0dea5ed-d1e5-427b-ab25-db65c720d161",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5a176495-d7d5-4cc8-97e2-7fdab2c44197"
        },
        "item": {
          "id": "54a2482c-9542-436a-b3e3-ead3e3cbcc9c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ef93b041-5a5d-4f50-8db9-12c1fdbfad0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1bf11b-7ae2-4744-b23d-5509f279e0b1",
        "cursor": {
          "ref": "f29a8ef0-93da-4756-968f-3a52e5009eec",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b726b92e-0b1f-4d0a-901b-1362144547ed"
        },
        "item": {
          "id": "8d1bf11b-7ae2-4744-b23d-5509f279e0b1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c1e7d4e2-6c26-4513-bbbc-be6b134d2e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdebc88-1318-4a7c-b9b7-f65a9ea3537e",
        "cursor": {
          "ref": "f94869a5-140e-485b-957a-57ada15b36b1",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9d308232-fc8a-47a9-88dc-eddaf1983edc"
        },
        "item": {
          "id": "8cdebc88-1318-4a7c-b9b7-f65a9ea3537e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ae1b4c3f-54de-4d5d-a279-f61680d6ba21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cad9ea-14b3-4d49-9953-ce854d3a54af",
        "cursor": {
          "ref": "6a84b974-e091-40cf-a910-a82b7d81e6e4",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c80bf6d2-5677-4b3f-8209-2bffa855a74a"
        },
        "item": {
          "id": "08cad9ea-14b3-4d49-9953-ce854d3a54af",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0ceec1ce-0c9d-4061-a3b8-be67682e2e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9308d8ed-af34-4c04-ac05-3b7504fbe95f",
        "cursor": {
          "ref": "03c74cf1-9887-4ad5-99dc-6253f61852f3",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bf586b3d-4027-438a-a400-b8798b814c7b"
        },
        "item": {
          "id": "9308d8ed-af34-4c04-ac05-3b7504fbe95f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f2579a98-df44-47b3-a390-05bed666189e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52365779-ed1c-4a81-aa76-80e1b81e5064",
        "cursor": {
          "ref": "d2482365-0fa0-40d6-a42b-d22321b8d9f4",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0a385ab9-1596-4b34-a6d8-bade20b23b71"
        },
        "item": {
          "id": "52365779-ed1c-4a81-aa76-80e1b81e5064",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2104b290-1a4b-4939-b8dd-500c6386b89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12d7860-999c-4a70-862d-1e8280f9549c",
        "cursor": {
          "ref": "17aa378d-1fad-448f-84c6-eab440e6a0d1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "01736193-e7f0-4211-863f-24e799fcb928"
        },
        "item": {
          "id": "b12d7860-999c-4a70-862d-1e8280f9549c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "eb1f11be-8554-47ad-98d1-e45c360c6bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb18fec8-6669-431e-a8f3-3171e085809e",
        "cursor": {
          "ref": "71481b4c-3901-49ba-8954-c6d00087d7d4",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3c7e562a-7908-4393-9e7a-2f96eb1ac0d4"
        },
        "item": {
          "id": "eb18fec8-6669-431e-a8f3-3171e085809e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "39ffd1d2-0cee-4920-9b39-e6bfb9ce318a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39412805-5caf-4c4c-b61c-595f94355ee0",
        "cursor": {
          "ref": "e2587712-69da-41d6-9ded-7083297eb3da",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "38823277-588c-47dd-8613-cdea594c78e9"
        },
        "item": {
          "id": "39412805-5caf-4c4c-b61c-595f94355ee0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f70e5e5d-653c-4c49-bcf3-25fffe464951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbee717-782d-4c14-954f-725501ad3275",
        "cursor": {
          "ref": "6161d243-d1bf-4f77-93c8-9fb7853e193f",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "19ff9d6b-4d2b-4d8c-84bd-41134464f34b"
        },
        "item": {
          "id": "abbee717-782d-4c14-954f-725501ad3275",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "68c230ee-5441-4399-9119-61bbbcf4daa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a47055-585c-4c2f-9b8a-45199db2fe93",
        "cursor": {
          "ref": "1ff2bae6-887c-4bc4-830a-e1fd85fc5b27",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "78489999-2237-49d6-a1cd-18239af9b604"
        },
        "item": {
          "id": "29a47055-585c-4c2f-9b8a-45199db2fe93",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3e1b1b63-4482-4848-8e27-eea9ffdd94d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcc218d-be59-472e-876b-0381b7f6b178",
        "cursor": {
          "ref": "0ccd0234-e588-4d92-b1d6-d30ed1e6d06a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c845b1d1-8e58-450a-b49a-6e0b4d3570ee"
        },
        "item": {
          "id": "6dcc218d-be59-472e-876b-0381b7f6b178",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3fc6468e-3fb9-46bb-a875-94578a15416a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fd92a6-4407-46ca-999d-21b1275edb55",
        "cursor": {
          "ref": "67970228-cae5-4c53-8c4e-1e9e9b0b7f80",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e0e9a1a3-d5c3-4600-ba8d-b9cfc62c4ad4"
        },
        "item": {
          "id": "87fd92a6-4407-46ca-999d-21b1275edb55",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "24309096-593f-443b-88ef-a8756954d8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db02c205-c511-4e16-b83d-48a0128c590c",
        "cursor": {
          "ref": "38247cec-df00-43b3-a492-d47a5bd74f7c",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7c76ce43-113c-4ed7-9625-722c68dfa9c2"
        },
        "item": {
          "id": "db02c205-c511-4e16-b83d-48a0128c590c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e01c830a-5a06-4fdf-94f5-3c8d7ccf00e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed01b18c-a528-4cf3-b9ee-6307f40059cf",
        "cursor": {
          "ref": "dfe39bd0-7cf7-44f5-adf5-bfa5fbe0788f",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4b50c66d-d37b-4c88-935a-85ecf4d6e773"
        },
        "item": {
          "id": "ed01b18c-a528-4cf3-b9ee-6307f40059cf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f1b473eb-ecea-41ba-9b53-00454737fda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0132bebb-0a05-4db6-bf65-7829d72f9a13",
        "cursor": {
          "ref": "39e01edc-19f4-496c-a968-37a35dfc3874",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "505ee708-851d-42ea-87a5-70231fd067d5"
        },
        "item": {
          "id": "0132bebb-0a05-4db6-bf65-7829d72f9a13",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a3bfdc9f-8a60-487a-8411-583d4cd94291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bfcb05-41d8-409d-a8a1-6ae835f3d50f",
        "cursor": {
          "ref": "b430fbb3-4f1a-4bfb-8446-7d7c4863c433",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ba621d29-5c6d-42a0-9d7c-6a28a5a17787"
        },
        "item": {
          "id": "f0bfcb05-41d8-409d-a8a1-6ae835f3d50f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2db1c650-61b5-4192-8270-72a776db8de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7bc71d-24ea-4a61-a300-85aa33927066",
        "cursor": {
          "ref": "844748ce-8928-4a9a-9eeb-89a049f5a675",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "11ea89f6-506b-4378-86f0-3fdceaa15428"
        },
        "item": {
          "id": "9e7bc71d-24ea-4a61-a300-85aa33927066",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "628392f8-9ce7-44e8-8842-3b7e43c94599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c954c93-26a1-49a7-b927-e46f0bf373ea",
        "cursor": {
          "ref": "1e520e27-42cc-40f7-8d13-9f6851a7992b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d955f578-8300-41ca-8b94-6b0510aae4ec"
        },
        "item": {
          "id": "7c954c93-26a1-49a7-b927-e46f0bf373ea",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bc52ace0-7dba-4aa9-8eb7-477bdb3d303e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dedf553-789b-45aa-93b3-ad2e0ab04f69",
        "cursor": {
          "ref": "559100b9-99a8-4e4c-b38f-0c90bcb1d800",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "17bc7732-22f4-446b-b4bd-5363fc04f50e"
        },
        "item": {
          "id": "9dedf553-789b-45aa-93b3-ad2e0ab04f69",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b980804f-468b-4f52-aa75-ed35db5d9403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6137ae3c-7bf2-46ea-9278-c2aa7d884cf6",
        "cursor": {
          "ref": "17689a0c-0960-4b8c-8055-483e69470628",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ddb50fe0-ca53-4608-bbc3-a560d91b38ae"
        },
        "item": {
          "id": "6137ae3c-7bf2-46ea-9278-c2aa7d884cf6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7cce82d3-5eff-4ae6-bde9-51ad250e38ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eae10b8-0f62-4126-bae2-35aa78e067f1",
        "cursor": {
          "ref": "8ee68c9f-5eaa-426e-8ea8-51fb3ea7c6b3",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3d300a96-33b3-4c7e-93f8-dc72958fe7c0"
        },
        "item": {
          "id": "6eae10b8-0f62-4126-bae2-35aa78e067f1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "78f26564-7232-4025-a3cc-d1c85b3337cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f089fe0-5fe8-46b5-874e-057bf66104f7",
        "cursor": {
          "ref": "330ddde9-8674-4287-a639-7df84e462f05",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "06ac8aed-e5b7-417d-9884-7ee4658915f5"
        },
        "item": {
          "id": "2f089fe0-5fe8-46b5-874e-057bf66104f7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bebd06c8-8f18-4f22-883e-e70001bd28cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1443574-9071-47b6-b022-f98c29288af4",
        "cursor": {
          "ref": "2ba2f59a-f0d2-43d1-add2-fd12d80d181f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4951dfa9-6c7e-4084-8702-80724288ee0b"
        },
        "item": {
          "id": "b1443574-9071-47b6-b022-f98c29288af4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bc45278a-8269-43aa-9e5e-a7e5d892a782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69b998a-709b-486c-9999-3c9717237fe6",
        "cursor": {
          "ref": "52351f9d-2fad-4291-ae5e-fcd1082d86ef",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a0ce3c50-eb2a-4910-9f6d-1b16bf2f5ded"
        },
        "item": {
          "id": "a69b998a-709b-486c-9999-3c9717237fe6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c4734937-0d86-4807-ac5c-5efd49a7cf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5d6e75-25ef-46dd-bdda-51129c8d1881",
        "cursor": {
          "ref": "87a93805-8b2f-4bbf-9419-3b7508c11e2f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6556d3f6-364b-4d35-a82f-681237f5b6a0"
        },
        "item": {
          "id": "5f5d6e75-25ef-46dd-bdda-51129c8d1881",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "95053938-5514-4e2b-bfa7-da7fb85f8a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff669e8f-dca1-47db-b50f-a9ed698f02a1",
        "cursor": {
          "ref": "e8c9d70f-3eb0-4290-aa7d-661b0d827101",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ee8bb732-c60d-4daa-9fce-53d02417993b"
        },
        "item": {
          "id": "ff669e8f-dca1-47db-b50f-a9ed698f02a1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3b1dce91-8a37-41bd-8653-88ec891c7889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132421f7-628f-41d8-9b2d-241814db8138",
        "cursor": {
          "ref": "1d243283-5355-4f57-bf33-c66df390a142",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ede0287d-7c8f-4ef1-85dd-4fcb19d044a2"
        },
        "item": {
          "id": "132421f7-628f-41d8-9b2d-241814db8138",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fae68a24-852b-4364-87d0-5441bf3f3091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a46a93e-b02b-4fb3-ac6b-00ef3fd29528",
        "cursor": {
          "ref": "1f566464-6e65-4df4-b6ad-72af22609165",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "14f53712-16d9-4b97-beb6-b2027c06f058"
        },
        "item": {
          "id": "3a46a93e-b02b-4fb3-ac6b-00ef3fd29528",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "18f474a1-b828-4958-84ab-871190e4efe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf00b417-795a-49db-8184-f6aa216ec0cb",
        "cursor": {
          "ref": "cf47be9b-fee9-4819-8073-8e50eeddbb2e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a53e2669-702c-452f-9338-5cf824a8d8dd"
        },
        "item": {
          "id": "bf00b417-795a-49db-8184-f6aa216ec0cb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b2a03b46-f07e-4808-a1ee-8c77887133e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05de56d9-a061-44b3-b144-70440064f313",
        "cursor": {
          "ref": "70e16cce-de27-4bd0-be3b-656cd533d8d3",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ec9c447f-3acd-42df-9860-73dbea78dc94"
        },
        "item": {
          "id": "05de56d9-a061-44b3-b144-70440064f313",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d6dbac17-7be7-44bb-851f-c3b0bfc90051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2831ad8-8dd2-44ea-8b6b-f26b56b90d1b",
        "cursor": {
          "ref": "9ee6d769-2b18-4c83-ad44-ae64cf07cef1",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5e48078f-9515-413d-bf8a-d57d8d14b5f6"
        },
        "item": {
          "id": "b2831ad8-8dd2-44ea-8b6b-f26b56b90d1b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3d6344a4-cb0a-4e4b-b724-163d63f9144f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f24cec-4044-425f-8cac-8ebed9113e04",
        "cursor": {
          "ref": "9081b72d-e645-4cd0-94fd-915ee610f41c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "533c6f4d-7e46-477e-9818-6fa46f66617f"
        },
        "item": {
          "id": "08f24cec-4044-425f-8cac-8ebed9113e04",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "af3abeb7-8b83-484c-9070-78a24de51fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb37758-b215-488f-9f67-59458bcefefe",
        "cursor": {
          "ref": "3c27d3f8-9ce9-4ba7-9b4f-0174f5d8ab57",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e13a3d17-6d32-4b37-b929-7f7539b6bc24"
        },
        "item": {
          "id": "0fb37758-b215-488f-9f67-59458bcefefe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2395bfb2-8cde-4924-b71b-44583051217f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008bda8c-e719-43a0-9261-4af14a2e2829",
        "cursor": {
          "ref": "7b4c3e4f-2f52-4ffd-80bc-d90605378ffc",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b1a8765c-8dba-4f9a-a6df-becfea22f283"
        },
        "item": {
          "id": "008bda8c-e719-43a0-9261-4af14a2e2829",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b19d8aee-192e-4b8d-a4a9-9416f9c61957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd6d859-5c49-499f-ab59-3ba1ca7db5e2",
        "cursor": {
          "ref": "96303329-16f8-4c5f-a2ce-c13d70c8990e",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9343a2f1-5900-4905-9d7c-2020a16161fc"
        },
        "item": {
          "id": "0cd6d859-5c49-499f-ab59-3ba1ca7db5e2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5dc76c31-5c77-45a9-a7cd-349233fa9344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99319cde-06c4-4155-ae15-f38ef20922f5",
        "cursor": {
          "ref": "bc35eaa3-35f4-42b1-97be-1a083705bfdb",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9c4cbb29-89df-4e7f-9c52-c2e7c4a9a044"
        },
        "item": {
          "id": "99319cde-06c4-4155-ae15-f38ef20922f5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f9a17bd6-dea8-4b1c-8df9-d614e47a4a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e341cce-dc24-4df1-bffb-9597a56c8722",
        "cursor": {
          "ref": "c69dcb50-3b50-4fde-869f-d22e9e99a49e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f0957585-27e1-4b2a-9b9b-3582559682e8"
        },
        "item": {
          "id": "6e341cce-dc24-4df1-bffb-9597a56c8722",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6d6da47a-b929-4c84-a217-1df58bbdb0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44318a5e-88a0-4edb-bf9f-fe2428995356",
        "cursor": {
          "ref": "b274cb8e-f15e-4c37-8b24-0351a1b6a043",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4a360114-7a26-4f6a-89fa-898214741687"
        },
        "item": {
          "id": "44318a5e-88a0-4edb-bf9f-fe2428995356",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9ca245b7-54f5-4bbb-9265-33208704bacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c05ad9f-d177-4955-845b-819438105bfd",
        "cursor": {
          "ref": "b2a60c04-d60f-4b24-acd0-25006929aaa0",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a903df81-0e5b-47a4-be94-f5a6588c8c84"
        },
        "item": {
          "id": "9c05ad9f-d177-4955-845b-819438105bfd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "79c3d67b-bdda-499e-8b22-a2d1c672dde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a80dca7-66e6-4d7d-8f6a-f2554c194047",
        "cursor": {
          "ref": "a0492fb2-3e92-4d51-80d6-0ad99ea0d15d",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5ff2e3df-a55e-4c5c-af34-2cc09e4e6f89"
        },
        "item": {
          "id": "4a80dca7-66e6-4d7d-8f6a-f2554c194047",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "069c116f-2c2a-429e-9c7b-f66e35d88981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f317b26-b3a5-4767-aef7-00b891070bd8",
        "cursor": {
          "ref": "f486a7f5-6c26-4eb3-92b9-46e836ea2750",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7598c133-efe0-469e-9695-599dae3b825d"
        },
        "item": {
          "id": "2f317b26-b3a5-4767-aef7-00b891070bd8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d05945e1-da64-47f4-88dc-956570b194a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f21c1dd-31ee-4dfa-9ba5-252479411995",
        "cursor": {
          "ref": "f0c0a0e1-eb60-40ed-b6bf-01e6dd839026",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7a002157-8815-429e-8329-955c6eab7d53"
        },
        "item": {
          "id": "6f21c1dd-31ee-4dfa-9ba5-252479411995",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3bef1d60-40cd-4e98-8bcb-86ad307a1d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e671681-c429-4249-ac4d-ac12d111ed45",
        "cursor": {
          "ref": "acfe5844-de2a-4de8-8880-87206e5171ed",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ff180b6b-2f8a-456f-b74b-bb7cef7ff367"
        },
        "item": {
          "id": "9e671681-c429-4249-ac4d-ac12d111ed45",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c58a10cf-b420-41bb-bb0d-043a255b18a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5cc583-ddc7-4cf3-bb95-fb4fc5cebffa",
        "cursor": {
          "ref": "3f17c32a-f5dd-455a-8c8f-ad2d2d85b74b",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4dcba1c2-ae0b-46b7-b083-e960efbe2a6d"
        },
        "item": {
          "id": "3d5cc583-ddc7-4cf3-bb95-fb4fc5cebffa",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0f514c6e-ebf0-4e34-96f6-12e8ea812a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a28820-43bf-4208-8448-6291e779e5ab",
        "cursor": {
          "ref": "6beb474f-8612-40e8-ab62-0a68cce5585f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ec832ad7-f7d8-4a6c-a0f3-6110e69697a6"
        },
        "item": {
          "id": "c6a28820-43bf-4208-8448-6291e779e5ab",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3c3439f7-2ab2-41e9-bcf0-5b10c736bbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36982da3-f9c6-477e-a7a3-9ef1d9e6c72d",
        "cursor": {
          "ref": "17bda4c3-1622-49fb-9b67-5a4a395e577e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fa2b7651-1c91-4acc-a625-c0677534bac2"
        },
        "item": {
          "id": "36982da3-f9c6-477e-a7a3-9ef1d9e6c72d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dfe7e74b-47a9-40c4-b678-9a78ae5b99ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94f3b35-f7be-4a31-b3e7-a8cff5e59919",
        "cursor": {
          "ref": "70b671f1-4c8b-4785-9eb1-706daef35b9f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "69e28fe0-dc99-4d1b-9686-9cf13403353c"
        },
        "item": {
          "id": "b94f3b35-f7be-4a31-b3e7-a8cff5e59919",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ecab97fd-5d22-486b-bc2f-b4a98e6dd956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91defd9-2294-41c3-8291-994e71a61a8b",
        "cursor": {
          "ref": "1e24b7f8-ff07-423a-9d24-f6f553831541",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8f17745a-5520-414e-8b68-256421bf3b35"
        },
        "item": {
          "id": "d91defd9-2294-41c3-8291-994e71a61a8b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f777dc95-407c-497c-9e99-728bd876df6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d275e06-dfb8-483c-acff-ef5e2d73a79b",
        "cursor": {
          "ref": "770fc1ad-2a3e-4de7-8e01-83dd299c6606",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "997c6051-bd30-4333-a37d-3a44c3b66519"
        },
        "item": {
          "id": "9d275e06-dfb8-483c-acff-ef5e2d73a79b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dd9a7482-0e85-4791-857f-5795682bf794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312b24b3-9f15-4b26-be54-2a1ad6ba5672",
        "cursor": {
          "ref": "6805b86f-98a3-432a-bfda-dacd0cb2a27a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c3e8d74d-24a7-4789-8471-6464f1d8431f"
        },
        "item": {
          "id": "312b24b3-9f15-4b26-be54-2a1ad6ba5672",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a1ad1141-ef6c-44ba-8758-99ff69808873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85876433-efb8-4582-8a46-d77ce59416ef",
        "cursor": {
          "ref": "60729e3d-c0d7-43b0-a261-a20ea9298d9b",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1fd9cafb-047c-41a5-bd4c-b26f14cc8579"
        },
        "item": {
          "id": "85876433-efb8-4582-8a46-d77ce59416ef",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bcff5f33-1ebd-490e-9d31-ed61ccf512b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bead029-9f4d-47bd-bbfb-710b2f60adb8",
        "cursor": {
          "ref": "14fa9ade-5740-457b-b758-8e25a520da6a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d191d81d-31d1-4a54-adf2-e99db614742e"
        },
        "item": {
          "id": "1bead029-9f4d-47bd-bbfb-710b2f60adb8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "804c593c-c389-4202-baa3-2010018fb416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fbfb30-7136-478a-a914-c34ccd85bcae",
        "cursor": {
          "ref": "d746c5fc-5254-4ec0-b5aa-970e39c638ea",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dbcbc273-44ea-4f56-b1c3-1a3404f1fd96"
        },
        "item": {
          "id": "98fbfb30-7136-478a-a914-c34ccd85bcae",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0459e5be-2e21-4c74-8bbc-d6f8a1138764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c717c94c-3cdc-4ee2-af0b-8f993d1be78c",
        "cursor": {
          "ref": "561121f2-6d8b-47d2-ad3f-32c8fe6c2cea",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c848dae8-b484-43d8-b9d4-5dcec06c9511"
        },
        "item": {
          "id": "c717c94c-3cdc-4ee2-af0b-8f993d1be78c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9c6ec88d-690d-477e-9c5a-e65b2be595de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afce5ad-c42b-402a-9e54-da29c408b64c",
        "cursor": {
          "ref": "c7a22b7b-f062-4135-be8e-6caaf6732d96",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "27174cdc-9427-44e7-9f2d-ed8845eb25b7"
        },
        "item": {
          "id": "0afce5ad-c42b-402a-9e54-da29c408b64c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9bc8265d-ff84-470a-8258-0ce3da64c436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a481b1-ced8-4931-9d3f-6d0a0f120319",
        "cursor": {
          "ref": "2b4d7082-12bf-427c-b405-c460a9e5a691",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "828f05de-c109-46b9-8a69-73357b0242fb"
        },
        "item": {
          "id": "76a481b1-ced8-4931-9d3f-6d0a0f120319",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5a62847c-9c48-4379-8080-c18793ce11ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf468087-c8b0-4785-9d55-d61fa51be280",
        "cursor": {
          "ref": "d335224a-1456-436f-bdca-f8798db5194e",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4fd1c3f0-91b9-4b41-8651-98c9cd0e555e"
        },
        "item": {
          "id": "bf468087-c8b0-4785-9d55-d61fa51be280",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4350d455-806b-463f-b0e3-dd1c4e5a973c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a4792b-02d0-4730-bc85-7b25df859d83",
        "cursor": {
          "ref": "de3c3ece-c78c-427b-b4aa-5c07a0474e8d",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "de57485b-cfe9-4b8c-aec9-bed418a43112"
        },
        "item": {
          "id": "d9a4792b-02d0-4730-bc85-7b25df859d83",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "45909ca4-6fd1-4565-beef-1dc3669db7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816c29d5-1c2e-4552-aa2e-5d4b2a38d68b",
        "cursor": {
          "ref": "de660617-c85a-46fa-9f24-3f2e37d08e86",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dbc444ab-87b9-40e5-b16d-b4fb6a461c2e"
        },
        "item": {
          "id": "816c29d5-1c2e-4552-aa2e-5d4b2a38d68b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "10dbf569-6115-4d14-91a0-a0103c791c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef6f5f2-9896-47cd-bb24-65a97dfc992b",
        "cursor": {
          "ref": "20839aa8-a54d-45bf-b229-6efbe1bb6f77",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "31ac967a-4d3f-4069-ba0d-ea88337eea81"
        },
        "item": {
          "id": "8ef6f5f2-9896-47cd-bb24-65a97dfc992b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "90f12873-c727-4d4b-a7f4-0093ba1654a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9af6d6-e44f-49d2-9e2d-64c9479fa048",
        "cursor": {
          "ref": "91981062-7fa4-4e7b-a80c-5ef8d996eb9c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6f7963a8-06a6-4520-928e-edcae01679fe"
        },
        "item": {
          "id": "ad9af6d6-e44f-49d2-9e2d-64c9479fa048",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "13b56351-0bd1-4f49-8106-326f17e2c6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf68b52-ce66-4676-bd7a-c1e854cd4c4b",
        "cursor": {
          "ref": "2b5d039d-e9b5-4eaf-ae8d-8ccca002488c",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7737a283-472a-40ba-89f4-ae5acfd5e44a"
        },
        "item": {
          "id": "dbf68b52-ce66-4676-bd7a-c1e854cd4c4b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "624c2490-182c-47c5-91c7-6da402403da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408fd52c-ef67-414f-a928-0b152a88e065",
        "cursor": {
          "ref": "4d8b9ff3-f5d7-4a27-a911-e86d801634f2",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "63d4b37b-3863-4514-8ec6-d7e81eda0767"
        },
        "item": {
          "id": "408fd52c-ef67-414f-a928-0b152a88e065",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1ef503e6-4815-4e5a-9fac-3eab764de0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f2b71e-0275-432d-80aa-5deb69760d55",
        "cursor": {
          "ref": "4c9ef448-9396-4cf7-98ef-46e9a146290c",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2c68d3f0-0d48-4ff6-ae38-f975d33ed99b"
        },
        "item": {
          "id": "64f2b71e-0275-432d-80aa-5deb69760d55",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "884cf687-2970-496a-bfa9-b84395a8a880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a606043-dbb5-4cdc-a20c-f484a64e475a",
        "cursor": {
          "ref": "2d8d9bd4-85dc-4257-873e-ecf7a03d3544",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b5e10ee2-6c30-4c05-bad8-638bb679244c"
        },
        "item": {
          "id": "1a606043-dbb5-4cdc-a20c-f484a64e475a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f11ff3d0-b697-4330-805d-730fe39036bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4f09e0-8c72-4b11-8391-48add4f4c1cb",
        "cursor": {
          "ref": "be16c5e1-91c2-4e48-ba74-50282632c6e6",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3626d197-d602-4815-b45c-dab9d96c2cc4"
        },
        "item": {
          "id": "8c4f09e0-8c72-4b11-8391-48add4f4c1cb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9e401244-6706-4928-86c0-b34c00143f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4024428-f618-403b-be74-c168c32a8493",
        "cursor": {
          "ref": "459a498e-5a99-4c3c-822f-ba47c0eeede4",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bd9c07b8-a500-401c-8eea-59becd8bb269"
        },
        "item": {
          "id": "b4024428-f618-403b-be74-c168c32a8493",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7823dcba-f198-4920-866d-7cfec6a61d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0234bd4d-208e-45c1-bd14-df399bf934be",
        "cursor": {
          "ref": "56111a4a-3a2b-41c3-9b7f-8710eeb105a4",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1d671b8a-6d89-416e-bbd8-c8172d8c0749"
        },
        "item": {
          "id": "0234bd4d-208e-45c1-bd14-df399bf934be",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7c0a8fb3-1ae0-480d-b15f-e7a820d9851f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b391f2-3570-411a-bd38-5757d4e6a4f3",
        "cursor": {
          "ref": "41b4439e-7d28-4266-8454-105f7b43ff21",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d03c0594-2d85-41a5-9a85-af3d814b80a9"
        },
        "item": {
          "id": "47b391f2-3570-411a-bd38-5757d4e6a4f3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2caeab72-c362-4f91-b550-fa45f7a2a970",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2566e214-aa2f-4540-857c-c77ec24c6f4c",
        "cursor": {
          "ref": "9e39f7af-4c7c-41f8-a5fd-94598d1a30fe",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "33229bea-34ab-40ee-ab30-57e527983f53"
        },
        "item": {
          "id": "2566e214-aa2f-4540-857c-c77ec24c6f4c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8cf2bad6-ae20-41dc-914e-de6246ab3045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6674aefd-8b30-4831-a7c0-d53bc5f3a831",
        "cursor": {
          "ref": "768d5b6b-5b64-4fd6-b0f2-a928f087b78f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f01c28ac-3c49-4684-9761-ecb2d9ba54de"
        },
        "item": {
          "id": "6674aefd-8b30-4831-a7c0-d53bc5f3a831",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "83bda096-8e97-4fcb-b967-9e06d4fae263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da81781-1665-49d5-96ef-29a9a51e5527",
        "cursor": {
          "ref": "509461d1-f951-4977-ae13-850905201e5a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f5a0d4c5-05c1-4fc0-8690-bd32f41ad91f"
        },
        "item": {
          "id": "7da81781-1665-49d5-96ef-29a9a51e5527",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dfd1fc78-cf7c-4396-a8ab-8e4ebf05b9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0f2821-d8ad-41ae-b294-089587423460",
        "cursor": {
          "ref": "c85a2993-ee96-4bcb-8753-31129b0d7093",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b474f534-9ab2-4328-894d-3ab47f23c8c1"
        },
        "item": {
          "id": "ba0f2821-d8ad-41ae-b294-089587423460",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1c23cead-ac72-48eb-a5c0-69ece6475064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fca9fde-b4b1-477d-ad20-d9e7a172a473",
        "cursor": {
          "ref": "5d44a0e1-61f8-4561-bdd6-eda3a5609e29",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "aaca94bc-625e-4fdb-9ff2-b955b60d980d"
        },
        "item": {
          "id": "5fca9fde-b4b1-477d-ad20-d9e7a172a473",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f71e1efe-0903-42d2-86be-e7fd2d901104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6c38a5-4263-4bfd-9732-87e135823670",
        "cursor": {
          "ref": "8c1d26ce-f9dd-40d0-b837-8485f7f6b6dd",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1453ccd1-b419-4e0b-a178-6661bcbf04af"
        },
        "item": {
          "id": "cc6c38a5-4263-4bfd-9732-87e135823670",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "75128a46-c8f4-4151-9e70-34188e6e9a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3533586-d5a1-4e38-99c2-35842d17c7cd",
        "cursor": {
          "ref": "efb9e22c-b992-4aba-baeb-ba1ea40d477a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0404a73e-adc2-471f-99a2-31eada895386"
        },
        "item": {
          "id": "f3533586-d5a1-4e38-99c2-35842d17c7cd",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0b5118a9-6cd6-438e-8c43-be4d6c2c6876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc15423-ec7f-4c4e-9472-193bb3698f05",
        "cursor": {
          "ref": "1ff41bfb-b0da-413a-9fd7-fc715cac86b6",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2da45b52-f07e-405a-9a6d-b6ddd6cbeb0d"
        },
        "item": {
          "id": "ccc15423-ec7f-4c4e-9472-193bb3698f05",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2a30130f-2288-4a32-8d43-ce01338c3626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edc7499-7774-43fd-9d79-59d7a3e39ec1",
        "cursor": {
          "ref": "efeff903-57ed-4ef1-ac64-b272595f6540",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "076d65a0-18f5-4c33-9cb2-723617781a47"
        },
        "item": {
          "id": "4edc7499-7774-43fd-9d79-59d7a3e39ec1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d426c9db-6c12-4393-816d-8bebc0c09bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c02e69-94f8-4d44-9d6d-8b103ffc9cf1",
        "cursor": {
          "ref": "458c35c4-591d-4a08-b140-08d8316fb580",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "821c60c4-6351-41c4-92c4-9882e286533c"
        },
        "item": {
          "id": "a5c02e69-94f8-4d44-9d6d-8b103ffc9cf1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9840734b-861f-453c-9a9e-a490eca2c4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a8ee2d-ec09-425b-b7b6-6d6d033f6ef1",
        "cursor": {
          "ref": "1b925d2f-d094-4cd5-9c9c-bfa15efd3bba",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9ecd2398-e96f-47e6-8c00-9ab9decdb189"
        },
        "item": {
          "id": "87a8ee2d-ec09-425b-b7b6-6d6d033f6ef1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e084208f-b3d4-4350-a052-264182fd7a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee3f685-dd85-498a-9eee-1e62fcedf721",
        "cursor": {
          "ref": "a62e21fe-5f3d-49ec-bd57-e49093ab49c3",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "27bd14df-7600-4a90-93fd-c84fdb5a3f9d"
        },
        "item": {
          "id": "cee3f685-dd85-498a-9eee-1e62fcedf721",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5f3f2693-ecd6-4592-8e1f-f1ad4fc024e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01fccad-0aaf-49a8-943c-6af98109e785",
        "cursor": {
          "ref": "c9c8d1fe-2088-428e-b17b-b2afc652da3a",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "79a69422-d5af-419c-a1f5-f4a626004490"
        },
        "item": {
          "id": "f01fccad-0aaf-49a8-943c-6af98109e785",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "11b7f9fa-6b66-49ae-a770-6dd637ee7d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ddb3fa-5ecb-42c9-8aa2-1ce56d322bd0",
        "cursor": {
          "ref": "9a49ba6f-e981-44c9-9138-1a99c58a55d9",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "14796fae-2809-4229-85fe-3b637ee221c2"
        },
        "item": {
          "id": "70ddb3fa-5ecb-42c9-8aa2-1ce56d322bd0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f5d29fcc-1b2b-4fff-8198-1db19781abb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127ea98a-d8b4-480f-9424-06bdb188949f",
        "cursor": {
          "ref": "01e2890e-5bdd-4eca-bfed-d79120cfe75a",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9e8a41d7-a112-49fd-bf4e-60f7ccae6581"
        },
        "item": {
          "id": "127ea98a-d8b4-480f-9424-06bdb188949f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "be69e216-af12-41a6-98a3-d220effbd69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6ada53-7d6f-46ab-a209-4212f441168c",
        "cursor": {
          "ref": "7db02fb7-44dd-42d2-a94a-2c896c2aac94",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "165b7c20-9a79-45f8-a458-845968d65303"
        },
        "item": {
          "id": "de6ada53-7d6f-46ab-a209-4212f441168c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3fe1501e-b54a-4999-a4b3-1fa4e941262d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b591c2-f837-481d-b8cf-759939221873",
        "cursor": {
          "ref": "aa574f0b-7057-4129-a32e-b599273a0dfb",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "daa2fee4-8557-46dd-8ca8-935ede04a025"
        },
        "item": {
          "id": "d8b591c2-f837-481d-b8cf-759939221873",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "582ec0f8-5b78-4665-9e78-f3a2ba4d758f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96898d5-6689-4e9b-ae4a-5037c2e95ce3",
        "cursor": {
          "ref": "d40da1e2-9454-4239-ab48-538cb147c15e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4de0e07b-cfef-48b7-a4cf-fa783fd5404b"
        },
        "item": {
          "id": "a96898d5-6689-4e9b-ae4a-5037c2e95ce3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "795525f6-2db4-4062-a58f-972bbd646c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b7963b-a1e5-46b7-b305-416cd02a5015",
        "cursor": {
          "ref": "54531f91-b89f-488e-be8a-a3346da299df",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6cce4dca-7afc-498e-9593-902f7905a07a"
        },
        "item": {
          "id": "53b7963b-a1e5-46b7-b305-416cd02a5015",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c85a45a7-1b3b-42bb-9402-b96c080d9e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381ce03f-f8cb-4fee-8b07-c5b0ed5f4d69",
        "cursor": {
          "ref": "6eefcb7c-3ffd-4a25-81d5-fc1e4d450e5e",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8cf97521-e0cc-4e2c-a565-c198e2e30d48"
        },
        "item": {
          "id": "381ce03f-f8cb-4fee-8b07-c5b0ed5f4d69",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1422ec3a-18a5-43a7-859c-374a06bd3f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631b8b0c-1a05-42e0-baf9-2cf81c4306ef",
        "cursor": {
          "ref": "6952dc1f-684a-4017-847a-6090a12385b6",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "374b5aba-2c66-4ada-a4ba-70911dd4e4e0"
        },
        "item": {
          "id": "631b8b0c-1a05-42e0-baf9-2cf81c4306ef",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "215e68c2-3a57-4db9-9853-2cfc7f73e46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175f1cc6-397c-4d68-93a1-0582b07a5cd8",
        "cursor": {
          "ref": "a0d7f11d-5a18-4125-97f0-69ac0d0023b6",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "435f1025-40a7-47a2-a920-e2ab252db688"
        },
        "item": {
          "id": "175f1cc6-397c-4d68-93a1-0582b07a5cd8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "834ddb42-9a01-49de-baa8-620b9bad7970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f8b2ed-6213-47c1-9979-9ea384eb43d0",
        "cursor": {
          "ref": "727d2d56-dea3-474a-bd23-5c46bf0e67ca",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "69779023-c6e8-4362-b6f1-1b25a3bf807d"
        },
        "item": {
          "id": "86f8b2ed-6213-47c1-9979-9ea384eb43d0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6a3ad418-e6e1-447b-b61b-1d6564193a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7951de-0c5c-4fa4-8b5f-b2e61b8232f1",
        "cursor": {
          "ref": "b234289c-69e6-4e60-b155-4d6e60497900",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "357d6e24-b10c-4af9-80cb-431043e4c4fd"
        },
        "item": {
          "id": "ab7951de-0c5c-4fa4-8b5f-b2e61b8232f1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5bfb5315-334b-41aa-949e-54e812f43baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e471a2-ba51-4721-9aeb-2ca14689d5be",
        "cursor": {
          "ref": "bcbc14da-5f2f-4f27-ad49-faa986864f23",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8c7408b5-542c-4e8a-8104-679ab6d5acb4"
        },
        "item": {
          "id": "04e471a2-ba51-4721-9aeb-2ca14689d5be",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fbde6b83-7154-4ed1-a3b5-60f0ae631185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846a5c95-5c95-46a8-80f6-895d42d1b122",
        "cursor": {
          "ref": "e7f9f6ec-1405-4f9a-a999-9200035431af",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e058e664-a18c-47c6-a930-66d756ad9d25"
        },
        "item": {
          "id": "846a5c95-5c95-46a8-80f6-895d42d1b122",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c7614371-3540-441e-8405-5dde6d32f9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98cc07c-24f2-4f84-b91c-74122e29fce5",
        "cursor": {
          "ref": "4f434fa3-1977-48ba-9a0c-be9b895d7563",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "24e98c2f-9dfb-4eda-8600-f858530a836b"
        },
        "item": {
          "id": "d98cc07c-24f2-4f84-b91c-74122e29fce5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "86d8135b-6557-4cc0-af30-e7e29c859398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76cc656-87ac-4b84-9bd3-b03fa424a202",
        "cursor": {
          "ref": "fc8c3383-786b-420a-b6bf-0686c6a81ea5",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c784b996-0c48-4542-af73-db03e5385222"
        },
        "item": {
          "id": "a76cc656-87ac-4b84-9bd3-b03fa424a202",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a9a2816e-938d-4558-abd7-6780d50b90fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00775fa-c26b-4805-b788-64eff2020a24",
        "cursor": {
          "ref": "32944bc0-aebd-4140-b7fa-f450f869645d",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3d1cbf7f-6f78-47bf-9832-ca4e30828527"
        },
        "item": {
          "id": "e00775fa-c26b-4805-b788-64eff2020a24",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f13781a5-1cfb-4013-9788-d1a0aea48eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f802d7-ad14-4d32-a19b-728252f28aea",
        "cursor": {
          "ref": "96531b89-0534-4972-bf94-2c72a39fa694",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a4509d8e-1db1-4673-81c5-74bb40868c38"
        },
        "item": {
          "id": "a3f802d7-ad14-4d32-a19b-728252f28aea",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dcc870c3-fb6d-49a9-a1db-e5239a72379d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097b832e-6131-435c-a897-499fa49b10ca",
        "cursor": {
          "ref": "e99a7dd7-e15c-4acd-9f54-a1a3d05d0b46",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2b6efe6a-ac8e-49c0-8b90-b29337b55421"
        },
        "item": {
          "id": "097b832e-6131-435c-a897-499fa49b10ca",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "567dd497-266e-4bcf-bafa-dba2ac6aa40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded7ab0b-8716-4ed3-a532-eb47f515271e",
        "cursor": {
          "ref": "2011f85f-aab4-4cf6-8929-7e22443ed22c",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "55985704-a2af-469d-b237-0538a726bcde"
        },
        "item": {
          "id": "ded7ab0b-8716-4ed3-a532-eb47f515271e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dc94a1a0-825b-4d12-aa7a-2645319bf259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e3700c-4619-48b4-a1c7-0f145515c84c",
        "cursor": {
          "ref": "a44d0f10-7952-4d66-aa5b-15595c70339f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b9bb6637-5ef6-4238-9fa8-c494a7330804"
        },
        "item": {
          "id": "98e3700c-4619-48b4-a1c7-0f145515c84c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5d93170b-a262-44b4-ae40-b5ddb28db61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ea4f3a-446c-458e-975a-004def3c754c",
        "cursor": {
          "ref": "3abeb6fc-ddbb-427c-8ed4-4fbf1a4badcd",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5018490e-43b2-4dd3-8e18-34cacb582ea7"
        },
        "item": {
          "id": "a9ea4f3a-446c-458e-975a-004def3c754c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "24b915ce-7e78-44ec-a9ad-08c500083901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556d4f82-05d2-4782-be6b-54d0f651f8b3",
        "cursor": {
          "ref": "5d3e1fa3-8328-495f-bb3f-8a469934b30d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ee82d3f1-8324-4f39-8868-134ce30fb8be"
        },
        "item": {
          "id": "556d4f82-05d2-4782-be6b-54d0f651f8b3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7cff63f4-60a0-43c9-be84-ef42df5ae0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b030b39-ba42-40ec-b50c-4ce9a5dd5abf",
        "cursor": {
          "ref": "678da8d5-a897-4ae6-9f76-24e28e454600",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6aee8ab7-da5d-4ae2-8e53-9c6e1ed19269"
        },
        "item": {
          "id": "7b030b39-ba42-40ec-b50c-4ce9a5dd5abf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7ae18e1d-7bee-49ef-8b65-136b68521ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe3e285-183c-412d-8907-8aede16807ae",
        "cursor": {
          "ref": "794eb4e8-194c-47ef-91f6-343ecb8e950c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "577ab700-3b37-4ba3-b5f3-4ab2b0918602"
        },
        "item": {
          "id": "9fe3e285-183c-412d-8907-8aede16807ae",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "54d29446-ad9e-46c3-9b80-6d85a50fd929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1069db8e-5bf5-4fb2-b570-03c9335f1be7",
        "cursor": {
          "ref": "0440efb6-7d1d-4449-bf25-e73dee264d00",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "95787d19-564f-4393-8b6b-0a724d2e1d2f"
        },
        "item": {
          "id": "1069db8e-5bf5-4fb2-b570-03c9335f1be7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fa24a2b4-7106-4248-9db0-d5826397e598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec748ec-a4a3-4b87-8b50-f97f9373af0e",
        "cursor": {
          "ref": "719b3025-d92f-4032-adac-761ac4b71eec",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3b4b4b57-36fe-4677-adba-02e5c722f12b"
        },
        "item": {
          "id": "cec748ec-a4a3-4b87-8b50-f97f9373af0e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "195815b5-6099-4113-be3d-7eb32b4e6582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1164d90f-a146-4271-a0d8-d4648e9bd6a0",
        "cursor": {
          "ref": "a68272e2-bfe6-48fe-ae71-0c11ed17c3b1",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3738e8c4-8780-4005-ba39-1449690dc397"
        },
        "item": {
          "id": "1164d90f-a146-4271-a0d8-d4648e9bd6a0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b29f8749-490f-43f8-bca5-3f83c038ec88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5f2593-379f-4aec-ada3-34507616f90a",
        "cursor": {
          "ref": "1a4e3679-1373-4535-89e1-8c4b8eff1599",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7a9ef95f-de49-4516-953c-419334f3dfa3"
        },
        "item": {
          "id": "5d5f2593-379f-4aec-ada3-34507616f90a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4664b60d-f845-44b7-9fc8-0aca619a7417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c1c62d-cfc6-49c6-8350-bee86309e7dc",
        "cursor": {
          "ref": "1994fd00-d91e-4668-bf46-570bf6959035",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d658b03b-b1cd-48d0-b9fe-8ec15254a76a"
        },
        "item": {
          "id": "85c1c62d-cfc6-49c6-8350-bee86309e7dc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "663fef29-8bde-4fda-ac2c-937322d3b44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2001e54-6daa-45e3-9999-732729053572",
        "cursor": {
          "ref": "4c226763-3dea-43da-b6f2-62d9fb70bd1e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3304eff3-3961-48d0-b639-e2dbed9d5e9e"
        },
        "item": {
          "id": "f2001e54-6daa-45e3-9999-732729053572",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ad2cf0f0-a607-4d8a-b65d-a09762af52f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dad0f1c-aea7-4ffe-b368-c93dd45e423a",
        "cursor": {
          "ref": "80567073-851b-42ff-a96e-57c5255c7974",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "aa463818-f29f-4e21-9c76-5b3b7d510e4f"
        },
        "item": {
          "id": "9dad0f1c-aea7-4ffe-b368-c93dd45e423a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "eb600e4a-5f80-4ab7-8d12-a1b3df0dd89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7027cf-651c-4c28-8f00-bed62c20006f",
        "cursor": {
          "ref": "dcad0f76-e4e5-426c-a96e-11cb60f0d153",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "729a1d13-902b-48da-b4c4-d4e2123dc198"
        },
        "item": {
          "id": "4d7027cf-651c-4c28-8f00-bed62c20006f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "32ee49a8-c677-43c9-8cbe-4605c7df6fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f132b3-2de4-4506-ae72-5ee4f1f19478",
        "cursor": {
          "ref": "63ccba57-624e-43f0-9da5-90b1c31f5aab",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "48157b82-b327-40d4-a9ca-6d8741f0a868"
        },
        "item": {
          "id": "19f132b3-2de4-4506-ae72-5ee4f1f19478",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5ee07be5-a910-4916-9fb3-f5b2f6fa79cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c972465-b61e-40ca-a060-9603a495d13c",
        "cursor": {
          "ref": "3a6560a4-b8a0-43d5-a904-3dca3da16ec1",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c91d4ef4-2ccd-4d70-b4a8-eabe976b43bd"
        },
        "item": {
          "id": "3c972465-b61e-40ca-a060-9603a495d13c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0b58e74d-a02f-4ba1-83c6-3cd50db66653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e252801-be2d-4f73-9953-954af07fe790",
        "cursor": {
          "ref": "f02ce8d1-4a90-412b-9718-579712620f1b",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ae80b614-b758-4717-a9c9-e7dc664fcff8"
        },
        "item": {
          "id": "2e252801-be2d-4f73-9953-954af07fe790",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2d1206fc-3963-4f7b-bb30-22ca7189a267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7009a2be-4cdc-460e-9e3f-593d94eac346",
        "cursor": {
          "ref": "7012dfe5-c2ab-493a-9ea6-563b7d17efeb",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e45e9b8e-047e-476a-a560-551158aa1841"
        },
        "item": {
          "id": "7009a2be-4cdc-460e-9e3f-593d94eac346",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f4956aac-7ae8-4772-97fb-7785c30c6a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a65e3db-70eb-4410-91cd-7cc15e70ebb8",
        "cursor": {
          "ref": "041a09cc-9231-4b39-a74f-fb91e0f49492",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3a030db5-d952-427d-9a83-d30f8e6788f0"
        },
        "item": {
          "id": "4a65e3db-70eb-4410-91cd-7cc15e70ebb8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bf3417d4-1f05-405a-b873-449240832f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbba6386-ea2f-4136-9be6-eb45be7b95c4",
        "cursor": {
          "ref": "ced6600d-ea09-44ec-b911-0c55ea242a83",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "071229ca-e733-433a-8a70-e61631c388e6"
        },
        "item": {
          "id": "cbba6386-ea2f-4136-9be6-eb45be7b95c4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "94ad0275-981c-46d5-880e-398d12d70875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11342e62-73a0-4632-9a85-716994e2785c",
        "cursor": {
          "ref": "18b4fd53-76cd-40a9-80cc-ff5b2a41ce4e",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bd17c380-4d73-48b1-8f12-c69d6823bf3f"
        },
        "item": {
          "id": "11342e62-73a0-4632-9a85-716994e2785c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "08994ea5-f24c-433b-88cc-55ef1bc3e310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec3845c-52b3-4b7c-a692-b35f517dbfd1",
        "cursor": {
          "ref": "913a7239-8f9d-47ec-9f17-b2bf68a491c9",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3455ef4c-266d-4a3e-8e59-6868bed3fca5"
        },
        "item": {
          "id": "6ec3845c-52b3-4b7c-a692-b35f517dbfd1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cd7b4d02-54ef-44c2-aba7-ee5b3e25bd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e233a9-418d-498d-b4c5-9ee825b8de3a",
        "cursor": {
          "ref": "d594712c-1674-4569-bc8f-9e86359ba3d1",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bbe3ecdb-a3cd-4108-9e40-2c1491a21dac"
        },
        "item": {
          "id": "e5e233a9-418d-498d-b4c5-9ee825b8de3a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5f854a09-6e2b-4db1-8f80-86d7b4114c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840a6d9f-1072-441c-a695-2cdd50bcbe6c",
        "cursor": {
          "ref": "f2866940-d501-4a74-b2b5-89aaf8cd9052",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6bbac181-2b9e-4cdf-b1ba-49d05fb1104d"
        },
        "item": {
          "id": "840a6d9f-1072-441c-a695-2cdd50bcbe6c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3bb6e18a-4f31-44f2-92e6-34cd1fc2b5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b77097e-4bb1-4ff7-abff-719746f96dbc",
        "cursor": {
          "ref": "8a60f653-e008-4094-bff1-38424ac682c8",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a9e8f951-f8bc-4278-a9df-fb6aaf76316d"
        },
        "item": {
          "id": "9b77097e-4bb1-4ff7-abff-719746f96dbc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7dde4e44-2627-411b-8c01-bb04b1c99ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d784ce5e-8d77-4f7c-96a1-891598d2a672",
        "cursor": {
          "ref": "6635e33a-ac27-4bbe-aaca-edc804aa7ced",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "29e5e7fb-3e49-40eb-8755-c5ac6ba68e00"
        },
        "item": {
          "id": "d784ce5e-8d77-4f7c-96a1-891598d2a672",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "93d5424c-3cea-4013-85c7-aeb550b1f779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49db6fe3-8f60-4087-a511-d420999d3bd4",
        "cursor": {
          "ref": "8d397eb6-6df4-475c-85da-331c0e8c0937",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5bfa8f07-19af-4dbc-bb70-6418ac72f12d"
        },
        "item": {
          "id": "49db6fe3-8f60-4087-a511-d420999d3bd4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4c12fa80-91cc-415c-9fb2-fc771b5a56fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c7e283-aa57-4d12-844e-301af60f4646",
        "cursor": {
          "ref": "c2cba517-668c-40a6-b1f0-afd052874bd3",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4c46aacb-f832-4302-a22b-638bc638d011"
        },
        "item": {
          "id": "f4c7e283-aa57-4d12-844e-301af60f4646",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "03163728-4c1b-4d47-93e7-c280f0c110f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dad4c28-9178-4203-9d37-6245a8ff9596",
        "cursor": {
          "ref": "cfe10db2-1211-45ad-87ac-b05735efcfcb",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "54682df5-527f-49f7-a96f-7d077b134b4c"
        },
        "item": {
          "id": "0dad4c28-9178-4203-9d37-6245a8ff9596",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "75761a03-6947-4d10-87ed-48dc7c01ca0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2167d05f-febc-4087-913e-85886ff999fa",
        "cursor": {
          "ref": "338d02b6-645c-471d-9d76-4d217d991402",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0b43fcc5-ed1f-40ff-9e31-fdea1b4fff58"
        },
        "item": {
          "id": "2167d05f-febc-4087-913e-85886ff999fa",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "78031e49-a6ec-4b5a-b554-a38d5a5d8448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685270ac-be90-4e07-955a-ffed7328e3dd",
        "cursor": {
          "ref": "7e9e0f61-7e86-48de-be9f-ffa60f0eeafa",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e377bbb3-6877-4493-ab85-bc1f807a3ce0"
        },
        "item": {
          "id": "685270ac-be90-4e07-955a-ffed7328e3dd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f7353f88-52a0-4af3-8ab0-086769e08e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77f4082-5e1a-4ba5-aa15-9cc35df0b848",
        "cursor": {
          "ref": "a0bfcdb1-17b2-47ca-8c32-516d86ed8495",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6318ffc8-726c-488e-9f12-f1b061d54f30"
        },
        "item": {
          "id": "c77f4082-5e1a-4ba5-aa15-9cc35df0b848",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "93967ec5-fbfb-404e-bced-1e8fc1a5f815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcf0372-ffed-4fe0-8660-f03108eed766",
        "cursor": {
          "ref": "688d32fa-cc33-41bf-b22c-3f2d0cd1d8a3",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "37276669-338c-45cb-bc43-0aec61d049e3"
        },
        "item": {
          "id": "8fcf0372-ffed-4fe0-8660-f03108eed766",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3913d554-9962-408b-9261-21d2e8cf9ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4dbfd8-bf08-4248-9706-55557bf88631",
        "cursor": {
          "ref": "be12cc42-219b-4bd5-a68f-cf9239fa915d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8ab06fb9-5d21-464a-a160-162c0efc81de"
        },
        "item": {
          "id": "4a4dbfd8-bf08-4248-9706-55557bf88631",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "59622a83-ac7b-4665-be1e-e49e5e9d4f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c85653-58b7-4a6c-bb2f-385d552a7b38",
        "cursor": {
          "ref": "d1a7a269-38df-4d70-8156-6ea7a21d75ba",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "504fb9a2-4325-47ae-9a53-d769b1f54e52"
        },
        "item": {
          "id": "90c85653-58b7-4a6c-bb2f-385d552a7b38",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7c70a595-f674-483a-8e8e-35058f67b0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e1bfc0-da4f-4ad4-ab4a-bb74faabccc2",
        "cursor": {
          "ref": "b9452f5f-7452-4471-b4ef-5cc3646d32a4",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "94e9c0d0-1171-46c8-bbc0-8a1b30e81f47"
        },
        "item": {
          "id": "35e1bfc0-da4f-4ad4-ab4a-bb74faabccc2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f6553a95-0f51-4fd9-aaba-0d0a13a5a60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b94f18f-b488-4daf-af68-23cd867a51f0",
        "cursor": {
          "ref": "6b05f5a5-7dce-48d9-b460-1c197ca71e85",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fa031adf-7320-43c6-ae9f-e6895dcb7dfa"
        },
        "item": {
          "id": "2b94f18f-b488-4daf-af68-23cd867a51f0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bac6e4c1-a903-420a-8570-2254dff0d576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960bd669-5416-4708-9746-9c8e4f3984e3",
        "cursor": {
          "ref": "b518c137-5c9f-4c41-9c51-a59a9f7dc188",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0df59bdd-1e94-42cb-94e3-634574a35805"
        },
        "item": {
          "id": "960bd669-5416-4708-9746-9c8e4f3984e3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1b596bf6-63c7-49d3-baac-a127f33e068f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5c1afe-b9a1-4f34-9d9e-41cc10eec27f",
        "cursor": {
          "ref": "546c09ec-a152-49e6-8884-a6863c55a1ae",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "05f9eadb-ed98-44c7-8d91-f4843f4a7a7e"
        },
        "item": {
          "id": "7e5c1afe-b9a1-4f34-9d9e-41cc10eec27f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0f017dbb-9418-4eda-bfda-f79c2b40dc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa138dd0-adef-4c7d-ab08-5d960543db89",
        "cursor": {
          "ref": "976e1050-2262-410c-a1fa-52394c59a8d6",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1a5f821b-2aae-463f-93ce-48bedcd760bb"
        },
        "item": {
          "id": "aa138dd0-adef-4c7d-ab08-5d960543db89",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "74a0a53f-87ff-4885-9d30-8e0218c28c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dfc7c3-ea0c-4511-939d-219d201cff61",
        "cursor": {
          "ref": "b5e33730-4cbe-4a93-a81a-e79c4dac8065",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bdb8fc02-2834-4ac5-ae7a-89f4b9d1b48d"
        },
        "item": {
          "id": "f1dfc7c3-ea0c-4511-939d-219d201cff61",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5981ee0b-9883-4803-808d-fb15fd62031c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f188c6-ab2b-4ab4-9749-c306509be896",
        "cursor": {
          "ref": "61eca229-a1d3-4699-abcc-26f6ef23a475",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c8b457a9-eeb3-4a77-8f41-a8dcf7ea6420"
        },
        "item": {
          "id": "c7f188c6-ab2b-4ab4-9749-c306509be896",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "12253387-ba0e-4582-994d-805834dff9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1255c6e7-69c6-475f-83cb-c9d87edc2d47",
        "cursor": {
          "ref": "8583ff3f-07ba-4fdd-8136-bd0c3bd5506f",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c053a5ae-098f-4f02-9697-8df4ec4ba7f8"
        },
        "item": {
          "id": "1255c6e7-69c6-475f-83cb-c9d87edc2d47",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fb89cf8e-47ed-44de-a46a-3b03d090ae21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e1ad97-11f7-4f7a-9a57-457bf108ee0e",
        "cursor": {
          "ref": "07aac25d-ed29-4cd4-bb84-9fc0656da289",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1864654c-222d-4967-b13d-8de30c727444"
        },
        "item": {
          "id": "c7e1ad97-11f7-4f7a-9a57-457bf108ee0e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e6ae9bb2-de64-4150-b70d-461850f26684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd132184-2069-441b-9444-93d6e139ebcd",
        "cursor": {
          "ref": "ec53d654-73eb-4abe-b4f8-4581713aca6e",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0d6851cd-6dde-4662-90f1-20fa76a61f65"
        },
        "item": {
          "id": "fd132184-2069-441b-9444-93d6e139ebcd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "18415902-f49d-4de0-ad86-72ebf211d013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e86e37-fcb2-4348-8c8f-40dc27841cce",
        "cursor": {
          "ref": "1faf1c45-68f9-4114-8bb0-c95b17acaf68",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bd0da202-b8fa-4e9c-a272-0a06feba5856"
        },
        "item": {
          "id": "93e86e37-fcb2-4348-8c8f-40dc27841cce",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fd291fd2-8cc6-4e2a-a1b6-d66f2390f9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa3756a-bcf6-4130-8f87-4e65aa33d570",
        "cursor": {
          "ref": "d17f8689-3cc4-47ab-917c-a8dfd12e72b0",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2f953fee-b620-47b1-b4fc-1a1865923c53"
        },
        "item": {
          "id": "afa3756a-bcf6-4130-8f87-4e65aa33d570",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "07f9a82f-f6ee-4b1f-8002-34077f20bd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc1818a-2a61-4b98-8d47-ea509390fadf",
        "cursor": {
          "ref": "52b054e7-1640-4c7c-b450-5c5d4f8fd8dd",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e4a9ea71-3a26-4c6c-ba5e-97cb7917b213"
        },
        "item": {
          "id": "dbc1818a-2a61-4b98-8d47-ea509390fadf",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "684c013d-5b86-4801-a521-b1f7f7d2aa13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af148f77-2b0e-43a8-bce7-f438deb172c1",
        "cursor": {
          "ref": "62f7e63f-91d2-4129-a87d-aed2371b8f49",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "691cd60d-a186-4067-be67-7d976bbd41b4"
        },
        "item": {
          "id": "af148f77-2b0e-43a8-bce7-f438deb172c1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f20caa02-1fd1-4509-bec9-8d0ed5b41a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a363a1c-645f-44a0-87cb-2330bfac4b9e",
        "cursor": {
          "ref": "e4b48a53-6d35-4fef-b1e3-beda1fcd9790",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8d2c4a8d-2c5a-41c6-8d5f-83c1e6e22957"
        },
        "item": {
          "id": "2a363a1c-645f-44a0-87cb-2330bfac4b9e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a51f476b-538c-49ba-b99b-acf3ceabda9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59d3fe3-be45-49c6-badd-36c752207642",
        "cursor": {
          "ref": "718ba6c5-5003-48ea-a684-3fa41b801c0f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "691b2255-74da-469f-a6eb-d13711d4551a"
        },
        "item": {
          "id": "d59d3fe3-be45-49c6-badd-36c752207642",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "79379399-b38d-4bf5-9d48-b2fc5ee6490d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba24cb9-231a-403a-a42a-fd73c4761fe9",
        "cursor": {
          "ref": "13dafb09-e024-4520-8e71-0e1188e8fd5d",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a90e7fd4-c8c6-4fa1-a2ae-18a7c71847ce"
        },
        "item": {
          "id": "7ba24cb9-231a-403a-a42a-fd73c4761fe9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6830fd64-7dd8-4418-bc19-06cbe2612b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c111a5-8e2b-4fa6-95ff-2934f02bd255",
        "cursor": {
          "ref": "4a85f643-096b-4fec-a6d8-8468506cc05b",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "133121a6-3586-4c8d-9c27-c69a49de6d64"
        },
        "item": {
          "id": "92c111a5-8e2b-4fa6-95ff-2934f02bd255",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3d2feee0-ea8b-4fdc-b05d-a3b30e073fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be90a33e-1244-4006-b114-f9c3887956d6",
        "cursor": {
          "ref": "8a061eaf-2a14-4eda-846b-c1f0adda9e1c",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d0afdf22-3b1e-4df5-8d87-a529709a51c8"
        },
        "item": {
          "id": "be90a33e-1244-4006-b114-f9c3887956d6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2a8bd70d-5694-4956-9a02-5ef628a010c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa57cec-df60-41e3-b279-3b6051df7afd",
        "cursor": {
          "ref": "49c2c843-a04d-4482-ad37-b095622da211",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "65cc1677-1d00-490b-b704-91797dc9d3fc"
        },
        "item": {
          "id": "baa57cec-df60-41e3-b279-3b6051df7afd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a14bd03e-1826-4928-91c4-478fa5e02862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79575e07-9cab-4b09-82cf-8daebac71866",
        "cursor": {
          "ref": "f7d39c0d-b6fa-4c19-b14f-c2da3527865b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3c1e00a3-f3fd-401f-876e-304222b8792c"
        },
        "item": {
          "id": "79575e07-9cab-4b09-82cf-8daebac71866",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b834f90e-0bdf-4ed3-8888-9e5dba340c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27791fbe-94c4-4f38-9071-f7bd2858d0bc",
        "cursor": {
          "ref": "ec283326-f15e-487d-b42c-d3a6071842ac",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1b2efa18-ef93-4405-a921-86ade3ade824"
        },
        "item": {
          "id": "27791fbe-94c4-4f38-9071-f7bd2858d0bc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "62ce4358-c128-40d3-9425-37f24cebc6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6909156f-447b-49ba-951b-67e228f7c242",
        "cursor": {
          "ref": "2d236c5d-fa00-40f6-b133-3c1ed3483c09",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2b739ff7-df63-42c3-ac4c-697a597fedba"
        },
        "item": {
          "id": "6909156f-447b-49ba-951b-67e228f7c242",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a74710d1-530f-47a5-901d-1bccad1528c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e42a7d5-d4b8-4d7a-b779-a91c32459e7f",
        "cursor": {
          "ref": "e7ae7e38-47a5-4010-9d02-2c29c01aad3b",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bd329ae6-f66f-4b9b-8876-a193ad323274"
        },
        "item": {
          "id": "9e42a7d5-d4b8-4d7a-b779-a91c32459e7f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9c3a02a7-572b-490b-b700-561575bd3830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6aa3ed0-d720-4937-973e-6d300e2344b8",
        "cursor": {
          "ref": "bc78ca22-7c9d-4903-a24d-84df3cdf614d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b6c37995-8a1c-4501-9f98-187e78e1f83a"
        },
        "item": {
          "id": "b6aa3ed0-d720-4937-973e-6d300e2344b8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e405e527-99a8-4243-af1d-3a98758ef5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9422fb9a-e3b0-4979-8dc9-b746cd8f3522",
        "cursor": {
          "ref": "503ccd30-c61c-4fe8-9eee-b56f915855d2",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6a27dd62-f3a7-4a0a-a4f4-4dfc962a4e2c"
        },
        "item": {
          "id": "9422fb9a-e3b0-4979-8dc9-b746cd8f3522",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5fabf4d4-7811-477b-b450-fa966782f567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b857bc-cb1c-44c5-ac55-67e032e5e608",
        "cursor": {
          "ref": "e313f63b-1659-43c6-8a75-750206e6a67c",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8a2daa75-66f8-4ac2-9715-0c961c40641e"
        },
        "item": {
          "id": "82b857bc-cb1c-44c5-ac55-67e032e5e608",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "317c6819-0c76-47d8-9b9c-b1bcda777cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc5af87-4bba-4cef-8903-7a7dfc477626",
        "cursor": {
          "ref": "de395b60-7641-40b0-b671-587302bc01b0",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5702cd42-16d1-49bd-8f14-856557bfb9d2"
        },
        "item": {
          "id": "9fc5af87-4bba-4cef-8903-7a7dfc477626",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f6d39826-bf8c-4b84-8a59-361cad70144f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da0ad09-8c73-462b-9ba4-2b3a1f0e52bb",
        "cursor": {
          "ref": "7037f007-f8c4-47cf-b241-cbb9ea439ad7",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0b36280b-7101-48fe-b793-c58adbcadcf1"
        },
        "item": {
          "id": "4da0ad09-8c73-462b-9ba4-2b3a1f0e52bb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8c59ad61-d398-47b2-92cb-f0500781e3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b92516-e408-4465-9347-f95f6751efb7",
        "cursor": {
          "ref": "2af85e2f-b9ca-4b61-b8aa-7f9b2a67b75e",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8f4c2686-3501-45dd-aded-001386808a73"
        },
        "item": {
          "id": "a4b92516-e408-4465-9347-f95f6751efb7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "870ae1d9-abf9-4700-89b6-ea95f5c8fceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a8c6b5-8cd1-4c7d-87d6-3e6954be48fa",
        "cursor": {
          "ref": "8126ffad-133c-453a-ac93-a602623ec34f",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c097ebd6-518c-4771-85e6-62b4d2672d83"
        },
        "item": {
          "id": "86a8c6b5-8cd1-4c7d-87d6-3e6954be48fa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "42d9d6fd-0404-40e8-b15b-25a0e53b14f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63300820-5912-44dc-bce1-6bab4536fff3",
        "cursor": {
          "ref": "92a29a30-580e-4245-bb16-d2fee6ebc96c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1e018840-ba79-4a6c-b990-0495af9c98cb"
        },
        "item": {
          "id": "63300820-5912-44dc-bce1-6bab4536fff3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "638e6fa2-e7c2-4a9a-bc95-3be7dc8da1a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aad01df-a1a1-4e1d-886e-6312634f4e1d",
        "cursor": {
          "ref": "4ed9d586-4120-4cb6-a062-7475e4423db6",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "be630292-057a-47a6-8754-64d0a13c4e96"
        },
        "item": {
          "id": "3aad01df-a1a1-4e1d-886e-6312634f4e1d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2264a70a-ca3c-4140-a0c6-21e0c09b23c8",
          "status": "OK",
          "code": 200,
          "responseTime": 149,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1114b34-de54-4407-bf3b-8dbd7471a8a6",
        "cursor": {
          "ref": "3f2fdffa-b97d-43e8-a104-864d7573c166",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a8e4e7ea-5f36-4030-b332-4f1c6353df88"
        },
        "item": {
          "id": "a1114b34-de54-4407-bf3b-8dbd7471a8a6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6a1d5c59-e5fa-4d35-b009-cd00ab4a965f",
          "status": "OK",
          "code": 200,
          "responseTime": 1949,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11c9d28-8218-401f-868e-345bb205004f",
        "cursor": {
          "ref": "6f0ea6bf-f695-4ea4-ba12-f083b5644034",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "cf2b43fa-a64a-411e-93fd-76b6a29e73cb"
        },
        "item": {
          "id": "a11c9d28-8218-401f-868e-345bb205004f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b9323253-2ef1-43d4-a95a-bbc836eb213a",
          "status": "OK",
          "code": 200,
          "responseTime": 1358,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3d7adc-166f-4dc2-868a-1afacd2de1a6",
        "cursor": {
          "ref": "535f5c87-3d7a-4847-a5fa-7ac42996847b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "441fe6e0-8ae6-4f17-a2dc-1a32700ff8c8"
        },
        "item": {
          "id": "ca3d7adc-166f-4dc2-868a-1afacd2de1a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b050040-3e60-4b50-b247-75cd1d43b77e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3d7adc-166f-4dc2-868a-1afacd2de1a6",
        "cursor": {
          "ref": "535f5c87-3d7a-4847-a5fa-7ac42996847b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "441fe6e0-8ae6-4f17-a2dc-1a32700ff8c8"
        },
        "item": {
          "id": "ca3d7adc-166f-4dc2-868a-1afacd2de1a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b050040-3e60-4b50-b247-75cd1d43b77e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fcdb47-24de-4c56-b326-d722100cc5bc",
        "cursor": {
          "ref": "3b2d6649-6fcf-4985-b5b7-e38be244a9dc",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "232bf7b9-b149-4a72-9d61-cfefa9d9e36e"
        },
        "item": {
          "id": "e1fcdb47-24de-4c56-b326-d722100cc5bc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ea23b815-1313-4a9e-bc94-31810a364c72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d666011f-5f4e-418a-a98c-4958c223621f",
        "cursor": {
          "ref": "28209fa1-0561-42cb-9fea-552554f93ebc",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f2be3f99-47ec-4155-8841-3c80c4bb8ee2"
        },
        "item": {
          "id": "d666011f-5f4e-418a-a98c-4958c223621f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a01b1c0b-075e-4b19-92a7-e4fbf04a90b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 98,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}